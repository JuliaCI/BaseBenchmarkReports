cset: moving following pidspec: 21564
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.526425826 seconds)
loading group "string"... done (took 0.503673858 seconds)
loading group "linalg"... done (took 8.593009347 seconds)
loading group "parallel"... done (took 0.175071454 seconds)
loading group "find"... done (took 1.378341053 seconds)
loading group "tuple"... done (took 2.040214031 seconds)
loading group "dates"... done (took 1.337911433 seconds)
loading group "micro"... done (took 0.204429412 seconds)
loading group "io"... done (took 0.589830843 seconds)
loading group "scalar"... done (took 42.054449473 seconds)
loading group "sparse"... done (took 12.779039937 seconds)
loading group "broadcast"... done (took 1.038968464 seconds)
loading group "union"... done (took 14.49588608 seconds)
loading group "simd"... done (took 5.019810777 seconds)
loading group "random"... done (took 9.969519289 seconds)
loading group "problem"... done (took 2.145539066 seconds)
loading group "array"... done (took 24.185754105 seconds)
loading group "misc"... done (took 1.140547011 seconds)
loading group "sort"... done (took 3.569796907 seconds)
loading group "collection"... done (took 20.951644621 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.614895092 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121675492 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.145413573 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.174745647 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206990732 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.137731242 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15702887 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.554975495 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.052916533 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.201561277 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.1420611 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.552351074 seconds)
done (took 5.825172093 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.248609798 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.072779965 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125875654 seconds)
  done (took 0.888173571 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073125926 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.172323373 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091901824 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.108808676 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.10921247 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090567726 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.108616334 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10900343 seconds)
  done (took 1.48216245 seconds)
done (took 3.392697546 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.823410234 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.834898136 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.485563829 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.123270118 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.157328329 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.137656336 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.311975119 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.160782276 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.112835508 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.121842479 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171069652 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.348414728 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.477062909 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.945840358 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.106184819 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.124849355 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.079445278 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.788598667 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079759757 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.12813173 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.519979585 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.11185791 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115157349 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12352936 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.214775468 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125884333 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.175569435 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.091444359 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.733241343 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101134188 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.186155377 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097820663 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159759246 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.233805582 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.077792317 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.106716524 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.724072263 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.188283715 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.111165983 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.093866692 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.734066198 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.076453484 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.188953864 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105385004 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108826789 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.201385456 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.097757453 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.092398484 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097225218 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087410205 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.169881673 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.507360075 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105595791 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.142476202 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09655143 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.749418221 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094712478 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.157479431 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122237165 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.106850442 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094658184 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089043738 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.191194311 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097841863 seconds)
  done (took 20.051551406 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11331445 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136927676 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09265942 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137628514 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13747873 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095018504 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082142126 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091923854 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107612888 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.183534634 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134439479 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140528094 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072170815 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.094874228 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.098532373 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246728381 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.117339629 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099823867 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.097376948 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087054679 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140315905 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109774431 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089861507 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108601993 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171136494 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205887739 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.121179365 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121120074 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.077990804 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113530846 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139708575 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145327763 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090741567 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.075882932 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178965235 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.117970357 seconds)
  done (took 5.086245267 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.199549308 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095909229 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.210135776 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.180514716 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14876106 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167997492 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117441751 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.265578746 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.188656504 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.128742258 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160636274 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128160223 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110843026 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077687307 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095288032 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077589482 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.757091726 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.177123114 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150656401 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106019222 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104923341 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098475797 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.732104661 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082862668 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096927843 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084364444 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086806502 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.174728015 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082930369 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.232345611 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.114208182 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087551591 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132671073 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199419298 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127084139 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139730381 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084268953 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098057187 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.213001449 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.097863799 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089950187 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09371065 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102822884 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133356802 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130337324 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096638354 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.091365382 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.242838513 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08138724 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118727599 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.108236474 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.089331663 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196506237 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09404472 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096491691 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.330415769 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094005264 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101490053 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094390198 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.31196212 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.11429085 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.095345164 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.0746268 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099356777 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074423225 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.756530959 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086498105 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095456588 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076155254 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.151709377 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.351853485 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.080026086 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101149163 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081426108 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099882716 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114810978 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.076993709 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074036334 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094198277 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.074563387 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098814123 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11093527 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080615203 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.092936895 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144004962 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113770538 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097786882 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126007019 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099836479 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077377629 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129353833 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093271875 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079030673 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.139085236 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081453003 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112943096 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097082746 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139428599 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.076880368 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.209461826 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078709386 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123418568 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097200317 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110503287 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117940099 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096407356 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082791933 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093164953 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078940339 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157302113 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078767512 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076795844 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.09947836 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108315952 seconds)
  done (took 24.524660227 seconds)
done (took 50.349291608 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.423697446 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109688841 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110785153 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112188533 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.108288748 seconds)
  done (took 1.63470094 seconds)
done (took 2.375411249 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.326441397 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.202277189 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098741193 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.19540255 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084517294 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200341443 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16524535 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098745212 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.210782037 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080518631 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1888252 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081415554 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103951473 seconds)
  done (took 2.807219024 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090129086 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115759843 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078887623 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10607872 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073148221 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08878869 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106038763 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120133826 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104126044 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082013123 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090992927 seconds)
  done (took 1.795055535 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089542774 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114126603 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078674897 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088156069 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091664843 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087792603 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10584481 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098812625 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106665929 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083352406 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090421818 seconds)
  done (took 1.775437622 seconds)
done (took 7.109583497 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.046015282 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.848808211 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118420116 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.167960086 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.329198504 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.213280289 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.563128753 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.11388481 seconds)
  done (took 12.318662237 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.109761616 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.111544232 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08005116 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097432001 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077516606 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099534846 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078878596 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094397164 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07643816 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096632374 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079408851 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093088013 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077179993 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097334754 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079565459 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.077827494 seconds)
  done (took 2.233976914 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.113849806 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112484056 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101742666 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.08772072 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100454806 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.08140639 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103698128 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09973865 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.080332819 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098519085 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.087635547 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103974498 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.085541309 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.096863835 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.084078556 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.104921073 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097924658 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.084247246 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.101908377 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.084734357 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105655176 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.081806605 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.102385095 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103759904 seconds)
  done (took 3.160906611 seconds)
done (took 18.454579416 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.163524279 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081897633 seconds)
  done (took 0.992204217 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.099457197 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117419729 seconds)
  done (took 0.968809752 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105012558 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096623432 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133274238 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112958855 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080638533 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079503191 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127937817 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097250086 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080042275 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097043099 seconds)
  done (took 1.762345673 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083206381 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100666226 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.087685044 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.117414832 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.08980313 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098566961 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084395698 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100312013 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.101931115 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077574924 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10457758 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098234738 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.103539199 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116721782 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.084589876 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.102596295 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089079424 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101470975 seconds)
  done (took 2.492732598 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079405295 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.08139567 seconds)
  done (took 0.915363339 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082048257 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095552323 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081458729 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098741293 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076825142 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094361093 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07723576 seconds)
  done (took 1.360156588 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.486610039 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.254900153 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.317615915 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.113080915 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.130222387 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.498366593 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.132618745 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.092127987 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.110853553 seconds)
  done (took 2.935399372 seconds)
done (took 12.176023802 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089198697 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.13239073 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.504341001 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114028903 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.075751777 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159338892 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.256816639 seconds)
done (took 2.087126309 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34296641 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.120893775 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08698475 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077775812 seconds)
  done (took 1.380154589 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077549517 seconds)
    (2/2) benchmarking "read"...
    done (took 0.083330357 seconds)
  done (took 0.920104221 seconds)
done (took 3.058479631 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075794674 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.126268865 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075895912 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.093987222 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076518098 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.076219864 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.093718563 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.073643555 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095903169 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.076247557 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.073329358 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.093601071 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.075472551 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093911686 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07399652 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091831451 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07588181 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.074178699 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090634955 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074324499 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.094616752 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076120704 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.073637735 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.091824544 seconds)
  done (took 2.811152672 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102316292 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095056251 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083017205 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100430707 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080213927 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100172734 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.082474452 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095010828 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.100220856 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.078911067 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098362017 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.080312344 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09742605 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.080828462 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097340802 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.080744008 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.100591195 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076631848 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098271081 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.080893714 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.100214901 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077226889 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098541147 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082994023 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.097370372 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099294426 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.079496106 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.077562354 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100340349 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.098261963 seconds)
  done (took 3.482827517 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085567334 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.073553555 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092515894 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.085288547 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092359805 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079128009 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092757584 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078407977 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.097013561 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.074398971 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080344556 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091953963 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077103547 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097192089 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079559629 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100521703 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.093061889 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.096575933 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078206533 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.096910984 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.079933817 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078171844 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095740611 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.074546766 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093701212 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.074350873 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.075425308 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.093554454 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.075446661 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092896952 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.079794087 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099544937 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.074713645 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.107060598 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082002433 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091951497 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084146649 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.075108371 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098880137 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.074287923 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.093440518 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.074721463 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.096793868 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08566504 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095846635 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.075727752 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078311768 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098327283 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079570884 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.10048189 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.074566292 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095411888 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080663945 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097473232 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081030991 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.074386944 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09381026 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073821906 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097516755 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.074422078 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.091869347 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.074624606 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.081760411 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094278097 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097829861 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.104820094 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.077287114 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.097691202 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.078530087 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.100598326 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.080576557 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111631977 seconds)
  done (took 7.019504714 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079851367 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104276873 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077018017 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.076209993 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092146477 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075174791 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100122893 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0758036 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094493775 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093996642 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093298603 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076746353 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095191711 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078981519 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094162304 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.077632974 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103525646 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072729784 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093519429 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079385343 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093778122 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082079664 seconds)
  done (took 2.677932741 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.219252031 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102345352 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14156432 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.111950797 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095100274 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111574029 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.082809052 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102307392 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10048376 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085493346 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104470912 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082917197 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113507773 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103816044 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085644988 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105045816 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082621563 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104253295 seconds)
  done (took 2.706334809 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090895543 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096727471 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102860418 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097718781 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078743589 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099846443 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085070045 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112850321 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.081669693 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099999071 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.08971498 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099088636 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.080725775 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097916987 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081342112 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096400016 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.081000803 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096924386 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089812225 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103238692 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103427902 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08947321 seconds)
  done (took 2.825687113 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095923282 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098709868 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10134219 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10139719 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077913044 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099029723 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087521249 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.097234888 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088260129 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098713651 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079630424 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097974962 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085804932 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096510336 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.085244426 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097931693 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081445832 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096921641 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081550355 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095904464 seconds)
  done (took 2.618599705 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119540316 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112041686 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093925928 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123446577 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113308785 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093437451 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124374244 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093672885 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111953377 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125824717 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094588739 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112686341 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104911924 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118422062 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112429439 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104818137 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123601187 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123022941 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09424168 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112177416 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124612959 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094238717 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124024141 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093799128 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112442023 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095269454 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112478358 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101310861 seconds)
  done (took 3.843387831 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078906424 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078840873 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094700224 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076788789 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095317265 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.075858067 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.076403954 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094237906 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078893382 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094390749 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.078930474 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09745048 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079588177 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078642962 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097048993 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.078453303 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097138037 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.076135228 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075889309 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095578621 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.079232954 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097806055 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.078588331 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094709763 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076061886 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.078899721 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094839248 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076852273 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097454671 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076511605 seconds)
  done (took 3.328533639 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087968466 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103578646 seconds)
  done (took 0.971201037 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076630663 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114321069 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075823199 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083026408 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104691444 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.079822807 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108006964 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103586768 seconds)
  done (took 1.522235855 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.10406346 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.118645287 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086467606 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111267088 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09906878 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.11654029 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165861731 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086958887 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106641652 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081442613 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11773378 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079614716 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109044892 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085188282 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107956088 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095871842 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099324713 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090860728 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.106734625 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082553601 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105305217 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097303568 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110092263 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.087113961 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101209371 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092154035 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113430658 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.111440474 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084981597 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111322241 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087307846 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092047419 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08611775 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104470872 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081619761 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.116123888 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098883393 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104076268 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.090531039 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105881393 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090241065 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097091163 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090958062 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106584031 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093253909 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10442232 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087600399 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097850719 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.081508697 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103738888 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.078679394 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103151589 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.074614115 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108904083 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090043334 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117708663 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083430731 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10395794 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085029944 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103381199 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089004496 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103564334 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091872623 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102981183 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091248116 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.108306526 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089339999 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098051751 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.074317391 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100346677 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090914827 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124957018 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093562559 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.106008037 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087353166 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100243458 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08705415 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106013619 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088905286 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111627922 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.104364458 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088909537 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110468919 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084649253 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.103456539 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.088299347 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082498888 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101993414 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081226698 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118973141 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.102256428 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081215307 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081458379 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110785279 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085189797 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10364721 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081723024 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108896862 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074301522 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104836227 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08738579 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106244019 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093093615 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105384627 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086768413 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109692289 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.109776302 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085910036 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084359965 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095335584 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087038248 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.10080773 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090271315 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093458566 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086987354 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104901367 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086596628 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110558767 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083564281 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104394502 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091798192 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111594531 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084110339 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096150896 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085196235 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.105002483 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091377747 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.111187492 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.084093618 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.098446678 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079990581 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.108337732 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086721532 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106813833 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087141645 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105760185 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075529041 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101645143 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086018507 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11182201 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084712402 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.107381418 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091069705 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.107200388 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084968744 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110320516 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084741582 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100372519 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091637707 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103689558 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080702327 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110716326 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086205745 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102904491 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086500874 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11021625 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086193688 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106707236 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084968993 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106419076 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0883791 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100521595 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086900185 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.103195561 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093893141 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104747636 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080884911 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098396736 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088389583 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101927056 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085775604 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100526068 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086341276 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.107144064 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082935518 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084772893 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105108321 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1174594 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104384392 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106565016 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089360785 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112705006 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086305287 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.108181618 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085851988 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107861716 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087457593 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110231388 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089348748 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106375138 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086052101 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096407455 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088462113 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111047758 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082177585 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082402223 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100967341 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086478164 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113186091 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086685806 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106799599 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084770118 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107159045 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092299287 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10627518 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08571863 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100853834 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086578774 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.11003209 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088292727 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107785495 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093382522 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106953107 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08019771 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111421553 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084196775 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109798743 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081183484 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.101986516 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08313185 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.110470317 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085574803 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104502034 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07566971 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11115452 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092067041 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.107089506 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082384277 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105771801 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095837942 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104468122 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090406854 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106217675 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090027618 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121039228 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082766094 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106042887 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094957811 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.106590714 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076556859 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109135681 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085831039 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100782008 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085041511 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.103313042 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087924567 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108732929 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.088881 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094842552 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086011751 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084457966 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.103915482 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.08164296 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111424831 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087376711 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105780469 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115152465 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08914364 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.107277965 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088938286 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.105781024 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.08933981 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.107578358 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087853013 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.107540805 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085613499 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083054165 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107420719 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082732134 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102750144 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086586071 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.106864603 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088180438 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109062524 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087275204 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111852478 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087573825 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.108203457 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124813855 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084869617 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102685372 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088517642 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109043866 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086857946 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106730278 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080954629 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11233534 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087491402 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113153188 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086963603 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098278622 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088437366 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.106561574 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089069666 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.108115936 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.089235776 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085165589 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.106453058 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087709054 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117516391 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102857109 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094280923 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109484925 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089951334 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.107017211 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.088922899 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105920672 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082695516 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.106302534 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089211613 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.108265336 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08743145 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109780037 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088731783 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10664111 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085943808 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108566797 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.089366956 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.109108964 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077039817 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083337453 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102595196 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.088462028 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111384024 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08887526 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.1056664 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085949963 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109461413 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087066992 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098977597 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092680775 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109909267 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089816167 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116880912 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083859225 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107529783 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098766691 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097151999 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.085388399 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.10391946 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084366659 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113298904 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.089967075 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113016795 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.089023948 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.104051271 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080703775 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.109265192 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.085885547 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077830728 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.103757859 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091189083 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105816988 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086158887 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.108325392 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090297406 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109991043 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091594858 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106621723 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08813187 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.108621924 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080945731 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103786755 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08363954 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.10793101 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.089817132 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.104428468 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081109362 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.107362805 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08788667 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.107987596 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087975022 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086885017 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115047145 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087004738 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.109018713 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114018469 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079060334 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087911339 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.108916677 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088004694 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10365507 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090407438 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109720837 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091642172 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112915262 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.088499009 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110664909 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08813424 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.105050007 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.089055995 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10798575 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.089684005 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.104083672 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.091224543 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114750027 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084676753 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109130056 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089059308 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.105268559 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09057823 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.110012532 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088562425 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11174827 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089138916 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.108513558 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092583701 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.108947007 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089679104 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109822045 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087681644 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113204224 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084597835 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115877441 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.089939542 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109989289 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087222725 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.104577902 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0887102 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.107959785 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087649692 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112937735 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.091120345 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.104410062 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084412962 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.084221241 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.109602457 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114534307 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095930182 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.109315366 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090644237 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.102557055 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082517922 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091051462 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.106225223 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087208551 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110914141 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093289213 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.110533342 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085185178 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.107066476 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093850017 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112948162 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090575179 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.107103746 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092318677 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.112048397 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08843397 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.107544792 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088106253 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111288658 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092077437 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107762625 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08485963 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117971147 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.11354445 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091348065 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.107864244 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.091992404 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.108392479 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083781388 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.09065605 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.110003672 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092796246 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109734113 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088798858 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119611795 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103929697 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088463366 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113908706 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088357772 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.114863874 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083749242 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.109368294 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091802889 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110337275 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083078566 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08501032 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.107113771 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089405492 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104821845 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.083249783 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119340635 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094430069 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110733102 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0880461 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107018425 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.083777686 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.103287465 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085236159 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111813642 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088733497 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116948657 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085311107 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.105134461 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.084033647 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109734859 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090928636 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.111234882 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081884216 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.103507239 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085584836 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088859387 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116678094 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107412078 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.090179657 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090522493 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109130685 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.086252322 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115301543 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081192303 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110822467 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121336748 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.091021115 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111338223 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092715462 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115952762 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.091516213 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.103850948 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.091198129 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10992501 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.09084278 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.111548972 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.093001972 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124954314 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090309952 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105604212 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.091334385 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109967712 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086460056 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116835855 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093047883 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.111781251 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092338012 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108443553 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09306774 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117729059 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09246025 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110553783 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090651513 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.108791315 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089347032 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.107667716 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.088772324 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.112541383 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.09188415 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110069657 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09289578 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.105905623 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100886358 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11717783 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092676054 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.10127887 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08622986 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.106060981 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08511462 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.111841852 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084643387 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.088227073 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.107898605 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.089244502 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.112157644 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09268225 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.109367275 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.092573137 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.109883949 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079706744 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.113629588 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091171757 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112505621 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.082459507 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.110369379 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.093174411 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.114509624 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096049786 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.107646459 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090867782 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.109450511 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093521549 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.104547522 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094191775 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108617987 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089471737 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105656651 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090918906 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.112213682 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092067379 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111982949 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092643327 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.11074366 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094668527 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113408208 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082921489 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.082969166 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.114269301 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.087050229 seconds)
  done (took 59.151237923 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14550846 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086485096 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076327851 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097356545 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121833794 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081018842 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095668953 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080840324 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099412685 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089915423 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095270913 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07664117 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117493148 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123840976 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120117843 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090786498 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095717488 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080832763 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095318029 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080969726 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116350424 seconds)
  done (took 2.899167394 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102651396 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114923252 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112146466 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097010147 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106863659 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113489345 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.092675899 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113570348 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.118196329 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088940957 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117331623 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114138578 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.088724459 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108102851 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108464776 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091890452 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117599063 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106542486 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.096518156 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111881723 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110400681 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093221214 seconds)
  done (took 3.147534203 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.092213325 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.086055209 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.113535042 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.083570931 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.109800866 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.084241733 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.115654089 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.086842573 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.115652959 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090597719 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.10721106 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.089858641 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.115360731 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.084082008 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.107921433 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.085970249 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.116057913 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.090503122 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.091097431 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.106426563 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.129587293 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.084558168 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.104842113 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.087790148 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.119866988 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.092063093 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.109357382 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.090000116 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.087012557 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.110165211 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.085877133 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.113028817 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.092790854 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.108448174 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.08764566 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.110967433 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.090800183 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.104573286 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.087049913 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.113573513 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.085215094 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.110922651 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.098227146 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.106751825 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.086695325 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091600478 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.111774466 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.084373034 seconds)
  done (took 5.589016734 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.118790118 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160293276 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087799334 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.150970517 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.126049202 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.099902059 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.111629597 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.15032265 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.083759356 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.110441375 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128560404 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102669392 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.1119636 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.095445497 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.115144558 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110824559 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.092641046 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105720348 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.0954691 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109871303 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.095424942 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.113489149 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.124891895 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100529721 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.117059404 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108365652 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086311939 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.116402142 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101192309 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.117566943 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.116424892 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.097880167 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125343077 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.087395284 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110188163 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112804016 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.106586207 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.111166114 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093726528 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106156359 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.092767463 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.117424771 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114267677 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.107614105 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.111619018 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091731605 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.112232098 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083506818 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124869386 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.113968854 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.100533151 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.124221255 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115643032 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.090918881 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.117259375 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125818033 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.09147399 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.109773303 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.094069127 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122089092 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.084083609 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115469227 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124262572 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.093091742 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.121008327 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.1248081 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092402823 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.116102788 seconds)
  done (took 8.435335974 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11840242 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.115989563 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106517545 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125130148 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112444562 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.089942071 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110778 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.112882709 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09383172 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123304408 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094215477 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.164470725 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.113677175 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.102078718 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.118112634 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116930064 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.096716292 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11645012 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095733937 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117272757 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.095380985 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129216748 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.116404406 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127389396 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.108476688 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.113725315 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.096091827 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118173941 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127626048 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.096670252 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128734891 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.117162759 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096049444 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128584191 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129998023 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095606738 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112411007 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095337346 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.118457713 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116729711 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093483496 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128475928 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096747982 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.117159435 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117154139 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09617616 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128899288 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12951808 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.101644153 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124309127 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116602306 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107618214 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116894708 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.117210133 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109158108 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.134280038 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123522233 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123290548 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09112217 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126389084 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12345233 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131961251 seconds)
  done (took 7.908448783 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084355594 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086811638 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.106758172 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083706299 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108274639 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084433268 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083465038 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.108792232 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087854109 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.1091513 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087977149 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106045182 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086165173 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086403267 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106146193 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08569104 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108644997 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085960266 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086902541 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108232451 seconds)
  done (took 2.731640238 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093917518 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127822306 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087531118 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116096251 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089947224 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.117647468 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090131767 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112082211 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088605586 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111609272 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100872977 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122247691 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109050595 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096210348 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117439996 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109524318 seconds)
  done (took 2.536103781 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.106813932 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12733446 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.131906442 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.094034105 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.107846523 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.095906277 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.112283408 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.084254445 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083565156 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.1181685 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.094129821 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.115969201 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.090505654 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.109664005 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.088359573 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.11626864 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.083652454 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.113078651 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.090917488 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.133732456 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.114327662 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.091885729 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.112976596 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090883642 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.112575474 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093654224 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.116282949 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.085999484 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.107552904 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.092066785 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.112714682 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.096631303 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106574256 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.092783744 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104039174 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083303486 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107846162 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086325943 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109176925 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085559298 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.100626313 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.085172474 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104800778 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.088844007 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.078021096 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107693531 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077722366 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109726146 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.084068721 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106225772 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.084554244 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111365912 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08854213 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115174199 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111884922 seconds)
  done (took 6.39968745 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099932694 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106855888 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.088135871 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100280953 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086455696 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111155137 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086987898 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105001725 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085207567 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100061733 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085095697 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106862355 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085307954 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106608915 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085371281 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10782493 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079041369 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.087158719 seconds)
  done (took 2.557980564 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091934805 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.087267654 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.114358397 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082545639 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.105201403 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085503445 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101715409 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084940928 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106857475 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08560056 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108006092 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091552918 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106851991 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087965506 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085601497 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105736773 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.085789431 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104646378 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087427304 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105683473 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091460358 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108523101 seconds)
  done (took 2.967546431 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.104471678 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.141517314 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.102600808 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.152375754 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.115421639 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.093524916 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12259846 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.089684368 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.126051998 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.087213216 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.106617627 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.086571733 seconds)
  done (took 2.180063905 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109273732 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140425185 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084465194 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105663454 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097230924 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109367827 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108458056 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088088941 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120733231 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120761326 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088107632 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122169298 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121589987 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119350949 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096654528 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11749699 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088663075 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108435298 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083221797 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130346996 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109492253 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120895183 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08922283 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108060444 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088898915 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120211905 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121439648 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122062655 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088117906 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12125371 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117603458 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08830996 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121395229 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121607486 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085887165 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122083036 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08774844 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131044915 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117240747 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119485827 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086224505 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116949697 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121798208 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095068001 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12181679 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108548092 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094968582 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108341778 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087790604 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135675362 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118111629 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119080533 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116194265 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10300195 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121485741 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136125341 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121616178 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119203401 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096747215 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120777245 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120022339 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097127494 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12095198 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121843303 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117421205 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098793977 seconds)
  done (took 8.146395695 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124498968 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107316305 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08782782 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121441352 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121004344 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108176035 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090044225 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109092742 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088802133 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105387083 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154426632 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088633242 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119869036 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120144179 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088957969 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10863828 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088159035 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12032901 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105740142 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136022595 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088806569 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121092502 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12015948 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120628906 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100382972 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118162588 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108165478 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088715868 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110132953 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0882188 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116117186 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10862302 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100927333 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105183032 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119364774 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089183721 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108283122 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094863979 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109883821 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117510001 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099667645 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131463987 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108901099 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088237227 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122634692 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108558061 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08885267 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105882609 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087950292 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10576671 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122259094 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100475713 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121412223 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120044277 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109518145 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089296493 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109210979 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089358465 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109576866 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096818718 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121015538 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108908729 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137249316 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089194818 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109302558 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121121378 seconds)
  done (took 7.989267757 seconds)
done (took 157.205839879 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.104125309 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.144276779 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103204403 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.174214506 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083687177 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139113828 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.117442024 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.119181776 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084285323 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.104187432 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.08414431 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.107563862 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.149998738 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.083104626 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105202934 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.086696187 seconds)
  done (took 2.645161938 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.180826567 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.283113509 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10446005 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.11038913 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090218532 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.107541154 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088716922 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110814348 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.085299625 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.117730346 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.085313143 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107684605 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.096580809 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108524222 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.085078397 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106271679 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.116780826 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086413822 seconds)
  done (took 2.933267436 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116162842 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154135661 seconds)
  done (took 1.134109594 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121153724 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18108449 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299282082 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.137244649 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.133827387 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127064297 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.159722446 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.358706245 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188688818 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.127441929 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.128969148 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.111120497 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.113634213 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117065359 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093536998 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.111365874 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.136756548 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092275641 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112326351 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.091475298 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.133816471 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.090731427 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116840046 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.091434483 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179791035 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.127818838 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.11269588 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090943662 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113655853 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.091371705 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.117700859 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125172394 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.125446227 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.168267036 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.095902131 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.18353204 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097872012 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111350492 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.091837475 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.109780413 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11550103 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.09438012 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.126676441 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.090951645 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.112769847 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096635161 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.11410019 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11179002 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098209898 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.120536058 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097843216 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116757732 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.158873492 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121300237 seconds)
  done (took 7.752642847 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.790016289 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15368211 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088938511 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.914364328 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141850406 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103527777 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.784327051 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135515352 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.241850425 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.781822578 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128573678 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125310228 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.209054988 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.276910499 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.147488281 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315777641 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.691540882 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102047735 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.142181449 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155190737 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095918254 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139783479 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131229389 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454879494 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.08839367 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11239448 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121424189 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10248596 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163361364 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.113382897 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114186588 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.185255619 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.26910294 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206206491 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089856599 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110079475 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088103548 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170566787 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270847106 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221715061 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179369369 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084532686 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111078162 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101378712 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131334254 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107875237 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169326014 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.17713663 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.17791226 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116747815 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124755713 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098529659 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123764973 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165598832 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10853308 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316762074 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.34493712 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112040082 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09655291 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.131279319 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269274862 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087672597 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228117693 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138418195 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216169753 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088895669 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786803219 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.17100561 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087213966 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121165159 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118122503 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094537639 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123370493 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173791132 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.428348726 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126388466 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093570928 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110667271 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213540292 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.110958689 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088638195 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16823935 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112321365 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097687742 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129711005 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125310863 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175720907 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248889761 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126440607 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119127414 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094859547 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124228391 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.089733674 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.240776171 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.199310147 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.184020156 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.220124434 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124080596 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.170144949 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16947715 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123514074 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.17577617 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119199965 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107896996 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125335593 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219914838 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146163116 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090105315 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117435098 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.096623412 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149154346 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115380036 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09650528 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.194562979 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.484875587 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170042938 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108589904 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093718066 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119740017 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168107003 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118429346 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.24572093 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121198223 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172799693 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119264866 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086713078 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119948703 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.168780227 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12752638 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097732251 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125062893 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119637089 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.255511604 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224652432 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10460866 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243475474 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183316732 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098256538 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.201734838 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09676318 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19687959 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099813886 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123588756 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090018351 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780608845 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125578474 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097385236 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117893527 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.1963034 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087632429 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113405275 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088019209 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109072332 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793663674 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115662885 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.086334876 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.112866137 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099069267 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120707135 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118098853 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095219522 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165302021 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237290076 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126311881 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117976493 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.090993731 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.165553501 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.113711912 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.090283382 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.111406465 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.09055061 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121209543 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093831423 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113702007 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.179188646 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162859625 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.224499658 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.570098477 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089735365 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.088112413 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237145964 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111874019 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.308111835 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098405709 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228338142 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171523186 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10968961 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.341989978 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.175163818 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195541527 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.092961576 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175567204 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109231977 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118239027 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167497321 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089252704 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120061285 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163052393 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129490842 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104024777 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.162171776 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112770562 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23527718 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.085023881 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.197331578 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091673769 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12514681 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.312303845 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089682411 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132110638 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166391582 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115695352 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.090734846 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.047426981 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090171936 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122569434 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100404615 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225952267 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.169719953 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120357723 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120692581 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103389736 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.189241534 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.217901498 seconds)
  done (took 44.779501321 seconds)
done (took 60.103699397 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305878032 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267576469 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.297356757 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.198312561 seconds)
  done (took 2.031909561 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17626947 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.152122096 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.124016292 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109773269 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.154315868 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087030615 seconds)
  done (took 1.693398396 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.47723178 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.373293908 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.343707886 seconds)
  done (took 2.087336305 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.257728971 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.282814978 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.322154498 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.424135359 seconds)
  done (took 2.28363654 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207300258 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.126629666 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.099373035 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.139509116 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.170865557 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.176440502 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142568954 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.155079094 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.106363838 seconds)
  done (took 2.25902712 seconds)
done (took 11.246368137 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.316448948 seconds)
    (2/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.229371971 seconds)
    (3/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.127090653 seconds)
    (4/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.261731425 seconds)
    (5/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.275881768 seconds)
    (6/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.205103882 seconds)
    (7/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.268010557 seconds)
    (8/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.213214704 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.091366887 seconds)
    (10/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.211841704 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.126904712 seconds)
    (12/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.244433763 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117519124 seconds)
    (14/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.18431854 seconds)
    (15/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.200842849 seconds)
    (16/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.101876116 seconds)
    (17/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137510036 seconds)
    (18/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.101420022 seconds)
    (19/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.200876188 seconds)
    (20/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.199293676 seconds)
    (21/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.142378944 seconds)
    (22/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.104370054 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126450539 seconds)
    (24/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.237412691 seconds)
    (25/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.213242284 seconds)
    (26/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.249367221 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.187351153 seconds)
    (28/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.165357987 seconds)
    (29/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114468202 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.219516168 seconds)
    (31/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.159531579 seconds)
    (32/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.142646124 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.099841362 seconds)
    (34/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.149499543 seconds)
    (35/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.200002414 seconds)
    (36/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.201966209 seconds)
    (37/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.166556688 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.14452553 seconds)
    (39/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115996661 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.119002587 seconds)
    (41/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.206224417 seconds)
    (42/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.212799621 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.208503403 seconds)
    (44/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.128719354 seconds)
    (45/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.106125999 seconds)
    (46/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.121684627 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.095196509 seconds)
    (48/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.127958699 seconds)
    (49/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114943263 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.116175826 seconds)
    (51/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.152082856 seconds)
    (52/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.193384911 seconds)
    (53/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.11196386 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.115700918 seconds)
    (55/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124025638 seconds)
    (56/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.102018567 seconds)
    (57/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.121005546 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.118931466 seconds)
    (59/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.23731148 seconds)
    (60/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11610571 seconds)
    (61/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.173297514 seconds)
    (62/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.148736695 seconds)
    (63/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087734559 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.116334137 seconds)
    (65/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.187277059 seconds)
    (66/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.130798294 seconds)
    (67/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.122087074 seconds)
    (68/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.076913989 seconds)
    (69/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.173823961 seconds)
    (70/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.180358051 seconds)
    (71/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.092495982 seconds)
    (72/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.125720261 seconds)
    (73/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.095244856 seconds)
    (74/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.191901248 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.125183957 seconds)
    (76/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.078791751 seconds)
    (77/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.073731503 seconds)
    (78/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.099944853 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.086740893 seconds)
    (80/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116750333 seconds)
    (81/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102814108 seconds)
    (82/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.125464841 seconds)
    (83/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.09522556 seconds)
    (84/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.1028319 seconds)
    (85/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.128501283 seconds)
    (86/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.194436051 seconds)
    (87/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.13723332 seconds)
    (88/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.081577384 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.11705265 seconds)
    (90/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104654739 seconds)
    (91/286) benchmarking ("sort", Float32, false)...
    done (took 0.175755779 seconds)
    (92/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.12124578 seconds)
    (93/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.102268254 seconds)
    (94/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132254093 seconds)
    (95/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135777046 seconds)
    (96/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.161932934 seconds)
    (97/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.115972429 seconds)
    (98/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091708342 seconds)
    (99/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.159033161 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.123213035 seconds)
    (101/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.09063113 seconds)
    (102/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.07504889 seconds)
    (103/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.153351555 seconds)
    (104/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.150089749 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.093913512 seconds)
    (106/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.12375366 seconds)
    (107/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.078732943 seconds)
    (108/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.171137523 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.116490033 seconds)
    (110/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091290403 seconds)
    (111/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.080805296 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 0.184522227 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.124282246 seconds)
    (114/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.083333812 seconds)
    (115/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107205489 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093102966 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123442527 seconds)
    (118/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092697669 seconds)
    (119/286) benchmarking ("sort", Int8, true)...
    done (took 0.216791221 seconds)
    (120/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.12735974 seconds)
    (121/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091740746 seconds)
    (122/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125017764 seconds)
    (123/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.149969084 seconds)
    (124/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.082098784 seconds)
    (125/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.181829346 seconds)
    (126/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098605052 seconds)
    (127/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.118504936 seconds)
    (128/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128670148 seconds)
    (129/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.166573317 seconds)
    (130/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.099813399 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087882758 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118251816 seconds)
    (133/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076243892 seconds)
    (134/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.101796082 seconds)
    (135/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.079622647 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.144067823 seconds)
    (137/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09605766 seconds)
    (138/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.187432199 seconds)
    (139/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122761074 seconds)
    (140/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092460464 seconds)
    (141/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.19419187 seconds)
    (142/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.093035657 seconds)
    (143/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.103483971 seconds)
    (144/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09206039 seconds)
    (145/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.102425161 seconds)
    (146/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.180307511 seconds)
    (147/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.074907298 seconds)
    (148/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.076423255 seconds)
    (149/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.177611995 seconds)
    (150/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.130087211 seconds)
    (151/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.083285592 seconds)
    (152/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.100906013 seconds)
    (153/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.097855031 seconds)
    (154/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.117713539 seconds)
    (155/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.089621775 seconds)
    (156/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.115740059 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.093543901 seconds)
    (158/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.128266071 seconds)
    (159/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.148227448 seconds)
    (160/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.092785525 seconds)
    (161/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.127925408 seconds)
    (162/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.19421563 seconds)
    (163/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077210857 seconds)
    (164/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.119347916 seconds)
    (165/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.095460088 seconds)
    (166/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.113437402 seconds)
    (167/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095365546 seconds)
    (168/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076062444 seconds)
    (169/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.102851382 seconds)
    (170/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100420002 seconds)
    (171/286) benchmarking ("sort", BigInt, false)...
    done (took 0.253533444 seconds)
    (172/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.09232198 seconds)
    (173/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.185543264 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.1189071 seconds)
    (175/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.096806575 seconds)
    (176/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.159765602 seconds)
    (177/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09387246 seconds)
    (178/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.098744082 seconds)
    (179/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095089589 seconds)
    (180/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.123534148 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.095881037 seconds)
    (182/286) benchmarking ("sort", BigInt, true)...
    done (took 0.248117582 seconds)
    (183/286) benchmarking ("sort", Float64, false)...
    done (took 0.174705382 seconds)
    (184/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091316392 seconds)
    (185/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.120465984 seconds)
    (186/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.190210679 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 0.221001164 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.091191507 seconds)
    (189/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.107226864 seconds)
    (190/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.199345667 seconds)
    (191/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.076945123 seconds)
    (192/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.164115172 seconds)
    (193/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076537761 seconds)
    (194/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.115375235 seconds)
    (195/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.113609032 seconds)
    (196/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.103863199 seconds)
    (197/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096812315 seconds)
    (198/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.113505446 seconds)
    (199/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.077114258 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126473466 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.10088707 seconds)
    (202/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131273988 seconds)
    (203/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101201781 seconds)
    (204/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.10377049 seconds)
    (205/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.248477931 seconds)
    (206/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088523042 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115466979 seconds)
    (208/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.099205775 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119083808 seconds)
    (210/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.076828891 seconds)
    (211/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.098658029 seconds)
    (212/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.160239498 seconds)
    (213/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.102075204 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.09107527 seconds)
    (215/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.118284098 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.093633299 seconds)
    (217/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.117056466 seconds)
    (218/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.171557026 seconds)
    (219/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.077269939 seconds)
    (220/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.135749902 seconds)
    (221/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.080743196 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.118070914 seconds)
    (223/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.077089185 seconds)
    (224/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.118845161 seconds)
    (225/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.075424504 seconds)
    (226/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.103467725 seconds)
    (227/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088484029 seconds)
    (228/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.090399995 seconds)
    (229/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.142684718 seconds)
    (230/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.112808369 seconds)
    (231/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.091978354 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117356549 seconds)
    (233/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095932403 seconds)
    (234/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.116505105 seconds)
    (235/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.099252516 seconds)
    (236/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.100889083 seconds)
    (237/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.07706538 seconds)
    (238/286) benchmarking ("sort", Int8, false)...
    done (took 0.195436231 seconds)
    (239/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.082636625 seconds)
    (240/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138709033 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.118209289 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.101627026 seconds)
    (243/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.10173756 seconds)
    (244/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.083646457 seconds)
    (245/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.079872317 seconds)
    (246/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.10408929 seconds)
    (247/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091965727 seconds)
    (248/286) benchmarking ("sort", Float32, true)...
    done (took 0.226164289 seconds)
    (249/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115579673 seconds)
    (250/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.079619108 seconds)
    (251/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.101316651 seconds)
    (252/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.146364219 seconds)
    (253/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.103143399 seconds)
    (254/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.075518501 seconds)
    (255/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.140599093 seconds)
    (256/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.092371366 seconds)
    (257/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114090867 seconds)
    (258/286) benchmarking ("sort", Float64, true)...
    done (took 0.229116206 seconds)
    (259/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.097934685 seconds)
    (260/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.104633617 seconds)
    (261/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.078856209 seconds)
    (262/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.139001968 seconds)
    (263/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.078202442 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.12075694 seconds)
    (265/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088818745 seconds)
    (266/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118283355 seconds)
    (267/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095665749 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.113745075 seconds)
    (269/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183398327 seconds)
    (270/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.144479384 seconds)
    (271/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.100844266 seconds)
    (272/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.095929344 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.11515525 seconds)
    (274/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.077135306 seconds)
    (275/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115717722 seconds)
    (276/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.102358459 seconds)
    (277/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.117811903 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091107396 seconds)
    (279/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.103564367 seconds)
    (280/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.143344179 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115351339 seconds)
    (282/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.119808259 seconds)
    (283/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095507328 seconds)
    (284/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.08296436 seconds)
    (285/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.112615607 seconds)
    (286/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.077258442 seconds)
  done (took 37.861366885 seconds)
done (took 38.761727063 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09999999 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.153029553 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.099800584 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.141377358 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.100879916 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129725555 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.121852292 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099252336 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124565775 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.102730801 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.126147581 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.082712622 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.123026013 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.099242104 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.124148265 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142040906 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102462372 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.120715464 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.090619973 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.114908915 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.090828209 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.116057895 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.09283911 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.106467482 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.098996553 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121055634 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.094166459 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.123274047 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.091955708 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112800674 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089873718 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.094008937 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.114363882 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124147715 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093410541 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.090491695 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.124847284 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097590838 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.119417626 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091015291 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.12071723 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091583507 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119049839 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096417839 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116313653 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.090381587 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.114608162 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125570223 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118976172 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116600972 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095844346 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123113711 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.100347068 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120109388 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090613822 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.115569688 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092538128 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.142967943 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.090881882 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116836641 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.114944362 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.120074089 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.090976951 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.115067489 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.092403851 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122559392 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.0975387 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114843026 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098975879 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.118385009 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087173078 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.116039237 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.091143481 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089031807 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.121850782 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.098010731 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.111241481 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092464915 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.119129135 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093343524 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.114970266 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090031776 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.118382338 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092637953 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114132062 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.08406572 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113928355 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094198911 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.115402812 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.092483783 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118392278 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094801474 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.117584124 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.09853041 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115759044 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092875706 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.116432412 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.092233491 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.118209095 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090315215 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112170792 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090535973 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120538936 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090296314 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092379642 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.126146706 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.113631354 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.094146169 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.091086944 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.115324384 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.128869542 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099221175 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.115537049 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092903938 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087355956 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119485006 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.114342549 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089960143 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.088821587 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.117692739 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092405373 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.116733264 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090839923 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118741686 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124977923 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087792763 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.089837762 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114216565 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.091769596 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.119074329 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.092758872 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.113894939 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091800544 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.110813187 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090559793 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.113713335 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.095176086 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114785468 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.091592523 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.116353811 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.092290329 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.11758131 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.092320737 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117363724 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.089389977 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.109288783 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093272574 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089721249 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.117780597 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091701673 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.116791383 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.088053148 seconds)
done (took 17.121449752 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.098308574 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184640907 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.148550475 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.150370954 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.122792289 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.133670504 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.126309644 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.14612846 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.09997594 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143824217 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.145637106 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.113773785 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.151307094 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.123665257 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.108401392 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.123098164 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.097390137 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.132374965 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.155811443 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.116559682 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.149337429 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.124851617 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.143829492 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117212953 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121924392 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.15169694 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.100752534 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.12282976 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104062643 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.130995578 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.113466585 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.126649932 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.124656047 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.110220592 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.130140037 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.096821683 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.132941807 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.094850509 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.123933275 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.123248903 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.110353659 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134190206 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.095573346 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.13150365 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.123769389 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.102715187 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.12315238 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.097270933 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123972181 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.093197813 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127550933 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.144576266 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.097674584 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125136094 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.123566519 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.098725515 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125497379 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.102120519 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.125059255 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.101908935 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.123569057 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.12682715 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.10405283 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139955632 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.122226943 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.100499352 seconds)
  done (took 9.037847593 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.113265868 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.149631402 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130500176 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105534852 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.125801535 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088054938 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112545868 seconds)
  done (took 1.787111651 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089205948 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.143163668 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.121058167 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14523814 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.138686706 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.123990093 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13210453 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090121208 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137683024 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.099377966 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.143588774 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.167737844 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.08979574 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12625221 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.148556693 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089628598 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.148344378 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089577253 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.122000216 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.120200825 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120132571 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137319501 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.102306806 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115829734 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111130095 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.118554613 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.18235928 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101572368 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117175893 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.095695848 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12042903 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.184143551 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.111377876 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125706378 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087569603 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143423629 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.135498139 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094654374 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.139839721 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09444129 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.135537946 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.096013197 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.122596072 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.095992735 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.122794964 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103526135 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.126314355 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.123337118 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.095548872 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143381053 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.100250633 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136103558 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091437173 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120159388 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.099875906 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121964782 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.104058632 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.120150356 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.116837359 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122713884 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.140830798 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114870362 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.136535299 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.140613895 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106788597 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137055814 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.111292257 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.121168513 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09720802 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122234857 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.115250485 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.12001164 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.126194749 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104575706 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12436995 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.116398053 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.142587883 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094191437 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.128802424 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.093780944 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.117872338 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090492391 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.13133604 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094013417 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118389111 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106588423 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127065099 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.095344067 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.12009943 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.137268626 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.094437377 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.126900164 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.101448564 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.119068866 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130303596 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.117714585 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.12617423 seconds)
  done (took 12.513759175 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094074068 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.09207407 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.121017569 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.092476175 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.118086918 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092282438 seconds)
  done (took 1.578476337 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.121806607 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119375409 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10637697 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123231828 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158952903 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.113977311 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.139603531 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099996543 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.136610597 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131029216 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.115101624 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.141272618 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.121198017 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124095553 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.140282627 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098726526 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.140462317 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095496784 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.131223129 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095133309 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.133222169 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098771623 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121031852 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.112484901 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.124566272 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098117242 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124845601 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.1318758 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105653504 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126427902 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09829333 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.12530494 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09848173 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126793961 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.141058712 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098179677 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119357727 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.101520116 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12496091 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.099621197 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.142167198 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095209545 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.1305729 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.100912358 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.126813907 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.123466551 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.10111946 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12270277 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.114877634 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.126166578 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.100017125 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.124893217 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.098623762 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.127227659 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.098605138 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127168564 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.1011849 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.140420867 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124466196 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.09850806 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.12074876 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.099167192 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127210753 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.098780067 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.124000422 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.100838815 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.125246757 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095228158 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121298831 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097606639 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.127586129 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09536942 seconds)
  done (took 9.396209229 seconds)
done (took 35.270052982 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.685817148 seconds)
  done (took 1.654915277 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.846902556 seconds)
  done (took 1.817838535 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.518629275 seconds)
  done (took 19.513264683 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504973155 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.598254563 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.988052016 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.165464781 seconds)
  done (took 3.223301298 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.963835561 seconds)
  done (took 1.947071225 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297380667 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263351751 seconds)
  done (took 1.531406159 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.810508255 seconds)
  done (took 1.785581732 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.53942651 seconds)
  done (took 2.520030801 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.355364435 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.202840252 seconds)
  done (took 1.546850642 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.581379092 seconds)
  done (took 1.56378222 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.921436174 seconds)
  done (took 15.909474776 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.242164057 seconds)
  done (took 1.239155994 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300601974 seconds)
  done (took 1.286606669 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.800138375 seconds)
  done (took 4.787180111 seconds)
done (took 61.308711526 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100892282 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129762752 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104116645 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.102705961 seconds)
  done (took 1.422500012 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106815487 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124364655 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102725667 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.125185901 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107030545 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.125942209 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.096996349 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.132175457 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098835803 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.126682367 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.099500773 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.12526224 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.126542284 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.097992492 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122845795 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.100824353 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127625422 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.099740318 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124848299 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100149701 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.124977518 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100224441 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.128154003 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.099472684 seconds)
  done (took 3.724712893 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101411264 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.0956391 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.122829711 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.094726411 seconds)
  done (took 1.415104947 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105012635 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.138168745 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.111415884 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.130644967 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.111681731 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137433065 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120752646 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.095050919 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097017697 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.13174961 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095826152 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140095487 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136934938 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.090160582 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.132612632 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.092820326 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117161657 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111976915 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.130685041 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.106828262 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120268217 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.104030594 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.128857881 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109067657 seconds)
  done (took 3.796489584 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17883385 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.134979967 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.144991539 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.101993439 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.172060334 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.148029638 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.093901761 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.147531329 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.094738719 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.143873042 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.12474994 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.147862022 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.138114022 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.12448866 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.095540048 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.12750151 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.111127351 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.14197321 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.123830891 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.107249869 seconds)
  done (took 3.604540733 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.101145505 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.121337026 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091481493 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.094428936 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.127233356 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097647306 seconds)
  done (took 1.639069284 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091338502 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.090484019 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116460635 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.089186084 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.121135736 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09042863 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089002361 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116815065 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090368996 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117065444 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089445285 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115489762 seconds)
  done (took 2.22388833 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.382061452 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119690203 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127342164 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.094871695 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.138835223 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094488571 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.134405427 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092803974 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.153963172 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.099555871 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.119819844 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.097734536 seconds)
  done (took 2.656798862 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212663952 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099802177 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269111649 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.428503402 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159849687 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17026577 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.333879917 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166643138 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.188024393 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14149234 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199194672 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162541095 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159338131 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184777903 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144111983 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.180870547 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181142234 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206420579 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153509786 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209522982 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168736648 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17203474 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185044822 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156279481 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114588777 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161954905 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122426146 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105210747 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17602328 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200182626 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178531573 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152748867 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115889632 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23291528 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217969568 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182750402 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.387930099 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136467117 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.193638996 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.187024746 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229283204 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144751482 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198380091 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159185896 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134501338 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185761169 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162427176 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.184850842 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134635396 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117721559 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213576161 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181035346 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.184480691 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113652265 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.374387584 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149767288 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.150913243 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192628285 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191019078 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194090356 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172475644 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.126223226 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.225031807 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182290464 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182570627 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14816792 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.170966029 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128971546 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181023991 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196827783 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181304413 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171299045 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.215419361 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10899052 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169367987 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171449966 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160068245 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182572819 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165929511 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12407084 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128223721 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140719617 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131672909 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.160612955 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127032348 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207241052 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14000374 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.272107172 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219720344 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16324431 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1648435 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169784646 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171847586 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152231371 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.094477691 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151733917 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.164905343 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164465377 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107373761 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161859779 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15067569 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131711112 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158342861 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099264098 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164102741 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.137610415 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172256706 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168207365 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.104665183 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169401938 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153901547 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.162164625 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175910101 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191783503 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108113329 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136107574 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197692252 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163885249 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140809773 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178877108 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189839886 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.169301663 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114158456 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201322784 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199478284 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117760755 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219706252 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118376042 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137376848 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.155181386 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165672189 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160881286 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.131387848 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134546136 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.156059741 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197974709 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.131178497 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113597508 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179839137 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131147724 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104033746 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149276496 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140347874 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.118605093 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.153715246 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14475125 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160481528 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165653396 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157311749 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16338092 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118713596 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226825822 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108759864 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.1649376 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152632363 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095140091 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.183776997 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216862713 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104877757 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18966569 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172245344 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266423214 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167929309 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134610482 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183955244 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104991788 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.12363763 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171080897 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165174545 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16486059 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.186562558 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238150892 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.197880305 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.12806515 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15492967 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170965454 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.178176448 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159859079 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.150325591 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167923767 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173505903 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.098012917 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.127811518 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.102587016 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145823083 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135268221 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107372351 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21389609 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168483782 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231390322 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163766739 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145099337 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185743512 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129541029 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168153882 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175386112 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11486661 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.187801002 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186032539 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171115759 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146778362 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175578742 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123760391 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100860313 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.137845414 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170006275 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108000009 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138674402 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147573284 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186127634 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180357483 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155216562 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269170616 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174184999 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196249833 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097402946 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167528666 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175845278 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163402082 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.165839234 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13546457 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.163990531 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181714147 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14920442 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196445716 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168588534 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174088452 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202065837 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.161334466 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134004611 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153002213 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173121108 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115799091 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16649942 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150767355 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139646615 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130410801 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.140158055 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130387149 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186090776 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149033446 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184359537 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.161545013 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178044736 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101381308 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146406282 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16553073 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150724588 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.093426867 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175757362 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220408876 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118148634 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1639731 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180007125 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134598336 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.354590573 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220793696 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190556163 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140961186 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118068568 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167699749 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163532309 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170435187 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186106795 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147795511 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185019244 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162689847 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.118676692 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138987767 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151800151 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125823681 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.157414224 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.137333601 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.15776168 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.147115413 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190808169 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148665539 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135171638 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169837149 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152026723 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.159121753 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116640878 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234181763 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134363982 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212115277 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.132344659 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17040855 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19214949 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130009679 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102813338 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132055402 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186732818 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136934045 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135156791 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.255432854 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274260359 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16418229 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175563303 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113451281 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127831672 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165497443 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154188125 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241090561 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143998369 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.141616078 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196583606 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.156946781 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105469664 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168572136 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367051249 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121332804 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206637361 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.097708155 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.321100295 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127959685 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135176952 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134620557 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174891847 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137609803 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.188194037 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171092377 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11963097 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164675411 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142695234 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.256380182 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222657768 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175800989 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17996373 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.148304355 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162215099 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168974344 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182117919 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146570349 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.120431572 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168746423 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186937006 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.187370088 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.13744784 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169309023 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169255213 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164837568 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178564764 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109357442 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191616854 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137405908 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170987774 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144712744 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099316131 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164532874 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.254229766 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136773876 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18112979 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162476664 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107533354 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130145002 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126657915 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165350747 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148418856 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.134153907 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185513924 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102448885 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16772056 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18532791 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135935391 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159512458 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121370761 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137154585 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146791971 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119939482 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139105843 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.149390779 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213313379 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.105888679 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180811259 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204895495 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169337672 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164480786 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119781422 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666088776 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102609697 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186044646 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152132841 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190310239 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154348038 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172748906 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167110614 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154904549 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173334911 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155064157 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.194985012 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170121073 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.163365832 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135722679 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148982941 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121200586 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.136385043 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156053884 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168095884 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116057811 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.142868143 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.16134216 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149539037 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.11999306 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144328479 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188200212 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153732575 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188817357 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187610345 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143256847 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171194989 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178956522 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105562932 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.165075269 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176394554 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146866606 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155490996 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.105504001 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.141445101 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185293383 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.099136248 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166411489 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168557967 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167408753 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169474252 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.139212133 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164049275 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117387743 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166394357 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131446824 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159435423 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160849916 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106435972 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13183696 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130429491 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163645723 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.163671005 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131229426 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.150072009 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183010627 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.130409244 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10715065 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363460025 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164472577 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197154948 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.158044638 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13890046 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120694793 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159638637 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.158345267 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166149092 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.103970152 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137556554 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13485606 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.184488196 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.130407333 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162502792 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200850081 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167092917 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193772617 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.141232896 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.267629709 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114197719 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161529409 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.135412586 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104431011 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146736122 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138527505 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120304013 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.260088859 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184254559 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.158327671 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.119809724 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133237922 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.132639945 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108284041 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166801706 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160376738 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164674174 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118244331 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.124224932 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150211135 seconds)
  done (took 79.638134062 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161112341 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.166288448 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165061393 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.216427781 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.184045744 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266063821 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22688833 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247673058 seconds)
  done (took 2.724637649 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.104388444 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.13866896 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143421763 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.127403414 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.094918382 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.329868378 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.141556434 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.127895164 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.124075583 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.141823675 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.122615453 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.569227821 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.098711866 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.128932503 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119175306 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.094909939 seconds)
  done (took 3.694098131 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.36846216 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.55767705 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.320323273 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.254337491 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.235296521 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.157284955 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.779741631 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.190870908 seconds)
  done (took 12.956708163 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.12815334 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.144934587 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.142770348 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.169922508 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.126232289 seconds)
  done (took 1.808884867 seconds)
done (took 122.2889539 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09893145 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.101676837 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.128671407 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130510421 seconds)
  done (took 1.542028194 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.111934502 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.085654016 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.116870419 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084241168 seconds)
  done (took 1.488658833 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.431537833 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.115395551 seconds)
  done (took 1.674498193 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.119088988 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13765388 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.110237022 seconds)
  done (took 1.461361339 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.107672774 seconds)
  done (took 1.203219679 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.101643647 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.102635005 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.145847124 seconds)
  done (took 1.447235527 seconds)
done (took 9.913875545 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116988545 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.535138758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.388981802 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142311479 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729806441 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.383188567 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.041797065 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16136643 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142225317 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124320272 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111782868 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.70580851 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.996609812 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.473126793 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982021157 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377061196 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679779739 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125470605 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100807789 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125866728 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.99192406 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123409452 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096169653 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126793995 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675959282 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428671203 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094773236 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.387339096 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094791904 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128257265 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384076566 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124176944 seconds)
  done (took 17.1840312 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100556659 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1841 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.103716614 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12569191 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098810609 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125689671 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.10509135 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.138135186 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185471513 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094813871 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141605473 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094223981 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128823389 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095285016 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144437834 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094614942 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125564357 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097602681 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.131249333 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09668544 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143417489 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094547307 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125935968 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097145663 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123778255 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10770932 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123880374 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.107838815 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123892933 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100146304 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129185226 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095542098 seconds)
  done (took 4.881831451 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146523493 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.19387059 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133054 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129633649 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.175025084 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096411805 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.209838248 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.163366312 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188278254 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124170592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112494144 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12418191 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129946806 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125805252 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115355379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124717083 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099004859 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126250849 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101037773 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126819176 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114658381 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124340074 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096575613 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126784173 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095475965 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138288889 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096307071 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.137919 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094961583 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12884263 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100753758 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125360676 seconds)
  done (took 5.230252748 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.103317802 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.133006392 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112575691 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140975631 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098231612 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.131768339 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.104032315 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.127419415 seconds)
  done (took 2.053653216 seconds)
done (took 30.445565102 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113253044 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.100783805 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.139002634 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.107814413 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.13398484 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.118734675 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.123330772 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.106927106 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.138137611 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103821743 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.140215731 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.094612545 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125262483 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095436704 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.108139242 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.13007784 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.109527179 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.13419215 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.115960552 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.140159803 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095357064 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.136919767 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104653547 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.145464825 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.115759461 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.146449079 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.14052624 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101415674 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125478883 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096949991 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.112094858 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.149972791 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129117175 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.112524369 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129537243 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.099901715 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097127254 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.126976955 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.109578506 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.136024201 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101201264 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.136427326 seconds)
  done (took 6.124793711 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.122808094 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.167409484 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.101060604 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.126959682 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.097079006 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.163314439 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.162974981 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.096775745 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.097140729 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.150061017 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.150595086 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.097327773 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.095936283 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.127741547 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.095362211 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.126409141 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.118898713 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.149857845 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.154487156 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.125452242 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.173628918 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.160447743 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.131036107 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.152087579 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.136464736 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.159897338 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.148435485 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.132131709 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.155997852 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.099514009 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.157372394 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.157550082 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.100136265 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.126143485 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.136749038 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.1653779 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.154671139 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.135015327 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.161564831 seconds)
  done (took 6.382059469 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.104483502 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.110261863 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.155451702 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.192841308 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.164761169 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.108978799 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105488929 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.14466943 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112243553 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.125553383 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.106014347 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.157477577 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142890162 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103549775 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.101032943 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141366532 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.145118306 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.098711054 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100392144 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.146147945 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.11573609 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.140748488 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13831445 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.107158943 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.095482274 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134411225 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098091563 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.14199052 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.100871988 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.134237679 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099688807 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.130579207 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.10383126 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.13824293 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.100439894 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.133089114 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.117573523 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137187638 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.104773776 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.160534429 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.138453559 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.100755973 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.148135268 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.135768533 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.126374902 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.102800976 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.132730167 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104929497 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.12476523 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115569353 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136381973 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.097446059 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.142139776 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09614668 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.125654548 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111853702 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.127226873 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099306075 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103632358 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.13366642 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.145074244 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.100673842 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111007632 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.128262155 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101715655 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.126106803 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.095960933 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.131115042 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.118574074 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131227907 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16510298 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097008466 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.102061888 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.135150837 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102152795 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135269689 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095394217 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139803174 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106860413 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.131394543 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.106164592 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.129624787 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.100568902 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.144595147 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.111662116 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.133405796 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.101995945 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.133191912 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.099843963 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127799348 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110164228 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.129263671 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.100526112 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.143683607 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.099414311 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.129349202 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.103410015 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.13093211 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095817862 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138754715 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102137514 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125503567 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.107258902 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09668166 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.131502037 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.105783877 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.131288545 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096296737 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.132003373 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.103365792 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.126977732 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.100312659 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.130949638 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099438008 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13981556 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.103986882 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128938833 seconds)
  done (took 15.257812795 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.243412933 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.22337454 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.198018436 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.30799115 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.149397738 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.123477091 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.220303844 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.178961876 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097429623 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16676037 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.182467738 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.193632402 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.183724198 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.194259084 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.184641121 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.128509207 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116653899 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.179903635 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.223153031 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.30430746 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11659011 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.143552655 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.169046174 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.167307851 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.115592255 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.144717434 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.155305436 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.119700827 seconds)
  done (took 6.053646598 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.112627754 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.167571014 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.104285553 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.158152654 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.15460743 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.097523403 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.132812253 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.097653898 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.140973153 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.111198904 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.128561574 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.104393974 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.133910103 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106015446 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12752011 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106006083 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.138024936 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.106036268 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130757027 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.101162863 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.144680967 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.114972991 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.134411879 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.102391819 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.146537256 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.134022196 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.098483239 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.147605674 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.135904411 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.125855491 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.124966096 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104898353 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.142713028 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.096609131 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.135126498 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.100295198 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.129220748 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099103757 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.098109613 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.125923289 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096913195 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.119278965 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.102869333 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.142603308 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10364742 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.129546843 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.102206265 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.13259153 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103308489 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.124881815 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099845303 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.130155011 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.101258591 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.143509501 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.100446777 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.134054499 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100656488 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.12724317 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.106064521 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.099322621 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.125756651 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.101828227 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.133579259 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.131873327 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105328338 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103636697 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.132187904 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.098386587 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.133987059 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104106549 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.131154329 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.10951139 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.124808931 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.098971366 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.138730212 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.108723708 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.132421986 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.102088423 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.135248218 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097247014 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.117168863 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.095820601 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.084331083 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.134005374 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095907498 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.133416839 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099403717 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.133628851 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.144322727 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.106803413 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.135151803 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.097410295 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.133530014 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.102358716 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.094290581 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.133487194 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.114563492 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14808276 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.12709432 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.094840634 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.144027848 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.09859881 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.095145367 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.119768641 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106711766 seconds)
  done (took 13.578344492 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137808684 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.179424738 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12890021 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.116349798 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.163636977 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.16896682 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106216938 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.106068394 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.130754357 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11833846 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.135113581 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105970121 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.134657013 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.112196369 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.170706281 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.139146357 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.09831325 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.143485565 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.101987054 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.181356364 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.147558806 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.136386714 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.172148364 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.135927058 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.102505096 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.164894679 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.173465896 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.110593984 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.141004284 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173299325 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.111362947 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.172877067 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.174238324 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.103081213 seconds)
  done (took 5.84209256 seconds)
done (took 54.337838821 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.214332391 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.441883294 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.195849903 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.194485461 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.239325061 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.234692556 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.19638346 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.411330324 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.016305772 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.183785436 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.195355105 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.194591259 seconds)
done (took 27.850045803 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.346402515 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.36162794 seconds)
    (2/2) benchmarking "String"...
    done (took 1.523071594 seconds)
  done (took 4.020207429 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.196029178 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.195804025 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.441275225 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.210897478 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.197606693 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.215441346 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.196129096 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.219816382 seconds)
  done (took 15.80202339 seconds)
done (took 25.489907724 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.218121857 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.498526213 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.467478553 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.216144208 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.196176511 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.195000897 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.202014341 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.270952579 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.199198122 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.221278065 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.223094099 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.491867251 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.231498111 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.62169759 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.198465461 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.220241526 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.215573535 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.534638656 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.198066802 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.20825334 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.200762579 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.189457054 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.213162134 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.214541171 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.227009772 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.208397466 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.232095959 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.197880207 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.468094715 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.217161236 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.200569958 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.217908416 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.234866333 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.198863992 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.316391598 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.223913237 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.46723566 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.209280153 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.194591077 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.211685955 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.479065395 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.623711922 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.198497765 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.226178925 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.204992643 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.232628347 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.195440338 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.940293606 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.207063059 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.202598408 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.233949503 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.605411561 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.212193837 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.210086401 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.223816375 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.530485684 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.208674967 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.281571669 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.214835567 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.219319266 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.219123405 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.216722469 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.245324571 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.22086759 seconds)
  done (took 144.151363485 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.198384614 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.202280832 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.20328895 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.207519081 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.206117395 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.203452854 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.203371949 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.202540927 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.201478291 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.232954561 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.207198627 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.206155423 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.219432248 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.203577562 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.203092789 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.216552442 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.203079438 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.231681853 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.206464937 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.203275844 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.203459448 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.21098678 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.226268411 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.21230455 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.215235609 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.295687142 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.230551323 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.214673785 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.204735712 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.204407768 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.207769723 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.209387077 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.872337126 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.055920993 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.215991968 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.242805081 seconds)
  done (took 80.313959522 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.201863538 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.203769538 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202453685 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.238965068 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.205276913 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.83048457 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.837217546 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.004755041 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.492971798 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.205112096 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.739842278 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.508680634 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.205101682 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301451977 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.220502957 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.210485941 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.220947954 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.231048614 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204281856 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203082711 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.83533635 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.22379694 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.290521191 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.388946981 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.222078209 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238177687 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.604811063 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204722804 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238243162 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.549004698 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.258491973 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203708665 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.64323825 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.045926192 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.324899227 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207711794 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238266236 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.207265235 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.493098136 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.207264454 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204323249 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.207865204 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.216745031 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.936856976 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.210628058 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.834022066 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213840647 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.198167589 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.209482366 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206520063 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.205218838 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.621308974 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.017127702 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.226636525 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.208121543 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.210514354 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.206673988 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205566266 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.243210218 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.69562339 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.3314473 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.209173575 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.211975298 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240320497 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.208914941 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.616070181 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207771471 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.206209965 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.263764908 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.325046136 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.242651341 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.858025763 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211465449 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306998257 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339984929 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.2076425 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.208663617 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.208916139 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206728413 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.320458873 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.207979237 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.663075285 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.391938072 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.230208841 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.75716569 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.314258805 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.211846813 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.671572914 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.213352638 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.211251278 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.994979486 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307744353 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.208645123 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.208671468 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208746109 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.66679129 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.842740765 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.505416803 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.216066183 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.06127974 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.21528274 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.68127846 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.809665054 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.969363238 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.218657921 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329253189 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.396332739 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.232812385 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.212650925 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.763568456 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.217483659 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.272772029 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.21486436 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.611803231 seconds)
  done (took 369.683191949 seconds)
done (took 595.273440781 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.951863159 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.90057367 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.041364555 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.931029804 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.893510557 seconds)
  done (took 10.856765099 seconds)
done (took 11.995527805 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.410511083 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.409521532 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279543924 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412886386 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247871399 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.430499546 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.397241283 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.236944874 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.322607775 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.306104841 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.322009525 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.277937876 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.250046953 seconds)
  done (took 18.442315982 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.571677056 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.214947431 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.298116612 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.554134808 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255925429 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.559842808 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.440806379 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.2364286 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.446202214 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231632145 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225647375 seconds)
  done (took 18.175467906 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.55798972 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.213827325 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.298300988 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.566070391 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.256931493 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.543235298 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.438504656 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.234333956 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425479076 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232877173 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2297152 seconds)
  done (took 18.136826841 seconds)
done (took 55.894253004 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.259050998 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.389048926 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.256439149 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.229963237 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.224310502 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.226342186 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.232700681 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.233212574 seconds)
  done (took 11.193535176 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.220563642 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.223805773 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.224528881 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.222122803 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.222656257 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.223583732 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.225591346 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.223109329 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.219776729 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.223381042 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.22396425 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.221162308 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.749971592 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.225316767 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.22279045 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.221877916 seconds)
  done (took 21.237006235 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.223167897 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.219061703 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.221299465 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.221477494 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.222796338 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.221549264 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.222710822 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.221261245 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.222468339 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.22181291 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.22270705 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.221309622 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.220382838 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.223235936 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.222010448 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.22218726 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.223073666 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.221725118 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.227352802 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.221485279 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.223610859 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.222435609 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.222267801 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.220755232 seconds)
  done (took 30.475920563 seconds)
done (took 64.04610139 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.218219814 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.217030265 seconds)
  done (took 5.579460239 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.285820911 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.284660797 seconds)
  done (took 3.715071789 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.228800955 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.228091058 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.226735812 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.226820524 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.228355359 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.228303676 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.227191183 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.226524848 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.226847728 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.22746426 seconds)
  done (took 13.418594209 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.226764 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.226804295 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.225881399 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.227808214 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.228158007 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.224790438 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.229044969 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.228907195 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.228931777 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.225412737 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.227812637 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.223545919 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.22723752 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.224992599 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.229360808 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.225752114 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.225023333 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.224323882 seconds)
  done (took 23.227953957 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.24099 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.250968902 seconds)
  done (took 3.63825164 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.356768023 seconds)
    (2/7) benchmarking "second"...
    done (took 1.265980441 seconds)
    (3/7) benchmarking "month"...
    done (took 1.335452057 seconds)
    (4/7) benchmarking "year"...
    done (took 1.32332169 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.267438467 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.246953529 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.266675775 seconds)
  done (took 10.208834989 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.230100282 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.418487229 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.533246179 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.830275845 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.230997562 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.236326495 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.094275027 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.232001766 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.235485217 seconds)
  done (took 14.188402802 seconds)
done (took 75.120524192 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.224871303 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.239847071 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.258796927 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.234984041 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.523020007 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.272581153 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.22697638 seconds)
done (took 16.128811302 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.220624277 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.219253501 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.21958377 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.223503128 seconds)
  done (took 10.031868164 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.237329256 seconds)
    (2/2) benchmarking "read"...
    done (took 1.572504779 seconds)
  done (took 4.957577641 seconds)
done (took 16.137092683 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230070732 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.229454782 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.231542175 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.228180665 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.230785494 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.231314409 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.228280155 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.227438399 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.231948557 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.230301914 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.228561273 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.230482158 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.232497789 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231656544 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229462405 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228176803 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230491311 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.228776984 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227953214 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229469116 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.232500266 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232234418 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.229223691 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.22975006 seconds)
  done (took 30.670661109 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.230532818 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.229608713 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.233100279 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.231794156 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.228792204 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.232387918 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.231837981 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.230765323 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.231317039 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.231076294 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228967793 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.231156627 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.23251784 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.23097776 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232125715 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.232651676 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.232993354 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228995891 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233653184 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.229426461 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.233339408 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230276768 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.231525497 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23458646 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.231865083 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228988111 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.234273313 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.231301008 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233315537 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.231271189 seconds)
  done (took 38.096235965 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.239482114 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.241735861 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.233883571 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.232818386 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.233871096 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.234401816 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.234672823 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.234364836 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.236186593 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.23423168 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.234529952 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.235306479 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.233943497 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.234690943 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.234015407 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.234215576 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.234005975 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.234565606 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.234755178 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.23485302 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.234481321 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.235294799 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.233604327 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.233702266 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.237427679 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.23536949 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.23509865 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.23562907 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.235882267 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.235408748 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.235035336 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.23633743 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.236009803 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.236140921 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.233654753 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.236813197 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.241548825 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.244143317 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.23622698 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.235523029 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.238279591 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.236419338 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.236297995 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.234516508 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.237110463 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.236584485 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.23749312 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.236024779 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.235975709 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.235583649 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.236425826 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.236333125 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.235538636 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.236845119 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.235936102 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.234433525 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.237900211 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.238991626 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.237204328 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.236309906 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.238466731 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.236625603 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.236774057 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.2397032 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.237971804 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.237240618 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.237683731 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.237972057 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.236101109 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.239056046 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.237192874 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.238591356 seconds)
  done (took 90.161381003 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.237742506 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.235248675 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.236121105 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.23614738 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237451799 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.237698571 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.23687477 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23863022 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234116261 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.238600585 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239515684 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.235612525 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236826372 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.238966073 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239154091 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.237589076 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.24029066 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238816919 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.239975119 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.240901947 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238893243 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.237765978 seconds)
  done (took 28.389066476 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.242252569 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.241387787 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.240065637 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.241588614 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.240404099 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.241803749 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.240178823 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.242917209 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241632349 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239718505 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23790045 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239876955 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.239322071 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238232398 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238184608 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.239782151 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239141945 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.239031872 seconds)
  done (took 23.477037182 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.239177315 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.239081479 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.239919133 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.237320714 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.23858834 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.241805726 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238535302 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.241516026 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.241303625 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.238938159 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.242438287 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240172323 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.241384565 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239869444 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241500618 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.240473776 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.241659767 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240460892 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240967051 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239201569 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.240426369 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242343207 seconds)
  done (took 28.444300311 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241115752 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.242841804 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.241164678 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.241783252 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.239527834 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.24342762 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.244207807 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.241409774 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.246514476 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.242413528 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241388867 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.242305454 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.242845004 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.244172138 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.239689757 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240624825 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.244575882 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.241524431 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.2449861 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.240376598 seconds)
  done (took 26.007257303 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255340368 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254685541 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.254586025 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253881674 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254199039 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.254388159 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.254057895 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.256370952 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.255631525 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25586208 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256456066 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25635742 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256454801 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.256840596 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.25651058 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255335417 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.256502105 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257320165 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.257630871 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256500403 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256206098 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.256208861 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.254263917 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.258608268 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257543949 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.254422085 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257180323 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256027406 seconds)
  done (took 36.327018551 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247596476 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.246600687 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.244827857 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.245229633 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.245632558 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.242437534 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.24448319 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.243732837 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.244938544 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.247137078 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.247769103 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.245816032 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.245872071 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.246301019 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.245694764 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.245902112 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246860707 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.244842056 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244074107 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2441189 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.24664704 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248125728 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.248828856 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.24470284 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246148207 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.249721769 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246505888 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245451046 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24728302 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.245716992 seconds)
  done (took 38.542931462 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.286890151 seconds)
    (2/2) benchmarking "in"...
    done (took 1.287870392 seconds)
  done (took 3.735979246 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.246015603 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249961182 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.250047699 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.247692963 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.244924193 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.251710581 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.250064282 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246189147 seconds)
  done (took 11.152464376 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.250162354 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.25030567 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.24895997 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.250683319 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.249516712 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.248809524 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256465507 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.273727887 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.249608095 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.250485078 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.259626208 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.260445886 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.253111441 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248750194 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.249507715 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250189824 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.250485887 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.249791511 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.250786167 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.248219934 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253139784 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253630051 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253077511 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.248813257 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.253038673 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.263456073 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.253268526 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.251470509 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.24975143 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.253619067 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.250958098 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.248953721 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.253409838 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.250697026 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.250268596 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.248702297 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25982948 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274312039 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.255213875 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253139207 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250512045 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.252341933 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.248693587 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.253426163 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255342877 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.25283715 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.253893328 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.250422192 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.250934271 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.260056323 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.260262108 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252473657 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.249224387 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256740263 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.255011772 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258525315 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.277811218 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.255498618 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.263689552 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.262806148 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.268855665 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.280456312 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258097311 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.253356456 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260244104 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.280777495 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26008272 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.273391448 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.25260794 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.254201176 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.258534102 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268487976 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.283171252 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.256567462 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252738397 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.253648257 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252089998 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25481806 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256664074 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.278493696 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.254270233 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253177335 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26455652 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278156362 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.253613275 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.255436598 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.254170762 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.250905411 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.255370178 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26442072 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.280702279 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.253275659 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.255768339 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.253747253 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.255022183 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.253721579 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.254068815 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255335449 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.254642911 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.256841846 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256228704 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260904894 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.266434413 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256465814 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256464748 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.261562441 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.255977264 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253231232 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.260440881 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.257136117 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258299756 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.258686758 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.262952366 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.254489575 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26294052 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.266993818 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.259048584 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.25867766 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.258883432 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.255966977 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267424553 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.28627004 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.25756446 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.259381988 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.263741123 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.272144472 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258518739 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.261792044 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.258115284 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.255478444 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.25381483 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.25895442 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.260064607 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.258941107 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259124803 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255908101 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.254875461 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.260528617 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.259824098 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.260351922 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.260362758 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.259162215 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.261031622 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.258787917 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.261717911 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.260104136 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.264815072 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.258751055 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.259171965 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.259292922 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.259560837 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261254604 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.260396935 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.260730234 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.255759187 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259952131 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.25670124 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.262170066 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260224986 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.262204431 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260850377 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.262035431 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264925842 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.259902508 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.262339553 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.261554336 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.260526794 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.259767419 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.261698785 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.261168328 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.261302823 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.260952586 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.266446638 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.271154361 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.260586965 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.262143695 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.26068089 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263104939 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261682659 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261349344 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.268570996 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.270211484 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.258446845 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.270128673 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.264278595 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260031498 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.261079486 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.261102546 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.26094461 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261731787 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.264449003 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.273112031 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274570285 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292445122 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.26303056 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.268195452 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.264684731 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.266327635 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.266587826 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.262879651 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.263638765 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265753145 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258286995 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264054955 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.262428237 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.265437006 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.263127432 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.263353492 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.266324896 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.265904042 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263689619 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.263019332 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263875109 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.263216028 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265251299 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263643292 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.263714396 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.262778157 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.264086853 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.263263262 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.268308103 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.267325996 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.268125117 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.264164456 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267237695 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263959591 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.265087952 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.263894591 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.264625171 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.269197947 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.267319362 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271685318 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.287184638 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.265876385 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274156732 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.288083911 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.264895404 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.267098808 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.265389027 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.263523637 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.271727094 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.277833124 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.268921233 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.268779733 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.265112535 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264294336 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268613062 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.274892688 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.265606098 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.264484122 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.268994781 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.26886879 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.264358159 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.267619428 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.266476947 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.2668946 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269092496 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268148413 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.270304539 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267599697 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.268383601 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.267132695 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.267009781 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269522862 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.278328121 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.272058996 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.268377786 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.268670727 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.268744922 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.271869198 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.267331304 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.266146162 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.268323275 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278788779 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.297676224 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273377447 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.270373131 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.27027422 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.2735909 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.271267416 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.273319774 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.269387697 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269182969 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.269541814 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.268919738 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.265217472 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269103343 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.270504314 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271589784 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.27220936 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.27432585 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.270092319 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.270333463 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.269441636 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.270625105 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.269835177 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.271734311 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.271605474 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.272590108 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271848945 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.268822999 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.270054286 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279213943 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.295855554 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.270763437 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.267706673 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.268118703 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.269033444 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.271180167 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.269711012 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.275925859 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.282668706 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.2767045 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.281707071 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.274888971 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.280998939 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.271135843 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.274952834 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.279859217 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.269635137 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.268130652 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.27082042 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.271415378 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277294615 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.295704253 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.272688232 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.276450546 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27171168 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.270813106 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.268836938 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.275116919 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2710063 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.275443716 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.280671964 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.300953183 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.277623877 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275762189 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.271049147 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.275119495 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.273048514 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.272554797 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275427437 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.274596294 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.273402401 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.274030309 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.270344677 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.274062883 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.275323252 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.274723903 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.26948311 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.275489943 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.280723627 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.298763082 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28174687 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.273510007 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.280875485 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278640644 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277324941 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.299521441 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.27477185 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.276533844 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.276616168 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.278140852 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.274572908 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.274368776 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.276632242 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.275266987 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.280725434 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.275749069 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.275080455 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.276506372 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.276404301 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.276086356 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289149934 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.304191107 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.276694919 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.283006662 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.274617441 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.282575925 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.282087441 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.275025445 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.2742751 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.281902251 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290852479 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286776169 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.278215979 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.279304692 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275662107 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278525448 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.2748748 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.280675521 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.28012932 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.281150856 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.277394555 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.277230254 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27892743 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.277514245 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.279499954 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277893334 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.279969266 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.287516362 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.277508016 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.278015937 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279952951 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.277445035 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.277987054 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.277538048 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.279930267 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277949148 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279340491 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.278840389 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288060229 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.285567136 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.279559203 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.278085542 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.277827678 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.278730306 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.276327867 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.280114294 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.276881417 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278511578 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.278267348 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.278148642 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.278078954 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.276476416 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.278768833 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.280219676 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.281593964 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283421028 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.289037837 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280487556 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.278177892 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.282197551 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280536402 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.278887737 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.277975776 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.285706168 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28315257 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.294116816 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.289916082 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.285470135 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.2778002 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284622639 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.288785569 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.278231887 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.282767212 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.281111937 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.280556539 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.283648927 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.28672449 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280986338 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.285232463 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.283052316 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.278940471 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286148758 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.307773019 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.281380374 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.284153405 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.286015105 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.280254697 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.278006134 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.283407397 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.281333081 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288351802 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.307702149 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281950469 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283473857 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.282284133 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.282382807 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287954859 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280959237 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.282493418 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.279567245 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.285022927 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282582569 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284532781 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.27908221 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.282850932 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.282916831 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.287524455 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.29219614 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.281191033 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285978693 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.283169654 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.282982508 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286271593 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.284270315 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.279291471 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.281791319 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.280628729 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282739359 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.281553687 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.286001991 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.281628496 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.282970031 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.285480982 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283696089 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.290047041 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.297639872 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.294157437 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.281755771 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.285712256 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.285377615 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.286069924 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284445135 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.283956464 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284790176 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.285431502 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.285786676 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28529028 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.283226787 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.292171916 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.301469922 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.309881671 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285518763 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.288219572 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288731854 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.287924798 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.282659385 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.286335177 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.286218087 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.289550377 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.29630697 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.285937682 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.290209738 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.307964552 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.287887487 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.290090029 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.288795821 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.294353738 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.290615555 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.288298629 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.287320397 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.290514321 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.30828406 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.287014795 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.298717158 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.32023366 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.309877427 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.285789475 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.287544287 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.285318375 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.289053129 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.286974345 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.286544091 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.288203391 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287356901 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.289706204 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.291042578 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.293588892 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.288705228 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.286559638 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.288699786 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.285675121 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.288046145 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.283784393 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.290397466 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.28728311 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.290735169 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.287519743 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.287437431 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.285876941 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302012805 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.313641012 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.290205107 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.290516681 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.28523077 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.289943518 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.293514801 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.302687172 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.297438271 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.289249912 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.289743394 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.291234003 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.289250821 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.287864155 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.289271803 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.288898392 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.289725042 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.286552924 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.303867579 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.314528379 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.292716451 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.287618951 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.290459584 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.290115907 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29214765 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.291395127 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291954211 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.290787915 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.295083068 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.298057265 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.289868197 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.293090106 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.294570794 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.301790053 seconds)
  done (took 759.908267369 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.289716082 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288732887 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288654626 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290205398 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291158075 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290427157 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290177858 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.291261502 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.289072607 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287924722 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.289473083 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292616422 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291223902 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.289146098 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291069521 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290299385 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29052133 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.288056505 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291831401 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289073194 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289384646 seconds)
  done (took 28.291805832 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.294300217 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.290303157 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.290553206 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292438113 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290960076 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.292493793 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.290649343 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292881266 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292622123 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290557273 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.292555982 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294497678 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.289636906 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.291481711 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292871518 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292122559 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.292742862 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29169612 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.294450392 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.29317932 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.293157216 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.291568312 seconds)
  done (took 29.629866534 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.293787685 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.29520424 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.292838482 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.291601512 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.295938879 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.291085045 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.293774579 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.293430275 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.299119659 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.295200015 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.291845406 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.297743836 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.301963417 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.302985698 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.29884218 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.297374299 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.294968808 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.291486335 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.294392503 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.290378895 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.300959527 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.294276761 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.294037692 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.293897518 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.294856532 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.297028129 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.296076664 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.297837859 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.295892171 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.300052309 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.296040566 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.295828834 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.300807033 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.297887586 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.296590175 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.301649626 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.295688158 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.294785328 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.295982465 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.309055321 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.321651305 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.298934796 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.304995299 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.297660201 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.298494721 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.302908326 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.30705325 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.296139252 seconds)
  done (took 63.484882489 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.297162407 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.297836439 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.297399933 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.297808644 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.299779249 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.300603228 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.298547485 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.299130178 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.295198563 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.296460751 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.300951997 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.299379137 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.293450489 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.30128804 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.30020929 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.297512735 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.298063675 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297320235 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.29818401 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.298940573 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.296749158 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.302037958 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.301363178 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.29990055 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.300499144 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.299272823 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.299077843 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.302832208 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.298071015 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.300765452 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.302958307 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.301964219 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.301797828 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.29823748 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.299372393 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.300130819 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.301306731 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.29913344 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.303173596 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.298476316 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.3025701 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.301570726 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.303514242 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.302585603 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.300110744 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.299861519 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.300375523 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.299875735 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.299303815 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.303550818 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.304733464 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.301917691 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303710458 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.297903346 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303883071 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.304762874 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.300237756 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.303348216 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.30381034 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.300364456 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.299255134 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.306442861 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.300441922 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.305560833 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.302418077 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.302885906 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.301293355 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304827556 seconds)
  done (took 89.639689006 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301994577 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.303195335 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.30137935 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304555567 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302052539 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.303707646 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.305511122 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.302984307 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.303874427 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.303994476 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304571345 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.304010069 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.304275293 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.302824691 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.304720092 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.303364566 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.303297586 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.304233209 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.304899079 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.3019264 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.305776008 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.303623817 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.303541143 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.305836511 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.307437141 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.303873316 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.303627289 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.305859168 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305384596 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.304626351 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.306523255 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.303297605 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.306019813 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.30776217 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.30586122 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.305658324 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304198064 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30554821 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.306782392 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.303923096 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.304487531 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30562411 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30413643 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.30765954 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.30726763 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305159844 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.30505948 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.308006169 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.307151478 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.307593525 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.306689655 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.307334219 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.306127764 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.304802237 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.304403576 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.309014314 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308583338 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307940563 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307563968 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.30744729 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306742084 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.308049133 seconds)
  done (took 82.13630168 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308484966 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.310087265 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.305795351 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.306449891 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.310145789 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.306675984 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.309003318 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.310887215 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.308576038 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.308822869 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311612999 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.307345154 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307908531 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307983497 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.304577931 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30731843 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30702683 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.307777213 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310950515 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.307130805 seconds)
  done (took 27.379005154 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.30515728 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310671178 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.307421818 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.306971153 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.307776039 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.307891129 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.308827534 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310616678 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307123929 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309799308 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.312767183 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.312377887 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305648474 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.309373005 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311562781 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.309324857 seconds)
  done (took 22.159150325 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.307267014 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.312440764 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.31248653 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.307941345 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.307234124 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.306921339 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.312572965 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.308025547 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.309887077 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.31019604 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.311921314 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.310466313 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.310063188 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.312453558 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.309677359 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.311444989 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.311071396 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.311795558 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.3147761 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.312075948 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.311372389 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.308356101 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.312513731 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.313160405 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.31227295 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.309603418 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.311215302 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.308805245 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.310802245 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.314633491 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.310339381 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.31189968 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.310967539 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.310822214 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.311756286 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.312349342 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.313878586 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.312856641 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.315478709 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.314914133 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.3148238 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.312353384 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.315785009 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.313622266 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.312789831 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.316579393 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.312221745 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.313725714 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.312735762 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.309825442 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.313323259 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.313283922 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.312515998 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.314891002 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.314770861 seconds)
  done (took 73.369917725 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313632617 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.315382368 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.313540072 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.316244779 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.314551118 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.310994074 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.314547424 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.31375796 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309922567 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.313853472 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.312485248 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.319011109 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310485576 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.317501382 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.315832088 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315568475 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.315287737 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.312691618 seconds)
  done (took 24.875990526 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.312975643 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.31659903 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.318505287 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.313802482 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.314534517 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.31774508 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.316248004 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.31696085 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313825678 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.314196807 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313060696 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.318105102 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317440781 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.319307729 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.313784846 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314462412 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.318946643 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314227857 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.312153507 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314126778 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.317715954 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.317726519 seconds)
  done (took 30.166635411 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.313182073 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.313739707 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.314255082 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.33495705 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.337527585 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.316784807 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.315354646 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.315297542 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.340869702 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.371480883 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.367384078 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.338378051 seconds)
  done (took 17.200165341 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31589972 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319223254 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315979151 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316659547 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319307314 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317264118 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31640419 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31523833 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318629388 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318496436 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315523285 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321382904 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319827096 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319728304 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319441605 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319244342 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318056672 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317503999 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317385943 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32127422 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319198887 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321435667 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31858501 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31782903 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316011531 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319395085 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320899103 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316820167 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317736665 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320352573 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31811306 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316226732 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320666016 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316851576 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321079404 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320260472 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316184221 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322002808 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321336216 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317113064 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.32286895 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319503118 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320848815 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317255458 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320424281 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318331185 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317836748 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318661013 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318287004 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32364161 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319588117 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318888039 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321310351 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323191539 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320272497 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322436776 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321691097 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320823853 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324218687 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319713361 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318481447 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3223506 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318418566 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319507554 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320539464 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321486071 seconds)
  done (took 88.292477632 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319812962 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.317257168 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320729227 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321281027 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317741038 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321924362 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32054626 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318841798 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319559713 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318564761 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320468229 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320928724 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322593081 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32017686 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319631526 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319267851 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318024463 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320068466 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322043188 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321664904 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321211384 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319854341 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320979396 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321380001 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319455901 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324563553 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32347557 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318496354 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320737967 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320598769 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319672914 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320670445 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320815798 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.322088125 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321893348 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320969816 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321020763 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321911773 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322633475 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32483737 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323484895 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322952753 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321452898 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319810014 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323491329 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324411995 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323441979 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324559512 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322947054 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320472732 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323510294 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322264273 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322430431 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32453747 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322049561 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322681655 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322663435 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324033832 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320283293 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328720372 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32236293 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321850322 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32853927 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324052631 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325148672 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323351793 seconds)
  done (took 88.461991831 seconds)
done (took 1781.149571887 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.492654652 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.441484061 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.322924382 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.339089884 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.320367017 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.347630148 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.336068271 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.323263184 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.325827644 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.3255964 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.324892306 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.543373807 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.31677811 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.32164175 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.32442439 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.420463344 seconds)
  done (took 27.057782493 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.358177243 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.333929339 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.461693057 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.349790153 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.358247277 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.546892183 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.386792298 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.333782804 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.529956709 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.378193014 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.328611525 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.3547739 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.332073151 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.328269405 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.349665783 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.544521281 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.605603863 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.32625025 seconds)
  done (took 29.438507631 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.855183859 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.334735633 seconds)
  done (took 5.424576542 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.355386298 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.330145439 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.332508558 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.327694532 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.321484615 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.337336438 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.33032156 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.326422391 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.324276437 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.480770294 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.330051735 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.342554479 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.354544291 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.335188134 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.330756794 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.376854206 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.506517013 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.329196134 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.331124686 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.336093502 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.332069482 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.455866128 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.38166425 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.331695313 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.47495978 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.329238363 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.33699998 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.340614756 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.508668455 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.332285485 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.334319204 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.334227459 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.333622225 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.296369179 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.814471431 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.325134575 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.356902223 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.341387684 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.331907574 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.509635007 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.333355508 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.338854499 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.326721153 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.779590076 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.480660017 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.46789581 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.342039054 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.336929698 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.338108492 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.401309606 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.336404109 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.335809503 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.383822005 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.225119695 seconds)
  done (took 85.518510475 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.327775874 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.324457899 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.514242326 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.350913464 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.323607564 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.327628317 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.322857116 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.677088796 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.354678388 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.323911606 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.647875247 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.92666401 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.347790087 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.375193289 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.220257267 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.388771013 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.328003563 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.343010414 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.325235035 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.322635185 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.910728573 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.326186838 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.345908675 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.552989184 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.368239738 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.897804226 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.344229716 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.324561992 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.326751989 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.326072295 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.902270539 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.351534256 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.412571313 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.327708078 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.628054462 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.759606617 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.715943334 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.334830565 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.375172834 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.329927215 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.355949552 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.8766642 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.765220075 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.330342819 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.326173406 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.913327975 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.3324329 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.33692195 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.334890637 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.580670654 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.331575613 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.33040989 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.350530977 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.328186401 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.33000692 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.398453448 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.403968553 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.926944538 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.332957725 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.34227374 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.359155826 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.329773691 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.331930357 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.327198277 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.329616081 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.770215689 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.476769264 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.334570441 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.767593919 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.902613604 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.352101128 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.963869452 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.352579713 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.348508948 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.474185368 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.336199798 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.327505578 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.908072232 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.3630933 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.328529173 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.720703731 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.334878891 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.647791755 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.361879643 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.330217116 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.922581058 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.33781038 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.384708384 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.331704017 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.32945677 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.330388122 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.337375499 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.665239134 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.381153018 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.333544216 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.332297769 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.345294125 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.334760699 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.329274025 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.335257885 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.950418067 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.354849615 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.333524121 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.336926828 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.333330504 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.331613805 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.331034834 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.331854356 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.603766189 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.33691023 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.357759423 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.335309884 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.339533723 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.339987692 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.564701356 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.332631418 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.689814495 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.334194107 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.331757211 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.342823943 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.331306938 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.383825658 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.333935162 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.333405393 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.266144766 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.634252146 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.357414285 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.332494131 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.335999625 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.332592488 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.333873055 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.334127911 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.374530475 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.336650636 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.146384936 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.369697913 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.348288656 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.333452566 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.340003051 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.332581252 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.361778607 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.337198196 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.64664483 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.648470322 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.48054172 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.341756169 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.334197386 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.141411584 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.401958214 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52027865 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.360193823 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.334444211 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.588890913 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.570622641 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.336628248 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.334208436 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.333927867 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.599793285 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.340545569 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.654946478 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.941946337 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.357900747 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.339016087 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.140584603 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.089475147 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.334689757 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.339348018 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.656731301 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.355985746 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.337374142 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.337246531 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.337441027 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.338124944 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.340469028 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.335695899 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.337030136 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.336702261 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.435918426 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.536236233 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.359258365 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.344166472 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.902616553 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.349793706 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.334443692 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.358013155 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.340211712 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.3374746 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.398558904 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.338759602 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.376519262 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.33506881 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.34085028 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.949625948 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.336939789 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.33899476 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.536218363 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.084451102 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.359046478 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.338722341 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.358111418 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.243135254 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.93098522 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.376912304 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.725442338 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.350437575 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.381957252 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.344440089 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.376408812 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.932475643 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.338239288 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.360881154 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.060505444 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.362664079 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.186262642 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.337772154 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.340254574 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.008199187 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.361558055 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.340741935 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.336470035 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.351142505 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.64014438 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.344618828 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.365680343 seconds)
  done (took 501.334435095 seconds)
done (took 650.002751907 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.340065665 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.34738723 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.331211741 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.348412534 seconds)
  done (took 10.617400333 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.352479375 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.348647289 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.363119215 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.347612895 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.35352665 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.348688849 seconds)
  done (took 9.36874135 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.342279048 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.347903242 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.348603993 seconds)
  done (took 8.292431147 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.59016978 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.36632509 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.728851744 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.365487231 seconds)
  done (took 9.305951848 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.358678347 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.359541678 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.36157754 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.355439211 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.354230355 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.357037042 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.353930844 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.355743119 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.356007232 seconds)
  done (took 13.464278077 seconds)
done (took 52.297301764 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.330133996 seconds)
    (2/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.48960466 seconds)
    (3/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.370524415 seconds)
    (4/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.33347617 seconds)
    (5/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.335856192 seconds)
    (6/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.345318011 seconds)
    (7/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.958092875 seconds)
    (8/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.343353984 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.614801277 seconds)
    (10/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.350117547 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.385144549 seconds)
    (12/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.285647834 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.37532686 seconds)
    (14/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.361050226 seconds)
    (15/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.339713602 seconds)
    (16/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.429712972 seconds)
    (17/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.35176176 seconds)
    (18/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.371841144 seconds)
    (19/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.334132031 seconds)
    (20/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.330919021 seconds)
    (21/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.357167742 seconds)
    (22/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.4659875 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.352251934 seconds)
    (24/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.332038311 seconds)
    (25/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.765381587 seconds)
    (26/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.335867079 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.374375881 seconds)
    (28/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.344891034 seconds)
    (29/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.374064868 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 2.347149637 seconds)
    (31/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.743203469 seconds)
    (32/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.356528301 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.455701361 seconds)
    (34/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.342116066 seconds)
    (35/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.347796223 seconds)
    (36/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.33245549 seconds)
    (37/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.538699055 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.703233974 seconds)
    (39/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.374950906 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.295099149 seconds)
    (41/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.332656377 seconds)
    (42/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.331613928 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.333158276 seconds)
    (44/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.138571324 seconds)
    (45/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.884058324 seconds)
    (46/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.343593484 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.547955655 seconds)
    (48/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.350045605 seconds)
    (49/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.417766413 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.617145403 seconds)
    (51/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.361706846 seconds)
    (52/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.332123849 seconds)
    (53/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.36535234 seconds)
    (54/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.407866107 seconds)
    (55/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.540472573 seconds)
    (56/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.476596193 seconds)
    (57/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.434414799 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.034373875 seconds)
    (59/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.333604303 seconds)
    (60/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.638674301 seconds)
    (61/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.376266389 seconds)
    (62/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.350636652 seconds)
    (63/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.598699745 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.994592546 seconds)
    (65/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.332728551 seconds)
    (66/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.375949696 seconds)
    (67/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.528848666 seconds)
    (68/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.339251331 seconds)
    (69/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.547931695 seconds)
    (70/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.353779556 seconds)
    (71/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.457250886 seconds)
    (72/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.352515146 seconds)
    (73/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.357527969 seconds)
    (74/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.982407103 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.784637333 seconds)
    (76/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.373384062 seconds)
    (77/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.531941195 seconds)
    (78/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.019441506 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 2.354241002 seconds)
    (80/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.296953891 seconds)
    (81/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.139294593 seconds)
    (82/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.482384871 seconds)
    (83/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.227137314 seconds)
    (84/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.409875645 seconds)
    (85/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.313055757 seconds)
    (86/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.336490422 seconds)
    (87/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.224115182 seconds)
    (88/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.355200489 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.375691472 seconds)
    (90/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.349733478 seconds)
    (91/286) benchmarking ("sort", Float32, false)...
    done (took 2.367301609 seconds)
    (92/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.451750825 seconds)
    (93/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.367411274 seconds)
    (94/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.357385193 seconds)
    (95/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.368032027 seconds)
    (96/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.340362315 seconds)
    (97/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.348737691 seconds)
    (98/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.247746373 seconds)
    (99/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.217372041 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.572808296 seconds)
    (101/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.339395851 seconds)
    (102/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.997518425 seconds)
    (103/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.07882129 seconds)
    (104/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.559989912 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.713481713 seconds)
    (106/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.474999953 seconds)
    (107/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.339867259 seconds)
    (108/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.338312422 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.773703868 seconds)
    (110/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.360592071 seconds)
    (111/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.751080965 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 1.903205933 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.378424876 seconds)
    (114/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.342090747 seconds)
    (115/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.34525778 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.307945636 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.628291498 seconds)
    (118/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.441337307 seconds)
    (119/286) benchmarking ("sort", Int8, true)...
    done (took 2.354477998 seconds)
    (120/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.381310694 seconds)
    (121/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.22760923 seconds)
    (122/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.621501195 seconds)
    (123/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.085390701 seconds)
    (124/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.368175023 seconds)
    (125/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.346440525 seconds)
    (126/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.464637946 seconds)
    (127/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.440394413 seconds)
    (128/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.354902444 seconds)
    (129/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.338849364 seconds)
    (130/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.203787538 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.256158551 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.380792903 seconds)
    (133/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.682458405 seconds)
    (134/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.343776185 seconds)
    (135/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.341926108 seconds)
    (136/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.363331701 seconds)
    (137/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.378373628 seconds)
    (138/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.94279986 seconds)
    (139/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.373864891 seconds)
    (140/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.482999376 seconds)
    (141/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.340510872 seconds)
    (142/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.400634822 seconds)
    (143/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.341371617 seconds)
    (144/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.371199681 seconds)
    (145/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.342642067 seconds)
    (146/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.339830464 seconds)
    (147/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.366030573 seconds)
    (148/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.344661157 seconds)
    (149/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.371932672 seconds)
    (150/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.344144296 seconds)
    (151/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.36535637 seconds)
    (152/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.360708765 seconds)
    (153/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.416473402 seconds)
    (154/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.355018396 seconds)
    (155/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.443557778 seconds)
    (156/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.355856794 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.050630882 seconds)
    (158/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.440677856 seconds)
    (159/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.397839925 seconds)
    (160/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.420644194 seconds)
    (161/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.372812272 seconds)
    (162/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.340518233 seconds)
    (163/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.346415274 seconds)
    (164/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.384870842 seconds)
    (165/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.38924982 seconds)
    (166/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.35073971 seconds)
    (167/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.379663499 seconds)
    (168/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.302633152 seconds)
    (169/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.346870106 seconds)
    (170/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.396488619 seconds)
    (171/286) benchmarking ("sort", BigInt, false)...
    done (took 2.35766943 seconds)
    (172/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.482371309 seconds)
    (173/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.345171498 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.416600484 seconds)
    (175/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.447618575 seconds)
    (176/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.36010877 seconds)
    (177/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.376269749 seconds)
    (178/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.765386365 seconds)
    (179/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.382685541 seconds)
    (180/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.383671219 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.358646512 seconds)
    (182/286) benchmarking ("sort", BigInt, true)...
    done (took 2.403357667 seconds)
    (183/286) benchmarking ("sort", Float64, false)...
    done (took 2.359377565 seconds)
    (184/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.444414422 seconds)
    (185/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.359988831 seconds)
    (186/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.38758423 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 2.358816869 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.433691174 seconds)
    (189/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.348675531 seconds)
    (190/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.349225511 seconds)
    (191/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.349117281 seconds)
    (192/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.358814183 seconds)
    (193/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.687414122 seconds)
    (194/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.361688146 seconds)
    (195/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.25601446 seconds)
    (196/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.364200053 seconds)
    (197/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.386680737 seconds)
    (198/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.357893622 seconds)
    (199/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.355598277 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.361369572 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.566796025 seconds)
    (202/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.370382309 seconds)
    (203/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.364488827 seconds)
    (204/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.349580911 seconds)
    (205/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.36372267 seconds)
    (206/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.297252154 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.38393012 seconds)
    (208/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.449643071 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.36140221 seconds)
    (210/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.349644876 seconds)
    (211/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.0904148 seconds)
    (212/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.465360398 seconds)
    (213/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.349208257 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.422848238 seconds)
    (215/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.361376297 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.813293092 seconds)
    (217/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.405645035 seconds)
    (218/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.477005649 seconds)
    (219/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.349839657 seconds)
    (220/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.369495922 seconds)
    (221/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.345251947 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.382219352 seconds)
    (223/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.253156372 seconds)
    (224/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.50573629 seconds)
    (225/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.367044953 seconds)
    (226/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.359823709 seconds)
    (227/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.595320877 seconds)
    (228/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.557991698 seconds)
    (229/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.40445187 seconds)
    (230/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.541862861 seconds)
    (231/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.442453222 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.774545089 seconds)
    (233/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.406422331 seconds)
    (234/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.372744624 seconds)
    (235/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.454060948 seconds)
    (236/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.348989278 seconds)
    (237/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.355221931 seconds)
    (238/286) benchmarking ("sort", Int8, false)...
    done (took 2.358042516 seconds)
    (239/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.792040397 seconds)
    (240/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.360960002 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.360213128 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.747128592 seconds)
    (243/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.358628916 seconds)
    (244/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.365749016 seconds)
    (245/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.351958504 seconds)
    (246/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.358647652 seconds)
    (247/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.543757903 seconds)
    (248/286) benchmarking ("sort", Float32, true)...
    done (took 2.362813529 seconds)
    (249/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.24311814 seconds)
    (250/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.365686475 seconds)
    (251/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.259258255 seconds)
    (252/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.407827318 seconds)
    (253/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.355024052 seconds)
    (254/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.131627776 seconds)
    (255/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.373517893 seconds)
    (256/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.388781271 seconds)
    (257/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.914146963 seconds)
    (258/286) benchmarking ("sort", Float64, true)...
    done (took 2.360196235 seconds)
    (259/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.387862895 seconds)
    (260/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.350633892 seconds)
    (261/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.352072335 seconds)
    (262/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.395958375 seconds)
    (263/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.355855321 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.469548364 seconds)
    (265/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.33731471 seconds)
    (266/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.363663036 seconds)
    (267/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.432623885 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.455185826 seconds)
    (269/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.469598337 seconds)
    (270/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.354741329 seconds)
    (271/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.371493337 seconds)
    (272/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.480244303 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.536042127 seconds)
    (274/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.224323657 seconds)
    (275/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.432012367 seconds)
    (276/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.36218357 seconds)
    (277/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.371489171 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.405874982 seconds)
    (279/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.350345977 seconds)
    (280/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.387861426 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.387385346 seconds)
    (282/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.377244885 seconds)
    (283/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.396297005 seconds)
    (284/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.769053573 seconds)
    (285/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.360047502 seconds)
    (286/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.354379766 seconds)
  done (took 578.268156363 seconds)
done (took 579.523424932 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.408489465 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.425882026 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.378688215 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.409898609 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.491172148 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.554485588 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.387024062 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.415908229 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.424875491 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.425818861 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.383560436 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.553576971 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.379626358 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.375286652 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.374648316 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.418580248 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.375096782 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.378640564 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.392563232 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.411267909 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.395298067 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.383353307 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.427108027 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.554021873 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.38131723 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.382140837 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.381366414 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.399604303 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.493758736 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.38117935 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.382626996 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.393909797 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.374585638 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.386845222 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.374676033 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.403352102 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.389272547 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.388642853 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.414749647 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.493780953 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.3773258 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.38191599 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.381371935 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.377721087 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.38019748 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.417859526 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.380928559 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.438237814 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.421334184 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.420406345 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.367145934 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.393497441 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.387602019 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.380765389 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.392463792 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.381099655 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.43847966 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.427040602 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.398641495 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.425971729 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.370535712 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.385943179 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.421375228 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.396866518 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.39135314 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.369735607 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.377159024 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.421693184 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.377113302 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.381378497 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.370434496 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.392111228 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.38231147 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.394694705 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.415150032 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.381307645 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.377963346 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.380096173 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.394158055 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.379769346 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.429060348 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.422766823 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.430424012 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.38381068 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.424583969 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.557643947 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.392583957 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.382780862 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.41603761 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.401911441 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.39511806 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.392014649 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.417859711 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.384140638 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.428866199 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.442475394 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.393987153 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.392022883 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.434193642 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.396187355 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.380296328 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.425909644 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.378831575 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.380108312 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.386498159 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.508168234 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.381694728 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.38085771 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.415742912 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.432285743 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.443913981 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.372394218 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.395867988 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.429613833 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.390315915 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.447561415 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.38684404 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.375243379 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.375178332 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.504723758 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.387414197 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.392865033 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.431090003 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.443406525 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.386658582 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.386196503 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.388610529 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.427449269 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.506481634 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.395867428 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.49996762 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.383202822 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.389708238 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.42072991 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.433571953 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.421730831 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.445100507 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.431565084 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.4002859 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.38565556 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.398118216 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.39382431 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.386931123 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.444514337 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.383338584 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.419737228 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.427199628 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.429420684 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.418339107 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.506452722 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.39179907 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.378587193 seconds)
done (took 231.401778618 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.444432694 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.380773864 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.494008449 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.383465348 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.48845198 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.491488041 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.378799748 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.382228889 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.379732682 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.761297425 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.381429392 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.382406549 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.385701175 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.380069288 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.468754461 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.384316437 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.380499163 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.725106276 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.385468722 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.453517444 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.381558928 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.384139278 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.388399506 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.774866669 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.381481884 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.377694642 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.456220796 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.386964359 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.732465179 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.38150959 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.380414119 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.731898377 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.47881853 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.400774609 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.396088251 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.391465823 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.491749597 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.405865452 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.465923726 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.467564695 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.495190466 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.421803472 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.377871843 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.380090437 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.384178902 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.388906288 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.379947475 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.412508868 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.386588931 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.381822893 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.727593044 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.394171768 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.390726815 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.382301544 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.385513971 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.406145525 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.382424531 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.388211781 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.47757267 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.386074571 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.447762033 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.773470503 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.765235139 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.385081174 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.384599896 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.382449171 seconds)
  done (took 107.920975281 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.45382405 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.460292249 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.513318463 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.390604576 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.437703186 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.514806565 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.390434317 seconds)
  done (took 11.445795134 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.389489148 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.383363912 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.436624362 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.433948894 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.387791801 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.601018332 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.384616879 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.396721335 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.385057421 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.464038693 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.399374994 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.388114227 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.395621524 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.384150436 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.433801008 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.397827859 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.501098641 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.386068575 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.386940992 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.541013625 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.385381785 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.394070427 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.468060602 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.398717717 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.401167859 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.396455836 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.343252816 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.3878349 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.383753604 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.38747667 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.385250363 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.500516327 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.388717503 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.389803433 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.38573422 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.549608629 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.388239575 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.382830309 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.38960696 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.387292648 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.389195971 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.389065323 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.390604022 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.387654109 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.389536779 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.412373078 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.389674799 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.388640609 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.38903893 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.391632926 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.46571124 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.389691375 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.385949141 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.386503612 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.468260162 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.39601405 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.390882284 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.390924107 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.393987495 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.386538618 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.544030421 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.437982557 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.386697819 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.43615814 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.390251846 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.390569413 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.390695245 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.392820724 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.481190245 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.391168219 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.438723157 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.389869072 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.620249315 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.413659726 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.394700405 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.393818668 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.394493272 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.392675209 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.387275282 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.401021571 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.389096117 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.391677123 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.397249515 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.389133918 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.389900464 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.576133585 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.548028575 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.391861797 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.404827761 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.399622022 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.390065398 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.468735073 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.391142286 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.389030019 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.445287531 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.507061059 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.472171942 seconds)
  done (took 143.640674861 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.394232132 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.399993233 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.395785325 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.414469195 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.39322981 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.3930349 seconds)
  done (took 9.678956675 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.394995176 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.395353007 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.394868117 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.39165195 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.392779751 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.404363385 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.40211152 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.395569163 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.397879714 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.391903606 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.40571763 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.396983777 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.397139355 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.394691882 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.404682324 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.392353968 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.405675549 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.389809638 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.395165731 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.396302416 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.391634905 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.395600429 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.396227152 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.395923239 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.411175109 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.394866791 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.404083703 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.396869142 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.396579747 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.403346996 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.416826482 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.403960361 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.392239053 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.40334036 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.413454653 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.394282658 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.400581019 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.399672796 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.392573127 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.413095696 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.39823543 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.397818072 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.397307837 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.398164282 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.397402321 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.402264266 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.404556376 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.400868916 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.406888665 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.397610712 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.397358704 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.396156318 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.412165444 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.400448531 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.400849349 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.422064223 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.403649713 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.412562906 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.394395695 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.398240179 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.39905853 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.409390809 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.398796984 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.418259321 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.398301334 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.401975984 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.400371833 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.404376586 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399192908 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.397658506 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.400649244 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.39797054 seconds)
  done (took 103.112760519 seconds)
done (took 377.080559598 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.444767936 seconds)
  done (took 3.739155473 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.634547908 seconds)
  done (took 3.933379843 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.627443686 seconds)
  done (took 25.935632598 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.452832062 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.475752736 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.40332056 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.39617985 seconds)
  done (took 11.022968237 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.766967028 seconds)
  done (took 4.062984241 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.390693994 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.397624285 seconds)
  done (took 6.086982827 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.753524521 seconds)
  done (took 4.046670537 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.887614206 seconds)
  done (took 4.194567674 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.414874939 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.404126489 seconds)
  done (took 6.129149195 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.377487501 seconds)
  done (took 3.673811901 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.746068403 seconds)
  done (took 18.044055169 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.388977414 seconds)
  done (took 3.690235213 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.412970262 seconds)
  done (took 3.710380696 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.592041465 seconds)
  done (took 6.890111854 seconds)
done (took 106.454446958 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.394176795 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.401646241 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.395190972 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.394833632 seconds)
  done (took 10.880773831 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.432681588 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.43603761 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.433695266 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.443892819 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.435654238 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.434579115 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.424570741 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.423495876 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.445677431 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.436671366 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.436281024 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.435938085 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.433875996 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.425406627 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.438189968 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.437546568 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.446616707 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.43638488 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.429007763 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.436978795 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.401128247 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.443540245 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.439562095 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.403829203 seconds)
  done (took 35.69139327 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.919259919 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.472083471 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.552728989 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.451498885 seconds)
  done (took 7.693892004 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.471674173 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.470847056 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.478638986 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.522674393 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.5447625 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.496997936 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.430101031 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.422837398 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.40787077 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.473740801 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.532306915 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.466231929 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.550745695 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.40180321 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.589474035 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.40279477 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.404445277 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.477825185 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.518389452 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.533083103 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.403096407 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.48397229 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.480155068 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.467294478 seconds)
  done (took 36.734152124 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.401654234 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.419094049 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.402195739 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.402101897 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.410530207 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.401461387 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.403545375 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.404255905 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.402006331 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.97021715 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.404468317 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.414766775 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.944578093 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.403973614 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.412288713 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.405557086 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.963181033 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.951001045 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.407311635 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.409699007 seconds)
  done (took 31.63442308 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.397090122 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.395569589 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.74777615 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.667730709 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.395931632 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.397553569 seconds)
  done (took 14.302495739 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.493661076 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.65595355 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.403751707 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.862641202 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.921536278 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.409175923 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.406130043 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.698491745 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.084319653 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.104661286 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.480971341 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.489153473 seconds)
  done (took 21.315678844 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.396584105 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.40162801 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.413627463 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.420057908 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.470996424 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.410229754 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.412920966 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.398043865 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.477366492 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.485849377 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.412744875 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.47795976 seconds)
  done (took 22.483602055 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495444096 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399734721 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.414177601 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528210465 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398537391 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.251257012 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.535926367 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.245440364 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.428427822 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67412501 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404290118 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503558688 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.656299187 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404255726 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399292975 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.385203043 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629855705 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970221488 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401945407 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401196565 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431443966 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412437333 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400201495 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.668801136 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402974642 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400050631 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.66420918 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401068374 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.744217206 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417743404 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412231908 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404368098 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67705641 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174712682 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529712964 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668031689 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436198313 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.407080999 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.416228017 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.401135326 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406620935 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40523392 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41243519 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403878567 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402643714 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410676561 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249865235 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.433430545 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.402127282 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405851882 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.720305583 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506469646 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.409617471 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403699081 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538379673 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399268163 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.409278104 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.401613309 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009247335 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407625954 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414974279 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.40153439 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.435332592 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409499858 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129924977 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.40772865 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.407124042 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409178232 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405910863 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403234315 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418510646 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403181599 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.426803606 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406859021 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214032601 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.418838194 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409665814 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035853877 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410886952 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.40396233 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640824654 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405312723 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405010359 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.405142589 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406614634 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.229129512 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414441911 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.391884638 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.405338303 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.279981896 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.696449939 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428100476 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43618383 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.633475258 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.390385284 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405487067 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.413998635 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412510554 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427121279 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.249978431 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428317447 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.407690864 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667514794 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.620767681 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407644121 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.401321767 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992005468 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443721288 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.420475724 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.415097569 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.678754706 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.090343033 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.424752523 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406700485 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428662241 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40781555 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266631268 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409552372 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.513055301 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413928245 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73586263 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.324878702 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407504745 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477272508 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413906031 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40799296 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413550482 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410382281 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411187848 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.667479802 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433302025 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.426957209 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.42097356 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409720308 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.4191643 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406727623 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.411452388 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.635381756 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418085149 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686261898 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410730726 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406621882 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409156071 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.633902024 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.427701819 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.74448631 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675672656 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41013404 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.455774227 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423399769 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43007283 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518261287 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43488754 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.413553914 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.670085914 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.414361204 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.415523918 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418204809 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411463116 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418945016 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.416455134 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451601319 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094530438 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384837221 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.417665436 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.305399729 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.426391934 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47983576 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.418753532 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.6776376 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.422891251 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467491629 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.42073485 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.414790409 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636945655 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422719713 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.418746762 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489000167 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.000226651 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.121874595 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425165973 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.413111292 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.410220613 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.409374412 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412488613 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41215395 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414932981 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.680390492 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.431607504 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.470507528 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.09609146 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413633317 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418372794 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.417007765 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.426577879 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.417399773 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416435082 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.419113724 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416587596 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417193202 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.428341695 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559891434 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.426628587 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411188112 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.931837872 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420997521 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414948827 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411952536 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448654826 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422726292 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304552109 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675957267 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448993982 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733619301 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421927643 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.429375184 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.413824033 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414633757 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442523672 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.427822214 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440515469 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.428448893 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422338589 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416329274 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005996156 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259044119 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046929952 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419596966 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.444600494 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420980027 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.266642494 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439833459 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413563416 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703659717 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.271192071 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442595958 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008383264 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.435480825 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.311863706 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.733154305 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649324404 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41509278 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.442037741 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.736524901 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630460758 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449168855 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421143108 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420479616 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.399603814 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049769533 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.449160821 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.49381203 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27588637 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43912072 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41686162 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.430038865 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.438234567 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926145676 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438679907 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418575196 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422693686 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.435447387 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316430181 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424950113 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415999878 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141745096 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.436097016 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.008654555 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442964075 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.689906259 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.434465135 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.421790465 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.424117997 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.422649962 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.673484068 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.739459513 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422108753 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.436240253 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056798413 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.28835283 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.426041546 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418408298 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288184802 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424785817 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.765845321 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.430682201 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.433648955 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424953055 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420214256 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422363112 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.420689701 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.427607783 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393857574 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992669304 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.4591062 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43566419 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434171068 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424360009 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.678310034 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.435329393 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.106789917 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65215809 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459468372 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448409976 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.425204387 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437858787 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.41094408 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.4231399 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.423703563 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56644662 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.647112518 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.419468309 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.409997075 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.531851637 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.635339542 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422860057 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.423326841 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725129024 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.423191802 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.443018356 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26834493 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454317743 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442417559 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429669632 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468817571 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.427693154 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499301595 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6953342 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.439482711 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.435198256 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930998458 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455346106 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431385517 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.439866224 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524611665 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435517121 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.440516282 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.199444973 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113252399 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275856539 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.112475543 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.742490385 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.424963214 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435884352 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424292885 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583243049 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423097176 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698764245 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423191556 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.469870075 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449668373 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423529905 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439127957 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638542532 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695423906 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420807532 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424006918 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428189575 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.423130811 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.435355295 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.635669145 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004858388 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075851791 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427334348 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.435890383 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.278427912 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.724498655 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424507126 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425599873 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42480914 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.452455995 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.447119157 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.436471744 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427801733 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57220325 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744473344 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207624726 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.462098831 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.451753259 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.200331142 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427539621 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.694234723 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42322018 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.698148379 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117465858 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.304609313 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69689304 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494955086 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697670317 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.429919325 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590174009 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.428272034 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.428389201 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426443324 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428987752 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.423080743 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.436925147 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123219505 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69355477 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.430049087 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.427112086 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461017376 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.436724279 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.654182682 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.266052904 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.653636566 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.437063754 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.431515996 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.426881329 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12102567 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.767936315 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430102664 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.432814355 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.731493392 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434626414 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452358373 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.882456761 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.425072203 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073439943 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.404865629 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450397184 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443323004 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.297214886 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125182446 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.42944324 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035429988 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434091398 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429415591 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709786647 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.439117064 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.440144127 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710613831 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.432812111 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.431464554 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.708471218 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.123445101 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.377426961 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.455090974 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452783205 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.436638876 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429363081 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.568892613 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429294701 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436447878 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.964451595 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.457058006 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431570835 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441603147 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.433881902 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447413205 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.431297731 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43306543 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.43724655 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.420427085 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.420297213 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.445451058 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.434212106 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108073836 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459190438 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.11019822 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.759033325 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.688186985 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.432395258 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.422798041 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.438740749 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431535696 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432299583 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433914047 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.434509798 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111251975 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.435613236 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.448201255 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.436146963 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.651234856 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643809174 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.45143081 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.711312526 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440511266 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453313266 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.419889844 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434440656 seconds)
  done (took 1009.509253994 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.480549569 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.458832923 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.464388352 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.511090391 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.482210473 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.45324603 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.504997242 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.573426127 seconds)
  done (took 21.264042155 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.439121472 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.443535187 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.432957516 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.440352747 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.439396834 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.018158496 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.457968646 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.444478783 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.447231927 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.438593279 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.432987976 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.223678435 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.46309107 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.447854643 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.442284611 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.440652062 seconds)
  done (took 33.799227682 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.890641801 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.757868731 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.298918208 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.475920987 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.497091722 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.441982174 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.899796457 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.469000429 seconds)
  done (took 29.069175292 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.44968558 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.448509022 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.444192359 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.449325704 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.447066775 seconds)
  done (took 8.576883644 seconds)
done (took 1284.253107455 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.441510354 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.442577855 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.442135538 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.442494993 seconds)
  done (took 7.103404505 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.425166068 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.423708352 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.426975479 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.440855275 seconds)
  done (took 10.054633238 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.337991195 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.236895246 seconds)
  done (took 5.914421897 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.439217024 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.200985104 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.174887974 seconds)
  done (took 8.155971933 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.751233118 seconds)
  done (took 3.089371504 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.864725595 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.82809378 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.637623867 seconds)
  done (took 6.669961858 seconds)
done (took 42.325214158 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.455482737 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.785434566 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.596007414 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.435435948 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.627738365 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.595928522 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.20136888 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.446533613 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.436574226 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.450641148 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.437381658 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.599262844 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.181456827 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.786497707 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.184017523 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.694277721 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.600508521 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.44183035 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.437059066 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.448822383 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.19949921 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.438116721 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.450146204 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.442117772 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.598623127 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.584005798 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.443672191 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.691924825 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.436937176 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.451020872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.588089214 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.451307777 seconds)
  done (took 84.955339577 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.442747058 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.457191545 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.461198089 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.455349497 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.443720477 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.439396169 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.467213064 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.436835344 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.457374465 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.456776011 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.435491942 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.440068805 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.454688304 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.438837464 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.437878554 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.457791147 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.443290826 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.440772782 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.438547632 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.438037925 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.452259176 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.439084695 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.457503397 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.437483835 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.440697669 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.442134409 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.459563556 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.436575918 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.438744109 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.442051788 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.442694301 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.472010758 seconds)
  done (took 79.643776783 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.442458651 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.456540509 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.446799846 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.43903935 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.454696026 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.44750747 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.440050618 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.439337051 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.449455352 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.447495346 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.437421339 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.445999024 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.440880125 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.442612202 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.441086824 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.442566441 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.441306116 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.442232529 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.450568462 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.439295031 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.463243028 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.45496199 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.443010516 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.4710561 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.442459023 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.443475379 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.467989124 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.441043114 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.460634917 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.464500939 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.443314681 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.465703016 seconds)
  done (took 79.692018937 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.726464796 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.451568747 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.452701633 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.432539888 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.453551637 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.453050434 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.445976364 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.727806342 seconds)
  done (took 15.48848994 seconds)
done (took 261.115760048 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.458649622 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.460410851 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.68356246 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.475971011 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.458879822 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.474897617 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.474438377 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.698986698 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.461993706 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.702685613 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.480155258 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.470038336 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.450380314 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.469750085 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.758678263 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.613669815 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.426700493 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.445001824 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.860526856 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.464082461 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.744506541 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.443072729 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.757633417 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.443573594 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.455501192 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.443399566 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.45210979 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.406456629 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.491823247 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.840836883 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.466960347 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.448397234 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.546997865 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.573572193 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.687395068 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.62639581 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.445882163 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.545020267 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.69149466 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.449560316 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.448123987 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.284003819 seconds)
  done (took 86.825956793 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.453210763 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.576244787 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.4523818 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.455431751 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.454833568 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.576233636 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.547483594 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.453397868 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.454627948 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.455348604 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.454298629 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.453637401 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.455891906 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.455643908 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.454714341 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.45601834 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.455703176 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.469205956 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.468726386 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.50157101 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.575412583 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.484407317 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.451155888 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.452441476 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.557112201 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.596641737 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.454014735 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.451131682 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.499002643 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.455285962 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.461179148 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.500807103 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.457205943 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.454881385 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.572543958 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.55472467 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.469363836 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.456756761 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.573136909 seconds)
  done (took 59.332051766 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.458365118 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.731712437 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.950807863 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.465461869 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.458408027 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.461210276 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.556547747 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.462010954 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.462389216 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.458952494 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.624507345 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.456734652 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.493662322 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.989957555 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.466045851 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.458639693 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.459013218 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.461030057 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.746572072 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.466489337 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.582133376 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.460682782 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.559891457 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.471140751 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.481258555 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.458046381 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.463809433 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.037702937 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.461749913 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.631830589 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.450398851 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.553195452 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.992673782 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.952816943 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.449591763 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.466922512 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.461521607 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.637498367 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.4631552 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.460915878 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.552499253 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.460345432 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.956474757 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.14996729 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.482258418 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.461353487 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.066246921 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.630721159 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.757536411 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.468240115 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.989988996 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.460807196 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.464025627 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.463179903 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.761628479 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.467502002 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.461392882 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.080896017 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.484326886 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.55504649 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.461133539 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.461003967 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.748915898 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.460607878 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.737003506 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.462283896 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.468620513 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.485111804 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.954567502 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.462122279 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.188418061 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.484007767 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.462719198 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.633864897 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.737336059 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.105779247 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.465305479 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.753125688 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.00301714 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.555955375 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.469942266 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.071717831 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.560583282 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.468446945 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.466658617 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.464578019 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.463470798 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.510327054 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.560270153 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.103417772 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.176104732 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.13400336 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.585648992 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.475723595 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.466430947 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.104426871 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.489341937 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.465225238 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.973276817 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.204829276 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.490009355 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.471821385 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.192638139 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.490781573 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.566206911 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.469020201 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.988650967 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.468711435 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.510256226 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.465820757 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.474981845 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.49123598 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.565309138 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.472802263 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.465756906 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.160088092 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.669119907 seconds)
  done (took 193.832738583 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.469244186 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.456060652 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.466036748 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.457457131 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.457997386 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.467748753 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.458890656 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.458817957 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.465808317 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.458589935 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.458221041 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.458912728 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.461899736 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.467128718 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.470627799 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.464836932 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.458638504 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.462843148 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.45889719 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.455456131 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.46270927 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.486310047 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.461208202 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.458014207 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.462685114 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.467693581 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.469099936 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.462892495 seconds)
  done (took 66.325131995 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.467538424 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.148418567 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.46792476 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.622089394 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.491343882 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.466335142 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.623634344 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.535573938 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.467415373 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.463053043 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.467900609 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.834006852 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.466410603 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.090430136 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.704051991 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.628663757 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.08772977 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.489500385 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.467652431 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.465775401 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.629651802 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.482859334 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.833844369 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.149768961 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.468286144 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.149561859 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.459330316 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.470307061 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.467949209 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.150584018 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.465093391 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.837047576 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.559451399 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.538711401 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.15002449 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.09169414 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.109492493 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.669935021 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.471122755 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.469243769 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.468781017 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.461917607 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.152568278 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.470378788 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.471817056 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.151202132 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.488963129 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.472895389 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.478300395 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.469873938 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.544995904 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.544868839 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.838047419 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.156052849 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.568803158 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.483630033 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.641942462 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.904244694 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.475576611 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.095906143 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.459237087 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.158288105 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.491514768 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.462523269 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.470777106 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.476713372 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.655365441 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.64139921 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.10097683 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.488954382 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.097284607 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.6732523 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.471012078 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.472236291 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.472817499 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.162055477 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.152627998 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.677680369 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.631115729 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.709950574 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.459025233 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.472127145 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.467084506 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.567493285 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.471236484 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.164666367 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.116787262 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.492749875 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.477310574 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.4766107 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.475658332 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.692233384 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.160234395 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.565261397 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.094405537 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.861939263 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.843352622 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.473515934 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.548461933 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.489470086 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.846946452 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.474745823 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.543593602 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.974777249 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.849165481 seconds)
  done (took 177.767530749 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.759021549 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.506037362 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.574703398 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.643330446 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.143247955 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.132578553 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.471894644 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.608858508 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.600288665 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.769580086 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.487883529 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.561060635 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.727269159 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.564035615 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.278788196 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.559726463 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.580941064 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.63796642 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.637470123 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.487414042 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.179492188 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.817113324 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.689771657 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.494774108 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.614582839 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.348302407 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.135688938 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.069167359 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.670939838 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.469305647 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.035411704 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.49424573 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.483916171 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.244680602 seconds)
  done (took 68.846074091 seconds)
done (took 654.27446813 seconds)
SAVING RESULT...
DONE!
