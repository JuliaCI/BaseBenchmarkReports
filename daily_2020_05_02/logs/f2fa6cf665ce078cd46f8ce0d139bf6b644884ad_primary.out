cset: moving following pidspec: 5745
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.297410871 seconds)
loading group "string"... done (took 0.623890123 seconds)
loading group "linalg"... done (took 8.097455838 seconds)
loading group "parallel"... done (took 0.170766618 seconds)
loading group "find"... done (took 1.224818393 seconds)
loading group "tuple"... done (took 1.880435906 seconds)
loading group "dates"... done (took 1.333121018 seconds)
loading group "micro"... done (took 0.216756926 seconds)
loading group "io"... done (took 0.988796743 seconds)
loading group "scalar"... done (took 39.979334671 seconds)
loading group "sparse"... done (took 12.261668643 seconds)
loading group "broadcast"... done (took 0.98335002 seconds)
loading group "union"... done (took 13.334087323 seconds)
loading group "simd"... done (took 4.949621437 seconds)
loading group "random"... done (took 9.279327592 seconds)
loading group "problem"... done (took 1.831690649 seconds)
loading group "array"... done (took 21.367162439 seconds)
loading group "misc"... done (took 1.673480262 seconds)
loading group "sort"... done (took 3.484586442 seconds)
loading group "collection"... done (took 18.077492068 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.559106968 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138655253 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146910729 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.134720336 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.164197639 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131199016 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139129459 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098580299 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.908461499 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.164858425 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.128186948 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432693333 seconds)
done (took 5.550415516 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.187276997 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094574729 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095076293 seconds)
  done (took 1.25198099 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.08141961 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144067386 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.083765814 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.083240075 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.083119516 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082713316 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082742485 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.082894527 seconds)
  done (took 1.705651479 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088933406 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.084784197 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08183297 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.084004312 seconds)
  done (took 1.403865354 seconds)
done (took 5.704075773 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.795383205 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.228794612 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202138053 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.425837725 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147826797 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.193425225 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.656044349 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.342724449 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.206359803 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.092219697 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.126978049 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.363344391 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.142983405 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.650997249 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.093687074 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109827615 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158233602 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435949981 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.087014516 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100640769 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10880469 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.147520578 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101611561 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092685947 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169104001 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.086261146 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.158111538 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.101753547 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.084719028 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.234716018 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190972112 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.707165718 seconds)
  done (took 10.84543668 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115412914 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.114517562 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.084852753 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141656737 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.115115198 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085716791 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091556126 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083670423 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106076284 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.144599944 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.108088191 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121299049 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082317989 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083326817 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.097623948 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.223604685 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.096587148 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101857541 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08454294 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.094678307 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123602346 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094329911 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095662988 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095561585 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.144911192 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195596436 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112251793 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113436755 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.08049975 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.0971684 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13314216 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143708061 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.083463041 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080842531 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140677331 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.11100136 seconds)
  done (took 5.12782165 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.000572264 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.165343944 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.106094212 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14769813 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081241184 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.125355454 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082114112 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097032226 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.22200468 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.443985476 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.133042029 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.637933813 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.126093226 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128172424 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.120626308 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084316473 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.0857873 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083806445 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.550127304 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.11585944 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.123450939 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098535104 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087411728 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085442718 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.081258801 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088539795 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083480146 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0855364 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.128382673 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090997158 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.315403306 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.140073398 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085204966 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.952237557 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.183634553 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084056767 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117116386 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.178820597 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105169452 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.155204606 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.222327201 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082609446 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179941004 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084311562 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087721324 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083093447 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101115523 seconds)
    (47/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081709683 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121412091 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136571877 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.081409995 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082776174 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185769055 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081086957 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098506079 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.18282845 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.170358121 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083072129 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.313880321 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.108071993 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088297007 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081783709 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.191641905 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136094706 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084838125 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083885849 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086050812 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084818575 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380635089 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082205539 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.058749601 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08903077 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.093800408 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086377029 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08727051 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09068609 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090510418 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.106251244 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080101094 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083105097 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.089613348 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082370296 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081761852 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083065307 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095267788 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.406279575 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083225603 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.088438522 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081212401 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107314255 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112126068 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083066166 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081819569 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11662023 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084656076 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083253828 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084375909 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.095110584 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086609786 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.229277062 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085325139 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.117205155 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.117727441 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.086324079 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115594721 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080967736 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095171184 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08494451 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.482302013 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081534706 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.089214897 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082508363 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084711558 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.0836813 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094946236 seconds)
  done (took 23.825528567 seconds)
done (took 41.86267596 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.263739785 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081608877 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08201919 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082202285 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082242332 seconds)
  done (took 1.746940282 seconds)
done (took 2.883478995 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.142249913 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115396569 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080527859 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116665656 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080505435 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1169403 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116379269 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092799548 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115525398 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080725177 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113386623 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081354299 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080618235 seconds)
  done (took 2.485001431 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097470653 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098027503 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084530837 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096179898 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080345485 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095901425 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095772882 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102832353 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09515778 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087011153 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077573684 seconds)
  done (took 2.141423613 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095569642 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09775823 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083614197 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095825153 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077367999 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095473949 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095464476 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098718624 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095441399 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087553571 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077326192 seconds)
  done (took 2.125551023 seconds)
done (took 7.875487663 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091032301 seconds)
  done (took 1.207294703 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.544679383 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.629034755 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.093402119 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.115903484 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.20684319 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123086311 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.2529901 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.097811879 seconds)
  done (took 8.351933645 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.120902219 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086894477 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084743193 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084170133 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085252173 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084006823 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08653598 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084801409 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082530246 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086225158 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082359005 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086039163 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083091592 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083528344 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083527629 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084449497 seconds)
  done (took 2.590311764 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.110332358 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109486175 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.087197216 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088949629 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086969747 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.085701255 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088475224 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087198358 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085073653 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.086536764 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089187608 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.087205514 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.085558407 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07826255 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.087688061 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.089669582 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084570485 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.087934455 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.088311205 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089238976 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.088496148 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.077403284 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085678443 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.087315836 seconds)
  done (took 3.346935521 seconds)
done (took 16.623319413 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.12181537 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084431679 seconds)
  done (took 1.326453574 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093895629 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.093914193 seconds)
  done (took 1.316044168 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.093880295 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.078181378 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09999199 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.089403523 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.078988106 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079354053 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.098085892 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079399986 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079050452 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079295809 seconds)
  done (took 1.9836759 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080808473 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.089561203 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.082109563 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093295575 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.08609964 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.077349878 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084816061 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.080347485 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.088818996 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076135198 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.083872171 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.096318609 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083277704 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097946585 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.084384956 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081023353 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.083223502 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.080539025 seconds)
  done (took 2.664555952 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078946178 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080013446 seconds)
  done (took 1.296207784 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07993519 seconds)
    (2/7) benchmarking "second"...
    done (took 0.076952302 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079233946 seconds)
    (4/7) benchmarking "year"...
    done (took 0.079439709 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076899442 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076646861 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.076838066 seconds)
  done (took 1.678721169 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.414531762 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.131417979 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.332643781 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086204721 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.095021148 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.272193806 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.080968126 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085285924 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.085876683 seconds)
  done (took 2.76061999 seconds)
done (took 14.164969193 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096667651 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.101444966 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109725635 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.395884318 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105827772 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.081516684 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.129224884 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193428247 seconds)
done (took 2.360527663 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.22623458 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.828596888 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.496904759 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.221058823 seconds)
  done (took 2.68870583 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.353737301 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.101741572 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073494038 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081873975 seconds)
  done (took 1.763711015 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083615008 seconds)
    (2/2) benchmarking "read"...
    done (took 0.199044771 seconds)
  done (took 1.428874946 seconds)
done (took 7.254441143 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08132269 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.103764892 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081498951 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080236588 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.078551874 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080763419 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.078469607 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078166629 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080898493 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080374916 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.08038121 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080711463 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080133032 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078537204 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078241622 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080488042 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077953238 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07825461 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078020194 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078001002 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080460859 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080128109 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077914251 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07744187 seconds)
  done (took 3.109416421 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098143885 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.080162868 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084653184 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084119693 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082238787 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084427349 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.084537681 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.080116451 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084533013 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.082514576 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082057118 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082099068 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.081792362 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08203035 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082182753 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.082114937 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.083952841 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07995589 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081751847 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.081812362 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084435194 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080082929 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.081980745 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084844525 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.081949336 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082490598 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081989527 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.080208079 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083693574 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082409968 seconds)
  done (took 3.645591421 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08374037 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07705729 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077834831 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086416172 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076937758 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.07777528 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076632504 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077609221 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07774264 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.076618138 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078733821 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.076504721 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07699428 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077327373 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077640093 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.081300078 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094376162 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076804443 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.076293373 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077302601 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.080881153 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076797579 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.077297137 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079704463 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076743366 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076490474 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.076924549 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076827323 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.077821454 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07669013 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.080901742 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081419258 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.076673067 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08580894 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081877351 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077103002 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082206282 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077085243 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077836271 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076453927 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076921643 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.076892377 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07663046 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085585385 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077576545 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.077936573 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077210004 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078085365 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077517956 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.078904533 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076628439 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.076655244 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078940029 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078805992 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082134949 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076641366 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.077860266 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076781862 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.077751513 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07707383 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.076869443 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077130605 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.081059527 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077776754 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094653251 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085904353 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.076764047 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078462108 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.077567157 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080155909 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.078652645 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092825643 seconds)
  done (took 6.852777021 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101601531 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101592488 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079938936 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.079280023 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075452041 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.077662956 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083368799 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07814523 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079751953 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096640819 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078329443 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079687103 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080299626 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082299093 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078177536 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.080054233 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086282019 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075391074 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077545109 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081694818 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077838245 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082917823 seconds)
  done (took 2.988683997 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.163751735 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083848987 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.118709409 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088583374 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084008405 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088231714 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083865886 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084556538 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084372356 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081529755 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081753364 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084291853 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083704145 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081601536 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081570848 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081577172 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083639668 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081568314 seconds)
  done (took 2.783271218 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09161433 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.081019448 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103032847 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.080487057 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.080887057 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082561468 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084394304 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.087624132 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082587553 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.08084965 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087855672 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082858498 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.082713488 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080377969 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083073441 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080885403 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.082689316 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080610249 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097224341 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084586015 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084110331 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087723447 seconds)
  done (took 3.031456007 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094570341 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08221611 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095251351 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083029693 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075186018 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077688614 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083929885 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079536507 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.083744085 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081727506 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079845913 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07805998 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.082079285 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0798062 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.082013985 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079777246 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082222435 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080476246 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08181939 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075276164 seconds)
  done (took 2.80406091 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098976708 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082119192 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080815579 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087333142 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080671132 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081001208 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087460519 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080803822 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081097063 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101594032 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081659779 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081711962 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087283108 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084751737 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080771657 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087146139 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089870837 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087248588 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080915126 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081142787 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101523922 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081580155 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087629876 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081016887 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080866468 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080876802 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081490497 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085099699 seconds)
  done (took 3.550377811 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081412243 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080558342 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.07804095 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.078109296 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078662141 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077951673 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078158374 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.078330588 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081151649 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078362983 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080581165 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.080301236 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080340932 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.080331165 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080751665 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.080054779 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080434438 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077965192 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078410531 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07824772 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080094366 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080257478 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080308104 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07779131 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078019606 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.080240939 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077962477 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078827374 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080166192 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078287596 seconds)
  done (took 3.550537152 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089167909 seconds)
    (2/2) benchmarking "in"...
    done (took 0.086712008 seconds)
  done (took 1.347332563 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07709013 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094728076 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077087569 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085662803 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084384237 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081550711 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.087047292 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083641713 seconds)
  done (took 1.837310964 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099081905 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.089323569 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.080093305 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.089519857 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.089439834 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099185318 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142006572 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.079704166 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090593012 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080544211 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.096560303 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081488234 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090274793 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084849341 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090023753 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093154773 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.077646835 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.084337994 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.081415866 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.078129994 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080405062 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093097061 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088966964 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.075135226 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08533586 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106901979 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095711915 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.079360215 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0864253 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091891604 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08930985 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.073865401 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.079274577 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.0797519 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078021041 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.088698729 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098174832 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086781607 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09220808 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.079835493 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088119752 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.074720258 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088258884 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090876366 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095176671 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.079798845 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.079726458 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.074889044 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080947848 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086317166 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.075075372 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08478453 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.07449159 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091668128 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087801318 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094810302 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078701746 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085478049 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086253424 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087158031 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090796531 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085488711 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089053997 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.079190399 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095408398 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089234359 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091100914 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074959243 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07448184 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.077713627 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093533577 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107749148 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088814782 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.079808497 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.080098089 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.07720345 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086614748 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079695878 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088391788 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090604412 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.078757513 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083951265 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0911255 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084215813 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085426679 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.085157245 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078223455 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081962743 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.080488483 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099365643 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.078698999 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.077711463 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080547252 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094905387 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088681698 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.079160386 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080649335 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090993628 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.073581106 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.079163875 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.079022955 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08486853 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.090874 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081817839 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082208961 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091116009 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.084867751 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083140174 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08446399 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.07533058 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078760675 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.080482313 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089255633 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07254509 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084497917 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.0816614 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.07788436 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089142906 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.076570069 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.077826127 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.218601481 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092718762 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079674428 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077963485 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088219158 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.080318882 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082804721 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093681259 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078968415 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07541558 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.076006427 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087813134 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.079611773 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088072694 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084194892 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086711715 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074991422 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.077838855 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084527498 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092416189 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083269396 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085932081 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090213045 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086102399 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.079478533 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091648279 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086983528 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082485737 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089934103 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083687688 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075589442 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082402597 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086579451 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.078392247 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087520947 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082209379 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087002626 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.080282016 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078223945 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085482568 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080349692 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08199077 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084288706 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.078619002 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094426414 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085444115 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075284496 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.076789897 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.086428696 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080870616 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.078755348 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081614041 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.085790152 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.079561448 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077654448 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.079247174 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085770398 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08723984 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082463093 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.080018763 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088516284 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096584838 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.07954263 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.086409747 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.078995923 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.080113486 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.079754893 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093894944 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089650005 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083703173 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085922074 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076566955 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088265985 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091268509 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081532891 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077174151 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082371013 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08313688 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091028588 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.082727434 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.079618116 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077807842 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085015461 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.081263085 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085516852 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.078683672 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081350958 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.084034636 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.077768875 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.084608171 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079633616 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093675947 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086709015 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.074600989 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081307218 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077630116 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090121931 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07455367 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080368754 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08148472 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.079788995 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.078532919 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086204571 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.073704818 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090746644 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091000939 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08320338 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080240211 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.077674471 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089742802 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083626467 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085789388 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084584157 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087109107 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092720737 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080288273 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.084760284 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092428457 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.077652893 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072701117 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090007106 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.076319324 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.077217554 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.077499511 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.076674265 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.217924459 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08815373 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091237099 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.074808698 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087339491 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079095749 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083471103 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.076229388 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088816104 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086611027 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084178689 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09247009 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080508027 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.080124788 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087149086 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.079166081 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.080877531 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.080672029 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086795901 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.080170334 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085931118 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081889329 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085502782 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082233117 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.077685023 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085387794 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.079672849 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085489111 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088744652 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.07931663 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08611417 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086482938 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.080102274 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086819492 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083275569 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082150055 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087273811 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08608994 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084853515 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086304748 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.075220594 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091679221 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.07882069 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091906512 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084443481 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.076879529 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.085208253 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086214458 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.083699748 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.079744632 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.079822488 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084909027 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.079040094 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086186925 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091565156 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080505022 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094991698 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090337184 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085006969 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086337406 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084929581 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08487203 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082175462 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083778887 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.080455324 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084914074 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.079166255 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088042484 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086216808 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084627601 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085523792 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.080111357 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084937566 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.080912587 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.074357497 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081680462 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081634586 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.079216325 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091771643 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.079809874 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082321391 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.078842879 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.080484909 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.07877324 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.076542992 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.085918733 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086326143 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.079745218 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089597052 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081379455 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085821455 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09449602 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.074012292 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.0776209 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.077636353 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080453783 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091795591 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.079485768 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093106628 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084903887 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08177299 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.076585814 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.07953219 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.078051381 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.074377495 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.077447468 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086973444 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.081097534 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.077691227 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.078042615 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084693514 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.078334665 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091077378 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.078025642 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082408408 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.078315568 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.075510968 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.080354522 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080166934 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084394293 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.078665773 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079557374 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.075907199 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.077475048 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082025691 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083974122 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.077273642 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.219007959 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093273406 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080264057 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087543234 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083027672 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075441071 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087409989 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.079712268 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.079820807 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081908142 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087896938 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087315617 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.080636871 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094017519 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081931477 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086078077 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079215237 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.077970978 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.079121486 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.079380964 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.079047596 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082145695 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.080187621 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092858661 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.078078916 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086449273 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08543212 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083301332 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.08954383 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08072482 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085889259 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08491388 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.081578736 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085991164 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093361988 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.083200316 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087158064 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080126976 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085631333 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089768769 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082457486 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09155426 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084688183 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.079862757 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085074829 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08058187 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.079004478 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.078948159 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.078947777 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089477817 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.079784167 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082062799 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081769006 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.077938118 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083201817 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081252799 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092591917 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086366472 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086285149 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.075074114 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.077450059 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079764895 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080540089 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085391448 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086606824 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089266264 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08594389 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082992275 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.07850473 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093740259 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089051555 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087021467 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080781595 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087061492 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.080102351 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086214722 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083719483 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084349935 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.080108307 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087251857 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085415886 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081730897 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089641504 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08708166 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.080230523 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085164077 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085624109 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.08446087 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.074961655 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.080386839 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085918537 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088011202 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08580952 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079684138 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094286163 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080097437 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084401413 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081928751 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079360642 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087848984 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.074725992 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086249767 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.080138619 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080220216 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.075276905 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.081805115 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080755624 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086185346 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081508335 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.075520128 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09394652 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09291698 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084192905 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.077383273 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.077097796 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.07381765 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.073818573 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080522977 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.078659053 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.08378977 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092567182 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080268158 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.079624901 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.073964466 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077661335 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084438156 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.08554387 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.075605551 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.073515274 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.080108696 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083652559 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089105073 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.076927601 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.077504435 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085137807 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.084351188 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.07585107 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079870833 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.075267537 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08519173 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093919309 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.078140454 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083609091 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.0872009 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090943075 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.077876298 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.073466297 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.077796678 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.083900524 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083099165 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.078287352 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.078591938 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096211645 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084625663 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.079857282 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.076066956 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.083825697 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.080206136 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090251522 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.078258638 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.078067019 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088401446 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08385436 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08261246 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086562552 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087473455 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.082650196 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.082768739 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.076441532 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081864517 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.076035721 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.079059369 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.077573996 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.076860469 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081112263 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.084650869 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.079582408 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091537857 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.090436316 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.079754656 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.07497222 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.080907029 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.079524656 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.072959706 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.077662726 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.075977723 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.0758726 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.076073702 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.077282569 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.083839755 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086844247 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.081579937 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.077351044 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.077307651 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.071944881 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087373021 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084331291 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083243385 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.074848701 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.078226339 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.077113038 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.085529514 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.079043942 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.0757473 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.083002122 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08309137 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083233379 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.073203076 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088496806 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076046656 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.083340891 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.079342441 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077842926 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07758123 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084180943 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.079862157 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077983255 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083488646 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.084044549 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.078332696 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.07548035 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.075098207 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.085695223 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.075914923 seconds)
  done (took 51.188449679 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124030439 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079764039 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078645363 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078979688 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089228348 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080437537 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079437736 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080391032 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081253359 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081813787 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078563825 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079023915 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.085566532 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09358276 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088260423 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082771848 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078088403 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078931322 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07860195 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079182436 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08585555 seconds)
  done (took 3.179687984 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089207186 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.094725374 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090411683 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098211688 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087084515 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.085753211 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09037008 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085727444 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093630071 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088263815 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093498916 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085106876 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.088017594 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.087567674 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087799663 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08522675 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.0926427 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085835356 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.084727549 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089431209 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084639152 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.089100407 seconds)
  done (took 3.235542042 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08160607 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081170596 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087333531 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.075930894 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.080006523 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.075845171 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.082861885 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.078786916 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.083083834 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.082767694 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082357398 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.082328823 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086729795 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.075867908 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.084000275 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.078585207 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.123139849 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.083653712 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.080839162 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.081689462 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.076043121 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087635689 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.075836136 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.076540221 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.08245242 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.083306201 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.080948085 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.078859208 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.0804975 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083121192 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.080775806 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.07838571 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.086583236 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.085803149 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081943552 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.082859284 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.079963744 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.080577902 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.075908287 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.078296601 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088632567 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.076189668 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.080867654 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.086787234 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.078498964 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.078112847 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086874419 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.080692814 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.075620373 seconds)
  done (took 5.298441433 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.091716194 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.12791824 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08242544 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107723578 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.093187065 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.085684444 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.084738724 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109154439 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.077428083 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.078567933 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.095088434 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.092288131 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.07957923 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.083791608 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.08682013 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.079509307 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.080615806 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.078963804 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.082865639 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.07913247 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.082592933 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.086301156 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.093078247 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.091162067 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.083077003 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.078653901 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.079186241 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.083744658 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.090953087 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.083353815 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.083941822 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.08479563 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.093632535 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.084643082 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.079267039 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.082133561 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.095661123 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.079922558 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08158448 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.077451292 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.081586637 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.083640898 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.086336801 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.094798159 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.079324776 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.084276569 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.079431757 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.077102672 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.091317782 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.082262414 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.086524169 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.091984211 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.083386326 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.079761137 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.083780766 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.093344895 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.079412818 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.077603135 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.081866029 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.090690641 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.077487521 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.082606495 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.091693872 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.081221259 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.085223357 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.091540076 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.084081697 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.082822417 seconds)
  done (took 7.256389022 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09051046 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111535089 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096811055 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097254925 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090142183 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.09026772 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08984268 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090673162 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0898599 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093842443 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090007082 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.130209111 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085380707 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.091666183 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.090004437 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0899794 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.089960625 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089726805 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090232502 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090458642 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090023053 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0961688 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089728183 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.095570987 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093036989 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086125763 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089708353 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089593877 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096343528 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089282706 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093059004 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.089794436 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089683725 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.0957124 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.09276633 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089408844 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.079337109 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089492741 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.089766261 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089464773 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085574386 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09609149 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089886629 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.085380125 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089501551 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089464266 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.096034238 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.092522114 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092124802 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093390946 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.089508554 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096128127 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089315522 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089610145 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095967751 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.098589692 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095794537 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096473915 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090314115 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.096242765 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096023168 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.099056817 seconds)
  done (took 7.044032132 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095473122 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08774804 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096024135 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.075919349 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078491268 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086538819 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078500899 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.081117334 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086870002 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.087025184 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089072178 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086145276 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088645092 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089079946 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086152983 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089043251 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086224684 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086441279 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08674558 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086236546 seconds)
  done (took 3.035299808 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090866659 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.0974612 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08235877 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086220295 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.083742126 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086225179 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.08441284 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084271405 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082562044 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084261803 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090580156 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.090270775 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081944517 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086208646 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08980581 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.101611112 seconds)
  done (took 2.697658587 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09770019 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.086803657 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.092111489 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.080030254 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.08065346 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.076363719 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.079043644 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.07514496 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075844259 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.092451417 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.079463362 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.091092255 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.079259535 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.078160264 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.076250422 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.085246805 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.076243554 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.076757444 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.079191952 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.091389002 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.083819188 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.077925558 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.083463288 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.079027393 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.08217079 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.084024832 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.07882625 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080368638 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.076380122 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.079758888 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.082469561 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.08381283 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.07647986 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.077500252 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097211959 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077277019 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.079400882 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.07920988 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.085258096 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.079480487 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.077781717 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.08202859 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.07921438 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.080557567 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.076220751 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.079544934 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.076374798 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.082477088 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.077201533 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.082300027 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.079258479 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.081513924 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.080114285 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.086959074 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.081552825 seconds)
  done (took 5.787818357 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095676591 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.083641612 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075612025 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.077739571 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08310299 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.08123749 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083268196 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.081040654 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081524529 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078465443 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081702691 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.083033805 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081458643 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083837982 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081722158 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083592782 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075291278 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.081360733 seconds)
  done (took 2.797953218 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086423576 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080546217 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.088276279 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080126579 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.080038793 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082564688 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075429101 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078669191 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078246027 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.080269162 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080249378 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.082623218 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078001034 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.081859005 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080042263 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080236502 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.082662521 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077793956 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.080743138 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075534137 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082118284 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078112271 seconds)
  done (took 3.084753935 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.10977239 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.100054959 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.154713605 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.094747509 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.101895357 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.088021757 seconds)
  done (took 1.9653328 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106010884 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114941627 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080840429 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082497147 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088863699 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083670589 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083526534 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08369206 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09120333 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088636845 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084041138 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091036857 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090932685 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090415537 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089060832 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091733392 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084097205 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08424763 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081420326 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096615745 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084148277 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09137807 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084720239 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084099289 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083794533 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090167966 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091069331 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088737951 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083715 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091261035 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089075335 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084621793 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091568942 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08847222 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083488452 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090568975 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083942467 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096182641 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089035609 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090387035 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083047662 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089200401 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090648887 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087556555 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091074211 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084399482 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08767663 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08388454 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084304193 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097459689 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088841518 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089513913 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088719722 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091858118 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091133283 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097480846 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088862444 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090907233 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088987507 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088874048 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09065841 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089344941 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090719331 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088758365 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089329332 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090592505 seconds)
  done (took 7.193249125 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118685623 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08150985 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084633795 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088907865 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090388912 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084054731 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083987256 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084164288 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084922851 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081260228 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121584442 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08406724 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091049688 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09052813 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084713241 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084003655 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084575169 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091053877 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081414628 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098079493 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083907002 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090453055 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090445386 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090472075 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089045652 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088997966 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084419564 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083845043 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08383881 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083804004 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087906565 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084196698 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09063612 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081068384 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090127297 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084087771 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083657678 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08771576 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083673438 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088986087 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09039819 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095325753 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083875944 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083903552 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08858705 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084124128 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083840954 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08095785 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083837878 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081430036 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089006984 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089024931 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08859654 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090272426 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084316587 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084043668 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084074901 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08412356 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084545803 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088970213 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090321568 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086658374 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098289939 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08391328 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084109156 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090421134 seconds)
  done (took 7.126037414 seconds)
done (took 147.538693617 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.2087454 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183100988 seconds)
  done (took 1.701764738 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.090692518 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.118716411 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098093387 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.149952274 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087663599 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121864123 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120236235 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098145124 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.08762433 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087841093 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.087549227 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090108682 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152887175 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.0881401 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087456828 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.090317934 seconds)
  done (took 2.986144463 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.121246352 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.181222051 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125147329 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.085162918 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.120788386 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.093481419 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085453869 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.098130256 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09226021 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087194571 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09304226 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093705556 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.086976576 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091328436 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09212804 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.093123024 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.087515942 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.093778086 seconds)
  done (took 3.153604011 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120545555 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.111256429 seconds)
  done (took 1.566477608 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.179570807 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.151183128 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.22030369 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.365284619 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.169922177 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.160220462 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.158644779 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.157655723 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.133543303 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.151778875 seconds)
  done (took 3.177881363 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119960729 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170835989 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308124733 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136336563 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.092056055 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.110072123 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.13791216 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.097834054 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.0999169 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099710617 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.09943783 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094352648 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118188756 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092476651 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.08914741 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.094078057 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121890512 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.0883963 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.08930831 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09469911 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121986191 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.086207165 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092898226 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.088171776 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097086621 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.096899795 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087332219 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086018009 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.094850262 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.089363746 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.095562707 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.10919332 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096890441 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.121830551 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.090439417 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.123098939 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.094698504 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092797562 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.089688886 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09278396 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096066782 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.096027606 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.09439283 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093885741 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086989531 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.094291174 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087583413 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085694032 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.096481208 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.08727108 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.096115602 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.095330115 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.122833278 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.08693255 seconds)
  done (took 6.977363664 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.124062725 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.123622202 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086683099 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.129106908 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12016367 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086090471 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.12154601 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114686811 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.123590268 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.086720848 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.085298234 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.086312537 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.095178818 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.09660791 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.131440386 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.123308116 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.088917921 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.086370347 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.124241779 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.122949078 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.085467739 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117345566 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114049508 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.122559044 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.084532366 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085834632 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.084805366 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.086343937 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.091337482 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.093030581 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.085232767 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.093912681 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.099117214 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.092760463 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.083980422 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084830101 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084701322 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.093995705 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.09417262 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.094218014 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.09221787 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083963904 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084588599 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.085771999 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.085774384 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083956919 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.092889967 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.094890104 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.093610119 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085009949 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.086313623 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.084888671 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.085919241 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093733158 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.092257594 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.094834819 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.094491102 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084824259 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.08490827 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087532253 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.094618378 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.094120923 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094137311 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.086033774 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.094641812 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08512928 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.095187224 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.098771299 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085032422 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.089199336 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.084799875 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.085215005 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.08631945 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.092489043 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.092334174 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.086386945 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.085139654 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085032976 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.094375369 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092650624 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084355758 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.091839686 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.083742827 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.08478099 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.085901607 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.08578158 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.092042084 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.094221201 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.086194525 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.085014554 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.084951554 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.084843537 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.083523505 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.091573385 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.093977972 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.093518534 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.092707706 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.085749743 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.09240003 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.091132367 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.085235172 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.092142226 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.084255351 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085422185 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085412727 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.091362648 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.09018059 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.092608186 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.084019377 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.218626756 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.094203234 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097283484 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.08683001 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.093822374 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.095685921 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.09398345 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.084960087 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096928839 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086155081 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.095319754 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086211719 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.095252053 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085455419 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.094383179 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.085769138 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.084948824 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.086084092 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.093894113 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.086535152 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085185679 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.086608618 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08552777 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.09389055 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.096625807 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0870839 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.093064402 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.093177022 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.086662329 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.09399735 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.084772374 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.094219924 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085362387 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.086440558 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085035779 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.09651141 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.085823029 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.08549377 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.085579361 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.09514277 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085724888 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095081185 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092668091 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085085852 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.096006981 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095424047 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.092223104 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.094698154 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086621734 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.084822435 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.08499526 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.084970515 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.092178932 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.093596291 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086535396 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.085321216 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091986331 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.094305643 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.084198942 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.092898532 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0928873 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.093005613 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.084852916 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.084917394 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095166888 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.094597344 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.092437683 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.092891391 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.092722203 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085397951 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092288467 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.09335613 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084934015 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098379054 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085358532 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.096985081 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.093333368 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.091621904 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.093078885 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.094296382 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.094115364 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.0947574 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.09744917 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084110553 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.084841652 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.093468471 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084760512 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.084734904 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.092552615 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.086249613 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.085938405 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.096805647 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085207301 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.094620891 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.083931183 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.093347808 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.084150311 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085895529 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097053455 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084906132 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.085758703 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09215324 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.08409456 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.091060395 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.093722169 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.091656996 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.086965285 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.085051545 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.092092741 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.092375999 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.084313919 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.220092902 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087068292 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.094516612 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.094005894 seconds)
  done (took 22.144987964 seconds)
done (took 43.056657798 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.220267442 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168188172 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179883448 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.130680128 seconds)
  done (took 2.130628931 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123606971 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.113330446 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.102563767 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.081829125 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.1084764 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08205608 seconds)
  done (took 1.97633116 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.298732131 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.2092125 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.192354504 seconds)
  done (took 2.062687899 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.224306704 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.205189027 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472464477 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.296539288 seconds)
  done (took 2.657548894 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.155429152 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.097693842 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.080258361 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.097500727 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138535013 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165843183 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.108889363 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.133238623 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.092905951 seconds)
  done (took 2.488243256 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.161517676 seconds)
done (took 12.841588387 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.23231824 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.1429439 seconds)
    (3/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.22504451 seconds)
    (4/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.21130422 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111150183 seconds)
    (6/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.206437037 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.082306977 seconds)
    (8/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.198628179 seconds)
    (9/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.18982032 seconds)
    (10/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.1697235 seconds)
    (11/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.134303574 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.166943347 seconds)
    (13/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.089161565 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.090519337 seconds)
    (15/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133217083 seconds)
    (16/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.161943879 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.082449343 seconds)
    (18/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.224808062 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.369024202 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.103248456 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088484935 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.21440303 seconds)
    (23/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090290064 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.089258464 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.109297083 seconds)
    (26/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.076918313 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.113128818 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.088025449 seconds)
    (29/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098559941 seconds)
    (30/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.08443182 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.165451665 seconds)
    (32/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.19199058 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.104663402 seconds)
    (34/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.214740054 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.149127175 seconds)
    (36/309) benchmarking ("sort", BigInt, false)...
    done (took 0.213974681 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.220114954 seconds)
    (38/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089202775 seconds)
    (39/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.087847003 seconds)
    (40/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.14420972 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.179351108 seconds)
    (42/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.210862654 seconds)
    (43/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.090384124 seconds)
    (44/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.202317723 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.139871209 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.164221581 seconds)
    (47/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.234257015 seconds)
    (48/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.185410594 seconds)
    (49/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.090846734 seconds)
    (50/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.232547858 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.087228608 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.103278022 seconds)
    (53/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.103279769 seconds)
    (54/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.076214722 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.144523555 seconds)
    (56/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.078107191 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.187396311 seconds)
    (58/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.19883924 seconds)
    (59/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.237066943 seconds)
    (60/309) benchmarking ("sort", Float64, false)...
    done (took 0.146397823 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088108346 seconds)
    (62/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.065298869 seconds)
    (63/309) benchmarking ("sort", Bool, false)...
    done (took 0.168432596 seconds)
    (64/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.092905328 seconds)
    (65/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.064126591 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104776402 seconds)
    (67/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.162366562 seconds)
    (68/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.089206788 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 0.082631917 seconds)
    (70/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.083636822 seconds)
    (71/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.089545638 seconds)
    (72/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.092534166 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.103595092 seconds)
    (74/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094682172 seconds)
    (75/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.080098348 seconds)
    (76/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.087230673 seconds)
    (77/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.086762608 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.080668255 seconds)
    (79/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080465103 seconds)
    (80/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.087197027 seconds)
    (81/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.063658718 seconds)
    (82/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.224353902 seconds)
    (83/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.077873703 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.109893343 seconds)
    (85/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088923037 seconds)
    (86/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.165661373 seconds)
    (87/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.213472904 seconds)
    (88/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067084413 seconds)
    (89/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.094271409 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.109797925 seconds)
    (91/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.091505382 seconds)
    (92/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.231212747 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.105855122 seconds)
    (94/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081932627 seconds)
    (95/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.084811665 seconds)
    (96/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.088406936 seconds)
    (97/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.137835623 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.193894784 seconds)
    (99/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.081835999 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104007208 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103687893 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.165008093 seconds)
    (103/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.091944766 seconds)
    (104/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.131941316 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.086151451 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.142884508 seconds)
    (107/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.093677104 seconds)
    (108/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.126181324 seconds)
    (109/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.124223384 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.191989232 seconds)
    (111/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.218283748 seconds)
    (112/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.064593824 seconds)
    (113/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.088717808 seconds)
    (114/309) benchmarking ("sort", Float32, false)...
    done (took 0.148464077 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.065693807 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.103897356 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.087069376 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.088559305 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.193853407 seconds)
    (120/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.085750061 seconds)
    (121/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.08914754 seconds)
    (122/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.064976694 seconds)
    (123/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.064610695 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.082800204 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.107695692 seconds)
    (126/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077364807 seconds)
    (127/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.086846622 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.081908953 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.103784551 seconds)
    (130/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.064641192 seconds)
    (131/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.081956959 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.125229273 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.088800286 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.12510222 seconds)
    (135/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.087662781 seconds)
    (136/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.082540943 seconds)
    (137/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.08793694 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.086703632 seconds)
    (139/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065905038 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.082767447 seconds)
    (141/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.166704042 seconds)
    (142/309) benchmarking ("sort", Int8, false)...
    done (took 0.161989439 seconds)
    (143/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086789842 seconds)
    (144/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065133971 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.065184742 seconds)
    (146/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.129081101 seconds)
    (147/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.095359446 seconds)
    (148/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.093217765 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.086210932 seconds)
    (150/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.121839258 seconds)
    (151/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.135187453 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.093207013 seconds)
    (153/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.065372825 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.087867197 seconds)
    (155/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080968354 seconds)
    (156/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.06461688 seconds)
    (157/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.095957457 seconds)
    (158/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.226001447 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.081875816 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078015984 seconds)
    (161/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078458922 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.08146528 seconds)
    (163/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.076856024 seconds)
    (164/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.064347816 seconds)
    (165/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.106801264 seconds)
    (166/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.064289163 seconds)
    (167/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.064359585 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065257796 seconds)
    (169/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.08731468 seconds)
    (170/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.06443944 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.183062507 seconds)
    (172/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.064090182 seconds)
    (173/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.089249105 seconds)
    (174/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063983596 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.161033977 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08170626 seconds)
    (177/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.093489797 seconds)
    (178/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088238969 seconds)
    (179/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.082517506 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.106771652 seconds)
    (181/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.082895574 seconds)
    (182/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065607474 seconds)
    (183/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.172478697 seconds)
    (184/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.135996723 seconds)
    (185/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06480877 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.082158259 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.105788387 seconds)
    (188/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088647946 seconds)
    (189/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.06459183 seconds)
    (190/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.064504178 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.144911894 seconds)
    (192/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.087310179 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.080487475 seconds)
    (194/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.063880479 seconds)
    (195/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.118767095 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.080418968 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.191456371 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.080932463 seconds)
    (199/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087269628 seconds)
    (200/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.064035143 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.101157197 seconds)
    (202/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.161935773 seconds)
    (203/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.064515036 seconds)
    (204/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.0850719 seconds)
    (205/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.064358215 seconds)
    (206/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.092389744 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.087378064 seconds)
    (208/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.081143761 seconds)
    (209/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.080842421 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085157698 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126950749 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.065614768 seconds)
    (213/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.085411181 seconds)
    (214/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080780544 seconds)
    (215/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.084881998 seconds)
    (216/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.063951843 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.101975382 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086768552 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.079923739 seconds)
    (220/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.188116502 seconds)
    (221/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.063287229 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.087112472 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.085206627 seconds)
    (224/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.062978137 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.153083672 seconds)
    (226/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077595335 seconds)
    (227/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07956221 seconds)
    (228/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.080475218 seconds)
    (229/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.088137173 seconds)
    (230/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06328448 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.084830369 seconds)
    (232/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.081596842 seconds)
    (233/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.063359017 seconds)
    (234/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.092081716 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.062936157 seconds)
    (236/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.090605501 seconds)
    (237/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.063065544 seconds)
    (238/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.064027616 seconds)
    (239/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.185994935 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.07970904 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.103713225 seconds)
    (242/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.129640985 seconds)
    (243/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.10068363 seconds)
    (244/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066529345 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.132640129 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.081086002 seconds)
    (247/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.128922688 seconds)
    (248/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.169802729 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.080774075 seconds)
    (250/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080497645 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.07992911 seconds)
    (252/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06465442 seconds)
    (253/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.081129262 seconds)
    (254/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.164524289 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076667937 seconds)
    (256/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.063585743 seconds)
    (257/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.063583564 seconds)
    (258/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.063770164 seconds)
    (259/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.062981629 seconds)
    (260/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.063435901 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125131383 seconds)
    (262/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.092510802 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.150730191 seconds)
    (264/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.090697174 seconds)
    (265/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.190741683 seconds)
    (266/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.075758092 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.134740413 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.085966817 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.105127631 seconds)
    (270/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.063917079 seconds)
    (271/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.079757095 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.065265859 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.084693535 seconds)
    (274/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.084110771 seconds)
    (275/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.080045582 seconds)
    (276/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.087113533 seconds)
    (277/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.092135348 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.154871062 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.094181055 seconds)
    (280/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.07500179 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.110974091 seconds)
    (282/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.063622481 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.080313288 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.149910942 seconds)
    (285/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.075109174 seconds)
    (286/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.162200258 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.086158993 seconds)
    (288/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064237385 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.104556181 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.182193015 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.106613317 seconds)
    (292/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.063280513 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.084296053 seconds)
    (294/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081091733 seconds)
    (295/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.063417716 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.10193353 seconds)
    (297/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080315285 seconds)
    (298/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.063866294 seconds)
    (299/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.080699561 seconds)
    (300/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.106177441 seconds)
    (301/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.063977294 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.102291639 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.079716176 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.189053717 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.079479851 seconds)
    (306/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.075138153 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.079384596 seconds)
    (308/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.075615376 seconds)
    (309/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.086827012 seconds)
  done (took 35.297934434 seconds)
done (took 36.677053017 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.108401439 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115157636 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.092588454 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.108734332 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.099384568 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092430291 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.090725416 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.095814548 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.098593789 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.099930365 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098333616 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071383802 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095001679 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.094568078 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.092812283 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114067303 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.099401352 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093596829 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.093210858 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081745916 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.092877381 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085020449 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.084327063 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07065093 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095942016 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.088900707 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.09367013 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.092670671 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.083723174 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.084022697 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.08646289 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.092612642 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.083606444 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.09627665 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.090124973 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.091471259 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.093076025 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093030342 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.082660732 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.082879824 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.092742705 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.082787222 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.090721944 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.0887434 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.087323014 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.086723072 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.091295308 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.092246377 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111405205 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087288197 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09268262 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.093345507 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.094116967 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.087971955 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.08557318 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.090819882 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.08633388 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110956372 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.090845271 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087290851 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.092325985 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.089250813 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.086570853 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.090125223 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.090506011 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.093523321 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.092498727 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.08641954 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.092797919 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.086802495 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.082137839 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.090476566 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.084354355 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.08269368 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.093523348 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.095443097 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.078920716 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.087097898 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.090652991 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.090467152 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.082169916 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087325834 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.08175198 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.087303362 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087319229 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068647394 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.085222161 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.08988979 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.079515737 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09110033 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.089720443 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089885209 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.081801205 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.092489056 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.079656742 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.086097431 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.082137121 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.082286386 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.081637561 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.085177689 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.081963768 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086553082 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.090836825 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.081192478 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.087149982 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.094710862 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.081791016 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.089572475 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.078904309 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.079620598 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.09294043 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.092654015 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.081746937 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086568478 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.078870671 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.087000483 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.079233553 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.081786303 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.081567403 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081801817 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.086490722 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.081848595 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086585592 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.087429241 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.094147172 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.081828086 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.084191025 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086563647 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.081507899 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.085892292 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.081927848 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.081532605 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.081063239 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.075137954 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086119103 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.081488881 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.225366972 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088141873 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.091292039 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.081508635 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.091116905 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.086291271 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.087069664 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.085652336 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.079078856 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073353857 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087599473 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086826725 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.081782598 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.082229524 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.081678448 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.081492473 seconds)
done (took 15.175104747 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.083207676 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.131076336 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.106845782 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.105825778 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.098877727 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.083224659 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.088026074 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105128954 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.08184191 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.112053732 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.102261323 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.101042422 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.120903025 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.07924609 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082229906 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.083663794 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.081247683 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.094095555 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107217924 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.104449237 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.121334651 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.079903018 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.101591398 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.102264103 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.096608825 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.112711383 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083382514 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.083440867 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.08505453 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102745246 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107464985 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.085333148 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.083205417 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103268703 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100422174 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.093470778 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.083086306 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090983735 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08324733 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082769021 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.084222123 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103782725 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.090507335 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.091216671 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.084192384 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.090142032 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.080723632 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.095157766 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098379569 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.087978994 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.09754322 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105504353 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.083445786 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.095639049 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.079038788 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.097927461 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.089110001 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.082745573 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.0827824 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.087582802 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.082358901 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.084442044 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.093221362 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.091208503 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.087051028 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.093906496 seconds)
  done (took 7.636300698 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.101108747 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.110131413 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100106701 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.09966446 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.08237745 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083247858 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082656285 seconds)
  done (took 2.168658979 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.082958867 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105233843 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.104686981 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.105073646 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.094812505 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.105790873 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091461473 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.083079399 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108720365 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.081973751 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.100894618 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111673314 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.083837544 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.094132062 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105902497 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.082706787 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.105211727 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08338284 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.08421775 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104830755 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.08496005 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.107453329 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.094720645 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.082781711 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094218722 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.083279218 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127248572 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09085674 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081933364 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.084250439 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082003905 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.121570356 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093362355 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.094601587 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081665249 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096286916 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.094689968 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083436748 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.091911632 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092408567 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.094210047 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.084237799 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.081875917 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.082238287 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.085452919 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.092587025 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.082147287 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.084713309 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.083948086 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.100787706 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.082069701 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093777087 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.084120599 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.085954305 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.088618193 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.085796994 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.091386993 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.082297766 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.100729047 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081850837 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.098374801 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.098057158 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.095208303 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.097877849 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083566895 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093836657 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.094796235 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.084201191 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085227594 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.084510531 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09768269 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.084020736 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.085277618 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.093331502 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.083181148 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.105434668 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.105463059 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.082972203 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.096163953 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.083694153 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.082308908 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.082975893 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.105248642 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.085987398 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081868479 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.087484407 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085692143 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.08402537 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.082615964 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.087458415 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.082272824 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.088512204 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.084511616 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.083959653 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085674807 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097715791 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.082448272 seconds)
  done (took 10.328123289 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.086589476 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.084937162 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.085860727 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.084554206 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.084378302 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.084259129 seconds)
  done (took 2.040776753 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.107772417 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.081775139 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.096699542 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.084474865 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.119542876 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.09809928 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.098452221 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.093312714 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.097727016 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.095782373 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.097999293 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.100930125 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.102676768 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.087055307 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.097787974 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.085822138 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.098393217 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.086448902 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.095279602 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.086603896 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.096817753 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.086458278 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.086620868 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.101710289 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.088555432 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.085799599 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093401449 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.095241214 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.095517972 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.093967656 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.085998216 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.087913904 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.091374535 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.092987534 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.097723082 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.091272165 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084242911 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.090392554 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.084063841 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.08727706 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.100113003 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085999074 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.086272818 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.091010878 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.095701698 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.091055673 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.089934577 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09216925 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.097846268 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09106421 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.090250104 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.084691979 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.087404946 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.090623504 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.090637687 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093112894 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.090307104 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.098063017 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.085992166 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.09095945 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.081197163 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.087652973 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.092665563 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.087103254 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.089029787 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.090336748 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.091057655 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.086227475 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.086345012 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.083799924 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.091713372 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.081934307 seconds)
  done (took 8.1054535 seconds)
done (took 31.769539397 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.531422264 seconds)
  done (took 2.017012776 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.627498046 seconds)
  done (took 2.142027861 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.548179357 seconds)
  done (took 8.060365478 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.393670271 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.471056022 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.754681493 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150597617 seconds)
  done (took 3.322070308 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.729189967 seconds)
  done (took 2.255808607 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.248889174 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.239266349 seconds)
  done (took 2.018696173 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.372278766 seconds)
  done (took 1.886644305 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.089804441 seconds)
  done (took 2.606280794 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.248011581 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.173695111 seconds)
  done (took 1.943967696 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457380107 seconds)
  done (took 1.977438251 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.245121937 seconds)
  done (took 5.766323409 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239067089 seconds)
  done (took 1.790095185 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.251454995 seconds)
  done (took 1.771590856 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.757574205 seconds)
  done (took 3.276803413 seconds)
done (took 42.363449353 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099503423 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.101793824 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101734805 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.097935861 seconds)
  done (took 1.902159161 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.09124615 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.086483472 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.090909945 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.087022199 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.090928344 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.086938863 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.087990713 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.089302603 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.086521619 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.086868846 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.086385289 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.086383648 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.089595625 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.088221921 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.085506514 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.08943217 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.090981055 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.086723906 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.089597077 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.086597102 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.084904386 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.088966409 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.089352052 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.08592877 seconds)
  done (took 3.634630735 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.094995998 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090525054 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.093304669 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089508374 seconds)
  done (took 1.897537504 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.092723073 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.103587378 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.101883444 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.092764052 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.103909353 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.099084072 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.08316779 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.083431178 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.08462446 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.091943188 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.082527588 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.108536426 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.101326171 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.091894914 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.094109135 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.079796632 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.081959513 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.10043765 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.093168175 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.093249622 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.084529466 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.092553188 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.08292725 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.102243342 seconds)
  done (took 3.753061623 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.09474896 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.116026628 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.09418945 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.105235696 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.10651617 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.079807607 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.093354513 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.106983835 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.140060323 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.080286702 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.085817512 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.07957237 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.088457688 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.079639771 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.094943617 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.122047232 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.12559014 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.083552904 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.112337143 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.080137488 seconds)
  done (took 3.504594253 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.088983303 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.088328576 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086404606 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.082136989 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.093418225 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.08903535 seconds)
  done (took 2.067982269 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.084036045 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084676021 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.083715459 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.083646706 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.088277192 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.08345054 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.082314841 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.084160371 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.083901493 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.083508085 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.083084201 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.082310595 seconds)
  done (took 2.541252739 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.199215867 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.084486781 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.084805481 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.081871054 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.08634362 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.082978382 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.097196576 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.084029124 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.109012668 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.082618591 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.082819422 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.085421289 seconds)
  done (took 2.696492436 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213954038 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090126379 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248632024 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162152932 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119770657 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125300373 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126642014 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124824007 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147518352 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110135469 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171759263 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176334673 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119474957 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148377847 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103651569 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.114631554 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162365736 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176515021 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117936026 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172886173 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154221296 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138256923 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157614342 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114122849 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116820504 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129989058 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.08566178 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093102153 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181192688 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146429929 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152656814 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122993349 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102992511 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189536095 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173936597 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151035168 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159549612 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096948607 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.114102576 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.145198945 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210218091 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103172396 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173165742 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122862877 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093615515 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141408901 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127189557 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.270403627 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.11671431 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104630818 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154559134 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193674748 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.143174723 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099637228 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135311162 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124110949 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.122952215 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130901129 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190453995 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167252412 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139075477 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.085616467 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122514774 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159711625 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142610951 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.118599215 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.133545251 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103612965 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142860571 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164293362 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13253465 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1532923 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.125647492 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101200436 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131889166 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146922623 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137510599 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180818353 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135033821 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.086826776 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133679254 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111564919 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093789461 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.156869095 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089527751 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184881766 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113995625 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.11639785 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140687638 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121684121 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121414027 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165374477 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150901212 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116318711 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.080106082 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116506267 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.129013091 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15200419 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10016138 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119204679 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124019131 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.089152918 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288938294 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.091107154 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135100517 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090067443 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134799117 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141310129 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.091299306 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13460886 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116838723 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.114878833 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143241413 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170922473 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101689353 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094503388 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173314505 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133526645 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.113603772 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152305895 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162222809 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.113560188 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110459959 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153907052 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175652913 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10290706 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169772853 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115862893 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097197572 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.099016363 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133390706 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12262922 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.133630806 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094418048 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.127666142 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171358459 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.088040178 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108623894 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144724615 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09195461 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093871475 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117153077 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115836312 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.10916281 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.110567638 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.113709573 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145595052 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134234828 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116742147 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134232898 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110891545 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172677301 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103688805 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.114777753 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115719129 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.083625423 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.140482484 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162429343 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092083701 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164872103 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.129130614 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274968366 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132044338 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097833888 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147421719 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093471604 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.084522644 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151159903 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122135696 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122340148 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.157433861 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126584489 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.133660073 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.128815949 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141679113 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139530111 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.139070537 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118975791 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.102091778 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126315005 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13715868 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.086988173 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.102050052 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.093846107 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118255486 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107448819 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097734779 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152041334 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133514938 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12232226 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126072645 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109227459 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15620029 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.089664551 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136933187 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.129886035 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108167157 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15858048 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159010143 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143445305 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112293307 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145882268 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.084447817 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088127264 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.098993923 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131458955 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096811605 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096644556 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125698592 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156867569 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13739559 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1439804 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134250565 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129698566 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163904061 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.084035565 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.130471431 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149493263 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129828333 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.115683935 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249783031 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.111884826 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151208115 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116888717 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19121874 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125600637 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136888385 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165968627 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.114893797 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093224561 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115964731 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142479576 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113655416 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147774302 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110508846 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101022618 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119039366 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.088527182 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109445338 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136748849 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131049788 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146973177 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.12339748 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142511566 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092162215 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124710462 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133075439 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131946461 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.077361402 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128860208 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172246913 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107770122 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128602689 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158076271 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092095345 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.150098582 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178448443 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154700289 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097697655 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118573187 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131240349 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134813547 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128975787 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145598367 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116308944 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148444462 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12139361 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.09741169 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099478667 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108518138 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116583228 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.105007002 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.113360493 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.122442229 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.107337629 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138797124 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113625052 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120186426 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275352309 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.112663855 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.106591744 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109993075 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184553865 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130382602 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183282196 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.113475822 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.149498687 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168303872 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089400194 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093133964 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.091726116 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146591367 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097841843 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140189206 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123549543 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127864556 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13446544 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147459468 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108662171 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.082974425 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120511262 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142396341 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133983979 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110409925 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.114091574 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167223095 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110093523 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092718378 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123724694 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128058011 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116063129 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179514773 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.075091325 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120832275 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090595503 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093104473 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134802113 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16140435 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.093602434 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.111480317 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131578045 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122440488 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134321303 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109740569 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121519613 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140729227 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153581519 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137204788 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.101616582 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122006182 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136100786 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160831785 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113625284 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.109776699 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177665663 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306223678 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.164270181 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.098578063 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129515624 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128302059 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124180303 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148725736 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097373901 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167741 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0949461 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144004939 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113167196 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100568394 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139267255 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.124880487 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101400592 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151857959 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128290047 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096393902 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091043109 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126262325 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129670009 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115524845 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.088987769 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147577855 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.087767996 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14367136 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179611749 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095015378 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116712939 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10802572 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09351396 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115483769 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113740484 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099432355 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.112132913 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176961201 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.09771964 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154599363 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141796052 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122351078 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145168465 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114982087 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.652132298 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.090342497 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157569699 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125621645 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178399083 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111956595 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129091744 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121055468 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130723626 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149887121 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112665552 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.18838895 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288059463 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.127500268 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093651679 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114944406 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117350309 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.100159667 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121054906 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125115281 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126493342 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.105601719 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.126485282 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133726275 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.096305712 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109608534 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162072192 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127019009 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153567231 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14758589 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098048426 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128899912 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145827594 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093981476 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.128005878 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162455797 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117720636 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111311471 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.09491104 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.110973492 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179338486 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.122835451 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165546072 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131386365 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122113317 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127385358 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.119541968 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140783868 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115954893 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132363941 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103256352 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.117442587 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124782552 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094510815 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.089955546 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117285278 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122006686 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.110275939 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107207696 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.112444852 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157763473 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.086017737 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110906072 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125838347 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150870705 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175920509 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.098471133 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09670941 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130834123 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126579561 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.121073382 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279415143 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.093537741 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096445869 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.093764919 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.094485446 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11708253 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125492084 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131056437 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121217602 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16874743 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.096587652 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.238063292 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108860335 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117216549 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.083174631 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.091858854 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10960043 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109973181 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116979171 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123512045 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17929271 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.109253602 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.102737849 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102799276 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.089141694 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097097889 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134754462 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122968243 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128820176 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112815681 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.076285329 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117773761 seconds)
  done (took 64.138252657 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119391462 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.098456161 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.112354671 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.160209837 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136561373 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214846928 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.165626712 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204756417 seconds)
  done (took 2.846303157 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.084320147 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.110227794 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.11943205 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.098099387 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.082666017 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.083925694 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.237561486 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.097007872 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.082889064 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.106240132 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.092888162 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.084683559 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421579495 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.081887164 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.083091535 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073957501 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.083307663 seconds)
  done (took 3.641475714 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.393892508 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.626960459 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.358143535 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.090141826 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.867756574 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.10367463 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.233333063 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.153484868 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097560294 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.54938722 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.38430232 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.146504832 seconds)
  done (took 18.633875887 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.097054619 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.092599739 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.104332332 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.103765894 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.093458186 seconds)
  done (took 2.118403131 seconds)
done (took 114.9201716 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.095496538 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.337803078 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.067049768 seconds)
  done (took 2.058382209 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.102985951 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.101533068 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10169487 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.098904297 seconds)
  done (took 2.035922689 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.090601581 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.093012134 seconds)
  done (took 1.806449344 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.24052674 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.188054779 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.111355436 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.09613182 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.093303007 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.093304809 seconds)
  done (took 1.912832063 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.085980363 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.089098386 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.08612768 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.089602827 seconds)
  done (took 1.976898583 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.088655767 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065159181 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067641638 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070170977 seconds)
  done (took 1.918898791 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.100244418 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.09816662 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.092328735 seconds)
  done (took 1.919236989 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.116744218 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.106324297 seconds)
  done (took 1.850461839 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.093857079 seconds)
  done (took 1.722570658 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103394612 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112987256 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.146100428 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.12884686 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.152327497 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.12815508 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.100063906 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.100840282 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.094434636 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.101477012 seconds)
  done (took 2.796219832 seconds)
done (took 22.258357035 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093880755 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.381744779 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.37619269 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105755048 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.684549134 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.372587186 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.996473425 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.108317137 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155694778 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.083608416 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.100130544 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.664105986 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.989692146 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.341283412 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.975197698 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.345763938 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.66735075 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.085725004 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.085006787 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.08466087 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.984032278 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.085337353 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.084627814 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.085148544 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.667361331 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.388692912 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.08547427 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.346025566 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.085566008 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.086866589 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.371552471 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.085274775 seconds)
  done (took 16.665276497 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08639677 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13652182 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.088678073 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.100032228 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.086627194 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.08584625 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.087714916 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.084758068 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.136088156 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.084069004 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101596403 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.08506938 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.089207382 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.085510992 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.104310748 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.085747855 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.086298955 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.086001403 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.085473775 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.085178747 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.104165335 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.084996241 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.085106505 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.085656324 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.085452501 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.099998234 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0856652 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.085367241 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.085482238 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.087438928 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.088518139 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.085882686 seconds)
  done (took 4.577225669 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.132152515 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.141007003 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.089644637 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12156845 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.127317829 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.087437575 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.163222665 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.109747432 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.143721304 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.085351803 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10179136 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.085140369 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.119325443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086425907 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.104744692 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.085538522 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.085727525 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.085606639 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.085577677 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.085286762 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.104007462 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.08545713 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.085268344 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.085987784 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.085938995 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.09916541 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.085448534 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.08593485 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0855908 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.087241879 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.088777689 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.08596332 seconds)
  done (took 4.837992319 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.086821076 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.090097677 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.097381279 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.097897977 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.083074349 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.085969409 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.087506628 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.083777736 seconds)
  done (took 2.362578373 seconds)
done (took 30.080780381 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.093444473 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.082859249 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.086761863 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.102877292 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.089130596 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.094510537 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.080088187 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.089867703 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.087340168 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.087887969 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.089092828 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.084104296 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.085904362 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.08071995 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.088259719 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.0817876 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.096791694 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.086125471 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.094966125 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.09616621 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.084811746 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.087235 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.08944912 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.094870956 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.094755498 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.094476081 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.090474911 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.087791369 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.081985247 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.084634917 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.090590908 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.096474795 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.084973581 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.094124085 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.081352699 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.081741353 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.085336287 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.083878177 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.095217093 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.090163313 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.082807983 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.09029719 seconds)
  done (took 5.347578421 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.100642494 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.105300067 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.097985838 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.075651226 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.080969087 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078753312 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.101610249 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073913498 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.073985301 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.101679316 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069763942 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.073362936 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.074536347 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067878043 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.073205543 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070529579 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075781573 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.068674502 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.073325306 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073286888 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.101838252 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067721756 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.091547823 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.074434116 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.070138373 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.07556589 seconds)
  done (took 3.746342306 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.089569389 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.101754615 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.107909454 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.157467389 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.12658207 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.095288105 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.096600491 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.107439782 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111548065 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.083721641 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.08782143 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.107303098 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107004596 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.089553942 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.083737502 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.099357618 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.099146764 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.085448744 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.089976161 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111735265 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.103833699 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100041139 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.108908803 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.099675591 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.082852855 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.086082664 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.088241046 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.098636663 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.085937705 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.094105573 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.089406163 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.087012071 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.08475434 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.094119616 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.085945419 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.083259692 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.108074316 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094625656 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.096035121 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.084241826 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.093077121 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.084939767 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.109045607 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.143260611 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.082685209 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.087770941 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.087529557 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.094841949 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.082780513 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1104648 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095469639 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.083545293 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.084525521 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.082821602 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.083161735 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086175896 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.085296344 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.085900603 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.093766986 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.090570853 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105301328 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.088444574 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.101215759 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.083171944 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.094197714 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.082777385 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.085059475 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.083156486 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.111658703 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085545902 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.127321231 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.084838683 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.082453817 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.0943646 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.093575533 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089814267 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.083728038 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101090082 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095231161 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.087762137 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.091827646 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.08669396 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.086876993 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.113539383 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.084125701 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.083821531 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.082768047 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.08724805 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.087109568 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.084194954 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.095595563 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.08310973 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.087521025 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.101275116 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.083601995 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.084466004 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.087176554 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.086346929 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.083065804 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0938437 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.08771856 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.084587892 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.094000742 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.08408556 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.087062513 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.096729005 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.08971682 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.082781871 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.086185488 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.086794885 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.08481994 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.085527771 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.087213731 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.085413519 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.09036062 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.090135248 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.089478132 seconds)
  done (took 12.525017397 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.176280641 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.169123321 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.086911568 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.160463691 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.092504008 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.094282614 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.163542074 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.108750178 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.084293464 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.085505396 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.084573585 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.12381111 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.119105135 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.130247215 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.094807615 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.085166529 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.106070177 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.127805677 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.164772811 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.15874565 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.1064398 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.092272739 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.086709757 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.086095512 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.085415922 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.093844963 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.100614807 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.092678632 seconds)
  done (took 4.852132795 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.094569784 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.119148323 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.089550371 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.106253005 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.103669616 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.081863167 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.085656931 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.085625963 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.100983194 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.090938906 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.081635167 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.090066759 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.088403336 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.085052164 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.08509796 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.088139548 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.091526885 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.083534203 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.085329559 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.087002166 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.093880117 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.103783556 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.087902016 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.08412903 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.087253495 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.083964434 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074935644 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.096725674 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.084645214 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.10848407 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.08204496 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.086256068 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.098340072 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.084980066 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.083844787 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.084393476 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.081860447 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.081876602 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.085664339 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.08046623 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.08059848 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070848811 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.083135547 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.092454309 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096923536 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.068629999 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.086452769 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.087495231 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.087319783 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.079446775 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.086848056 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.086921289 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.086908025 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.09117944 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.086028619 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.087168694 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.08489853 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.088170393 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.090479428 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.083844548 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.077523214 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.080402438 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.086224492 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076336141 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.096617478 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.086133818 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.080310521 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.081575769 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.085666334 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097134669 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.084019732 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.086026674 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.079321149 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.083699318 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.086837912 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.086601187 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.088196657 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.080642228 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.083687092 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.084486785 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.067751644 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.084335998 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.066031242 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.086968425 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.08017852 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.080318947 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.084399718 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.086397329 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.093039468 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.083778795 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.08805884 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.085206656 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.083028407 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.087544405 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072302177 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.087089161 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.094533707 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.095386384 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.08245599 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.080397734 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.098071037 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.087073287 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.080870118 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069893103 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.088960247 seconds)
  done (took 10.748722648 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.107510472 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.084062528 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.100635757 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.107255232 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093840462 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.088644097 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.094205652 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.082738682 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.099800471 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.087824553 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.090538884 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.081455403 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.095249306 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.09324901 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.083177256 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.094956298 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.0859205 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.101602003 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.098890843 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.08171122 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.092823662 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.096806999 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.096402903 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.098388075 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.097690699 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.098599773 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096330092 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.092336737 seconds)
  done (took 4.320802877 seconds)
done (took 43.185942288 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.770220171 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.912947348 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.727352849 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.915572618 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.915506925 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.851935905 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.830310354 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.728199558 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.083757664 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.774362303 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.025831991 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.801632905 seconds)
done (took 65.136220306 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.755232127 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.871091366 seconds)
    (2/2) benchmarking "String"...
    done (took 1.955557739 seconds)
  done (took 5.482250207 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.982707461 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.407165666 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.970830085 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.73142875 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.738444249 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.992049436 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.517252721 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.177518057 seconds)
  done (took 30.19095279 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.911200325 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.962986627 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.436327852 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.463547047 seconds)
  done (took 15.471280036 seconds)
done (took 62.631132375 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.720633822 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.739038294 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.769732975 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.712638448 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.825661737 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.743713435 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.076125762 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.751932341 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.738326777 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.726266762 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.74111639 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.174978234 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.749483125 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.109730475 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.739444713 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.733329945 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.771570645 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.242807976 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.892764917 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.749276591 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.752776638 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.954440595 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.738638241 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.736225912 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.799498075 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.739801245 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.150481739 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.746402366 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.366148034 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.739969707 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.771971198 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.349910537 seconds)
  done (took 203.211759833 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.733337382 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.887039176 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.002843317 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.747940338 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.251237311 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.917243965 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.840110744 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.294411036 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.740162159 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.763861538 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.868104063 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.736877376 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.887788373 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.687305405 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.762051483 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.815063325 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.023848696 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.900382092 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.767879119 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.905583763 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.748634774 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.71712732 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.687320064 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.85726133 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.740064952 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.830356375 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.76281702 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.756005596 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.923036792 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.014125625 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.744906777 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.766069379 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.937152093 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.607010457 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.756786166 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.762632841 seconds)
  done (took 168.803027397 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.922953497 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.737938294 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.735042485 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.735487473 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.741453769 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.736005914 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.857814792 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.862410271 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.357431607 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.284764518 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.73803521 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.789151747 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.736745392 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.525386464 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.735910935 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.802556673 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.747375993 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.737164633 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.751095184 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.762158035 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.737392144 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.742406781 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.858474043 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.750823916 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.737636322 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.744959528 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.73790555 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.742591527 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.103638095 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.737196738 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.130929454 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.740568039 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.742135652 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.977960139 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.739476332 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.73786156 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.586139732 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.469828735 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.822046725 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.739493594 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.743443975 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.738762738 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.954928524 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.738275329 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.744587584 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.738577312 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.740991341 seconds)
    (47/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.737761707 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.87831224 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.737224694 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.859674014 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.741106444 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.221140675 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.737961582 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.73827614 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.35892926 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.327379557 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.739491541 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.741611565 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.738213552 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.744262792 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.74307889 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.339335796 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.812055596 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.740922611 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.742136606 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.743609234 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.74084216 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.745848285 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.738061753 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.987022631 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.797984073 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.967528342 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.861273403 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.748436811 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.805529559 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.831465707 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.738787352 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.739167003 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.738850565 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.738739814 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.73862538 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.819947111 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.739416913 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.857126865 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.749489038 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.740980682 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.792824561 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.808147824 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.741542949 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.586791109 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.743433251 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.740934615 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.012044504 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.805799159 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.7416284 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.740165448 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.859014989 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.864587652 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.455470834 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.744101507 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.540831399 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.878728951 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.741106031 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.872170381 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.740246 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.740498027 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.822273703 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.747362542 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.742056956 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.774307485 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.741330966 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.794773609 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.740023685 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.113736097 seconds)
  done (took 397.903978244 seconds)
done (took 773.554665814 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.342736945 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.306644097 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.404109886 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.327132616 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.298147647 seconds)
  done (took 13.342239523 seconds)
done (took 15.006169036 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.824055869 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.830460544 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.764468608 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.828478589 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.762243403 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.829516841 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.812918509 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.767173471 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.797701303 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.76907775 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.797937971 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.768570381 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.754306618 seconds)
  done (took 24.971401351 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.975964764 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.97336921 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.807726901 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.970645936 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.787072446 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.974698963 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.906512606 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.886162336 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.889914607 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.755242838 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.753097353 seconds)
  done (took 22.345701502 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.974275177 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.983114249 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.814108215 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.978629971 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.789260595 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.992310396 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.901709695 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.890675859 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.887996439 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.755878408 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.752151938 seconds)
  done (took 22.385569242 seconds)
done (took 71.36568747 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.749959661 seconds)
  done (took 3.414807592 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.772843984 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.94431574 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.759345937 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.752880185 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.748899339 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.750533472 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.753178406 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.750422091 seconds)
  done (took 15.898471874 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.750044234 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.749699881 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.750698685 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.747496252 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.749913068 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.746680269 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.750281162 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.749510354 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.747799771 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.749513928 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.747558128 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.750491195 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.746753479 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.747998239 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.747423904 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.747338845 seconds)
  done (took 29.646127486 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.749841008 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.747240974 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.74714583 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.74801909 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.747425237 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.748237869 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.74922187 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.74768908 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.747967397 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.747680405 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.748911152 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.74859839 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.748125358 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.748577238 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.748696496 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.749733566 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.747154489 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.747477723 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.752636069 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.747542537 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.749463454 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.749682219 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.748622048 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.749079534 seconds)
  done (took 43.633379209 seconds)
done (took 94.257716263 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.452103308 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.748595468 seconds)
  done (took 9.86795328 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.751866075 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.751795703 seconds)
  done (took 5.175403014 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.751513494 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.753014333 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.751609188 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.751784075 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.751796688 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.752784081 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.752757397 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.753011222 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.752406362 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.752778774 seconds)
  done (took 19.191867304 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.75212191 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.75335941 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.750893313 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.753098042 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.752851326 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.749016441 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.752864001 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.752740656 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.752867529 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.749581365 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.752669088 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.751065107 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.753210935 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.752034798 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.753769582 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.750322076 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.750377945 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.749909909 seconds)
  done (took 33.202124201 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.752748469 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.752682723 seconds)
  done (took 5.174293651 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.750682548 seconds)
    (2/7) benchmarking "second"...
    done (took 1.750846586 seconds)
    (3/7) benchmarking "month"...
    done (took 1.749510989 seconds)
    (4/7) benchmarking "year"...
    done (took 1.751340421 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.750987984 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.75021314 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.750531153 seconds)
  done (took 13.922661527 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.754367576 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.898519965 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.976642302 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.418393564 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.754972717 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.756842757 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.681157768 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.75697881 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.759535021 seconds)
  done (took 19.426586564 seconds)
done (took 107.629102163 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.607998718 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.751198357 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.981227125 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.898906549 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.766840534 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.08919098 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.748363297 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.023726302 seconds)
done (took 42.538197586 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.769026308 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.506642084 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.559145736 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.809966022 seconds)
  done (took 15.546186483 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.729560464 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.033325014 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.749227042 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.574394906 seconds)
  done (took 21.760446212 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.118601698 seconds)
    (2/2) benchmarking "read"...
    done (took 2.106837957 seconds)
  done (took 5.901183458 seconds)
done (took 51.649017124 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.753854052 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.752384784 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.755366992 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.755309601 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.752595915 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.755427632 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.752082474 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.752749062 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.754925182 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.755453094 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.75530584 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.754529589 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755509173 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.752655174 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752540378 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756142038 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.752986858 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.753945097 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.753785633 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.752606732 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.756505168 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.756399422 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.754167552 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.75427903 seconds)
  done (took 43.773395337 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.755342723 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.754519896 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.756009339 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.756418629 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.753612499 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.756869081 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.757482412 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.754814714 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.757496128 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.757272293 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.754474361 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.754342462 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.756745589 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.75478512 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756998982 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.754504198 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.75739357 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75464913 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757012554 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.754769636 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.757476791 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754152403 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.754921893 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.757107595 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.754474755 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.75569548 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.757718658 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.755331933 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.757039927 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.754898618 seconds)
  done (took 54.347123144 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.762207679 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.766163128 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.757887625 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.757668601 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.757622209 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.758760967 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.757339375 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.758850915 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.758004978 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.758389792 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.757988513 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.758469936 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.758623178 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.758485811 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.758728201 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.75808814 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.757780379 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.757483419 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.757593092 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.759573481 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.758625307 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.759588507 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.759524858 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.758436401 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.761049684 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.758772465 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.75853739 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.7584096 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.758828002 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.758609486 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.759530397 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.759400223 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.759712955 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.759570154 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.758833587 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.759443851 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.76466687 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.767214629 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.759645765 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.759197357 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.758958718 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.759864829 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.760730351 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.759900225 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.759810766 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.759822054 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.759918222 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.759851357 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.75999464 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.760410157 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.759770775 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.759024929 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.760127463 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.759604044 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.760576468 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.76008099 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.760288656 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.761458126 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.759789527 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.760616417 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.760844731 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.760637756 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.759183474 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.761112629 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.760600205 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.761617008 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.75988898 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.760366471 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.760120712 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.761296443 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.761403576 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.760130167 seconds)
  done (took 128.37680062 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.761177152 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.758926502 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.758469881 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.758912637 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758810841 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.763405414 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.75889474 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761659088 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759003736 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.761484347 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761814225 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.759115371 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759411084 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.761667679 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.760984376 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.758502835 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.762177351 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.759914501 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.762515635 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.762185597 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.761704951 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.759276474 seconds)
  done (took 40.407982081 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762251634 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.762553821 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.75940728 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.761985409 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.758525712 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.76174515 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.761523402 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.761215705 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760888739 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758895141 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75898009 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761891144 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.759928516 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759429301 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759900844 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.759523888 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762534481 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.75993698 seconds)
  done (took 33.369458346 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.759955047 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.758871549 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.761637959 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.759895717 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.760037697 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.762161709 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.759475008 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.763603293 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.762107103 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.760239431 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.762488743 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762482216 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.762580716 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760620361 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763987561 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.760920653 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.762710259 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760721472 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.763321056 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.760789656 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.761842392 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.763669791 seconds)
  done (took 40.433592622 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.763851762 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.764468502 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.761569999 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.762427845 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.761289633 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.765094747 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.764337089 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.76250677 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.764877193 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.764103594 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.762643421 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.765587291 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.761790494 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.763008317 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.761544138 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.760786803 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.764541301 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.762640222 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.765405068 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.761521035 seconds)
  done (took 36.944214253 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.771779592 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772477415 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.771554192 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771525936 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.771915121 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.771922208 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772661199 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.772252045 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.772065254 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.770782783 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.772457674 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.771569904 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771866274 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.77088743 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772874378 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.77129015 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772652119 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772116819 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.771426117 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772597364 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.771763276 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.772652551 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.772473351 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.773058702 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.772470599 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772329187 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.772034608 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.772020771 seconds)
  done (took 51.297948244 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.765523268 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.767285302 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.763674196 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.764287088 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.76338905 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.764118027 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.76469252 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.763214273 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.765629788 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.764244202 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.767109471 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.766863626 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.765959828 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.767215306 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.767029359 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.766777652 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767656172 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.764497412 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.76374204 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764535933 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.765674818 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767497579 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.766076563 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.763885223 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764208178 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.766542768 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.764235744 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.764415262 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767703805 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.765363641 seconds)
  done (took 54.645350966 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.785677493 seconds)
    (2/2) benchmarking "in"...
    done (took 1.785918217 seconds)
  done (took 5.254632274 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.764239459 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768118519 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.769531242 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.766849585 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.766461665 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.770485281 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.770318241 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76781385 seconds)
  done (took 15.826399663 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.775664225 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.768166834 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.76666228 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.767941001 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.768287674 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.769038749 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.785790052 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.770986505 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.781500571 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.773760803 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.787462985 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.7780721 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.779203343 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.776737118 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.776858388 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.779186293 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.768519916 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.768977123 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.768725365 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.770095705 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.772099982 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.780448008 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.780579948 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.76674033 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.778258986 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.789538016 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.782617646 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.769754355 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.778232586 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.782328116 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.777999199 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.767873406 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.769853665 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.769660132 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.76936958 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.770527947 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.78787964 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.779618787 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.783964934 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.770680912 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.770117924 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.767788712 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.780235416 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.779641917 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.779733105 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.770982639 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.771519684 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.766830024 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.771270599 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.783545575 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.776050847 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778132779 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.766964173 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.783025631 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.780622678 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.786098585 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.772122814 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.782712346 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.788922182 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.790655487 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.792649511 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.786898335 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.781981972 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.77125937 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789594481 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.803996797 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.788135047 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.768721246 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.769145677 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.770786495 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.78765984 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794909452 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.790176907 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.771767073 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.772446468 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.771564457 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.780962454 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.773016584 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.789951521 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.784391325 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.772314156 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.773347901 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.791699358 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.803468786 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.779765633 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.772101781 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.773331829 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.772760261 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.774758876 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.792850059 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.772690491 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.772373704 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.772775329 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.78080144 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.774573843 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.773394513 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.772923476 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.780655615 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.770279554 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.772835143 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.773006537 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.785567214 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.790489012 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.773280375 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.77267731 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.788480276 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.773170602 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.781400464 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.789448737 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.772949877 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.77255424 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.775854772 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.788115001 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.770339914 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.785746449 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.782782025 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.773245043 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.783204798 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.773773409 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.773839037 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.793283356 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.809336715 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.774605786 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.77312144 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.788280327 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.786063217 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.774043983 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.786755201 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.775326938 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.772352739 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.77238837 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.785959271 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.775366645 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.784266169 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.774294502 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784364142 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.771898363 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.774926031 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.775316425 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.785662414 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.777287873 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.783060829 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.785363559 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.785586769 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.776292939 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.787652456 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.790352967 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.776904559 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.785799405 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.779212123 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.772001476 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.775130238 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.784823313 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.778813627 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.777013449 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.774584087 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.783817118 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.775096939 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.776157937 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.775848048 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.776290275 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.779098301 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.789074232 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.777169762 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.789041688 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.783695706 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.773031061 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.777662259 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.776408896 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.777608768 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.776641513 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.775867042 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.788625295 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.785441296 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.777002086 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.77724532 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.78875353 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.776749874 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.776814655 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.777325833 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.787827807 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.794317256 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.777471756 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.792549533 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.778095057 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.777830802 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.776775981 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.786389047 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.784124048 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.777486665 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.790147858 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.784740031 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.799072618 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.794611654 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.780661267 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.783169213 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.779746698 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.782506889 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.790026534 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.778810188 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.778398481 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.777816418 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.786194422 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.777943723 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.788588364 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.778086722 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.779647104 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.778742046 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.778513342 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.778574527 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.77920283 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.786897703 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.787549241 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.776053233 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.778669627 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.778405037 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.786091254 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.776416025 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.778628253 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.779722157 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.779175668 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.779066229 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.794433448 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.777075824 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788730541 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.7894525 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.787402523 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.779345579 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.779484776 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.790625245 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.787637595 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.796400484 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.781225241 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.787930452 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.794472041 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.780998165 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.779496772 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.791419703 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.779771579 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.776708127 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.792857871 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.788705762 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.780795632 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.780905956 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.781602206 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788315038 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.780951087 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.797207991 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.778439103 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.78939377 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.781043706 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.783307965 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.776985102 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.790142218 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.790346086 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.783161239 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.791557173 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.78044735 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.781636912 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.790858767 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.780756031 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.781092678 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.781485467 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.79304454 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.789249052 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.794865435 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.783495149 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.783318408 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.783637102 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.785730672 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.789777939 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.782140302 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.78918451 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.803253768 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.790898803 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.796548239 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.791870294 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.78224843 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.796555738 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.785470935 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.787321566 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790215514 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.791175587 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.789698104 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.78982621 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.778792487 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.79106498 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.782347994 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791787648 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.79224808 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.786718216 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.782494538 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.79151378 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.783823595 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.783258543 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.784328428 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.790580658 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.786107692 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.797196125 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.795610726 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.784253734 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.791286877 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.800155035 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792106951 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.793182327 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.790990272 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.791611799 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.784684684 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.786275689 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.783665408 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.797544541 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.791857227 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.795484132 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.802233109 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.793553711 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.802002311 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.784386002 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.796032661 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.792796358 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.781477794 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.783522237 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.785535955 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.784371864 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800884177 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.784567562 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.786690422 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.788648085 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.783878759 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.785408984 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.784066076 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.783922492 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.784592679 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.785254659 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.803804677 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.787734791 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.797040582 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.796204974 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.782147003 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.784827026 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.785390966 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.784450365 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798422281 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.785420978 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.794341955 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.793525885 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.786933907 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.784402817 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.785762062 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.784511742 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.782348073 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.785024284 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80296907 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.788337689 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.790128295 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.786276135 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.803537026 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.786456151 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.803564996 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.786181971 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.787744419 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.787223953 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.785347969 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.789004253 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.787470038 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.795526445 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.785663416 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.788797435 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.790961126 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.786556858 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.790642545 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.795239005 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.789096081 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.795714608 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.806917563 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810727269 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.797017279 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.795198667 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.785276012 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.796776133 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.790872505 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.786849597 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.786844365 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.799249336 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.806594949 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.794953074 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.795985499 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.786374894 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.795949177 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.787024511 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.787583051 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.787662307 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.787902844 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.788416942 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.790038789 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.787240231 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.801486569 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.787325029 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.789387507 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.798028122 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.790067449 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.80730307 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.788232841 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.789904787 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.787429731 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.788456378 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.797582913 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.796331942 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.788160604 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798938404 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.788894026 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.798692648 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.805859301 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.79659269 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.799988167 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.796143704 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.789551801 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.796650385 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.790581432 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.788660257 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.790209171 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.788951742 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.798816587 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.790004589 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.790231187 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.790529355 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.789445895 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.791513262 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.789522663 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801638146 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.805475184 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.798525753 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.787602031 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.78836756 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.789259713 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.789016421 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.797945067 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.806211802 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801447045 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.809693195 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.799541474 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.794280739 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.798504134 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801830282 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.806742534 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.790008464 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.798676141 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.789665918 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.799230141 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.792247509 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.802125285 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.790537326 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.806095997 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.798721746 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.791959944 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.808741539 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.800957178 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.78983473 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.801628553 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.803059974 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.799225819 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.787571641 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.791399129 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.797961902 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.807687211 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.801356278 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.791281103 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.80264883 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.790556683 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.801302158 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.796356732 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.792460863 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.802123091 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.789470124 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.79973743 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.792465478 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.792942155 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.789281524 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.793610249 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.793162357 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.803749335 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.800316866 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.790058472 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802059951 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.80122235 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.794893982 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.791554238 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.79372618 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.7896728 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.789026906 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.793498086 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.792739622 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.800798059 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.803713726 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.794533149 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.794646744 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.793629767 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.793862204 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.80543387 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.811872728 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.800571487 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.789808869 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.792692215 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.794434269 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.804765961 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.796030997 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.792673334 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.801615877 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.803659938 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.793449022 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.793326685 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.792489997 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.807090013 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.81989433 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.793475333 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802799532 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.80231577 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.806163457 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.794183457 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.790965368 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.794784095 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.798218437 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.80545117 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.803167221 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.794750913 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810606562 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803447537 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.796131314 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.799737901 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.806830309 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.804582003 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.806731831 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.795283681 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.795591898 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.809179879 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.819905763 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.794313947 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.814124605 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.835161134 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.796746544 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.796649814 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.794069401 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802659836 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.794788144 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.798523423 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.795306845 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.796998117 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.795079633 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.795453996 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.797675999 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.810985805 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.805894369 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.794755578 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.793445556 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.794873083 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.795883939 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.790896399 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.794094192 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.79295984 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.793433332 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.793876608 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.793843525 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.802538667 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.816023429 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.805251119 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.794532931 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.794928284 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.791020505 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.80674201 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.80599427 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813941885 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.802045609 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.795209283 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.794977593 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.804739223 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.793989239 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.792658142 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.804100729 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.802998935 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.804474431 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.792234037 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.816127625 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.804518838 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.809743367 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.796310649 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.795205277 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.795802971 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.806229339 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.795132881 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.794909671 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.806143499 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.798070744 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.800889436 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.794757404 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.795799444 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.808103111 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.803153669 seconds)
  done (took 1067.602344646 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.793713471 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.792709329 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.793377469 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.79321229 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.793076601 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792822928 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.792859136 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.793312936 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.792564597 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.79346761 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.794178348 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79345161 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.793432178 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.794143282 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.793006899 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.793819212 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793222376 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.793664542 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.793070921 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794067606 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.793849953 seconds)
  done (took 39.371423369 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.797236942 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.794368542 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.793742068 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.797053202 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.792651109 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.794468798 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.792373195 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794364058 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.798128251 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796870454 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.796684232 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796032169 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.791892432 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.79302982 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793265623 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795946719 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.797129388 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792902924 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.795495934 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.794822335 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.794656763 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.792450383 seconds)
  done (took 41.197220403 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.79528173 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.795959408 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.805035822 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.792147636 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.79597384 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.793590771 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.797005934 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.796875951 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.796213042 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.797655413 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.795727633 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.797787035 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.81183933 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.802305951 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.798382669 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.795622894 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.939643154 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.794759491 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.796748889 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.795765571 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.789498604 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.807861312 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.790582227 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.789942919 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.793117715 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.792323497 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.791919751 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.792645746 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.791556551 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.795332648 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.795829301 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.79124129 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.798730801 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.801360246 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.791409041 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.795236757 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.794600965 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.790116896 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.787469277 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.790400679 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.810376344 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.812197869 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.790863168 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.806302123 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.791008384 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.790994208 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.80381586 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.798902494 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.788577165 seconds)
  done (took 89.870372561 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.790665087 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.790644486 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.789395306 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.791055722 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.79191776 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.791887478 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.791112204 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.791120673 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.78931544 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.788902936 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.791695475 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.788117753 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.789197862 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.79158836 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.792449381 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.789364284 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.789358955 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.788289983 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.789057459 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.788926285 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.788135365 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.791112414 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.791734853 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.78972652 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.794122719 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.788201616 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.787344097 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.791209732 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.788010926 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.788535011 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.79227366 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.791376548 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.790893357 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.788044546 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.788584108 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.79121112 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.792705782 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.788392181 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.791290809 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.789795564 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.79168578 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.793282859 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.791355613 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.792093494 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.788868739 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.788456521 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.788929634 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.789935667 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.790157995 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.791214993 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.791525661 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.789409865 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.792109819 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.78896282 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.792196097 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.793165333 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.78959932 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.790815592 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.794286104 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.789404677 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.789227777 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.792691952 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.790550548 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.792490088 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.792859577 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.790300132 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.791008383 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.793180213 seconds)
  done (took 123.464477537 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.793613609 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.792445083 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.79274063 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792722861 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.792368044 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.79232603 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.78910034 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.785363287 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.784707165 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.78536386 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.785406962 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.788561914 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.782497091 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.782521515 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.781907298 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.782845482 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.78275803 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.783079251 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.781539353 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782737977 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.781910573 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.782040495 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.781603858 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.78276654 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.782539692 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.782188099 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.782109731 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.781841455 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783475602 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.781475469 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.781482725 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.781713398 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.781325932 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.78146487 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.783472629 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.781050684 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.781438764 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781630656 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.782461341 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.782801528 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.781655571 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.782437334 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.782558375 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.783105176 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.78283165 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.783295843 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.781837403 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.78344143 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.782579557 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.78216929 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.782447112 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.782761234 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.78204622 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.782521652 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.782805274 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.782539432 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.78252888 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.781978322 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78180243 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.78295855 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782622711 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.782850043 seconds)
  done (took 112.300281502 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78128956 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.781505248 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.779231805 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.779444868 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.782757379 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.780006315 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.781515616 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.782069714 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.783199972 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.782101214 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782710035 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780291367 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781569401 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783673457 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.779979483 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78069223 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.780977158 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.779515457 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.782621383 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.779405959 seconds)
  done (took 37.321937027 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.779951877 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.781524828 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.777468587 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.777763778 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.78134392 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.779537589 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.782880571 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780422642 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777356553 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780452536 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.780624154 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.780248387 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778912299 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.776586652 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.779819156 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.77695218 seconds)
  done (took 30.1686591 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.77862753 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.781496248 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.780010506 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.779448051 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.777128546 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.776601603 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.780820795 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.776662001 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.77613001 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.779243592 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.778911491 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.779322872 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.780766213 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.778143719 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.774905733 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.778146923 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.7762143 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.775921538 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.776455131 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.777451971 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.774943378 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.774169654 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.77631036 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.777835037 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.774484189 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.774673771 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.773116657 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.773852814 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.773278567 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.776334033 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.774067304 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.77325649 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.77489378 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.772918898 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.777717016 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.773412916 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.775999883 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.776754297 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.77714903 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.776156078 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.778778955 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.774748723 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.776260734 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.776641184 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.773163748 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.776813801 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.773353326 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.772846029 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.772526322 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.773229 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.775406184 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.777421775 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.774684195 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.775765608 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.77699079 seconds)
  done (took 99.388172915 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775157844 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.776103218 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.773295136 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.774944048 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.775688594 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.772746287 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.777887909 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.772235882 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772367134 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.774238281 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.772778998 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.774578124 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.774250156 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.773537128 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.771972472 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774136361 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.771472824 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.771598359 seconds)
  done (took 33.620572385 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.775144867 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.771150889 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.774801151 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.771739124 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.772827273 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.773738807 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771278806 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.773376852 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773692939 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.772151974 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772069577 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.774041412 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773631248 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.77383182 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.772264366 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772034325 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.777120576 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773687621 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.770588854 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770799606 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.773046937 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774468275 seconds)
  done (took 40.698365017 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.77286278 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.773810053 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.790632076 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.792949448 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.79757689 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.806079544 seconds)
  done (took 12.42208862 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769818108 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772947124 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.771779138 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773693216 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.774025496 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770496828 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770579738 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770443936 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77425431 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770394407 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770911295 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773404537 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773350878 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771357385 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77331584 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773858542 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771129039 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77199947 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770434393 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.774342499 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770699913 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772939291 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770482737 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771570837 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771779256 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771092516 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773058092 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770229759 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771300514 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772577679 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773467872 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771074688 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773712264 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770414581 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772844367 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773734191 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772264253 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.772633569 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772630335 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771627751 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.773983371 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773689282 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775158733 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770295932 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773053181 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770350726 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770609208 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770925626 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770789722 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773563616 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773723792 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771380735 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773499099 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774805672 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772579248 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772178048 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769872371 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769731378 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771631901 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770642031 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768576499 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77133348 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769273413 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770862434 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.772818785 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771108885 seconds)
  done (took 118.63899279 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769228624 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.769935216 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769741337 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.772547874 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770060059 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.77060236 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769426262 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769081749 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769836876 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771818199 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.772360714 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770322319 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770705502 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76989498 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770325124 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771266785 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769179097 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769419367 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769587078 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771733589 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770668797 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770122315 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769781972 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769315002 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769650608 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771647871 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770101077 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768427077 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768465464 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768511132 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768641226 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767658643 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768784238 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.767655891 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768165439 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767969572 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768608483 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769918076 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768961492 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771469021 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767889805 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77086524 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767744683 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769704249 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768479039 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768096875 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768668888 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767371122 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770132275 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76888258 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769574998 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768463342 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768385745 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768483565 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770347338 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76810893 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768611433 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76826611 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767767543 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771365677 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769307061 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768260586 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770749045 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769218008 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76906857 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769872414 seconds)
  done (took 118.473702852 seconds)
done (took 2470.891196074 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.806579817 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.758312904 seconds)
  done (took 15.250914433 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.937768572 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.886364217 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.77227247 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.806487181 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.771982863 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.796992935 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.794921405 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.773318476 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.773593108 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.772913995 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.772283165 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.959390596 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.828109332 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.773109442 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.773328419 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.866833783 seconds)
  done (took 50.749989151 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.776793917 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.77601705 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.788518372 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.778004741 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.775974675 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.789243527 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.810185447 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.779078554 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.810803693 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.788640685 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.84500822 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.788711575 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.776079739 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.825771738 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.792366092 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.79240701 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.872916265 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.876350386 seconds)
  done (took 34.130550151 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.854299496 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.776331575 seconds)
  done (took 10.325318183 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.769295853 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.82062088 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.840758587 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.77489633 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.783230992 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.786948349 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.767682689 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.769036349 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.770990279 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.784458565 seconds)
  done (took 69.558751828 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.782130372 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.776964396 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.778103978 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.77592343 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.770234708 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.773894239 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.775314807 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.775191174 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.44033189 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.813003921 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.783974003 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.782779554 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.776087601 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.777259104 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.773466465 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.799748442 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.895918044 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.773102565 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.773514722 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.782211001 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.778764557 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.834875631 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.790638266 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.776088111 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.807743823 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.439939618 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.784606587 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.781945616 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.886743724 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.772344036 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.776240583 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.777282112 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.780188062 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.227118619 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.043280728 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.7817302 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.794300919 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.786093105 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.774176325 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.896513223 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.777039975 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.78406949 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.480707557 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.019475546 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.870014986 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.81762267 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.107260326 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.7944322 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.77762886 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.807897419 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.78088763 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.778418739 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.791620771 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.260648691 seconds)
  done (took 127.20858752 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.77411521 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.123970193 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.941488576 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.772947226 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.060214411 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.984381598 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.773967996 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.82237642 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.774081655 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.005579726 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.032283886 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.880289505 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.773846103 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.772768863 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.771450605 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.772216648 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.929918924 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.849554973 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.774850277 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.771798408 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.805202009 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.0185598 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.898589897 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.77499543 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.803218291 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.986518508 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.896869575 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.878816955 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.562195543 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.771453655 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.838072186 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.775323743 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.7739881 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.772136429 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.930347978 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.869278696 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.862024256 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.776522817 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.773513862 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.772944668 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.437670783 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.977063405 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.871311688 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.906193187 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.027216175 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.981884724 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.560535025 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.771296946 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.514147148 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.939061971 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.004603274 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.006339934 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.898591911 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.777267286 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.113838512 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.772946625 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.772571548 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.026909633 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000744773 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.873667577 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.776127436 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.775675527 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.773798985 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.017194789 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.776321238 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.87253276 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.776702478 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.773260042 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.874647604 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.877222566 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.001662826 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.99088414 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.808134938 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.133850699 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.281007167 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.025185864 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.84295742 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.0297717 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.778691895 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.774357464 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.854992185 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.622073895 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.031433828 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.019715179 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.022442434 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.812454688 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.497481844 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.774177543 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.003799457 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.001181334 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.036129069 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.02181638 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.014704569 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.106912619 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.774145118 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.775446449 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.050177741 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.903574388 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.776832034 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.124538955 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.010417854 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.309909714 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.807063987 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.082586514 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.911061892 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.779277652 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.410254191 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.774525986 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.008366522 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.822803002 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.776061847 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.776629396 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.998121708 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.76835268 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.776839411 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.428603599 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.84083064 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.779075647 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012872557 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.778043973 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047524086 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.779194492 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.013543064 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.226180136 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.809893415 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.953452948 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.024939411 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.780233655 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.020937856 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.025391702 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.894402438 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.002234176 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.49100295 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.779128187 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065591688 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.778736891 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.776983985 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.949389645 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.778264417 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.922046168 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.780818678 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.073718915 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802546751 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.010486519 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.781173651 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.037822587 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.815764303 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.831262783 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.781110912 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.906569558 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.779790279 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.705798425 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.939219415 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.779541319 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.778850429 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.336778579 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.779103744 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.928636399 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.00757627 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.217462611 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852006823 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.451734983 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.778148352 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.861668378 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.804100076 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.171811678 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.780007672 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.032517242 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.779970849 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.778541325 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.778581205 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.016813499 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.967461156 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.781021826 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.778205427 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.688775856 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.77683085 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.778185419 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.962939305 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.119214244 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.779163527 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.984362372 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.780463632 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.910393853 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.783422706 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.861159852 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.115183761 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.77855268 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.77973762 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.778993179 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.779161897 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.777990969 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.991549471 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.808154802 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.277489989 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.919805202 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.054036059 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.095646937 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.023259368 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.825480269 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.784843724 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.037380226 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.781157941 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.846049271 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.782056547 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.804427986 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00952345 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.784456906 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.046780413 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.054168969 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.629229178 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.830204582 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.782735564 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.780407207 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.779560252 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.928440123 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.86815191 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.782559438 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.782809481 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.898065957 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.905210646 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.993386779 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.781513931 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.84166521 seconds)
  done (took 882.626008671 seconds)
done (took 1191.538033501 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.782270806 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.780962388 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.767095825 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.783949601 seconds)
  done (took 28.816174753 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.787557397 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.785729693 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.794390952 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.787253435 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.786798934 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.786297737 seconds)
  done (took 12.428150446 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.816632381 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.780282865 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.784936794 seconds)
  done (took 21.082629023 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.858424937 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.172167613 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.921119649 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.202635724 seconds)
  done (took 9.855004126 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.794830916 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.795914749 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.794861461 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.788772296 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.789206314 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.789322987 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.787820012 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.788497984 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.788665241 seconds)
  done (took 17.820503729 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.795892949 seconds)
done (took 95.499646302 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.970114012 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.049935389 seconds)
    (3/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.12174336 seconds)
    (4/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.880746426 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.853989938 seconds)
    (6/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.22652584 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.924181881 seconds)
    (8/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.005380276 seconds)
    (9/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.84680437 seconds)
    (10/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.868484924 seconds)
    (11/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.613718241 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.78763932 seconds)
    (13/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.060465986 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.803328973 seconds)
    (15/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.80769925 seconds)
    (16/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.654368235 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.104687955 seconds)
    (18/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.218785238 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.105670516 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.797469552 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.947550247 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.783471673 seconds)
    (23/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.943029623 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.998155225 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.786078054 seconds)
    (26/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.972072999 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.129770907 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.811513567 seconds)
    (29/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.872873786 seconds)
    (30/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.803083413 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.782803232 seconds)
    (32/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.9579997 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.917968941 seconds)
    (34/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.988448284 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.821633869 seconds)
    (36/309) benchmarking ("sort", BigInt, false)...
    done (took 6.783603184 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.076231464 seconds)
    (38/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.879314128 seconds)
    (39/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.890414723 seconds)
    (40/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.920858499 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.886154716 seconds)
    (42/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.768014632 seconds)
    (43/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.057749771 seconds)
    (44/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.141718824 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.898430217 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.784415678 seconds)
    (47/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.116312755 seconds)
    (48/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.336916862 seconds)
    (49/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.802995103 seconds)
    (50/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.765027255 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 3.386538558 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.916830235 seconds)
    (53/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.806829698 seconds)
    (54/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.850900853 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.892131344 seconds)
    (56/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.891095596 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.097007628 seconds)
    (58/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.16089903 seconds)
    (59/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.545043707 seconds)
    (60/309) benchmarking ("sort", Float64, false)...
    done (took 5.571382922 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.168204514 seconds)
    (62/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.990286474 seconds)
    (63/309) benchmarking ("sort", Bool, false)...
    done (took 2.007247891 seconds)
    (64/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.784147705 seconds)
    (65/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.854232482 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.411905593 seconds)
    (67/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.912159217 seconds)
    (68/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.871716046 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 5.520924833 seconds)
    (70/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.868717188 seconds)
    (71/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.78196323 seconds)
    (72/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 8.448023635 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.162801692 seconds)
    (74/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.136702961 seconds)
    (75/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.88477358 seconds)
    (76/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.925141164 seconds)
    (77/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.816837059 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.278792111 seconds)
    (79/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.956274906 seconds)
    (80/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.815758057 seconds)
    (81/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.890324863 seconds)
    (82/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.775823845 seconds)
    (83/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.562279576 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.826333821 seconds)
    (85/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.798509084 seconds)
    (86/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 5.159725851 seconds)
    (87/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.984962546 seconds)
    (88/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.149942397 seconds)
    (89/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.800979731 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.523949728 seconds)
    (91/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.822001854 seconds)
    (92/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.774863156 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.82497659 seconds)
    (94/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.971562493 seconds)
    (95/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.798183729 seconds)
    (96/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.211835194 seconds)
    (97/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.047941001 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.163046463 seconds)
    (99/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.781733481 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.781319593 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.144859885 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.798831215 seconds)
    (103/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.8078931 seconds)
    (104/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.292145919 seconds)
    (105/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.819345045 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.930359809 seconds)
    (107/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.930154978 seconds)
    (108/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.817340385 seconds)
    (109/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.778961656 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.292157277 seconds)
    (111/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.233103414 seconds)
    (112/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.135710884 seconds)
    (113/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.808203855 seconds)
    (114/309) benchmarking ("sort", Float32, false)...
    done (took 5.530354975 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.780479933 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.944680196 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.995120992 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.819844604 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.103901269 seconds)
    (120/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.88875548 seconds)
    (121/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.81603289 seconds)
    (122/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.776490617 seconds)
    (123/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.092513001 seconds)
    (124/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.799025563 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.844161798 seconds)
    (126/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.781025664 seconds)
    (127/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 3.194340396 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.143339127 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.776933668 seconds)
    (130/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.956536561 seconds)
    (131/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.189799905 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.781282294 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.923557026 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.777145354 seconds)
    (135/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 3.201064664 seconds)
    (136/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.95935244 seconds)
    (137/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.821308484 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.050855739 seconds)
    (139/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.780043247 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.950002364 seconds)
    (141/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.944838459 seconds)
    (142/309) benchmarking ("sort", Int8, false)...
    done (took 4.696847578 seconds)
    (143/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.896269201 seconds)
    (144/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.978930655 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.589485178 seconds)
    (146/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.922140508 seconds)
    (147/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.699261974 seconds)
    (148/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.49589073 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.058704762 seconds)
    (150/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.874042021 seconds)
    (151/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.30639308 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.112798524 seconds)
    (153/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.090663418 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.82609449 seconds)
    (155/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.927127136 seconds)
    (156/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.933492824 seconds)
    (157/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.366460737 seconds)
    (158/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.790904683 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.301933782 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.822112686 seconds)
    (161/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.877578283 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.480236201 seconds)
    (163/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.780946172 seconds)
    (164/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.195452686 seconds)
    (165/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.804946834 seconds)
    (166/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.217473048 seconds)
    (167/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.977738054 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.784902222 seconds)
    (169/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.904429685 seconds)
    (170/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.535838039 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.800162181 seconds)
    (172/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.036284078 seconds)
    (173/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.958826897 seconds)
    (174/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.961134965 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.802195853 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.208646686 seconds)
    (177/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.297891607 seconds)
    (178/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.818917554 seconds)
    (179/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.797599093 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.934604229 seconds)
    (181/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 3.171713528 seconds)
    (182/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.808534891 seconds)
    (183/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.408764637 seconds)
    (184/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.892351897 seconds)
    (185/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.08926399 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.804523825 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.798685227 seconds)
    (188/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.081960276 seconds)
    (189/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.903571413 seconds)
    (190/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.119844488 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.838540827 seconds)
    (192/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.823400482 seconds)
    (193/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.144257902 seconds)
    (194/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.084795343 seconds)
    (195/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.871228813 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.118296102 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.803146163 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.491717168 seconds)
    (199/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.885583849 seconds)
    (200/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.862644835 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.723375789 seconds)
    (202/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.045506627 seconds)
    (203/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.13502641 seconds)
    (204/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.945859643 seconds)
    (205/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.155708293 seconds)
    (206/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.806046439 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.192551598 seconds)
    (208/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.868118398 seconds)
    (209/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.895351809 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.867904102 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.920743598 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.780370599 seconds)
    (213/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.473113786 seconds)
    (214/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.801864162 seconds)
    (215/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.980965417 seconds)
    (216/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.977247356 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.781245743 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.055428659 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.068807054 seconds)
    (220/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.80594791 seconds)
    (221/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.660560525 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.455544749 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.005444621 seconds)
    (224/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.160644007 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.807338421 seconds)
    (226/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.890901237 seconds)
    (227/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.940443648 seconds)
    (228/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.800642417 seconds)
    (229/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.079741112 seconds)
    (230/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 3.39001095 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.856637027 seconds)
    (232/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.863371029 seconds)
    (233/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.889108574 seconds)
    (234/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.940936203 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.098399046 seconds)
    (236/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.809650664 seconds)
    (237/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.059637937 seconds)
    (238/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.787574264 seconds)
    (239/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.194378481 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.163971359 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.486972387 seconds)
    (242/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.056233137 seconds)
    (243/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.824018487 seconds)
    (244/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.004090935 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.804222606 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.966697014 seconds)
    (247/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.142746855 seconds)
    (248/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.006734068 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.804590213 seconds)
    (250/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.06080852 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.1598457 seconds)
    (252/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.78745733 seconds)
    (253/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.959534055 seconds)
    (254/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.044618962 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.93618652 seconds)
    (256/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.73133012 seconds)
    (257/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.906617707 seconds)
    (258/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.138922957 seconds)
    (259/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.942073417 seconds)
    (260/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.922318144 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.916171498 seconds)
    (262/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.490125669 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.809299923 seconds)
    (264/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.814248844 seconds)
    (265/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.804032864 seconds)
    (266/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.9950493 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.952415868 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.1323506 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.430741913 seconds)
    (270/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.995197332 seconds)
    (271/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.813869334 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.786522569 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.904449294 seconds)
    (274/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.818799412 seconds)
    (275/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.043560395 seconds)
    (276/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.824175001 seconds)
    (277/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.297255324 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.812995219 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.648168908 seconds)
    (280/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.932722622 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.926943751 seconds)
    (282/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.901734068 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.068735162 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.948451212 seconds)
    (285/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.925261715 seconds)
    (286/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.989271595 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.576341905 seconds)
    (288/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.102454718 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.610596414 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.948265313 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.923225472 seconds)
    (292/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.901974159 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.842022319 seconds)
    (294/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.80563688 seconds)
    (295/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.95032131 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.719695411 seconds)
    (297/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.811450702 seconds)
    (298/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.283760722 seconds)
    (299/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.811423308 seconds)
    (300/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 3.128928929 seconds)
    (301/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.056313313 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.91679132 seconds)
    (303/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.946248824 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.808864097 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.02738552 seconds)
    (306/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.990798767 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.215174942 seconds)
    (308/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.057679994 seconds)
    (309/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.838809995 seconds)
  done (took 982.780399881 seconds)
done (took 984.54675864 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.834743545 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830430162 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.812523711 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.834833179 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.925563286 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.839209236 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.823332853 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.814162801 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.859902844 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.863254014 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.811735806 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.837627944 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.817262934 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.815151421 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.813255625 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.830776137 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.131499796 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.848167167 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.832033961 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.824472692 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.831727748 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.812576274 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.864358286 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.837594526 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.817901286 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.816586734 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.818855901 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.833995256 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.927182271 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.816964748 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.817478226 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.826795797 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.130613868 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.843917764 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.808894347 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.835279834 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.828930271 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.822395475 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.817732351 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.847874499 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.219302983 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.853979102 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.816502926 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.814237912 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.81609448 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.818936588 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.819995589 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.820373054 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.830160689 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.832722653 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.210800563 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.873663338 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.818745452 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.817592696 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.825491524 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.817295874 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.818716347 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.835097077 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.835956014 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.833167133 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.114713982 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.852738441 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.818030405 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.833778368 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.824753454 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.248305418 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.851429182 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.821157801 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.2198513 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.861977112 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.245717189 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.866717268 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.818357314 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.831643659 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.850934674 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.13250021 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.841837572 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.815399856 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.824865033 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.814593925 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.824504507 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.831997638 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.821531435 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.818722027 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.834292802 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.843348521 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.826791736 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.819788391 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.826055923 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.838045034 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.825944991 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.82932419 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.820124075 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.813024106 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.827226368 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.820549695 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.821016907 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.821469088 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.822687387 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.829244611 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.219212057 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.8771132 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.815194949 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.814432543 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.816896905 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.833683494 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.219968286 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.860315817 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.840087186 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.864774895 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.820186466 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.116525796 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.852388514 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.838847792 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.828212753 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.821724125 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.81445072 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.117473536 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.247480259 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.875416398 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.821369663 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.818467158 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.837950651 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.82071796 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.816293261 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.134562179 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.852565494 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.83872361 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.94243627 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.830835577 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.854273341 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.819015104 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.823281539 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.849469834 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.838606572 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.851567552 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.822273489 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.83928436 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.836643686 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.816201075 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.831554433 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.829407399 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.820124889 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.824504771 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.814563578 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.850102826 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.835439718 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.835436445 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.840399263 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.941764207 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.817138289 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.117523628 seconds)
done (took 285.938167115 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.89844321 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.813737902 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.919657841 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.81795205 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.906390926 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.893371226 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.81469527 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.817569099 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.817566735 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.311563073 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.816271245 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.816131746 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.818410659 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.816344096 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.889797787 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.819797905 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.817261505 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.25986203 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.820610594 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.900543081 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.814558511 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.815988539 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.819776875 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.314945321 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.81372525 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.814638563 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.899250186 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.820108076 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.276207785 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.814341877 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.81727734 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.266174942 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.900250216 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.839558289 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.829760004 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.827161506 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.909166207 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.826069015 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.889156152 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.889378985 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.91515476 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.859712601 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.81824552 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.821670802 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.825218672 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.822740487 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.819407404 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.847680907 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.821451782 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.818978922 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.260985337 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.830633886 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.820237014 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.819744209 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.818761086 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.852668539 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.819047943 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.823348294 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.902982816 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.823181729 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.890138908 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.326412671 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.315797568 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.821406672 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.815966947 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.820492069 seconds)
  done (took 181.849163294 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.889906548 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.898874717 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.888587812 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.828502897 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.872141638 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.890378516 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.82796822 seconds)
  done (took 14.830401498 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.828704434 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.823778331 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.881275936 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.881421012 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.821743826 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.015600337 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.823429728 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.83367265 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.820033668 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.850185224 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.823449622 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.824344993 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.829216072 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.817015885 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.880351877 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.834738435 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.9398759 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.825300248 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.822525889 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.973664038 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.820753867 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.828385626 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.848258357 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.835549779 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.823881466 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.831997148 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.421462318 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.823014695 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.820551389 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.823195101 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.821711856 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.865177001 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.824441742 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.817706868 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.821070087 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.953754625 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.822980135 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.820278129 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.823653015 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.821958604 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.822815036 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.823633207 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.823512176 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.821073508 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.823688367 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.846905775 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.823356039 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.824303694 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.8229087 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.824903812 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.849672738 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.824081038 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.821949755 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.821564408 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.867242285 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.831150932 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.82495487 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.82213392 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.824974704 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.821944808 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.974487925 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.883722544 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.824343665 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.884362289 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.826246206 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.825758396 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.826235641 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.825645187 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.917342165 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.825766157 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.884322927 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.823102598 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.023410217 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.847891531 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.826571005 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.828703888 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.828118601 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.825343573 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.823855896 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.832599739 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.823969156 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.828862132 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.833074746 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.82314819 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.822663154 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.938584887 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.967810751 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.823467852 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.839352608 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.833983993 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.82235904 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.871003694 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.825216651 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.824668869 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.89489808 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.943672754 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.854424642 seconds)
  done (took 201.452640321 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.835175125 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.833382993 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.828938786 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.8433128 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.82630283 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.827681373 seconds)
  done (took 12.731952649 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.829484628 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.827327784 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.826373115 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.827210368 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.826943846 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.826828726 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.827515556 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.829720624 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.831174202 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.8269296 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.827960411 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.827246475 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.834817115 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.828426158 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.827322606 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.828456156 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.828359695 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.824490902 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.826718858 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.828123089 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.045542854 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.828623378 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.828036327 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.831957087 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.832680075 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.831048237 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.842481495 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.828416982 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.828667872 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.8379968 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.833646626 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.832555539 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.831679001 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.835223495 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.832672294 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.831843294 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.831984061 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.829701748 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.824994432 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.829416115 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.828463932 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.828850974 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.834572921 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.827262129 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.831132857 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.835860839 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.832344825 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.841869265 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.82836893 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.827438662 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.82771522 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.826793037 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.831455786 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.829072939 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.833727085 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.836251441 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.833276948 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.82842172 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.828461982 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.832140084 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.82930211 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.829122846 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.831163409 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.835640835 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.834382896 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.829064574 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.832070998 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.83247517 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.829161444 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.833827564 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.830073355 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.826969669 seconds)
  done (took 134.748945274 seconds)
done (took 547.362805916 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.105570076 seconds)
  done (took 8.847270777 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.884149539 seconds)
  done (took 8.685887764 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.277862245 seconds)
  done (took 10.020100836 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.832254006 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.872830305 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.837090274 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.823812165 seconds)
  done (took 29.129338667 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.911719813 seconds)
  done (took 8.652178759 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.84370392 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.820829765 seconds)
  done (took 15.437898923 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.872075283 seconds)
  done (took 8.614696212 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.887400855 seconds)
  done (took 8.63907021 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.838858839 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.847516448 seconds)
  done (took 15.456285172 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.805861767 seconds)
  done (took 8.549391709 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.023996935 seconds)
  done (took 9.87219931 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.8503262 seconds)
  done (took 8.665879903 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.910601074 seconds)
  done (took 8.653392465 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.91271769 seconds)
  done (took 8.656666318 seconds)
done (took 159.622134131 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.829449785 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.827925817 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.825982839 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.826561682 seconds)
  done (took 29.053547324 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.864864611 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.865078179 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.884428429 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.875924413 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.867361859 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.865016848 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.858438137 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.858202714 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.876227488 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.868511065 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.86783068 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.87655742 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.86568571 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.87280854 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.86755601 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.868805476 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.877407849 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.868393709 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.857143424 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.868830428 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.833693223 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.876605106 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.867356916 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.833349225 seconds)
  done (took 46.530500081 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.030532948 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.903920181 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.988241551 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.885257298 seconds)
  done (took 9.551895327 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.884485791 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.886725534 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.89869757 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.937715212 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.960455924 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.895770932 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.858797329 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.854432828 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.84166747 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.886372953 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.962727461 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.880790671 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.972008557 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.834857825 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.012321819 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.834189797 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.832969345 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.886267805 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.936970062 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.957865881 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.833601975 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.885293797 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.888701171 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.881132974 seconds)
  done (took 47.249286657 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.83248043 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.840569506 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.837981169 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.833437873 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.833300647 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.833538863 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.83890417 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.83393887 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.85437214 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.833828412 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.832428558 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.83211892 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.832777372 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.83369954 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.833196755 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.84601662 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.847060909 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.833548692 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.836914501 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.839691004 seconds)
  done (took 38.486724098 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.829477296 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.680945621 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.180110254 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.084945955 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.831148622 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.83390103 seconds)
  done (took 31.186865035 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.849664951 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.841697663 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.833784284 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.892968254 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.976531718 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.842786158 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.835530948 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.846991277 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.883825668 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.902391761 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.858430732 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.865222615 seconds)
  done (took 24.177255936 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.832320774 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.833001605 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.833011811 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.850859863 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.848120197 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.845339306 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.842797977 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.830009971 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.8502242 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.854776613 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.844402433 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.848403809 seconds)
  done (took 43.864549719 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913748173 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.717752854 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295430582 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293662059 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.366788559 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040460773 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.830376098 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.922045877 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.832932389 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103030711 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.231425694 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043019048 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.084400804 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.57145548 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.836245218 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.309386508 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130608148 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049923105 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85665231 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.487424398 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951455059 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354978157 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.547209738 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.950753805 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040693973 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.96370465 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.091917305 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.787774066 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885219599 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841034244 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841875404 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.833171366 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106466715 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958783941 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906903543 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841612875 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.251801489 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.545609686 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.818709391 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.501922446 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.391464553 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.956003911 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840739147 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834004935 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.764637452 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389969825 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929848704 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.837760401 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.535501122 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.833786873 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843381491 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912691943 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.836964018 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.647529319 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.525601698 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.107635403 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.831113925 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839400352 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400278642 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.880544929 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456233524 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.773347518 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.927643213 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.552287266 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306425412 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.99217971 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.836167467 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836647688 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766701508 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.4987447 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952381392 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.978075924 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.853405455 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.482308057 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152162646 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.326220951 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.89940548 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111039986 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.690065341 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.773750196 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057801265 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.790924356 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767844602 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.68817737 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.766669585 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052098656 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868349164 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.435072589 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868980775 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.923731767 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.845563974 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853511263 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842399477 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.056542684 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.713089484 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835486072 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.206734376 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.101440576 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857006509 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.927901731 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769043959 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.839367233 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088906071 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.045466732 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.080349147 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.32525361 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932580163 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769125084 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.851883422 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.76182227 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.850963303 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.126368618 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904191846 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.892115233 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962718489 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.794118354 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086153725 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802826119 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.938658519 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.268173143 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080646978 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.156454408 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.084192227 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902987883 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.837727325 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.837860163 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.563892822 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.460109445 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.060176199 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.831735779 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333193878 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.851096535 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.845832694 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77036174 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.498335036 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.289226779 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.929020856 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.059358697 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.785113251 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115537339 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770461278 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.980527834 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.826069712 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.058588507 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.496537685 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.925225522 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095343249 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.075527433 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.073373905 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850157991 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856179097 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933942477 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859834248 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.265392833 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.097101488 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.84343917 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.843438492 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.566700466 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.912213904 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842250496 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.842809606 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.402073313 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135276308 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.876539766 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.847021752 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.724144323 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.85104949 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904608724 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.845090469 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.849149682 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.362501035 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.354576282 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.846907786 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.487372091 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060577548 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847018465 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.553759086 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030955103 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.860346442 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131932882 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913400202 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.774636451 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.543180443 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.540682353 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839679098 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.774560452 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.841918629 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84823976 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849745613 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.034804395 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136945019 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896255116 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.516016525 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.950952753 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849222731 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.842911081 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838847049 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.340280058 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.909774478 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.474002579 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.851414048 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973259858 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.852620652 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.774233412 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.846452779 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.847048217 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.843614568 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.794956364 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893132953 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.507445806 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058857582 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100563752 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.25813843 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856595164 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.514314724 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.963582858 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.860211273 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.203770955 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381298643 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.973372828 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91025213 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.850058903 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.561167762 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.586764276 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.412731179 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158634968 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17746806 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206973754 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.222804574 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.165296907 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.934713701 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075307369 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.370529585 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90116931 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.936797192 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792726676 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862203993 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.500522766 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20609097 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857323657 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066508272 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143587421 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.278173056 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983395569 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.050880992 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875849489 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.648414667 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.871830274 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.361145123 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865469177 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.303572076 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055710724 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933581685 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.207102211 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.935386739 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.842508855 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196378603 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882826671 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.556048571 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.207229425 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.231536644 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.388207953 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07977274 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.850454623 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.28835562 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206860266 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.021752558 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.967080388 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777050379 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.853823788 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.85449879 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.838870646 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.819660392 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.710465122 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.101901279 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854501478 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076628844 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.952955242 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.219629099 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.754059329 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.848834698 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844734596 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092150909 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.516782079 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000490657 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.146448801 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.421255171 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852825467 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.777408921 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777266298 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.547763419 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.852579948 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.818782097 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056482598 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.953220585 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.530847504 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.212957124 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157234988 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.097494979 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.858545239 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134837095 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128467384 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.346296725 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870045937 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.945952323 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.226751808 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.559715777 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.066732549 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.079628031 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.390590881 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.072042822 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303708018 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.796848362 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.845584309 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.058997287 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.067279685 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.287764034 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031286962 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.557851806 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.854824805 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230337357 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912460453 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.300989398 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.042371506 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.94916702 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858385656 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927838963 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855768774 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.856699063 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856508503 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859605575 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.304642792 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.970932762 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.860400277 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927430397 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.909826634 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.429495152 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.859945233 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13656005 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218139222 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.200107071 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91564388 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.847792069 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850478001 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779881479 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982049742 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.290781372 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120448648 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.973517944 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.988053291 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872613625 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.226305707 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.097300711 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158757026 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123052358 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.741139228 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481837046 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.96909939 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.071383337 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85821472 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.058591573 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066401945 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148055848 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31929552 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.974121385 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.041940824 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.122698611 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.216785088 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.849700416 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436566832 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.854731644 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.253906954 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.88084586 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.30070578 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112677231 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859102767 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975345693 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.858443409 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.05099155 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.301889271 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.581368906 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.207163313 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.704160494 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.857943539 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142874732 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.198892884 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16345309 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931635441 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859645347 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.54711259 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987532101 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.765841384 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.097267837 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.851925071 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060549803 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.563631382 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.859539297 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143615041 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165770761 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.84960663 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.800300244 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897233913 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.860253782 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.073378414 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06673875 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099223004 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860816355 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.859227607 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.668760675 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.146031828 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919755272 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785319826 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.855088684 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903140822 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.086104558 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871575047 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.368122902 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.554794558 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131107788 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.766218602 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873915393 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.245586169 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246357614 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205974264 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.385878203 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07677731 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.408050674 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.692800041 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226187875 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.857794466 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.24895643 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228689932 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.856104189 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.349998215 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961943737 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.142371181 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184433778 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.86337976 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.577259964 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.893885502 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075020028 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220765428 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817645993 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.856083353 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.884569805 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.854615104 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.861877099 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.865888299 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.836401865 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303243315 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.692096409 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343957558 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.857431431 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.885622145 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.2434112 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387563261 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960349304 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879638983 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859301285 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.562979474 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.142644262 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.106770449 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.356334332 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.922503507 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.857156732 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855293682 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78132466 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.051936976 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.049788466 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136921136 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.193148117 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.962158146 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.858003207 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.068200543 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063700116 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.294299718 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993590373 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.969582822 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965392897 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.778144979 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.566161541 seconds)
  done (took 1652.062123456 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.873464571 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.891285518 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.873411039 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.90195375 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.888685174 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.881917158 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.928986133 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.867213532 seconds)
  done (took 56.878982399 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.858291086 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.025298193 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.868459884 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.860930752 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.870327037 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.859283855 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.037891031 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.87117131 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.897213285 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.871478602 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.86246672 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.86693334 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.1358284 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.886884687 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.864007293 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.289783028 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.873153461 seconds)
  done (took 74.582544766 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.867820615 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.304778505 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.897298235 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.865913318 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.168573551 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.876018862 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.000876571 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.905538177 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.870404631 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.28492714 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.164292548 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.884871217 seconds)
  done (took 90.873169535 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.881485141 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.871215982 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.871853276 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.871494032 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.872262802 seconds)
  done (took 11.156354627 seconds)
done (took 2157.417188616 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.099305477 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.044294036 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.108357483 seconds)
  done (took 5.93306563 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.014123167 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.063484709 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.182427708 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.187684406 seconds)
  done (took 10.234145199 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.157339078 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.250441846 seconds)
  done (took 6.189974947 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.194263353 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.894785264 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.286220238 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.868010661 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.869603244 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.866199155 seconds)
  done (took 22.392243666 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.870012806 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.872960564 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.869857993 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.873964512 seconds)
  done (took 9.269994048 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.848246596 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.552548725 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.849405027 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.864905906 seconds)
  done (took 20.898544816 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.020711317 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.986506573 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.015301098 seconds)
  done (took 7.806759516 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.092533199 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.099131459 seconds)
  done (took 6.976394225 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.030098209 seconds)
  done (took 3.813716322 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.899410919 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.14272937 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.361791003 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.409386626 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.452070139 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.698453517 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.216672244 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.106668926 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.307076978 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.323914599 seconds)
  done (took 24.701258425 seconds)
done (took 133.470661845 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.223331974 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.899587222 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.071755135 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.234969258 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.111116781 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.071125947 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.088147956 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.235549897 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.921167154 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.904681799 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.23806419 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.106544311 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.035245045 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.886999624 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.042919968 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.887516953 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.100635813 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.242434787 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.917606824 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.158982004 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.101609412 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.879498539 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.072610527 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.89616685 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.105776658 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.022692855 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.424326199 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.893076943 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.053808813 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.438186372 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.031443589 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.298679267 seconds)
  done (took 168.381099068 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.871831661 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.872619057 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.871398951 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.872805407 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.333352223 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.874089747 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.872158705 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.871003036 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.288705796 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.267400394 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.874106323 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.327379337 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.874520618 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.872147737 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.873583548 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.872323925 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.433446357 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.872580538 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.871651277 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.871779638 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.872040719 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.153875255 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.873084875 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.162737115 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.411605934 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.873852468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.873559828 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.871591267 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.872630925 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.871505397 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.873599615 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.873390546 seconds)
  done (took 209.111257033 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.871661607 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.875050183 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.875227547 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.873496523 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.875101887 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.873844991 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.875174579 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.872259052 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.514387891 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.510449797 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.87281563 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.874116571 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.874337168 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.874178115 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.876051383 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.873916744 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.873757498 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.872195288 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.874636564 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.876349365 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.87670697 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.481749862 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.874835668 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.484696537 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.875279224 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.874950326 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.874071497 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.87509081 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.873612622 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.876378769 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.876725183 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.874993778 seconds)
  done (took 220.266228929 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.127860727 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.879887682 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.881185691 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.798374477 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.878483975 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.879694 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.887276864 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.130970838 seconds)
  done (took 19.25347575 seconds)
done (took 618.804742723 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.237599971 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.08346486 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.053039993 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.902365056 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.135075129 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.947177771 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.897577228 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.961336997 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.718777038 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.975006471 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.565504373 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.924801712 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.659932104 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.927319001 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.021592947 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.956083397 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.456984749 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.560450933 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.078371922 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.972589121 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.077233729 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.826984597 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.980682503 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.767967714 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.695415447 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.881385219 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.912747045 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.459902772 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.910534367 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.057331076 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.527222124 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.14928521 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.91599302 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.900324943 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.953565157 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.933756868 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.110357933 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.913418689 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.028008383 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.62698695 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.956151255 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.631183752 seconds)
  done (took 103.040851136 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.870362084 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.865459786 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.865210958 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.866046035 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.866240144 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.865952493 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.865672367 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.865824797 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.865794083 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.866288431 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.866048078 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.867739268 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.866270256 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.866965257 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.866988233 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.866155594 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.866336129 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.86603884 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.866409643 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.866537938 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.867713158 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.866928285 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.892471865 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.867675414 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.866799436 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.867035762 seconds)
  done (took 50.362163459 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.88300569 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.056705538 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.128909429 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.906553809 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.884696038 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.888059471 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.903327014 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.889445763 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.887212522 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.888198625 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.977058968 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.891009698 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.904157037 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.127391571 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.903118246 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.88402154 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.884378245 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.886112987 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.068498158 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.90225685 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.905092498 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.889913076 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.904785682 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.898605259 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.887563611 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.886759326 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.88902192 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.383514813 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.895777683 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.976046068 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.931663173 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.911321811 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.336032252 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.141436009 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.943579632 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.896500055 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.885301219 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.979644094 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.89302848 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.886212188 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.905010049 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.891201669 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.130139644 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.425676221 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.902358543 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.886974894 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.394742064 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.990829512 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.928534973 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.895862148 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.132710236 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.906206664 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.886780093 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.887528726 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.923539278 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.893684806 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.88792912 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.254785768 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.89985992 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.904920244 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.892479137 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.890363687 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.070908926 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.898859126 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.057804377 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.898746278 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.893832117 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.888126598 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.133331737 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.905476648 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.439810221 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.90298953 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.88676988 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.978366552 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.063264377 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.422550939 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.900587795 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.070648109 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.352860563 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.912915314 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.894489265 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.372924123 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.917709997 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.894453216 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.889051151 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.888066816 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.887306583 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.930157689 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.904674228 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.341419904 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.441132548 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.2745174 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.917659346 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.903892672 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.8894624 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.254749555 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.898030737 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.887786357 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.125856121 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.44726913 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.904728356 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.895601477 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.416201636 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.907573089 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.908565969 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.897983182 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.137079061 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.906581656 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.932836513 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.889209539 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.897454786 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.892202921 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.90835672 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.896879447 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.888447609 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.411052968 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.00109886 seconds)
  done (took 234.905728606 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.8862946 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.889285239 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.883077025 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.889741737 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.883571336 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.889357615 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.883989155 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.883383935 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.888876546 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.88546624 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.884193379 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.886982247 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.888243409 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.88967451 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.89665193 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.891602733 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.490185487 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.885076688 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.88612181 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.885840074 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.536544938 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.89185528 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.884586058 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.885189654 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.886545818 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.88707528 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.889115981 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.890462657 seconds)
  done (took 167.900505308 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.890879149 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.010389625 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.911398656 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.920918273 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.897950071 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.888189666 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.993195389 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.909679115 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.896487863 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.889273188 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.888820175 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.954280587 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.902391199 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.990884322 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.922909853 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.000107237 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.998924924 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.897314407 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.888930393 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.889322709 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.92099367 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.881759449 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.952424057 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.019161852 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.911757295 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.009180539 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.890925031 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.892609551 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.892519448 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.009762375 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.909945078 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.951402718 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.920516732 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.910515771 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.015053102 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.013803973 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.998975245 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.999597802 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.898658902 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.889211812 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.889519825 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.874402716 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.01077492 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.913469516 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.895847731 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.993278688 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.912934197 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.893831146 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.893775559 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.893398067 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.907752239 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.912647704 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.960362265 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.027587587 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.928124034 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.918011566 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.996994878 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.998912895 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.894965599 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.996431624 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.882714372 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.009356297 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.916182443 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.874425954 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.89193335 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.897555206 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.920500433 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.002512061 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.002325324 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.899759583 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.995618953 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.926212003 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.899343328 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.891919202 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.894330923 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.011829659 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.016513248 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.92637418 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.93176075 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.925949502 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.883710499 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.894224989 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.875996705 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.912807578 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.896892053 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.009840169 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.017658352 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.900880896 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.896159305 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.894801582 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.896346373 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.91981788 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.01995257 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.932551249 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.984934352 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.962976879 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.971222941 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.908774057 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.907087882 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.89977971 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.959396535 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.910166683 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.90520608 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.172770987 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.95733466 seconds)
  done (took 205.156831749 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.287893343 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.940615135 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.95395101 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.206994955 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.244407431 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.821281867 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.940223339 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.944882677 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.968165366 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.133630669 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.005798931 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.959766031 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.931403331 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.918859903 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.942696795 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.964928918 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.952508115 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.27431708 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.151516033 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.116970321 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.933238494 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.206782536 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.255810449 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.518210216 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.995085004 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.343180845 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.519729165 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.078883075 seconds)
  done (took 62.323305278 seconds)
done (took 825.479441015 seconds)
SAVING RESULT...
DONE!
