cset: moving following pidspec: 25352
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.587738329 seconds)
loading group "shootout"... done (took 1.193085074 seconds)
loading group "string"... done (took 0.423298222 seconds)
loading group "linalg"... done (took 7.757918007 seconds)
loading group "parallel"... done (took 0.149370188 seconds)
loading group "find"... done (took 1.239396985 seconds)
loading group "tuple"... done (took 1.910261559 seconds)
loading group "union"... done (took 12.38405225 seconds)
loading group "dates"... done (took 1.298531347 seconds)
loading group "micro"... done (took 0.202589553 seconds)
loading group "simd"... done (took 4.239247313 seconds)
loading group "io"... done (took 0.959000211 seconds)
loading group "random"... done (took 8.668774255 seconds)
loading group "problem"... done (took 1.538719681 seconds)
loading group "array"... done (took 18.364753102 seconds)
loading group "misc"... done (took 1.595049446 seconds)
loading group "scalar"... done (took 39.144273495 seconds)
loading group "sort"... done (took 2.952584958 seconds)
loading group "sparse"... done (took 11.571593323 seconds)
loading group "collection"... done (took 16.729839445 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.531411598 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122854419 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135997003 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120698962 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.155433461 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118422347 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125399799 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085252692 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.869509513 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154563006 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.111741207 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.436474936 seconds)
done (took 5.410497622 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172642649 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084944964 seconds)
    (2/2) benchmarking "String"...
    done (took 0.077467081 seconds)
  done (took 1.288214667 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064341042 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127043448 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066252952 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067865418 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067895178 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067694913 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067677042 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067751458 seconds)
  done (took 1.659234228 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071489372 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06888081 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.0666139 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071666218 seconds)
  done (took 1.406949549 seconds)
done (took 5.735001979 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.239544877 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.108536267 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.304716393 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.321520012 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.413443245 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091573841 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.074288235 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.071059012 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.130128241 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319210205 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.118265019 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.192924386 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.100073571 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.186891895 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.006452515 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.127292777 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084845025 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.124544587 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094209881 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13297579 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.368502543 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076986779 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.083618308 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.072403346 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.068401265 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.648045288 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665657343 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.140925884 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082092874 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.079357016 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.116933899 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.645357938 seconds)
  done (took 10.44653124 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099905128 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098465949 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06792431 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12336599 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094687807 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068321176 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.0737153 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067927874 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089735741 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127119465 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088474353 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105335586 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066410932 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069903747 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084458115 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198156335 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080827313 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082853983 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068988041 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07930977 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107821338 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07801767 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079612578 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080009941 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130064161 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17234879 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098136654 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097190596 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067996795 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080959974 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.1155152 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127105428 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065838434 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065037934 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122837407 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096299258 seconds)
  done (took 4.590046122 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.105764296 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.095025302 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.100969308 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.60678668 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065651881 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.145990755 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.235687784 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073187851 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.400100855 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.153309008 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.150162794 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.142963963 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.123450566 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.070119429 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.265148931 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.12282358 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.264365294 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068404274 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066991843 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066115095 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075250745 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067800963 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063737539 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.077272351 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.091635677 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.087810683 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.184768709 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.985320543 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.293554192 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068694521 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16812066 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.095920807 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.367446897 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070437096 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.090728713 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.406774576 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.125246739 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067473839 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.164792435 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.131924536 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066030365 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.119029651 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079021153 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.070306583 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065124677 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.071898435 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064664498 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070241009 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078594032 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079208253 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.102355965 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.069802252 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065533697 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.17043388 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065793648 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066494631 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.068375014 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151710817 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06595706 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.149011925 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065904116 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069366107 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.09630227 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071511681 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.088196348 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.11339965 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.335532223 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.052055906 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.068361997 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.173896132 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078924755 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.067524692 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.083410929 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067022711 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.069181355 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067605321 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.075796891 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070813756 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069670684 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.109621108 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067747735 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070995601 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065726412 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.072457693 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.098122559 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065263647 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.45883314 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097666594 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065595792 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.076130684 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105476782 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066221305 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.071800604 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067501589 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.073092158 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066383763 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067613925 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070209518 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092322513 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.095156573 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067015088 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070112992 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113843748 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.167257768 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073114466 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067142256 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.072077294 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070602456 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070330124 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067446086 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070737291 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068682947 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066367947 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.117914363 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066611819 seconds)
  done (took 22.024806391 seconds)
done (took 39.294095596 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24396706 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082714919 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083076312 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083014773 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083133191 seconds)
  done (took 1.793231726 seconds)
done (took 3.001896761 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126328791 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099439097 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063295196 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101375391 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064820937 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1038883 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103692478 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084377558 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103258932 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065141121 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100934387 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064564458 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064777791 seconds)
  done (took 2.36334612 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080314005 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086211369 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069955037 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08078599 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062283737 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081543645 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080789223 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088297934 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080473944 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072323205 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062749356 seconds)
  done (took 2.048242628 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080071675 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08352137 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069333141 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081466603 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062227989 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081006785 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081261608 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085441562 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081330419 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07413674 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062982487 seconds)
  done (took 2.038797173 seconds)
done (took 7.648956025 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.074554791 seconds)
  done (took 1.254746457 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.53185514 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.534319713 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.076149578 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.097340177 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.194438304 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.106825678 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.231393168 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.082207567 seconds)
  done (took 8.213766621 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.10501202 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.067830297 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06853932 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06867273 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068952148 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069104291 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069341152 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070125866 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069044508 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069146162 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070460834 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.068917213 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070456081 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070548668 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069252727 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07031219 seconds)
  done (took 2.419902904 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095169838 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093718101 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07364642 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074499377 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073164334 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072420478 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07553827 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074484548 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071592063 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073285552 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076164937 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074058887 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073336976 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064465395 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074808636 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076083631 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071237776 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07428679 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075438725 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075984025 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075619216 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063966326 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073057619 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07443772 seconds)
  done (took 3.103425052 seconds)
done (took 16.18925543 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112360151 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076082299 seconds)
  done (took 1.376061007 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.076426632 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077473075 seconds)
  done (took 1.354574892 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.075031868 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.061608631 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.081213664 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07213557 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061700051 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061396804 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.0798095 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.062794861 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.062827709 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.062524869 seconds)
  done (took 1.883162115 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.064086505 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.070005469 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06805145 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.076513155 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.068727839 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063418783 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.065708911 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.063782236 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.070536818 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062830504 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068093129 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082640907 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.067422059 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084457194 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.0675721 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067577574 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069975165 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067279773 seconds)
  done (took 2.455700985 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060811666 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061596019 seconds)
  done (took 1.334182233 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065260679 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062376568 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06438767 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064956087 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063373062 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063194482 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063224302 seconds)
  done (took 1.65097294 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.369733332 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.132698754 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.335084872 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07059899 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079957992 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252512264 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064803019 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069683519 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070360847 seconds)
  done (took 2.695351516 seconds)
done (took 13.963556665 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078727016 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084195484 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097514984 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.410823097 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093764466 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068229814 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113433644 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.177255268 seconds)
done (took 2.347020661 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.206718814 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.0950116 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.926894622 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.066020903 seconds)
  done (took 3.298405739 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330470421 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091755858 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077446585 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067617151 seconds)
  done (took 1.791302811 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065717582 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069116486 seconds)
  done (took 1.354134769 seconds)
done (took 7.876164645 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063857479 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063612619 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08835902 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063409101 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06336852 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065174718 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064491862 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064936845 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064716993 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.064871629 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.064447321 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065113454 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065053882 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065158158 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064627371 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064939484 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065497588 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064974092 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065656747 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064607309 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064405753 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064813943 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064912083 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064825557 seconds)
  done (took 2.820516901 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.080118762 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065653455 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067315994 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066818106 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068379001 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.067579844 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.067957169 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066813898 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068220204 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066783879 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068584078 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06900496 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066516793 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069123948 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066450263 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068507925 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068098476 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066702372 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066511979 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069018602 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.067996348 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067093397 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068677245 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068574291 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068542198 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068813935 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066773235 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066910809 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068283755 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068864765 seconds)
  done (took 3.275631008 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064869037 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059332635 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060581625 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071048758 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061500145 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061536616 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060992431 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06187284 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062057175 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061491415 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06213647 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061237298 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061003086 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062038676 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.061859652 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065999166 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078958473 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061115113 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061207219 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061837752 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064959939 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.060949232 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061283913 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061087179 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060922101 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061071819 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064492275 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.060863759 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06198474 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061151063 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065020423 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065744322 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.060824835 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069977207 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065854552 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061798849 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065110567 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061214217 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.061808599 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060772403 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061266807 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06132091 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06143456 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070271274 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061331071 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06252068 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061510861 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062164701 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061464307 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063692583 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.060685774 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061965718 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.062975219 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062585017 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06625283 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061154835 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061881165 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060994826 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061589047 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.060698184 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060406381 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060734474 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064033372 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061981524 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078553701 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070791685 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061044666 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.0625163 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061930022 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064347923 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062684782 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076886382 seconds)
  done (took 5.783812542 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083141555 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086433219 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065103437 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065930125 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061913192 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062323736 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070229601 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061809845 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066084542 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080785385 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061994913 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066646809 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066506643 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066416476 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062421493 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066467802 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069974472 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062392105 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.061937092 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066343361 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061956896 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070073195 seconds)
  done (took 2.730886415 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146118805 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06679831 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104521992 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072481136 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070803423 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072434871 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067591352 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067632902 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068021353 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068776342 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068770921 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068074364 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070490592 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06856209 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068316652 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068270747 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068013943 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068587691 seconds)
  done (took 2.591908079 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076203076 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067321739 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087141578 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067829996 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067590251 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067039656 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071043192 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072053605 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067045055 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067171529 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.071534123 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067304514 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066577448 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067175556 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066614116 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066683752 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066856795 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066858912 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071914594 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071027662 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071203427 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071703482 seconds)
  done (took 2.77486838 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076867944 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066128184 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081212215 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068689827 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061983098 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061951639 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.067873044 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066304087 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067490015 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066334494 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066995198 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062627515 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068959071 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066556437 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068845644 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066740998 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066171429 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066717014 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066201307 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061541338 seconds)
  done (took 2.585181471 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09018963 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064266672 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06407967 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071947781 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064761176 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064972685 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07080933 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064969486 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06540777 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08540829 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065448976 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065338176 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071227441 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068736236 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06485923 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070591234 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071116949 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071499413 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067578093 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064884081 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086016101 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06520284 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071404565 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064936579 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064872513 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064884692 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064879855 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069267321 seconds)
  done (took 3.179857238 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063553995 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063651987 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06468946 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06476047 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064683837 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064840428 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065273049 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065541189 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064765764 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064998481 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064444915 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064386319 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064753214 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064105603 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06471537 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064518686 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064827037 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064959505 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065056338 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0645245 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064133218 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06445691 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064606936 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06489243 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065322159 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064485534 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065400975 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064824671 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064356838 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064816316 seconds)
  done (took 3.184696785 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073998678 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073223351 seconds)
  done (took 1.392217832 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06177337 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078018969 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061617751 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072609293 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07058839 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065400817 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07166518 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070362565 seconds)
  done (took 1.792376771 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083586084 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.074028649 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064682833 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07719632 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074674188 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083969091 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127174156 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063432432 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074902389 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064693342 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082124435 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065828292 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074172409 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069061493 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074111089 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07762608 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062140132 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068552075 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065280626 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.061949376 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064183475 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078410805 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073670673 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06230245 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068912764 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092052376 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080445326 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063196203 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071004788 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076106073 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074254659 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061476504 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064022259 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.063897881 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062111762 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074950813 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08340574 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070974677 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077967888 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064219771 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072230476 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061724948 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073511834 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074581548 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080187757 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063521747 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063512793 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061562687 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065289624 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069926198 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061800121 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06866871 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061282447 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075589284 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071699577 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078825326 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062804655 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070223391 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070328949 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070854671 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07612839 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070439035 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073573374 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063143965 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079626222 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073631782 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076132152 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06215484 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06047374 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061371213 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077883642 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094128647 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074383487 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063697526 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06411055 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061685812 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071219898 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064515917 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072881277 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075473526 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063614831 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069113017 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07668161 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067879184 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06978442 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070015334 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062213963 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067031388 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064617685 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08292042 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062240603 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062145646 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064797821 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079130511 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070315033 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065641467 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065400555 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075967688 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061137991 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063308997 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.063884314 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069440928 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07658599 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06699064 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067749657 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076058789 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071538136 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068131905 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070432048 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060524922 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.062921191 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065110281 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074492321 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060123355 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069655545 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067173007 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.062803847 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073667522 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061090721 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062393423 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07490105 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074054879 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.060886065 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060480863 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069532462 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062112157 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064901624 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076060555 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061313626 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061073503 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061188963 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070473934 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06198704 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074601704 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065871741 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069776716 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.192791838 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064676678 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069743542 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077454059 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068660163 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070006017 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073879928 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070059004 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06356468 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075983386 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071314832 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066647871 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073243345 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06816208 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06226593 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06642103 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071112463 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063085109 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07103982 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065920717 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070745733 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064197861 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062601245 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069397233 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064648353 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066059264 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069130663 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062530547 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079070945 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070587593 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062522477 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061355005 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070054234 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06487191 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.062849632 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066998133 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069782346 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.063633947 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062142862 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063500878 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069677059 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071391031 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066211232 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064187538 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073891498 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081410472 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063404561 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070744033 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06313759 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064577345 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064178821 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077638537 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074271447 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068058082 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070611176 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061648483 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073101592 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075971961 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066459557 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062189937 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066407071 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067754153 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075824688 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067549675 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064558468 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062440079 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070088133 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065551146 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070312544 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.062770063 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065979836 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068852581 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.0627379 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.068598185 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.062741204 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076466907 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069687428 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061708579 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065847741 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062248145 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075057974 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061698135 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064968109 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066850814 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064704426 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063472851 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069899551 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061169882 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07631559 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076956453 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069194953 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066807844 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063729172 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075963351 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069651145 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071971841 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070968675 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073558441 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078933229 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065816288 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070218064 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078291643 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063064047 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060761406 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075970441 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062231932 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062941169 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063022314 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062248953 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070829423 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069849654 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073550251 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061013778 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070035421 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.061843468 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066033951 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061397289 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071184477 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069539661 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066821964 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075641458 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063436143 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063233177 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070133584 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062530484 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.062777597 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063467815 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069794235 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062900964 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068889064 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065004023 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068073267 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065018407 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061230443 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068661503 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062672927 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06847045 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07163525 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062497503 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068673035 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069956154 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063467295 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.207669436 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069579349 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067287143 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072532037 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071208116 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070097464 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071735439 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062897903 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07690725 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.0636161 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076969388 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069134023 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061705616 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.068941872 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070893205 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068229892 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064193212 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064101188 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069052522 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063303533 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070634181 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076081999 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065015598 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079554136 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074749244 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070248505 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070693912 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069022747 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06943335 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065660126 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067690713 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064188167 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069156898 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062981024 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072851036 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071155663 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06879901 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070409498 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064618671 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069711392 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065063147 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061323838 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066422001 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066588187 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063837424 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076048596 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064404599 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067010514 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062701595 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064421217 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063407738 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061564244 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070000787 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0706978 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064797101 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074288419 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06652585 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070701652 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078764681 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061454984 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062876396 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062102374 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065386186 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076380029 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06416325 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077463321 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068905428 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066224223 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061620375 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064208553 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062506673 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061680608 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062118596 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072228904 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066338411 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062989633 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064110581 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071104374 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064405329 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07601118 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063228816 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068179219 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064001436 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061441717 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06628699 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066224208 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071407094 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064682283 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06531206 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061514142 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06343571 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068254261 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070003266 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063842281 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070033037 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076341183 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06386755 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071146856 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066220369 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061764527 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071383446 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063344723 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06393721 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066743425 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071631568 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071634239 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064681003 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078164799 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066331315 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06975971 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063899576 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062231518 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063345417 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063215437 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063246184 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066146753 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064561584 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076174588 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062176234 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069162663 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068011029 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066933896 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072631013 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.063282098 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069191684 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067394254 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064555712 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.0698086 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075590617 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066633015 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070003783 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063039535 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067947069 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072387573 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065080146 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074276955 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068377601 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062826536 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068377121 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064176413 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062497715 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062446149 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061975761 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072267652 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.204792962 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067932809 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067763872 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062993089 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068715408 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067028217 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077850044 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071520446 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071287223 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061857508 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061639393 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064635064 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065224808 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070415162 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070251885 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074210744 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070585509 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068015308 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063331504 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077872541 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073829632 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07153693 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066095769 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072192564 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064692642 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070557392 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069490549 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069022356 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06483365 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071556217 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070279194 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066686919 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073892095 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071446664 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064022588 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069929726 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070094764 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068474495 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062422574 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064257158 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070486939 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072524389 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070755269 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064581425 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079656028 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065453422 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069051373 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067035668 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063524288 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07263442 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062272485 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069923859 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065287719 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065108875 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061954163 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066506559 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065477362 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071196487 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066330254 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062257522 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079075313 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077997143 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070295704 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063130052 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063228601 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062167428 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062276982 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066946196 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064915117 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070385936 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078935644 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066775388 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066382506 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06258209 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063476822 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070923477 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071767063 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061892999 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062704098 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066663709 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070402844 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076685765 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062924218 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06395753 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07132156 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070771984 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062740212 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066476237 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061458106 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072191163 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080695408 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064266306 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06967856 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074968794 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076815379 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064325697 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062462394 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064358552 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070411399 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069806842 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064886214 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064743573 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083106226 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071086601 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066587975 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062654028 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070764437 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066683536 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077304111 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067265316 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064207336 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072587819 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069994807 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070196711 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073802346 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074571557 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070298062 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069424744 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062721024 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068602892 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062098845 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065641433 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.0638365 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063172011 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066617349 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069302963 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065791826 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077713849 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076343255 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065489922 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060356562 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065338171 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065732479 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060992698 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063214915 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061497462 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061772603 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061508193 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062591115 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068879374 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071236039 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06697583 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062725765 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062186812 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060324148 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.212909321 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072275193 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070771518 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06190207 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065587836 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064558342 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072364346 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067474902 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066233023 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070474735 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070212151 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070285397 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062383777 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075753747 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063413183 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070209747 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067359957 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063938148 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064495879 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071366219 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068121794 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066480914 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071418818 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071339491 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065351511 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062222835 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061396475 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073446313 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061849191 seconds)
  done (took 42.460847541 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098399359 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062429985 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060737983 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060947474 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070258159 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062375432 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062272665 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063533745 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063592019 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065172507 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062693595 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062388154 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069416442 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077759888 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072006484 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06719727 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062487171 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063174305 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062285997 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063644202 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070274181 seconds)
  done (took 2.757689702 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068221717 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075474243 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074104587 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079324401 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071324454 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067328514 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074806556 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067431179 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075001492 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072269039 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076107809 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066962479 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072509408 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072369014 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072445462 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068260116 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075385667 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071281974 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068000346 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07537465 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067585989 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075734411 seconds)
  done (took 2.92776754 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062952483 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063239539 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070750761 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061844275 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062848012 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061679738 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066141541 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061876885 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065287376 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065881322 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066030907 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066025762 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070306238 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.0617971 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067048979 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062003453 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107221972 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.065694543 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063387161 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.063776546 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062140735 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070403653 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062206978 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062291024 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065832315 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066756441 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063469768 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061761076 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.062863549 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066500189 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063265505 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061687674 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069644744 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069214924 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066189527 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065783877 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063457169 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063553186 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064647051 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.0617093 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069359407 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062324721 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063786091 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070379645 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.061941177 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061756257 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069927331 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063841189 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06215548 seconds)
  done (took 4.558168481 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.072746748 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110193768 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068070237 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091826929 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076861754 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069862507 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067818155 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092460894 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063720973 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064536059 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077097604 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077347962 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065333521 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.066943507 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069631601 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065681825 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06660875 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064484525 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068646004 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064636823 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068425894 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069151285 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07580052 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076852773 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066374727 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064153619 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064723144 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066445703 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076583868 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069046118 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067013125 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067421732 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077158421 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070425644 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064813839 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065102847 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077601604 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065694683 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066054778 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063596411 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064750096 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067307648 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.06962045 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.07770573 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06549352 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070182619 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065590806 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063018117 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076816125 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065313164 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069933225 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077722307 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066603797 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066090934 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067040215 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076596566 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065666485 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064187478 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066122038 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076137195 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063929897 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066466452 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077395528 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064922839 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069154423 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077533714 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070725669 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066949177 seconds)
  done (took 6.269279286 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072171453 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093213872 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078722173 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07961376 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073601584 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073702655 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073555662 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073693134 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073825431 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077512908 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073653129 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114564789 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069340626 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07498051 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073383985 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074054479 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073909314 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07326361 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073269373 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073447157 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073359148 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07909798 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073294416 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079227893 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076378069 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069138649 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073474099 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073684657 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079787522 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073762598 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077515242 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07322445 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0734132 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079542275 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076334805 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073451288 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063393425 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073650908 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073463664 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073269484 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06923722 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07933654 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07309574 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069212012 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073506977 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073028046 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080132884 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076770857 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075475695 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077467011 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073423301 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079780794 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073759135 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073823957 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079805257 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082153861 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079753949 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080032496 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074200978 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078303689 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079612686 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082242609 seconds)
  done (took 6.088786576 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078588131 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068423744 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080948894 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061411207 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064864499 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072047507 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060867521 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060509491 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068981506 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.068682551 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070003994 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070303917 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072928484 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070132342 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071017963 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074751482 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072169722 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072236222 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070422859 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072030156 seconds)
  done (took 2.772527133 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074623041 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080656633 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066448247 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07075924 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067510971 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072320057 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066981028 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067557153 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067640375 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06768902 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074160364 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073516316 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068065775 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072244035 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073012345 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071884462 seconds)
  done (took 2.494786493 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081994279 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069144168 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.075277574 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063959496 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067085959 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06296208 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063822401 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061927852 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062467017 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077070125 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063465694 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074489727 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063622795 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062621556 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062936936 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06906156 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062437033 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063121921 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06305325 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076188027 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070041713 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064268403 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06706354 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063308615 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068698026 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070832326 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065170481 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067139506 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063176349 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06377911 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068945738 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070087982 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063198148 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064215372 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062326539 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063702755 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063138537 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063857678 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069224065 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064224057 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062280163 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068354119 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063485409 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064464135 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063396 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063834218 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06269122 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069329152 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06463608 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069093836 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06350114 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066108488 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064247226 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070516881 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066464575 seconds)
  done (took 5.006041877 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07706925 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066439107 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060314529 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060644223 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08452427 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067940024 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067336625 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068009378 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06841493 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06283866 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068253513 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067558015 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068119506 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068346926 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068242422 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06769081 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0620671 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067638001 seconds)
  done (took 2.593420957 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071062671 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066323452 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071887311 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066931838 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066975415 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067276797 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062043427 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062172539 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062497655 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067936805 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067541658 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066894216 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062638003 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066134502 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067586555 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067151437 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066667662 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062129356 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066829301 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062776011 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06744376 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062503396 seconds)
  done (took 2.816967513 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093943106 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082735763 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138731697 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079296209 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086844057 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071391547 seconds)
  done (took 1.920246098 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090466696 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096960499 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065623705 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066238333 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072052213 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070043251 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069790926 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070562158 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074772299 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075803637 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070893629 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077954786 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075151817 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076790258 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073012201 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073235475 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070585039 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070396891 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06720911 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079547001 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070904944 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075497019 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070956103 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070637943 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071522581 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076845977 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075373305 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075458408 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071167296 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075207042 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073305571 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070978729 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075426716 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075814318 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067882335 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075072149 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071475141 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080092956 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073161931 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077132047 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06745217 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073257785 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075157239 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074650721 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075270725 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07161343 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074442217 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070632419 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071134905 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084862255 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073635643 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077046407 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073488939 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076065463 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075187926 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082160704 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075995773 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077133266 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073305964 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075898417 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077760025 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071870338 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075125007 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074258539 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07374114 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077530507 seconds)
  done (took 6.280677676 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103095355 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067280638 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071812279 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075607167 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07727335 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071194902 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071305275 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070927279 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071968372 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068237908 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106779519 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071793066 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077965769 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077484523 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071598546 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071763138 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071464277 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077504835 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068696346 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081917327 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071530505 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077403158 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078030485 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077762972 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076382089 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0735378 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071668376 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071009779 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07133752 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070723785 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075189722 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071350311 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077623884 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068008242 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077589252 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071386392 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071545153 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074988809 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071219812 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073170367 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077454994 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08029261 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071446146 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07128305 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075995507 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071065799 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070867399 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068147711 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071384398 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068588266 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075961108 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07563757 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075131549 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076975878 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071434389 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070773571 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071061096 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070787065 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071074201 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073149098 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077004214 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070928631 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081295786 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068980823 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070670131 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077260729 seconds)
  done (took 6.292198981 seconds)
done (took 128.571053253 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.20690356 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183861749 seconds)
  done (took 1.746032475 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07287945 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10231137 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082292878 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135314595 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070055207 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103965858 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103183794 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081262295 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069647958 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071251958 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070978787 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074715034 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13932678 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069869677 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069880082 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073713056 seconds)
  done (took 2.76733712 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102105137 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.214243682 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109774654 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069946022 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104621336 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077684921 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072255456 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.083310396 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077070745 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071826017 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077442613 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07515861 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071263312 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075199048 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076625025 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077689226 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071315245 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077297629 seconds)
  done (took 2.96379248 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100379587 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091986277 seconds)
  done (took 1.577942051 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.169499635 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.132637842 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200804061 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.334336393 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.148011507 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.416418502 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.13876405 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.135714851 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114764934 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.129638731 seconds)
  done (took 3.296793003 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101556761 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.192382411 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293826022 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120935213 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076340641 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.107337741 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123829633 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082297283 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082208346 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080800842 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080954589 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077644225 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101396921 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077004129 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076714782 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07751313 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104289481 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075440808 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076850885 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076268452 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10471408 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070768835 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077315188 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074987114 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079118287 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079322255 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071536776 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069929452 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076689231 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077357975 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079382202 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.106055964 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078699926 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10298706 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074648417 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105994524 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07800307 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074844554 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076364309 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074325283 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077739189 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077257278 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078704748 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077542626 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071295899 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07791368 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072098284 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070056762 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079990512 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071823193 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080067387 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079979933 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102614155 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069691006 seconds)
  done (took 6.210560612 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105551588 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105128784 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069375337 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112528482 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103470215 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071071434 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105676738 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100013122 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107803392 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071258696 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069245308 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071292931 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079588209 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083363077 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115382434 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105333095 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071294007 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071161889 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10801123 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108770624 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070315912 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10203886 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098435913 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108661981 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069741612 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071260189 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069820381 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071727477 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076575526 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077802367 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070055817 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079222585 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087938448 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078170388 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068905223 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069672922 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069712115 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078294626 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079481804 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078397609 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076818213 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068691109 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069792058 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070133009 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070168016 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068386036 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077196817 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079226962 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077210082 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069579753 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070612059 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069606936 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070542444 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078421223 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076311588 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079367358 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079044927 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069286233 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06941997 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071546275 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079849046 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078409741 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07875078 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069883165 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076771041 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071128635 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0790082 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084477215 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069666145 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070724187 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069188602 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069700268 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070310851 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07661979 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076378188 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070588133 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06976532 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069386039 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079459493 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07701508 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069541599 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076379905 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068727239 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069569921 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070571472 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07073606 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076376945 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077916021 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071093263 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069288136 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07017952 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069365415 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069261646 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076646069 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076159037 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.075955563 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075466445 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069157538 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076910848 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076371525 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070675586 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076816382 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068827977 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070373154 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069698898 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076849937 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075670469 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077258713 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069157584 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068384885 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075467655 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078387383 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069150198 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075089827 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077680046 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075671764 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068052182 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078900641 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069320048 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077747954 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067666912 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.21229264 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071267251 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078644136 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070874471 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069716781 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070517729 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078292912 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071526944 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070090275 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070415821 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070214645 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077859028 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081911607 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071467613 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077613678 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077682349 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07115372 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077368893 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07036457 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078046601 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071851099 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071051871 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069183995 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081990244 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069735712 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070291854 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070657046 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080057907 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070394443 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078666388 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076815022 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069963479 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084607421 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079931203 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076839107 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07954107 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071067441 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070061697 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069844536 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070296192 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076826445 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078303487 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070919769 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069778572 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076174453 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080083573 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070167423 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077202965 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077395708 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077213535 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069703694 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070328537 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080093268 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080217203 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077153602 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077521463 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078251794 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071328549 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077079981 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07814142 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070030581 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085475846 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070068362 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081939162 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077732126 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076655247 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078366753 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079461317 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080079898 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078383161 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080353054 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067630383 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069718809 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078454297 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070368651 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070709498 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077044265 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070861726 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070679383 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082598727 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068987306 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078609718 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069648265 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078644565 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069075431 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071029191 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08313501 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070484618 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070624231 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077533372 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072987632 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07695881 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079715746 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075613126 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067754205 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069473227 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078127722 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078606059 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06966832 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069425822 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070634683 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076851195 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076561629 seconds)
  done (took 18.595944514 seconds)
done (took 38.553048338 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210589152 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158869195 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18770826 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118473009 seconds)
  done (took 2.158243066 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.106185 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099323614 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.086767195 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064441656 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.094394591 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064811921 seconds)
  done (took 1.944334093 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301890608 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207206905 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184836901 seconds)
  done (took 2.117455069 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209278761 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.197118266 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.457222328 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.279035623 seconds)
  done (took 2.659954112 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.137967098 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081264903 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063878108 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.081152381 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.12066498 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.146433654 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.0916513 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.116390841 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075027753 seconds)
  done (took 2.39453496 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.1456967 seconds)
done (took 12.858579749 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.208549652 seconds)
    (2/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.399683949 seconds)
    (3/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.23904415 seconds)
    (4/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.232825993 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096526435 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.200614181 seconds)
    (7/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.084920934 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069698742 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.15198094 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.127087917 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.104991101 seconds)
    (12/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087362145 seconds)
    (13/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.208858089 seconds)
    (14/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.06751275 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103125448 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077341279 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.10692006 seconds)
    (18/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075183951 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090621308 seconds)
    (20/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.1682872 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106523855 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07579453 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075768592 seconds)
    (24/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175568074 seconds)
    (25/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.178470666 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075841523 seconds)
    (27/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077625109 seconds)
    (28/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.120950072 seconds)
    (29/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.162225988 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.172048452 seconds)
    (31/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.143747642 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.07413269 seconds)
    (33/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066090656 seconds)
    (34/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09683617 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.0926808 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.138187506 seconds)
    (37/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.215018561 seconds)
    (38/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07554831 seconds)
    (39/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.138450425 seconds)
    (40/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.182074966 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07478868 seconds)
    (42/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076469452 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064981335 seconds)
    (44/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071814517 seconds)
    (45/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.209687655 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067640131 seconds)
    (47/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078949261 seconds)
    (48/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066857785 seconds)
    (49/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080100205 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.164749533 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.148780166 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067143466 seconds)
    (53/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.206582884 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.170852829 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 0.067330539 seconds)
    (56/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.182163036 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084882284 seconds)
    (58/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075024858 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065623121 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075609754 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065793268 seconds)
    (62/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.13950441 seconds)
    (63/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.214448079 seconds)
    (64/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067210724 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103012218 seconds)
    (66/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.196383211 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092381687 seconds)
    (68/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.082416242 seconds)
    (69/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.167881998 seconds)
    (70/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.074520987 seconds)
    (71/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.06572188 seconds)
    (72/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.189463268 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077380351 seconds)
    (74/309) benchmarking ("sort", Float64, false)...
    done (took 0.131292137 seconds)
    (75/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.163209753 seconds)
    (76/309) benchmarking ("sort", Int8, false)...
    done (took 0.179882359 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068697246 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124479965 seconds)
    (79/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065843909 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115980378 seconds)
    (81/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067153801 seconds)
    (82/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066470243 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.102002288 seconds)
    (84/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.066544416 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074382077 seconds)
    (86/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.169267339 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087100197 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090634586 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135888222 seconds)
    (90/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074476644 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105905875 seconds)
    (92/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068409513 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065341603 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.226602444 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.192529227 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.14188068 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175230653 seconds)
    (98/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067635118 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075088503 seconds)
    (100/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.236678104 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096655549 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094323579 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078372649 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095180203 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067320637 seconds)
    (106/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071153646 seconds)
    (107/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068144329 seconds)
    (108/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.14481133 seconds)
    (109/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067853202 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085230764 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070716452 seconds)
    (112/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.20172678 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066433319 seconds)
    (114/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07886628 seconds)
    (115/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068494237 seconds)
    (116/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.065645835 seconds)
    (117/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.141697741 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075531968 seconds)
    (119/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.215053287 seconds)
    (120/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066349769 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076113152 seconds)
    (122/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184087571 seconds)
    (123/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066223867 seconds)
    (124/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067618141 seconds)
    (125/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076018673 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177121374 seconds)
    (127/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069190897 seconds)
    (128/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082018603 seconds)
    (129/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.166611649 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119892918 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.079000351 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.097689306 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075532776 seconds)
    (134/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.141162267 seconds)
    (135/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.226329937 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144919173 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06967238 seconds)
    (138/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.160299976 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183795586 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07652437 seconds)
    (141/309) benchmarking ("sort", BigInt, false)...
    done (took 0.246102647 seconds)
    (142/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074990399 seconds)
    (143/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078416943 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074995974 seconds)
    (145/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067814492 seconds)
    (146/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.094097409 seconds)
    (147/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06604419 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067442317 seconds)
    (149/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075505489 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181599397 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067687472 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074196137 seconds)
    (153/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073415442 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064632563 seconds)
    (155/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065297355 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087307038 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071983274 seconds)
    (158/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.125985546 seconds)
    (159/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066720531 seconds)
    (160/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075008727 seconds)
    (161/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.200842208 seconds)
    (162/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067413455 seconds)
    (163/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069916318 seconds)
    (164/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065629156 seconds)
    (165/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065675892 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065408509 seconds)
    (167/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072942877 seconds)
    (168/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070871649 seconds)
    (169/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075752446 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112780598 seconds)
    (171/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06777728 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.187551649 seconds)
    (173/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.141781861 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.135112642 seconds)
    (175/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075989585 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14182327 seconds)
    (177/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.164391154 seconds)
    (178/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.138961605 seconds)
    (179/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.065619547 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06629475 seconds)
    (181/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06682942 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065963214 seconds)
    (183/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066182053 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066158324 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124078153 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092496295 seconds)
    (187/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.223719999 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065497165 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065786077 seconds)
    (190/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.140581516 seconds)
    (191/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.065371603 seconds)
    (192/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071179635 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.107542235 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095159136 seconds)
    (195/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06686572 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065429454 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.19017683 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092264374 seconds)
    (199/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068791526 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091736993 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.093133096 seconds)
    (202/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073198399 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065495601 seconds)
    (204/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067633438 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06587341 seconds)
    (206/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07078341 seconds)
    (207/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06540339 seconds)
    (208/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066046877 seconds)
    (209/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066340688 seconds)
    (210/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.066540444 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073211035 seconds)
    (212/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065477908 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168592987 seconds)
    (214/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066328798 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.245016082 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129800233 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069157846 seconds)
    (218/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.070087605 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074477105 seconds)
    (220/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077814186 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067190325 seconds)
    (222/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.170256956 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076694654 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075965558 seconds)
    (225/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073215029 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137787447 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.104175532 seconds)
    (228/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06738839 seconds)
    (229/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072087485 seconds)
    (230/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081393807 seconds)
    (231/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.064306253 seconds)
    (232/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06650775 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073420159 seconds)
    (234/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066249645 seconds)
    (235/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.2083222 seconds)
    (236/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.064385176 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11581897 seconds)
    (238/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076777745 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118094609 seconds)
    (240/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073451395 seconds)
    (241/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.065602204 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066924185 seconds)
    (243/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066074263 seconds)
    (244/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075324279 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089066958 seconds)
    (246/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.067727691 seconds)
    (247/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.140944527 seconds)
    (248/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082192694 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134661697 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065836372 seconds)
    (251/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087198687 seconds)
    (252/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065542508 seconds)
    (253/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071386227 seconds)
    (254/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066121466 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130814342 seconds)
    (256/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073037609 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072837662 seconds)
    (258/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073707536 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.064384505 seconds)
    (260/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065889909 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064108575 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111337479 seconds)
    (263/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118936687 seconds)
    (264/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065955813 seconds)
    (265/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068068662 seconds)
    (266/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.065896556 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066770079 seconds)
    (268/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.06779638 seconds)
    (269/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177585761 seconds)
    (270/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065642432 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074811598 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065848556 seconds)
    (273/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.081116104 seconds)
    (274/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065856003 seconds)
    (275/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066242528 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066696637 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073773874 seconds)
    (278/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075145951 seconds)
    (279/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073790777 seconds)
    (280/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069277099 seconds)
    (281/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070773602 seconds)
    (282/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066559922 seconds)
    (283/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.0661501 seconds)
    (284/309) benchmarking ("sort", Float32, false)...
    done (took 0.133355933 seconds)
    (285/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07364823 seconds)
    (286/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067290771 seconds)
    (287/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066882658 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.065710328 seconds)
    (289/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071213782 seconds)
    (290/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.067375217 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066556648 seconds)
    (292/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08266971 seconds)
    (293/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.06562945 seconds)
    (294/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080342777 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075217667 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119636755 seconds)
    (297/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065672673 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134413908 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074390241 seconds)
    (300/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066538554 seconds)
    (301/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068970574 seconds)
    (302/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067261491 seconds)
    (303/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066565998 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066468947 seconds)
    (305/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067912751 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067131174 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06665492 seconds)
    (308/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07473134 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129900183 seconds)
  done (took 33.087226635 seconds)
done (took 34.528778223 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085012888 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096832253 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073332923 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093205747 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08128973 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093977062 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073171037 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077605876 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079843787 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.07903342 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077306317 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071159302 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073983677 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073813108 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072208202 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094338944 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078182512 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072545791 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072854468 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067139115 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075396651 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06740794 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066321814 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073726974 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078668099 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073822534 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076602269 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075721172 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067101535 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066853308 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071802042 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075611755 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066722914 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079207409 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076481559 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075087255 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07443696 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076849482 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06481068 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065272448 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074598922 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066710656 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074785082 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072934556 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071331582 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072712858 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073015442 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07711205 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095345595 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070189256 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076160666 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077644545 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078836859 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072526679 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071825196 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075116766 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073219962 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097876397 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074473078 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070747054 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076314911 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075981398 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073229966 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074658176 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074665712 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077693392 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07863625 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073072438 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076902005 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074294205 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06644799 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074847419 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071264799 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069369314 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077609554 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079339338 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065787361 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071583166 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074409867 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075598017 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066400057 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071500365 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066016241 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071892099 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070714679 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072394764 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070157537 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072150127 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064643253 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073231936 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071989253 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07319173 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066042651 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079450535 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066749907 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073057439 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067362088 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067110645 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066182466 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071841697 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066326724 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070793223 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075062031 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065937899 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07135714 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079605208 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066485582 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073515888 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065991351 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065913636 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077403956 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077102573 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066464309 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071587402 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066433112 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07191028 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066254239 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066453527 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066770924 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06649982 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071192781 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066473826 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070433668 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.0717553 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07858581 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066509698 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071410246 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070807847 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066112377 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073077577 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066805214 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066697389 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066101409 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079153966 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07023998 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066417897 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071650839 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070320884 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073579267 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065112388 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074149462 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072332208 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069954377 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.0719819 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065524213 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076923229 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070979875 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069926321 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065416313 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065712489 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064887697 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066137365 seconds)
done (took 12.646280033 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068594226 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.114256737 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.088851373 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.090314242 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.080557968 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066097614 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.071715694 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.087292811 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067285815 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.091458662 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08699308 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085451126 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.105286097 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064480502 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065527723 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066783413 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067676997 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.077820238 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.09283586 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090024775 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105279613 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067165242 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085488319 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08666919 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.080156375 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.084767099 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066606215 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067312667 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068843046 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087127754 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089667206 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068689222 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068272694 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.089455967 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084701439 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.078358328 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065983871 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075297724 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06815888 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067960051 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068803984 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.085461136 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.073912642 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.072915191 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06695957 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074505556 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068476278 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081591464 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087276193 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075427794 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081694208 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090724882 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070655637 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08233181 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066857755 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081955347 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075096895 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067258119 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066221653 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07091687 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066404863 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.0685547 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.074912621 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.0728165 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069899525 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078520791 seconds)
  done (took 6.627839736 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085156287 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092061133 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081034485 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081664511 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06531608 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065811353 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06634648 seconds)
  done (took 2.082526365 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06646128 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086223879 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089620601 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08958509 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082975546 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092146574 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075815808 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067593788 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099581064 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066894058 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089599718 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102897116 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072009485 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078952047 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094895979 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067884783 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092947926 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067823726 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070309915 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093588607 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071998343 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094408182 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079630303 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06819351 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080924686 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068246774 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119287581 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076676524 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069679728 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069153119 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068873118 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108433877 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079262864 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079018147 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069679782 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081834556 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081212805 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071535506 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.077946229 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081225333 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080653611 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069082841 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066910972 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06977954 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072254488 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078691521 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066956914 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069329517 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068868294 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088609962 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06691196 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080656562 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072755271 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073593495 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073841609 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072652745 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076803251 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068182238 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087630008 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068730933 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085926207 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08507343 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080472721 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085430925 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069176303 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080824272 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080909088 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069133093 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070343078 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069876543 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085271325 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071385563 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070383786 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079610652 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068267012 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093848076 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092386041 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066096725 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081071191 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068560653 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068925048 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.076952396 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090419389 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070604517 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06734005 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070551599 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069766905 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071175726 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067165023 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071746962 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068766999 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073421494 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069018539 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072970565 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070083934 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085059231 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067138434 seconds)
  done (took 9.034785398 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068429849 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067896306 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069509996 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068439032 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06770017 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068906851 seconds)
  done (took 1.994078259 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089253337 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067238883 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079427568 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067259578 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104925161 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081239669 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083168596 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078181858 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081463677 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080782619 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082783994 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086203231 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.086738202 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071303319 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082745648 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069879107 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082725183 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072601441 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080082049 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071596163 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081523207 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070693634 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071306838 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087509865 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072336601 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07013309 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.078119115 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080538848 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080189654 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077477034 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071013958 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071776538 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076666481 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076456937 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.082615229 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078983475 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068767276 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074526596 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071152043 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071827627 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085551446 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071301901 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.071316497 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075557593 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077495653 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076394504 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07466892 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077246179 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082875867 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075091884 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074891503 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070501773 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072659685 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074520868 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076303789 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076039807 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074501058 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083315238 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070756341 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076293025 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069179945 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072513509 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077348046 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071500591 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075506856 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074825893 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076435732 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071288789 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071297018 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068787593 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074373615 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068856806 seconds)
  done (took 7.050449675 seconds)
done (took 28.361256984 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.51812925 seconds)
  done (took 2.048227124 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.612035404 seconds)
  done (took 2.179709956 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.536553499 seconds)
  done (took 8.099417017 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.412733821 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.478656503 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.749006077 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131414126 seconds)
  done (took 3.367793169 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.70844103 seconds)
  done (took 2.285986434 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239160644 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233882925 seconds)
  done (took 2.061350464 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.342949463 seconds)
  done (took 1.91306481 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.065851475 seconds)
  done (took 2.632014927 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.250952428 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159112428 seconds)
  done (took 1.989323465 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.451768886 seconds)
  done (took 2.025491241 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.270779529 seconds)
  done (took 5.851373281 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238706551 seconds)
  done (took 1.849727869 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23231381 seconds)
  done (took 1.807893127 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.713177513 seconds)
  done (took 3.2855105 seconds)
done (took 42.975031002 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081798996 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084903959 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084129453 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08013436 seconds)
  done (took 1.880635474 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075034803 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070403297 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074922619 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070633852 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.073480817 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070130526 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071354019 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.072644014 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070233092 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.070562863 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070563485 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070446191 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.072809709 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071429761 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069118944 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073277997 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074045929 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.069931798 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072754434 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.070282933 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070609032 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075053026 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075295839 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071347311 seconds)
  done (took 3.298455564 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079161759 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072605687 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074896349 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072193692 seconds)
  done (took 1.881282722 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076270857 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088793126 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.085330166 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076882688 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088312286 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.083918617 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06707553 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.066359081 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070133653 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078890898 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06749793 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094496293 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089029746 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078898406 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081017332 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064929629 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066569878 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08849821 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079218143 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079322469 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070164626 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079052956 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067594629 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08802927 seconds)
  done (took 3.456267804 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083363515 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.065818728 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085461914 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093155583 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093753412 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066134332 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.083910553 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092343376 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.137190283 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068060691 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073780879 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067751692 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.106494503 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067836831 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085521053 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110976199 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114861344 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071394688 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100103536 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067731953 seconds)
  done (took 3.324988743 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.08321581 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071478147 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072117404 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067681752 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077861529 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074778938 seconds)
  done (took 2.040676646 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067902182 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070345799 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069658763 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068220784 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073860965 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072253555 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067346718 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069684068 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069661484 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069078606 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068565222 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068156189 seconds)
  done (took 2.42161413 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.162329638 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069223795 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070409333 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066597406 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072878916 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068669543 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084378792 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071378967 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.088131188 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06815482 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069097179 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070905939 seconds)
  done (took 2.550514191 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184028898 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073844439 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215603744 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143461362 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098579413 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107014111 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108440163 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107593163 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.12940361 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094432035 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148302706 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15615245 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101168263 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12392445 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086154968 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.121767708 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135926199 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154077227 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099663904 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152252508 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135231033 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121275687 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138957744 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096936463 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097207352 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112502676 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070839695 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07607812 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155886519 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121126635 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131527677 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105688281 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089051607 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166918775 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154170211 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130911437 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143117943 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081545683 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117408052 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.124224713 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1868854 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08539004 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143464146 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100865498 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076103227 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117084651 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106627329 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.110195061 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.094779553 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0844545 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273708956 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169014148 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.124948318 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081886123 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115084142 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100446273 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.105800639 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113514031 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169151459 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147907052 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120124936 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071348353 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108267961 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140766552 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125350857 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104022087 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117809698 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089105222 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12410203 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142438805 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121773703 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133339779 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.113850282 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085744832 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113957689 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130582693 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11809881 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158522024 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115943923 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071100506 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109215523 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091605956 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079427354 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141352247 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072599944 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158264637 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09466322 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.117651795 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12186357 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10338837 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102555591 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141020502 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130106734 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099838781 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084581911 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100004425 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.112353535 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130287205 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084766827 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105984683 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107352233 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077612318 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122145682 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074696599 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111291911 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093700651 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114792566 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115274648 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077674594 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.266634453 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102146389 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100160128 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124726981 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146996912 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087151042 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079627156 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15389257 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112956728 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.099524542 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134233587 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147305542 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.119522032 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096313669 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136514417 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16356997 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089589916 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148682725 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098427278 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082601134 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102855086 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11160403 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102873848 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.11481251 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078915423 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.110741885 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150240554 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072170846 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092975128 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124275282 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077541136 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076910999 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09827994 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096555823 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.090893121 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.094730815 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.098357587 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123006454 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111926238 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098366708 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11327131 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09145713 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150838024 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083425789 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.097626802 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099469478 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071493238 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126988492 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143502247 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0773588 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151877786 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117647401 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111562688 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110631982 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082244312 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131236446 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077093169 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072277794 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129703653 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105590249 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101217736 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.133770579 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26257588 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.11763716 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11335014 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120002892 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120400284 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.121311163 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103363753 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088417924 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109910619 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122538011 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072005794 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088796451 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081153169 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10049109 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091385485 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082124886 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131942709 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116838906 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107134599 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109123208 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093916058 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13889046 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076955863 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116542785 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.113147692 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089616947 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.140696682 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138420992 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122945053 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098691988 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128880904 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072864028 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074122438 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085091761 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117591956 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081604879 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08210917 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106250685 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134972208 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118683118 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122664907 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114725086 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11084689 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143495122 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072037135 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118736527 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134855539 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11142023 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100614938 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089208406 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095408831 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133051474 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099591168 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169688658 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108320343 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116522577 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144093227 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.096475196 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076243159 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099903538 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119493268 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091386765 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.285139228 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094304224 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083746096 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101734268 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075773365 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093066454 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115743983 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106370337 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124766883 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.105451736 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121060084 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076043504 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106623378 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114811362 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113989341 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08417425 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113682891 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152798491 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094584203 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112424993 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138325279 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077110057 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135781387 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15915459 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135364762 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082931315 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099543716 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114204075 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119505005 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114307833 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132845231 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098087355 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129505657 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106043969 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084938992 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082305653 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094353011 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101359844 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109289308 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.097622603 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.10553846 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.091933887 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123905164 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09845914 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107114279 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112019778 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097951666 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09683333 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094236885 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161156382 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111058664 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158284895 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096446012 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.131739425 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149962334 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073640834 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076199826 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076982283 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125701913 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079124668 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114004269 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.258421435 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11142777 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112263673 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127137871 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090136314 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069939439 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103091971 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118509616 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114652574 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091045255 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.094892624 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145213005 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.111644804 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074176795 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108919241 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112127979 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099592314 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160205697 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081674909 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107819713 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076954573 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07836173 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119050127 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13987934 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084321777 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102373498 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11455915 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105387035 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118644974 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093398995 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107519507 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125351455 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136784592 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119888958 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088351946 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107097558 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121472115 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1422814 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099246707 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094194604 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156652895 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137098514 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.144123397 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.081788154 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106790818 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105636576 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102212981 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125148212 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083100218 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150702186 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080496607 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124219198 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097717076 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086317824 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118935361 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110218673 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085797687 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131477869 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104280291 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079127728 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077238762 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261882507 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109092973 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095593975 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.071742135 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126983901 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072152857 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121903648 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151750649 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076672398 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097847959 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090747347 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079256034 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095818517 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094946909 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080833614 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.095325679 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152913035 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.082040197 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134534259 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122986633 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107060533 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127051801 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097655383 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641364824 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079156034 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139865796 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11024517 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166522042 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098255309 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11211722 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105955407 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112506483 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133491513 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097211269 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177166409 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121708776 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.107489641 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074742552 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096499889 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097998305 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08547594 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103828497 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108817106 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107072063 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092296519 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.110388449 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114440217 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082051543 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093479005 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143508285 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11055611 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134729974 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132720464 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082553018 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111188151 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12525459 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078330763 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.109917201 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134075544 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.254383855 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098205808 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082691041 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.096114577 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159762181 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072618034 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142954765 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112180683 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105848022 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108310823 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.104299914 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120684668 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097841844 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113466297 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088975985 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104131402 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107035544 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082628655 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077987439 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10053224 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1057082 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094713021 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091855095 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095874693 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135301349 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069419681 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091886026 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109519765 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131483333 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158319381 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.104603971 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082500407 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112454855 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111686772 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.107603128 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114544985 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.116496359 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078368753 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077315758 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.097966487 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.117723728 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105003709 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110733671 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104982045 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14951101 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.080541606 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224786948 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092826771 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101286776 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.08736104 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079901213 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094115154 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092933828 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099858659 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109699756 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160527029 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093187019 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088007336 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089904967 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073978296 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081809485 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11870688 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105125627 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107721791 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098449099 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.08062686 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09659762 seconds)
  done (took 55.949360767 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103720758 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.0768097 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096729323 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144765534 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121783591 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199554304 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150614919 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187472303 seconds)
  done (took 2.834804966 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067419507 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094738129 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103701464 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084693844 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068624297 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069735122 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234817486 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082989364 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068523113 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094086883 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079138608 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070780739 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.431508925 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06787063 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068714288 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077765612 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069747105 seconds)
  done (took 3.541503433 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.381776811 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.595119106 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.365378304 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077342354 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.936892398 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088217881 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.194034212 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136373841 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080813846 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.519633198 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.366657607 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.129371269 seconds)
  done (took 18.586409825 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079907048 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079785218 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091519665 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091046665 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07899658 seconds)
  done (took 2.128189932 seconds)
done (took 105.504178763 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080273549 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.194610823 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070223024 seconds)
  done (took 1.997144113 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089186405 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088624308 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089440131 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088462936 seconds)
  done (took 2.072731797 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073953262 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076263344 seconds)
  done (took 1.860927642 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.231506556 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171365786 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.094283784 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08221712 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079248326 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079797546 seconds)
  done (took 1.959409195 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07209678 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072249912 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.0749246 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077965901 seconds)
  done (took 2.006625948 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.070393403 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065871464 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068558942 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070787778 seconds)
  done (took 1.986230387 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083528568 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083709583 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078400892 seconds)
  done (took 1.955139354 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102464024 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09269665 seconds)
  done (took 1.903749557 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.0793612 seconds)
  done (took 1.792388618 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092482106 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.10137619 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129225925 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112533828 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139603637 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.116073058 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083585954 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088789752 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079168856 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085982257 seconds)
  done (took 2.738992467 seconds)
done (took 22.562227012 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078390269 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367820949 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360697838 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090078543 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671647418 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358094685 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.998479291 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094610519 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110218704 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071366681 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088444796 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.659520915 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.990645459 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.333335765 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.977856741 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331689237 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654254355 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070719775 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069702875 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071043836 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.982895926 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06994856 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070478654 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070543715 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650554677 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375070725 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07134288 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326445448 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07007821 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074284973 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360319231 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072985726 seconds)
  done (took 16.331395367 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069632101 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119926327 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072828479 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08629692 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072741507 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072012442 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073358216 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071433945 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120237215 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070978182 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088881235 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070753596 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074592878 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071992499 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091579543 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071451708 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074021287 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072007258 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071552215 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073029191 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091037184 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071046902 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072773308 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071621692 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072180995 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084830329 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073420498 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071636302 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072289446 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075638612 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076909155 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073506581 seconds)
  done (took 4.225795531 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115439379 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127574046 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076554309 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109207433 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120000062 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073403325 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148644808 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095793612 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123749865 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071186055 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089349628 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071052101 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105727276 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072259482 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09281316 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071442174 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074813843 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072012455 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071039031 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072225012 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091832985 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071672256 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071989008 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071986576 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072738034 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086153682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073099699 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071582454 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071796381 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075802631 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076973206 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072309978 seconds)
  done (took 4.494322238 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.069835128 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073178243 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08198585 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082710585 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069266366 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071467727 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072858261 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069958651 seconds)
  done (took 2.323276696 seconds)
done (took 29.101728783 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078181543 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069329843 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073353775 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08832289 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075518613 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080378617 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066819034 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076017276 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074206734 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073101771 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077306844 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068969454 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071936114 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067356619 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073377176 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067755808 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081239838 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071713644 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080993252 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082196358 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071820759 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074641837 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076674846 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080306526 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080982903 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080754902 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078145243 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073874273 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069218317 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072292301 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071304333 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079513797 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081810066 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08123549 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067424995 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067010777 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071281983 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068942226 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080007451 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075513837 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068191653 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076408946 seconds)
  done (took 4.843939712 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08354709 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.08827566 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.081696181 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080166955 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09915642 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084054715 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08771022 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078673562 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078392441 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087722689 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074767223 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080562187 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078199741 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.074271672 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079182047 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076518018 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081025897 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075511647 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078822087 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079225752 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08851682 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.074009335 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087781813 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081752249 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075784231 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081123489 seconds)
  done (took 3.855445227 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072393367 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085077642 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093320923 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146008863 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113577553 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.086986886 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082632196 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094234926 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098558878 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069796679 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074255198 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094497865 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094305708 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076026688 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.112573468 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085914113 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08583615 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071873437 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076942018 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098890988 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.09083818 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087017381 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095975703 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086762037 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069270476 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072245532 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074782767 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084992471 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072134892 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081124708 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072887387 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072806883 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070641997 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080174976 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072041396 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068691382 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092902078 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081440804 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081991997 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.107323245 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07920471 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.0707553 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094807412 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129266932 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068703192 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073205818 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072832886 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081119249 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069052462 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096591177 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081540971 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069311493 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070035007 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069063643 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068622473 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072100745 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070918892 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071439978 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079631584 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075844694 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091394025 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074713854 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089115 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069376774 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07984632 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069000992 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07054457 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067721482 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098091681 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071885692 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113588181 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07049818 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067983289 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080830067 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079709383 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076015489 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069463162 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088753273 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079927727 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073693635 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07793859 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072227593 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072413637 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099832469 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069554215 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069070124 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068041554 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075405798 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072320946 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070689022 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082145601 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069304526 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07221741 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088399798 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069588341 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070165769 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073188718 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071483373 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069126357 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081034031 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073780514 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070627259 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080215226 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069919253 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072630075 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082879465 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076885628 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06885665 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071448748 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073200924 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070844497 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071027811 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072635797 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071419733 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076374061 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076605831 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075687738 seconds)
  done (took 11.063450946 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163033586 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154552243 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071674803 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150957189 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07871881 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081911621 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150864623 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09539519 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068459039 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06890672 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067682539 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.107016102 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.102326267 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114516866 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079728761 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06877357 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092792694 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.111915726 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14991693 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147973136 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093329407 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07820871 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07254864 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071610315 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07151062 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080591915 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089085358 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077995164 seconds)
  done (took 4.536177503 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077453264 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103900085 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073876503 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093061373 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08923119 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071373213 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073010877 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071391262 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086104683 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078542362 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070259679 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074848608 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072577651 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072408986 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069680269 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076662561 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077841123 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069619155 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074268082 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075774588 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08029518 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094549712 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076126162 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070170894 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073109995 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069744812 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.078530165 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081485093 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070825919 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.106336383 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067626809 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075196467 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084266318 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070435314 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06977288 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070110769 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070314183 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070012481 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070479007 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068178516 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068453485 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.074028068 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068858608 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077824727 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083548122 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.076801576 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072531946 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07277356 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072878705 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067815066 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073008581 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072908935 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072649902 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077806093 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073757061 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07326731 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070825139 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096026067 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076392706 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069327828 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069135974 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068857758 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072483128 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079842805 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085328026 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072974977 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068785773 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07056112 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082362744 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083392612 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069238918 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073152094 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066388889 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068950597 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070099203 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070628697 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06924841 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066715284 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068063597 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068742371 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070276082 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069872421 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06949021 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073058093 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068412716 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068999766 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070287199 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074661353 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078304188 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069647325 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073584974 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071063281 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068689123 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072867127 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075217853 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073512982 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080727903 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.07927357 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069252456 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066726556 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084175549 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074135908 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068340141 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075967628 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074152566 seconds)
  done (took 9.59386036 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088649561 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068512319 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086247673 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093390622 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.080594274 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075371968 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080765902 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069900708 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08651819 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074877469 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077652676 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068438904 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080970554 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080300796 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070531736 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080943288 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072880801 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090282546 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084675817 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068730652 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078835565 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082118818 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.082438465 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084987897 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083648408 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084907457 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081781333 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079614126 seconds)
  done (took 4.026119219 seconds)
done (took 39.645811787 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.839303685 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.079713014 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.811643135 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.027747634 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.864673898 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.033359243 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.897372818 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.815628401 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.059210808 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.828547157 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.13583509 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.304975632 seconds)
done (took 67.560328909 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.842909963 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.954593098 seconds)
    (2/2) benchmarking "String"...
    done (took 2.062409128 seconds)
  done (took 5.758952551 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.012056736 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.462603974 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.072563638 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.806685277 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.812391533 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.234051223 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.57986267 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.255979067 seconds)
  done (took 30.96748133 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.938388707 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.025191198 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.496294194 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.530494929 seconds)
  done (took 15.775695693 seconds)
done (took 64.190623413 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.857859922 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.809477724 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.84424924 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.835061353 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.815651766 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.811681356 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.810661802 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.812697984 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.828158624 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.877223308 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.808487983 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.81402423 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.809386603 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.822790107 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.34492455 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.857536049 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.818009615 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.817065245 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.814353455 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.864685491 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.813124334 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.812101354 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.234919143 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.963384629 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.426087373 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.971867431 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.175454128 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.21055245 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.820019475 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.808429111 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.004033813 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.068023418 seconds)
  done (took 205.124564366 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.809957365 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.76939021 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.871445541 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.84052275 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.312795786 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.983248011 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.9167227 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.436280424 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.811795049 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.820347632 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.08790706 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.809057059 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.107715078 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.761108167 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.84686015 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.812883727 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.029827449 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.103500579 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.849591781 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.974013273 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.811717808 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.908773904 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.89502488 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.066356693 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.829126456 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.821450507 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.82093813 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.836446879 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.993989969 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.017478044 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.816501972 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.817620617 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.010149893 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.681505466 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.819710856 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.821865111 seconds)
  done (took 171.669506627 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.993109158 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.816885238 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.810775475 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.863512572 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.932707487 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.814302104 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.480682497 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.818948587 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.39543937 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.811698333 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.810058696 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.811160772 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.813537647 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.823602296 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.916744614 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.81287135 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.826352626 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.813385129 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.837082815 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.814690434 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.811102257 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.81096421 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.811981669 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.810625652 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.810831653 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.812024634 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.098097376 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.062198751 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.812988287 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.812275932 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.766723917 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.827334735 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.918913402 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.813042146 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.904200153 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.866651776 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.926271804 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.815498304 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.030291215 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.892698363 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.814210725 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.812833311 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.877101065 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.825128235 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.816413737 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.814449196 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.811712627 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.813540971 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.817949598 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.877462828 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.059758766 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.816692568 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.933902702 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.291653492 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.813656038 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.812737823 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.812592643 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.390939683 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.816657384 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.812687181 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.819732245 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.819615606 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.812913371 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.814256902 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.198378576 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.884090076 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.97042759 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.11303982 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.819737991 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.020978844 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.953683655 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.813744826 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.813551281 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.813159234 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.81594455 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.813663546 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.816533295 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.935151546 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.824308519 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.941029211 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.898215124 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.936094041 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.817952138 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.823440114 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.634585202 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.887253329 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.850150706 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.630582291 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.818530745 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.186624531 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.591272927 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.819406471 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.814608075 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.828152799 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.814757378 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.81530164 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.816842741 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.894910209 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.815028343 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.815887053 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.815214176 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.936399115 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.530915767 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.11390343 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.825083679 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.815315894 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.82058989 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.896455955 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.937460616 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.819016599 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.881800216 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.821463013 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.817368837 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.90863455 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.816412459 seconds)
  done (took 405.125383134 seconds)
done (took 785.71141326 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.456732016 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.425487608 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.524181986 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.444794631 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.416618278 seconds)
  done (took 14.018591352 seconds)
done (took 15.77124324 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.892895123 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.902362367 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.838934909 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.900981316 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.836212848 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.900793805 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.884249492 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.843888618 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.866004867 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.843741311 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.870813137 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.843062877 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.829322958 seconds)
  done (took 26.005297447 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.052538327 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.045588805 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.883024813 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.047462661 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.856745735 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.051848232 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.98423734 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.964557668 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.965686736 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.828934053 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.825965706 seconds)
  done (took 23.259280065 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.050919855 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.06545815 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.88763019 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.053727414 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.860713506 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.052523074 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.996824878 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.97510328 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.965975983 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.829143431 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.825942772 seconds)
  done (took 23.317182349 seconds)
done (took 74.334736686 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.822742349 seconds)
  done (took 3.576020786 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.838805803 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.995076688 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.823493945 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.821005736 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.822246834 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.820622515 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.820487567 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.822670088 seconds)
  done (took 16.520428113 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.822374719 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.822364026 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.822848085 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.822377637 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.824542545 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.823111073 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.8231362 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.823054226 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.823113324 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.823826532 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.823820627 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.824035798 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.822893045 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.824850158 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.823559973 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.824250282 seconds)
  done (took 30.929205444 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.826371974 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.823426911 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.823757982 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.823847857 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.824596725 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.824886129 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.82446884 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.824240331 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.823934585 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.824471281 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.823704842 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.823234061 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.824215045 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.823856579 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.823819797 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.82395143 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.823453253 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.82478289 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.828203193 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.823596282 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.824172938 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.8242801 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.825260781 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.824858938 seconds)
  done (took 45.547293531 seconds)
done (took 98.327743794 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.552704647 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.437994504 seconds)
  done (took 9.746343028 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.828560374 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.824901638 seconds)
  done (took 5.479344692 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.825331457 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.824958395 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.825110149 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.825759209 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.826581889 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.82606555 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.826128011 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.825995714 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.825689517 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.825871844 seconds)
  done (took 20.013911527 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.825923009 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.825683967 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.825184694 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.826117461 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.826295415 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.8263555 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.826379501 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.826166423 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.825220402 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.826773709 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.826354274 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.827413782 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.827029209 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.826665076 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.826440266 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.826315128 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.82635382 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.826505767 seconds)
  done (took 34.630426391 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.826231494 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.826574382 seconds)
  done (took 5.410684142 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.826711984 seconds)
    (2/7) benchmarking "second"...
    done (took 1.82653523 seconds)
    (3/7) benchmarking "month"...
    done (took 1.825745697 seconds)
    (4/7) benchmarking "year"...
    done (took 1.826555213 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.826315715 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.826540993 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.827239323 seconds)
  done (took 14.544026465 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.827570765 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.982450334 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.044464826 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.466926374 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.828413013 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.829886542 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.741747834 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.828947064 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.831205302 seconds)
  done (took 20.140090404 seconds)
done (took 111.722152579 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.691982285 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.83729701 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.105748657 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.87998445 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.851965098 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.118040294 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.858204967 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.101588485 seconds)
done (took 43.204877337 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.842681456 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.392619734 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.421497748 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.530381119 seconds)
  done (took 13.103220862 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.826155175 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.184917813 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.849338083 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.618148267 seconds)
  done (took 22.252450375 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.186856437 seconds)
    (2/2) benchmarking "read"...
    done (took 2.171696804 seconds)
  done (took 6.121801384 seconds)
done (took 50.083070683 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.829008721 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.828903347 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.828078748 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.829097367 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.828437235 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.828341087 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.829478876 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.8287958 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.829073673 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.830129647 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.829157156 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829206715 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.828831377 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82857297 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829342288 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.829032049 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.829041612 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830254833 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.83042301 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829163429 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.829752436 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.829717827 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.830017842 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.830579282 seconds)
  done (took 45.663794847 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.829875367 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.830052611 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.829715185 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.831271689 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.83006414 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.830295302 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.830802129 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.830473486 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.831665422 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.830472442 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831370852 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.829841235 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.830646807 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.83004534 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830447583 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.831119792 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.83170169 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830786845 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830382701 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.830952122 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.830936454 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831414622 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.830960946 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.830435112 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.831594213 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.830852994 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.8305768 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.831488245 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.830988492 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.831648764 seconds)
  done (took 56.686059127 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.831373651 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.832524012 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.831104541 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.832065159 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.831351277 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.83187553 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.830809398 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.832086297 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.831723342 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.832401249 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.831456524 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.832963303 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.832127439 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.832065038 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.832013036 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.832578403 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.832331651 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.832539921 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.833217746 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.832802917 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.832585429 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.833110974 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.831962095 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.832582368 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.833001101 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.832926526 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.832429224 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.832914203 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.831635335 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.833338626 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.83299218 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.833320017 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.832864031 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.833233328 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.83243796 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.833411228 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.833318272 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.833256275 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.833547727 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.833846828 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.833006922 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.833237349 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.833210079 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.833423672 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.834521927 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.834440214 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.833899003 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.833432758 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.833527733 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.834562205 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.834591937 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.834178361 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.834933626 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.834265003 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.833865921 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.835073675 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.834663039 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.834695719 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.835145988 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.834859839 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.834921991 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.834383109 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.83526402 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.83561052 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.834385885 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.834744827 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.834813378 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.834747958 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.835108268 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.835989034 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.834972807 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.834824242 seconds)
  done (took 133.767836626 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.835563965 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.836115968 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.83566721 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.835757327 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.835481119 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.83711877 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.836565672 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836204661 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83595337 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.835595402 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836010924 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.836792839 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836474174 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.836091457 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.83603593 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.83620245 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.836534901 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.836493819 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.83648647 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.836224703 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.836420967 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.836906518 seconds)
  done (took 42.163430646 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.836963941 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.836815175 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.835555759 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.836721281 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.835936804 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.835475157 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.836714732 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.836008792 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83763217 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.836085481 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836382186 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836451245 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.836710111 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.837682761 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.83776747 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.837784637 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.835878429 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.837632708 seconds)
  done (took 34.828527631 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.837186091 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.837436294 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.83778594 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.837915325 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.837483477 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.837047515 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836964536 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.838016531 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.837611819 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.837063772 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.837459584 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837643816 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.839721084 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838115499 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839002227 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.839379523 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.838669596 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838492436 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.838492982 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.838930513 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.838789668 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.839263067 seconds)
  done (took 42.207277529 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838363483 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.839692522 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.839133646 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.838936201 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.838690489 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.838898969 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.838563039 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.839762389 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.838051188 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.839426041 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.838897127 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.839383493 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.839333601 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.838707645 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.84005699 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.839555427 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.839145137 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.839377896 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838918131 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.839630503 seconds)
  done (took 38.552461276 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.838957643 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839421107 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.838969558 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839269203 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.84265166 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.839130857 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839594248 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.839496695 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.839026045 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.840459433 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.840527181 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.839707947 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.840227114 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.840655818 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.839335487 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.840118376 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.839902721 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.840661635 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.840884984 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839937544 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.840240116 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.840467876 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.840265964 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.840456008 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.840195596 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.840536616 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840210734 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.840354424 seconds)
  done (took 53.292608687 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840495245 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.841282792 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.840861931 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.841579222 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.841004431 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.84235624 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.841746368 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.841539858 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.841530394 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.841181422 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.842252237 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.841663913 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.841456272 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.840986856 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.841237525 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.84150545 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842401188 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.841604837 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.840944009 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842293558 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.843110853 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842602258 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.841838608 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.843602208 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841992572 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.842902583 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84283706 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.843119655 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842974365 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.842480923 seconds)
  done (took 57.029799026 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.867565378 seconds)
    (2/2) benchmarking "in"...
    done (took 1.863141128 seconds)
  done (took 5.503085584 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.841675405 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.842864589 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.842032605 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.843435013 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.843389947 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.842237722 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.842432887 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842481621 seconds)
  done (took 16.51380598 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.843503153 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.843874759 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.843448127 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.844162811 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.843518029 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.843157148 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.850838387 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.844525588 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.845122097 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.843400758 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.850194986 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.85170629 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.846732605 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.845197899 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.844822122 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.84674143 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.844084464 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.844352314 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.845360718 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.845418777 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.84627 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.847065802 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.848165545 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.84510821 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.84581407 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.855877769 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.849143971 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.845209842 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.846792188 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.848552184 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.84529581 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.844139019 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.845209787 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.844715661 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.8444701 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.845120818 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.852809438 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.846454845 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.852121244 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.846887586 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.846101374 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.845276073 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.847065117 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.847952894 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.84713042 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.845659998 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.845799866 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.845389909 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.844254023 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.848967436 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.854067846 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.846362581 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.846022579 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.850253123 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.848528417 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.853451296 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.847583045 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.849777862 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.85461635 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.857379821 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.85849475 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.85617719 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.849605177 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.847045667 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.856210138 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.870874368 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.853980611 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.847162786 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.846512176 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.846628486 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.853438981 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.858364165 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.857197861 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.847884353 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.84686273 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.847193653 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.847482113 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.847833943 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.855491506 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.851753084 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.847202557 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.848179048 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.856859953 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.870727764 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.848332733 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.847740142 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.84894061 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.848123164 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.847844398 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.859075995 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.849627629 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.848644706 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.848314875 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.848836098 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.848594043 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.848743816 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.846570932 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.849535115 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.847889605 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.848291605 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.848077033 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.851494193 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.858660068 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.848831087 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.848011008 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.855132201 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.849088406 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.849371813 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.856606682 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.849138062 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.849581287 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.848008302 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.855745777 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.849010977 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.852492423 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.856480431 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.850137253 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.850873753 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.849654103 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.850196649 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.859269611 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.876913101 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.850159764 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.849883505 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.854533922 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.862005778 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.850793368 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.853955527 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.85058189 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.850009604 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.849629832 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.852945945 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.851478109 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.851598674 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.850932598 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.851613901 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.850313155 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.850191575 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.850463585 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.851966573 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.851092641 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.851432432 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.853375253 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.854374263 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.85162545 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.854046173 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.858329799 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.850036613 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.85381153 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.851279916 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.850838575 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.851430228 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.853218074 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.851031539 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.851344233 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.851680927 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.851238084 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.851877855 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.85207971 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.852208347 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.85218581 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.851685615 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.856800436 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.852722578 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.856864035 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.853505678 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.851259692 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.852418492 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.852742462 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.851120555 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.853381744 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.850415876 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.855556892 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.861498629 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.852846111 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.853969434 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.855354919 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.853354613 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.853622954 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.852813004 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.855743052 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.862303461 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.852894309 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.859881238 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.853555268 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.853515492 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.853171292 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.85412521 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.85277442 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.854131983 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.856724466 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.861177615 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.8655157 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.863005022 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.853426749 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.85734599 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.853293235 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.858164171 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.85768639 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.854106688 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.854000404 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.854483256 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.854538929 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.854307977 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.856833441 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.855186273 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.853199585 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.854164767 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.855141087 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.854999712 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.854180016 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.855690032 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.855972175 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.855583345 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.854442041 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.855613797 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.855182635 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.854828573 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.852739149 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.854252289 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.855451202 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.855423861 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.862622293 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.855127925 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.857574721 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.85847408 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.855885094 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.853570602 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.855677775 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.859240042 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.857941762 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.863825704 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.855374923 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.857169804 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.863499374 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.85563998 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.854887036 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.859568705 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.856721671 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.856041363 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.859618851 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.864759939 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.856265452 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.857273622 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.856870433 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.856539731 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.856182496 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.863508701 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.856775043 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.856015162 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.857037628 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.856933652 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.856762427 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.85948178 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.858292911 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.856965214 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.859925862 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.857484073 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.857169372 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.858660007 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.856760101 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.857606925 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.858096784 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.860230159 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.866415754 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.863070532 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.856707697 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.859216452 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.857993069 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.861761171 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.85896662 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.858309526 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.857993451 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.869250009 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.866588212 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.865166996 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.859802356 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.857537921 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.863839586 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.859438586 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.861687666 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.859812341 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.858994729 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.859105167 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.861780368 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.858852105 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.860656819 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.859594768 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.861153454 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.860404555 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.862912292 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.859593325 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.859438991 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.859387245 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.860399744 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.858943078 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.8591304 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.859598563 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.861992494 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.862847313 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.85828032 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.859634679 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.866646814 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.860516128 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.860365246 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.859824069 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.860873197 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.858656335 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.859554947 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.860199016 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.86267266 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.86856181 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.863337357 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.869936392 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.861437959 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.870384164 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.860816706 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.863823012 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.868512134 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.860770558 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.858506999 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.859498775 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.861402573 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.86851765 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.862000913 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.859621702 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.865306711 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.860973114 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.861150188 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.861577636 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.86218375 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.862071011 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.861625159 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.870168197 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.862335733 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.866048245 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.86324494 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.861461766 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.861688959 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.861790698 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.860351204 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.865481613 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.861761216 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.862756272 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.862018422 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.860995308 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.861996223 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.86290153 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.861956293 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.861827726 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.86186599 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.87030916 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.862906874 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.867165792 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.863303417 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.870154629 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.864142785 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.870808611 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.863750161 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.86176144 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.861790444 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.862911258 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.862488094 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.862010322 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.864371482 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.863317462 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.863299199 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.867107546 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.863656814 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.864380912 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.864948386 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.864090761 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.864119532 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.872462335 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.887585204 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.865547965 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.86845688 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.864284425 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.865320195 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.867908676 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.864154704 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.861387752 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.866938711 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.874157462 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.872061542 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.864592446 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.864052628 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.865381699 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.86543927 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.865180521 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.86487933 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.865124727 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.86534305 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.865340946 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.865281113 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.868481704 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.86546336 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.864848608 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.8674675 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.864955341 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.876156817 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.865654334 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.865310652 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.865998183 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.865093272 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.866342203 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.866050568 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.865489406 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.866124265 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.866244847 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.86759835 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.87228092 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.871494382 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.868879205 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.865182816 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.866276218 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.866755205 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.865729784 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.86624443 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.866080333 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.866767133 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.867339651 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.865614223 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.866334103 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.864165822 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.866052903 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.865537181 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.866616227 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.868846686 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.874692196 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.867402478 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.866522348 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.866372568 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.866900152 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.864855293 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.868188277 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.875512025 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.869889691 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.878937049 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.875071634 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.870844143 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.869378072 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.870742466 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.876668675 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.865672589 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.869394446 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.868274202 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.869997468 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.867106919 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.871856467 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.867572999 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.874653721 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.868853872 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.86683392 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.876326585 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.870216615 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.868290562 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.870197752 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.872241059 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.868373397 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.867912934 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.867558757 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.868114518 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.875399007 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.871061746 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.869063682 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.870743019 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.865852757 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.869566685 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.873178364 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.868576415 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.870609823 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.868499512 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.869878737 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.869500916 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.869153106 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.869439633 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.866897588 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.868387785 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.872742847 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.875679156 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.869450513 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.871201207 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.870227404 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.868225874 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.870258546 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.869307644 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.869546932 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.868666886 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.868621164 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.870439513 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.870529239 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.873485541 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.86861976 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.869996153 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.874811304 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.87062571 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.873183096 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.881614777 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.877571015 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.870516912 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.869642323 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.870178614 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.873767321 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.871879765 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.870647945 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.871268973 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.873596218 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.871431942 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.871043191 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.870931341 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.873850182 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.886906532 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.872146492 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.871118125 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.871513742 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.875926229 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.871374826 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.870508882 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.870944474 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.872602351 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.873537542 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.879823073 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.871205251 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.876997563 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.872201034 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.871078476 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.875616701 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.874102201 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.878600326 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.875250224 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.87199294 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.872007429 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.875939964 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.889157242 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.872503267 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.881402238 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.902717988 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.872119126 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.872140218 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.872394932 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.872354149 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.872637921 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.873345151 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.873826449 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.87325658 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.8729425 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.873360931 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.872906404 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.88111916 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.875710582 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.874279801 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.873367478 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.872232364 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.873330726 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.873249339 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.874209729 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.872791696 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.874259837 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.874986778 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.874205326 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.874731229 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.885262182 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.883167468 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.874605884 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.873069231 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.873657831 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.878356886 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.876927638 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.884701357 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.881480552 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.874956198 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.87439024 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.875747424 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.873924106 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.874350988 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.8752717 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.874891761 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.874221997 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.874069134 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.88614767 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.884089881 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.880068051 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.874222387 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.875001282 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.875617671 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.875570443 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.875899019 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.875734486 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.877481054 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.875349675 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.880086998 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.875856629 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.875733258 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.879040475 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.883448039 seconds)
  done (took 1111.262471744 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.875576209 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.876271969 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.876262906 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.876365657 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.875915455 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.876536477 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.876006837 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.875974374 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.876375037 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.876092327 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.876657658 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.87605357 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.875732132 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.876620123 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.875689498 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.876810805 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.876797384 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.877171414 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.877548848 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.877812997 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.877816222 seconds)
  done (took 41.212193682 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.876847551 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.877312679 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.876176269 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.87696777 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.876684846 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.876768045 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.876711544 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.876752515 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.877239427 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.877120673 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.877629664 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.877239181 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.877781958 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.877271883 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.878240508 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.878875264 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.880255931 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.877797525 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.879099958 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.877536742 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.878338531 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.878591707 seconds)
  done (took 43.11560529 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.878596042 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.878632528 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.878563464 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.878319418 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.878275228 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.878821837 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.878646427 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.878826331 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.878757843 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.878929918 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.877158115 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.878048881 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.886043227 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.886697813 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.881016263 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.879492929 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.026013821 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.880573782 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.879972735 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.87989159 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.879307159 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.885529511 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.879382478 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.880132792 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.878337557 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.880227603 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.87969874 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.879409702 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.879740447 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.880173878 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.885144929 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.880266818 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.880335599 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.882672685 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.878466048 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.879816395 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.884505164 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.880947522 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.879861649 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.879403729 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.889016067 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.903739105 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.882242373 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.886377828 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.880849585 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.88086025 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.883571536 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.888831644 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.881449068 seconds)
  done (took 94.140569611 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.880397935 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.879874626 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.880323139 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.879384307 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.880588997 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.881501448 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.879627502 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.880717101 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.881072044 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.880945981 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.880727638 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.882310904 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.881335704 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.880190216 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.881045967 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.881457566 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.881755305 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.881640907 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.880833145 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.881589353 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.881315562 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.881918983 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.881927048 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.881372655 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.881241651 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.881699625 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.881608808 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.881610719 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.882290218 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.881668926 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.881826706 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.882148577 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.881847992 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.88220766 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.881644132 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.881101064 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.88275306 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.882775867 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.883225031 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.881356258 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.882755083 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.882542374 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.883054611 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.882490402 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.883360416 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.884722916 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.88336493 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.884245104 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.883385834 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.883623432 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.883728563 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.884396393 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.883494087 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.883580769 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.88341901 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.883995922 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.883266933 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.883801285 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.882672752 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.884107187 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.88357516 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.884096818 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.884392242 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.884003157 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.883994472 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.884192825 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.884065267 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.883706681 seconds)
  done (took 129.808597802 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.884539103 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.88490288 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.886578216 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.884060263 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.885455505 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.885734569 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.885144198 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.886080713 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.885557325 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.885038331 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.885818067 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.885130285 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.884558136 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.88537799 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.886164909 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.88577851 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.886436995 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.885547212 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.885774471 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.886492722 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.885940831 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.886649647 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.884950532 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.885288658 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.886546541 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.885779145 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.886785685 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.886325822 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.885979974 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.885595846 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.886069725 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.886666789 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.885607211 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.886142686 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.88668278 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.887013803 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.885636759 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.886742702 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.887140183 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.886570737 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.886473658 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.886812024 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.886435775 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.887253864 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.886657621 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.886351404 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.886292728 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.887999542 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.886890116 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.887215625 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.88726173 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.887769145 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.887184586 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.888327574 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.888602084 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.8878479 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.888047736 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.88838815 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.887808681 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.888859371 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.888025211 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.887640493 seconds)
  done (took 118.77415674 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.88755546 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.887329053 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.887415682 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.887652129 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.88822933 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.887677392 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.887445362 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.888141744 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.888335718 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.887621747 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.887964461 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.888586209 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.88950414 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.887798153 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.888629225 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.889395972 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.888450608 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.889055138 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.888595188 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.888647318 seconds)
  done (took 39.581185169 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.888596436 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.888857378 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.889124169 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.889982433 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.889067745 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.889639503 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.888821359 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.888535611 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.888673891 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.888901936 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.888701135 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.890144645 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.889502381 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.889555405 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.889417991 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.890056636 seconds)
  done (took 32.045263263 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.889679764 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.89042184 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.890307782 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.889599221 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.890299554 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.889852949 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.889505558 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.889442515 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.889507757 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.889679747 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.890157902 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.890702945 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.889878589 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.890525065 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.88910262 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.890271828 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.890403552 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.890920719 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.891486991 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.891564629 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.891496131 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.891457687 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.891961108 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.891896782 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.891232174 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.891268703 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.890901055 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.892417196 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.891022899 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.891957938 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.891050731 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.891350739 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.891247117 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.891486052 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.89134105 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.892274261 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.891639506 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.890889759 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.892139049 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.89174832 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.891611199 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.892307359 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.892302 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.891715793 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.89197325 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.893309518 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.891809269 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.891990427 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.892343413 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.891795273 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.892409803 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.893206533 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.891901888 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.892628213 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.893035213 seconds)
  done (took 105.838785512 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.891910204 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.893641137 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.893170405 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.893390588 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.892576589 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.892877252 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.892895897 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.892954502 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.894463532 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.89330165 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.893806271 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.893452734 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.893031595 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.893584345 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.893934384 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.892831839 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.893259624 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.893988592 seconds)
  done (took 35.900460986 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.894746304 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.894994326 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.893492082 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.893005095 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.893088037 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.893571406 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.894054741 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.89331257 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.89276993 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.894341319 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.894418558 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.894555077 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.893611734 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.893607246 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.894625713 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.894128961 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.894623399 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.894216808 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.894338162 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.894719466 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.894418216 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.894402426 seconds)
  done (took 43.492296555 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.892927687 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.892430281 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.90711509 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.914238246 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.914139912 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.927929953 seconds)
  done (took 13.271818722 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894921101 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894691455 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.895007596 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894527193 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895204353 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894464958 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895598098 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895827011 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896498331 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895148055 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895180682 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895985434 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896873139 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894197627 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893855242 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895284399 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895207182 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896498513 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894069831 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893756888 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894435667 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8936075 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895697651 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894406966 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894069446 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894377651 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894255288 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895771618 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895191845 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893901696 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893889304 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894427261 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894220078 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896067235 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893777881 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892100443 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893320288 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894531944 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893471789 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893330529 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.89361137 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893783611 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893162051 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893967603 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894423137 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893789311 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893384533 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894986221 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894744898 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894526082 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89399053 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893722796 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892744668 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894253783 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895684983 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893466635 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893480831 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893241982 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893577136 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893771501 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892882226 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893439619 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894137065 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893267342 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893206721 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892009334 seconds)
  done (took 126.850267187 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.891441862 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.891202036 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892002815 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891864061 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89100433 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891822315 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891365871 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891400752 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.892510711 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.887465489 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.887396626 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.887691432 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.887599283 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.886854945 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887523142 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.886532252 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.886870433 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.885920421 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.886359113 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.88735837 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.885721856 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.886194371 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886208815 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.885991745 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888016447 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.885036326 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.885070395 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.885044464 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.885460937 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.88746186 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88437607 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883986759 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884205939 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.884141008 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.884851175 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.884231076 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.884412685 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.885304044 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88405946 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.885157521 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.885768939 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883767157 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.883687597 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.883373095 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.883620981 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.884569237 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.883397439 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.883093581 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883538066 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882919585 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.883383853 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.883933276 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.88243765 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88210685 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882402221 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882808923 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.883639875 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.882067939 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881405408 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881039339 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.882248036 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880781106 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881751183 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881109862 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882177533 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881413064 seconds)
  done (took 126.261848054 seconds)
done (took 2589.530206187 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.908376594 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.895612435 seconds)
  done (took 15.615646871 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.042714131 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.996214815 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.88097336 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.909654771 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.881463867 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.888133962 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.903935133 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.881789006 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.881489123 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.883137852 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.881194588 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.06804655 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.940886743 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.881128246 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.881405188 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.974582343 seconds)
  done (took 52.595248183 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.885182857 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.886120052 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.894562752 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.889479027 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.884543781 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.898236839 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.916453091 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.889031278 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.918748602 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.896928995 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.954482645 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.896827706 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.884423795 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.934166977 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.899197236 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.900236903 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.975569432 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.96139581 seconds)
  done (took 36.178815182 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.961156011 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.914162973 seconds)
  done (took 10.69569947 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.903479911 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.906774141 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.887064781 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.880105523 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.900572224 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.894847087 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.906119177 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.895620622 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.892326187 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.078819516 seconds)
  done (took 70.962550842 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.882998 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.881640061 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.878541861 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.877132173 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.874317335 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.878396877 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.876543403 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.875378192 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.559413987 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.925226229 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.883120511 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.882002847 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.876218078 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.877242584 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.876005336 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.898131972 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.991294467 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.875001794 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.874429059 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.881844062 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.876377935 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.930660744 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.88937707 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.87901637 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.906453388 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.545005924 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.8837002 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.882050259 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.008190457 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.874554584 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.875277132 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.060043909 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.876575389 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.334726407 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.139574945 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.880451941 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.888958675 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.88461125 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.872604934 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.997246437 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.876145873 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.880855782 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.785407548 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.119179125 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.968699641 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.919531571 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.185017564 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.893206295 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.874417098 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.905193241 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.879108019 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.874117715 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.886513242 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.378525616 seconds)
  done (took 133.145071623 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.871478382 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.217900398 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.03711251 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.874978066 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.154529962 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077843048 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.873869397 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917141159 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.874261252 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.098664824 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.126878753 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.975607247 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.872547778 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.872323587 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.870406032 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.869538491 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.02367382 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.941290026 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.872669193 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.869323274 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896278357 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110945256 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.992732221 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.871999287 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.895722656 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.079085092 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.991249158 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.972543321 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.650154631 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.868418663 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.931039923 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.870891731 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.869092626 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.869186242 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.022817525 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.962769828 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.955534169 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.870615713 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.869231936 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.867266945 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.526862684 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.065345015 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.963079402 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.998912624 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.119926783 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.070933098 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.645646021 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.866081745 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.606392455 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.029066037 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.095738506 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.094584863 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.987973552 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.869722187 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.197442248 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.869312754 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.86578773 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.115101015 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086660519 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.963641035 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.871270316 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.868766076 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.867139809 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.104431252 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.871035967 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.962780447 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.869658488 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.866431022 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.962431918 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.965030848 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.098428962 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.081580531 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.898104248 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.212454322 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.368587209 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.111993489 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.93262091 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.116638554 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.871758671 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.866899952 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.945764138 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.705081483 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.119804807 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.112006962 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.111807623 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.902826969 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 3.004803569 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.867842127 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.093307005 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.090278771 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.127867408 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.11766904 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.102849429 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.202638092 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.868612923 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.868673249 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.154977752 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.992467787 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.871469056 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.211317392 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.096874748 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.39742418 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.893427499 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.171481646 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998917668 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.872744936 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.494567591 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.869432203 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.097591952 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.908069866 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.870537672 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87064686 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.08679222 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.858747189 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.868807779 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.52714468 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.929813839 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.872559663 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.101459847 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.873619654 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.138330187 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.872238624 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099900179 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.312896443 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.90019705 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.042433838 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.116307213 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.872698236 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.106914536 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.111717088 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.984287524 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.089555273 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.570622139 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.87046721 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.154576189 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.874008022 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.86991761 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.039044641 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.872460132 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.012310438 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.872883997 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.164873063 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893873072 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100772579 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.874431082 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.12304158 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.903800766 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.921608039 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.875028357 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.994111211 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87377128 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.791462251 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.026277907 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.874562976 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.871878108 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.422842006 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.872886895 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.018087806 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.095709442 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.891935523 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.943554915 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.534366854 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.870423889 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.955299835 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.893394218 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.257974954 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.870958007 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.122091448 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.873962503 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.871648548 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.872270929 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.107096164 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.0542525 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.873853771 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.871407797 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.779206493 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.871467842 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.87243132 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.052114215 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.275201257 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.873037704 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075109282 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.875035678 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.999413437 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.875835426 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.939888447 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.205109452 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.871833731 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.872942922 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.873086301 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.873115416 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.874024833 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.07863625 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.89730799 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.364964615 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.007501843 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.142988723 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.18083399 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.113438328 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.915930225 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.874257146 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.126243143 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.875003702 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.93502167 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.874850368 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.892160895 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.099987768 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.876533445 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.134166911 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.14301324 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.878563535 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.920594423 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.876308172 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.873870467 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.873561426 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.016440746 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.958196444 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.877126098 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.87515249 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.986836329 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.994766578 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.084291727 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.875500634 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.034379436 seconds)
  done (took 903.52909463 seconds)
done (took 1224.535799751 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.87476233 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.875233409 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.880719247 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.876712483 seconds)
  done (took 29.314934436 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.878281765 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.875118884 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.878008634 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.876810678 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.877166274 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.875868768 seconds)
  done (took 13.067931487 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.941677564 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.874379135 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.877607027 seconds)
  done (took 21.501902771 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.948410755 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.262003657 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.007680209 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.292659542 seconds)
  done (took 10.319575015 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.879555052 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.878486918 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.878648546 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.878397337 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.879048172 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.881410788 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.878644227 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.878395364 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.879136883 seconds)
  done (took 18.722454177 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.853242034 seconds)
done (took 98.588077773 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.999401866 seconds)
    (2/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.035598884 seconds)
    (3/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.882723791 seconds)
    (4/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.880397289 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.948402191 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.610489914 seconds)
    (7/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.202880678 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.013747932 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.876383888 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.921009743 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.123932912 seconds)
    (12/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.969729307 seconds)
    (13/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.402097754 seconds)
    (14/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.062711604 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.210621793 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.896831958 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.487221942 seconds)
    (18/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.964821889 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.794525182 seconds)
    (20/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.989036784 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.881060614 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.126398732 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.039650522 seconds)
    (24/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.060157915 seconds)
    (25/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.036290999 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.907376324 seconds)
    (27/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.89633137 seconds)
    (28/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.913633259 seconds)
    (29/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.974075388 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.312289706 seconds)
    (31/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.880912013 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.159252331 seconds)
    (33/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.034451218 seconds)
    (34/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.902675165 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.957255547 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.921444483 seconds)
    (37/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.887563091 seconds)
    (38/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.978647586 seconds)
    (39/309) benchmarking ("map", abs, Bool, false)...
    done (took 3.486957804 seconds)
    (40/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.882101907 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.062632529 seconds)
    (42/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.877129967 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 3.51209282 seconds)
    (44/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.977380561 seconds)
    (45/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.178802123 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.881688232 seconds)
    (47/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.143827317 seconds)
    (48/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.878173713 seconds)
    (49/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 8.136004654 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.986351869 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 2.100870438 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.880047851 seconds)
    (53/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.836847593 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.880685475 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 5.530667808 seconds)
    (56/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.881056934 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.228404536 seconds)
    (58/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.880594581 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.130466093 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.899778765 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.969979372 seconds)
    (62/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.135682571 seconds)
    (63/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.009011847 seconds)
    (64/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.01439376 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.207351206 seconds)
    (66/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.174545699 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.549748791 seconds)
    (68/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.26779209 seconds)
    (69/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.993142468 seconds)
    (70/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.013514667 seconds)
    (71/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.25374082 seconds)
    (72/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.067422923 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.900716771 seconds)
    (74/309) benchmarking ("sort", Float64, false)...
    done (took 5.607109251 seconds)
    (75/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.990170907 seconds)
    (76/309) benchmarking ("sort", Int8, false)...
    done (took 4.781563477 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.883936178 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.057891406 seconds)
    (79/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.112203412 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.011029139 seconds)
    (81/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.987037415 seconds)
    (82/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.88522772 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 4.537692285 seconds)
    (84/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.679222836 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.013593132 seconds)
    (86/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.028059718 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.980830738 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.177016944 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.883689849 seconds)
    (90/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.897966576 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.43196102 seconds)
    (92/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.89049396 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 3.918124912 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.267055606 seconds)
    (95/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.050084531 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.021282294 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.881294642 seconds)
    (98/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.068294126 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.905010992 seconds)
    (100/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.192828962 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.665853325 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.781693207 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.884502451 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.900497164 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.22661124 seconds)
    (106/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.948458513 seconds)
    (107/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.126608859 seconds)
    (108/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.972908369 seconds)
    (109/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.134765711 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.731535738 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.949395756 seconds)
    (112/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.15204068 seconds)
    (113/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.255475141 seconds)
    (114/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.891173028 seconds)
    (115/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.243221597 seconds)
    (116/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.09731067 seconds)
    (117/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.960276666 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.192032091 seconds)
    (119/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.212866225 seconds)
    (120/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.984720386 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.906862956 seconds)
    (122/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.882553896 seconds)
    (123/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.963962249 seconds)
    (124/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.206894289 seconds)
    (125/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.912187488 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.882765947 seconds)
    (127/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.886533728 seconds)
    (128/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.645905668 seconds)
    (129/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.763614248 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.890389484 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.535322025 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.884607692 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.096236385 seconds)
    (134/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.180149416 seconds)
    (135/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.885972157 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.979131956 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.193854687 seconds)
    (138/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.141305184 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.887757316 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.918951984 seconds)
    (141/309) benchmarking ("sort", BigInt, false)...
    done (took 6.883589472 seconds)
    (142/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.018249515 seconds)
    (143/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.885468519 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.231502061 seconds)
    (145/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.984997088 seconds)
    (146/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.901240823 seconds)
    (147/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.134978954 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.885225155 seconds)
    (149/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.948925348 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.883762905 seconds)
    (151/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.885271862 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.217650917 seconds)
    (153/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.96455986 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.221905165 seconds)
    (155/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.107469176 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.78236916 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.212030523 seconds)
    (158/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.842844225 seconds)
    (159/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.886915223 seconds)
    (160/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.006116861 seconds)
    (161/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.191817068 seconds)
    (162/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.968541344 seconds)
    (163/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.949647209 seconds)
    (164/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.966494212 seconds)
    (165/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.125739189 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.908410949 seconds)
    (167/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.063945602 seconds)
    (168/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.970424241 seconds)
    (169/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.890855221 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.015813744 seconds)
    (171/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.205788678 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.073636751 seconds)
    (173/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.969905339 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.920929578 seconds)
    (175/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.910165542 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.885520558 seconds)
    (177/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.992246887 seconds)
    (178/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.990030759 seconds)
    (179/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.324404787 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.211318212 seconds)
    (181/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.044288075 seconds)
    (182/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.212941833 seconds)
    (183/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.892102501 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.204417144 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.016162886 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.885565389 seconds)
    (187/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 8.369955955 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.302080333 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.27481965 seconds)
    (190/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.115890589 seconds)
    (191/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.641992646 seconds)
    (192/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.969733329 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.861804812 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.891439046 seconds)
    (195/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.997279592 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.227099074 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.267766383 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.665835604 seconds)
    (199/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.992936132 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.18921389 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.570489324 seconds)
    (202/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.124142077 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.18437723 seconds)
    (204/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.133600083 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.139363108 seconds)
    (206/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.908229179 seconds)
    (207/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.072150014 seconds)
    (208/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.023424048 seconds)
    (209/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.145669332 seconds)
    (210/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.354497748 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.962289173 seconds)
    (212/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.09854936 seconds)
    (213/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.008416447 seconds)
    (214/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.097914527 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.38806356 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.99859861 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.889566394 seconds)
    (218/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.993909012 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.704540037 seconds)
    (220/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.892616956 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.235628715 seconds)
    (222/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.10173341 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.550238767 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.258281327 seconds)
    (225/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.899984369 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.888841234 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.803417006 seconds)
    (228/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.892984693 seconds)
    (229/309) benchmarking ("perf_sum", Int8, true)...
    done (took 3.11455868 seconds)
    (230/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.573820102 seconds)
    (231/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.200611127 seconds)
    (232/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.89364391 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.520241257 seconds)
    (234/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.181323496 seconds)
    (235/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.243529944 seconds)
    (236/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.346289935 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.900586679 seconds)
    (238/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.002746908 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.887709896 seconds)
    (240/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 3.201348398 seconds)
    (241/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.019496086 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.892589407 seconds)
    (243/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.135654707 seconds)
    (244/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.920781405 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.789317471 seconds)
    (246/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.051375959 seconds)
    (247/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.181689378 seconds)
    (248/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.77466506 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.89406852 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.032750133 seconds)
    (251/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.909697921 seconds)
    (252/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.891970088 seconds)
    (253/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.075459642 seconds)
    (254/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.157250729 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.021284637 seconds)
    (256/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.891437195 seconds)
    (257/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.340076538 seconds)
    (258/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.943844782 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.984826486 seconds)
    (260/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.263003497 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.263101006 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.028177344 seconds)
    (263/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.891503251 seconds)
    (264/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.898630609 seconds)
    (265/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.199189717 seconds)
    (266/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.038699864 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.562298684 seconds)
    (268/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.001320103 seconds)
    (269/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.895673928 seconds)
    (270/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.3408152 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.311985699 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.241207857 seconds)
    (273/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.804057434 seconds)
    (274/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.20710572 seconds)
    (275/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.004899235 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.293416521 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.913412887 seconds)
    (278/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.914380493 seconds)
    (279/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.911536725 seconds)
    (280/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.989670628 seconds)
    (281/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.953127917 seconds)
    (282/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.821308279 seconds)
    (283/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.008926173 seconds)
    (284/309) benchmarking ("sort", Float32, false)...
    done (took 5.628739182 seconds)
    (285/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.907302776 seconds)
    (286/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.891439115 seconds)
    (287/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.12347605 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.263047727 seconds)
    (289/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.048608203 seconds)
    (290/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.068049926 seconds)
    (291/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.175964899 seconds)
    (292/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.774918907 seconds)
    (293/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.145230835 seconds)
    (294/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.388254851 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.745670201 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.016938887 seconds)
    (297/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.990680615 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.893152332 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.930491214 seconds)
    (300/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.081800469 seconds)
    (301/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.220574167 seconds)
    (302/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.97063704 seconds)
    (303/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.906193356 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.541975628 seconds)
    (305/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.276922731 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.207781823 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.529116551 seconds)
    (308/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.927379661 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.995400025 seconds)
  done (took 1012.048071713 seconds)
done (took 1013.913874297 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.919720411 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.914525977 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.895817549 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.918186263 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.011322823 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.940862872 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.91093897 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.90089652 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.947000963 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.94564257 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.89674164 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.937724948 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.900458913 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.898646735 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.897039708 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.913189369 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.194413726 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.925671858 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.917932877 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.90974319 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.916827972 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.898352324 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.948769717 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.939007173 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.902455521 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.903029132 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.903669809 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.920239851 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.011922316 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.904206889 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.904021178 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.913983332 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.197345658 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.925451982 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.897247712 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.919084506 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.912962771 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.91370569 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.903030163 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.932597398 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.285574822 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.932301079 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.901642573 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.899112085 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.899045778 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.90634854 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.901161215 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.907928835 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.915330418 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.915132494 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.280785487 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.949795201 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.9051487 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.900689519 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.912446223 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.901860892 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.903701602 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.915865535 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.9217215 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.916432759 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.185443378 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.935941908 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.90294002 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.920016218 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.910464826 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.315284111 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.930857364 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.908834632 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.284161735 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.939265654 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.317477179 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.944879208 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.903505872 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.917908213 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.935750896 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.197079969 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.926371933 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.899745341 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.91245503 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.900251465 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.912233997 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.916435562 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.904687658 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.901212058 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.917220493 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.945649656 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.914143617 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.902915167 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.91374088 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.923044811 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.91269758 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.915424884 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.905659397 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.900226382 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.91510497 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.90556197 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.907452946 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.905976133 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.908289244 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.915422147 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.28608456 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.950887764 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.898861906 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.899352492 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.904053087 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.919104619 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.284537667 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.936602777 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.925241592 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.95292182 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.905005233 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.185875765 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.934264635 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.920052955 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.915892672 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.905430653 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.899994824 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.186484669 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.310681465 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.951862457 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.903474841 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.901905391 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.920888574 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.905030285 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.900224753 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.199227626 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.933488795 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.918880958 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.02825991 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.917985639 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.937065863 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.903425487 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.907496809 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.949808991 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.922540867 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.937533404 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.906889764 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.921225459 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.923974641 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.902589426 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.917928435 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.91744726 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.90446858 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.912370973 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.901779323 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.951934766 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.919138759 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.919040223 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.924541775 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.028501489 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.902994157 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.187548264 seconds)
done (took 298.702684561 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.983827916 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.901943425 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.993609807 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.904332237 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.99349661 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.97728984 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.90381262 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.904055229 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.903679495 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.405073528 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.904420463 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.909427445 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.90251287 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.903485764 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.976096888 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.904083835 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.905818839 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.363400854 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.905881 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.984876803 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.902886354 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.905076143 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.904841946 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.420058922 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.901986949 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.901827502 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.982975999 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.904384482 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.343295173 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.904421431 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.9036662 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.343476748 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.982865554 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.933617605 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.913476798 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.910327003 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.993680695 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.915721427 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.974928666 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.975811036 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.996498958 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.937591199 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.903561084 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.904073837 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.909627951 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.906339651 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.904965617 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.938070666 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.904285516 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.911590042 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.366083359 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.915153348 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.91088374 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.907416943 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.907130312 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.937159653 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.907011523 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.909118759 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.986234716 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.907290155 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.975865287 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.422036127 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.40877835 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.906966295 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.905192112 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.906820019 seconds)
  done (took 187.680481387 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.971546229 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.981020286 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.970516469 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.909167355 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.953683312 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.972068873 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.909409974 seconds)
  done (took 15.502931765 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.91224797 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.907674766 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.95551094 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.954464537 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.90886921 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.062478342 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.907593465 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.918822595 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.912961616 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.933806386 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.909870599 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.909021023 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.916156575 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.906007633 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.955802718 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.918326982 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.022247164 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.911181431 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.90824418 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.055477237 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.914282763 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.915590745 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.93422256 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.919350986 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.909164977 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.914952483 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.478675588 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.909491776 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.909071616 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.909421454 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.908969838 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.950747451 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.910975867 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.90820931 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.909746808 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.022605138 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.909234644 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.909505489 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.909702245 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.907287267 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.90965991 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.909356887 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.910642785 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.910756191 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.909820624 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.932144455 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.910428453 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.909443719 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.910817704 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.911025139 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.935070724 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.910820623 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.911420603 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.918322311 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.951783103 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.917499136 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.911958929 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.912435006 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.911451791 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.911389942 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.057691538 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.960166108 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.911547538 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.96034474 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.913655185 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.913148285 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.911429952 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.912160556 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.998627527 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.911713515 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.960185269 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.911453353 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.068851533 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.933225334 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.914306748 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.914581321 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.915289612 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.911797454 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.910376703 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.918400076 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.912727302 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.913117953 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.917116023 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.916740811 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.912311142 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.023126998 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.050686895 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.911791245 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.91299889 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.919323823 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.913205473 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.95663591 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.913004769 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.913502712 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.967508592 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.026976145 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.939109373 seconds)
  done (took 209.733717477 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.917763166 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.918842079 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.913458938 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.926990548 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.912480794 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.913343072 seconds)
  done (took 13.344414932 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.913330125 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.915374801 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.912178149 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.913769661 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.913923849 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.912774724 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.913370373 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.913242645 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.917390133 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.913312355 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.913757237 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.913696744 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.915021962 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.914428128 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.914263742 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.914446928 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.914407504 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.91334163 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.914165477 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.915184292 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.165969184 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.914395421 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.914582089 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.917611394 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.918244081 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.915210157 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.92614013 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.914476273 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.915569522 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.919480739 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.917742763 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.915021048 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.916826061 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.918475358 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.919178258 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.916308441 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.917677646 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.914427011 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.914115862 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.914883974 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.915064919 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.915045926 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.914588077 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.915378765 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.916579281 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.920221509 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.917837292 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.928651668 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.915633919 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.916063443 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.915125762 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.91515442 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.91622639 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.914834799 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.91979166 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.919641489 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.9188527 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.915962952 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.916182054 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.918345201 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.920011721 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.916388698 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.916496732 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.918272264 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.924185086 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.916922198 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.918162577 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.919112066 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.916646846 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.915340347 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.916670995 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.916506143 seconds)
  done (took 141.072258448 seconds)
done (took 569.180035003 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.21428734 seconds)
  done (took 9.05787609 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.098331453 seconds)
  done (took 9.001899363 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.171169489 seconds)
  done (took 10.017699737 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.929715046 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.91479226 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.929908436 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.916848555 seconds)
  done (took 29.548182249 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.182705798 seconds)
  done (took 9.028439356 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.937143137 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.915846491 seconds)
  done (took 15.759583599 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.046347419 seconds)
  done (took 8.898839935 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.18244619 seconds)
  done (took 9.033545753 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.936470749 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.941366912 seconds)
  done (took 15.743112677 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.922428545 seconds)
  done (took 8.767807052 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.139511358 seconds)
  done (took 10.008691969 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.94098859 seconds)
  done (took 8.850035895 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.947359996 seconds)
  done (took 8.792639941 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.77387036 seconds)
  done (took 9.61828931 seconds)
done (took 163.973110541 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.927730751 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.918192989 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.919304669 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.918067656 seconds)
  done (took 29.528431985 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.952457196 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.951334418 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.952894141 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.961183893 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.952711651 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.952593804 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.94312178 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.943962864 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.962075475 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.953431899 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.952632156 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.9539448 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.951857474 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.944287215 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.954736153 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.954406932 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.962091996 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.952071324 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.944103304 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.953777648 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.919378529 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.961968014 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.954003538 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.919769327 seconds)
  done (took 48.651326955 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.108112718 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.990107235 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.071560853 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.969575362 seconds)
  done (took 9.985925607 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.97082085 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.972577652 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.984246794 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.022574456 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.046191014 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.982777977 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.944065765 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.939954066 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.927238352 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.972394504 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.048751962 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.967243517 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.057917367 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.919895751 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.101207422 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.920552102 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.919183201 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.970947408 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.022211293 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.036819573 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.921476527 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.971623014 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.975070206 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.967623925 seconds)
  done (took 49.411073879 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.921519908 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.929615826 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.927720509 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.921653704 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.92236236 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.923327468 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.929111054 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.923522264 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.942633728 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.923238669 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.921069238 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.922836719 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.928068439 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.921664793 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.921661953 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.935110986 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.93712518 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.923196301 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.925915201 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.92865349 seconds)
  done (took 40.379006318 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.919326758 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.764998933 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.263196566 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.170494847 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.918875158 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.918817226 seconds)
  done (took 31.804253996 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.930646986 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.924796012 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.920416561 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.975816461 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.056091675 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.924361975 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.921138701 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.930344176 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.964249601 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.982146663 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.941071708 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.948688518 seconds)
  done (took 25.270444806 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.920601976 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.927105581 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.924399342 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.934570162 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.933148823 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.928364511 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.929304842 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.920089613 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.934770816 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.939280701 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.928722672 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.932667171 seconds)
  done (took 45.005668992 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000065971 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.796955865 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363770794 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385625892 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.446378412 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125600856 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.922187838 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.008847731 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.924496424 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194571484 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.210950621 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.453766214 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.177279276 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933303978 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.026411437 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.400606318 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.221545987 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145806192 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963675567 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.609717988 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03463138 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384252715 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.665495126 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.036895304 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.136645817 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.056233698 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.197478191 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.883127952 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982925581 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937012689 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938276098 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934760674 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205748202 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05548684 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005289327 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939925315 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.343956209 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.637977445 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.941102778 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.553315113 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.421380489 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.047474743 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93831114 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93553017 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.861682085 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400088768 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134078491 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.937671555 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.635629132 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.934461245 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939711951 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009658638 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.937318799 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.742041655 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.616568817 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.202162625 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.936551711 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936030466 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.496306213 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.931405786 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.489475984 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.979135276 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.021112005 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.562839943 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.381652357 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.088130891 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.936434202 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93789687 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864430253 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.55527967 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043491347 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.07326392 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.954871357 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.57866268 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237951563 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.332821264 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.980769556 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206475583 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.687025772 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.977512857 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153351531 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.887832943 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865280706 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.76861205 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.863599554 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146801365 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972065372 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.553990311 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971927513 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.025470634 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.943028121 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953148405 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940562572 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.151949979 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.83134894 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93717703 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.20539462 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.181960784 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95462335 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.023995316 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864654213 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.941410674 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18456052 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.141931468 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.138763981 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.530827443 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024469124 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826134682 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.061062483 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.820471052 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.056253592 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.205189384 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995491256 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.940198016 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053066127 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.887371799 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182044953 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853804961 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.147736857 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.281776495 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16831893 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.277011119 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.185920353 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001872518 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.93849238 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.940322649 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.618951643 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.5454881 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.155724432 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.951485466 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387213314 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.057368353 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.941799484 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875787905 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.824022902 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.267747579 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.018921955 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155031922 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.84430493 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.326067972 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866951482 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.076786934 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.944026957 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.154220938 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.579740294 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.019235045 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190120565 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.144981687 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.260877491 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058411945 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954145967 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031921268 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959601775 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.321058545 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.298627557 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.943612259 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.943589149 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.607077148 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.99179256 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952944485 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.947109498 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.465328898 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209563469 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.96408109 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.950465146 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.818690715 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.956476433 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006881633 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947301827 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.94737662 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.499754779 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.450678909 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.951097236 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.648982853 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161869619 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948065148 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.563802343 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112235966 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.959051317 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.205877731 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007276533 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.87153847 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.645723886 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.646397006 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947458992 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.872928096 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.946299116 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949226652 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952344396 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.133416266 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.214965036 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.99499101 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.596472149 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.042923968 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952106042 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.948575877 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945170641 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.440339514 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.940607101 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.540164636 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.061470402 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076497487 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.957604456 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.873234853 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.948170648 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.948804588 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.947189606 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.903807297 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994652861 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.602837773 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141746623 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.19585725 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.35116927 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956377739 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.608945195 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.058121111 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.971033607 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.213937539 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.521882055 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.0485216 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016306009 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.952579638 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.605081146 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.676574771 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.510852753 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2318997 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.255109197 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28610907 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.385202032 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.271480245 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.033324311 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174250826 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.469921114 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.002589788 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.036538294 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.883685613 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961874701 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.586782971 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.351106136 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961278225 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165299421 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.231117254 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.269044935 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071735977 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.153196189 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97873839 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.820236101 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.97884381 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.484727545 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966138902 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.314199979 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140886174 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033070066 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.214054605 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.022233005 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.948368905 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.287552452 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989798116 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.651328394 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.302294634 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410233171 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.388367048 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160704844 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.954823092 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.389223712 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294709197 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.196097045 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.07468375 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.879845121 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.955842999 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.955765996 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.962120736 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.925150899 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.792762796 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.195045469 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956404983 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179421055 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.151388083 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.312566684 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.851569195 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.953593594 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951064485 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19440681 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.689125609 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110218017 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.334565997 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.525794689 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95948355 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.87788285 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.878251816 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.651436325 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.958724003 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.91746056 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159747108 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.069418251 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.631800676 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40329663 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264447723 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.195596869 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.965168189 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.213873727 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222717629 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.441457181 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974691647 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.049767393 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.215611362 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.689149197 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.165828802 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.180388194 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.481687867 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.171005728 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.395016258 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.921576003 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.951160701 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.158557667 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.167631751 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.285700878 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116291888 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.663362132 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.963207957 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305295138 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013108623 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.289743585 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.129519995 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.046209285 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960010108 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031300212 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957678882 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.960427287 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.959324399 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964472755 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.289586325 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.062008271 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.966147821 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03153682 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.954446309 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.512495812 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.962631777 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216301918 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295474701 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.280334845 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012535269 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.955130106 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962888442 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.880742185 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0826136 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.393701435 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225421399 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.075186509 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.088559302 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974994294 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.216946286 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277306214 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267520546 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2278979 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.838854241 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.650396354 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.079475524 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.172114962 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960716467 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.158187576 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168239073 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253997036 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513715708 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.155575257 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.151566927 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22831733 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.321244333 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.956413602 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.534185522 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.969007758 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.350365748 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.988868786 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.268280393 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186074901 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960294835 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078534425 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.959938292 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.154324271 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.407203176 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.593253221 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.295173 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.815637115 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.960483814 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222790899 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.272998792 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257450399 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03445005 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962924717 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.648356559 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089415088 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.835810921 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.173345705 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.958702129 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163030084 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.667774961 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.961433157 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223264255 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258410305 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.959296233 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.87960885 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96126208 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.960804219 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.172206516 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168855302 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.202161089 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961420782 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.965208026 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.765300671 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.22527368 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0148741 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.884870825 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.96022809 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003927203 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.186539915 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978338081 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.473478055 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.659356156 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234099833 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.864107822 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976661162 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42534926 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.334062082 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281562405 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.474981636 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174225547 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.510676833 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.862440215 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.339811425 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.961603045 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.417259764 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.342976366 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.960969757 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.529289546 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075070528 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.219633714 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.285090153 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.973692418 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.637836557 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.982204847 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174019125 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317010738 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.88989509 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.962493418 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.007691224 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.960259033 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.955235199 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970208513 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.889995629 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.489747395 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.8048677 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.520582253 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.964868114 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.986204276 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.239901559 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.521578992 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070821422 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97800473 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.964957533 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.792904178 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.248315102 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.205131633 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.521287574 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.057319708 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.963078503 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962798715 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.881508378 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.145932312 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.149130839 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24111951 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.374677908 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.074212563 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.963867236 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.169032996 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165435309 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.279623149 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067793649 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.167524568 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08107142 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.902169513 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.668602445 seconds)
  done (took 1700.344388965 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.998565124 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.003453786 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.021356062 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.106352617 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.038483569 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.070286347 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.085640178 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.092409836 seconds)
  done (took 58.306597936 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.962825635 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.065478536 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.967704899 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.964071795 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.968474039 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.964462463 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.183169063 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.975395509 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.968453509 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.968733801 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.964330935 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.963531829 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.270086095 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.986831818 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.965860424 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.537948506 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.969224498 seconds)
  done (took 76.615964013 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.983467543 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.356610941 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.004925905 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.967250725 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.880857384 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.984530886 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.050927187 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.009033724 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.97281459 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.017335082 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.2619042 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.024036236 seconds)
  done (took 91.407310052 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.978211171 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.967630585 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.967710768 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.968089111 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.967511308 seconds)
  done (took 11.750196706 seconds)
done (took 2220.387343918 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.206032237 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.025224895 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.069677895 seconds)
  done (took 5.988084317 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.114392468 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.158267254 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.270100301 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.291728578 seconds)
  done (took 10.735195839 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.281187001 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.339823775 seconds)
  done (took 6.514944983 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.286538873 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.993598754 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.342778173 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.970180084 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.97222077 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.973496614 seconds)
  done (took 22.814664386 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.969300992 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.969569204 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.969273129 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.970229044 seconds)
  done (took 9.773427534 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.966523606 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.685197297 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.970878495 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.981441355 seconds)
  done (took 21.498679895 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.116766908 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.085411131 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.113068174 seconds)
  done (took 8.209536317 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.109863392 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.816280708 seconds)
  done (took 6.821609843 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.113935156 seconds)
  done (took 4.008463785 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.997793609 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.239737762 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.45335233 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.484563853 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.552403941 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.789932161 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.294536819 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.196127431 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.408539116 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.434703144 seconds)
  done (took 25.74676891 seconds)
done (took 137.835149247 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.314657655 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.002613292 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.174847355 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.327972408 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.21058807 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.198143994 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.188861289 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.33012262 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.009818487 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.999301697 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.338093557 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.209235432 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.140678006 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.984930713 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.145894228 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.986177311 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.234808766 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.342514782 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.014130581 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.253768987 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.202380889 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.973475962 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.170303357 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.991689649 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.247939691 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.125152967 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.519600939 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.994825626 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.151283709 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.533295691 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.130411552 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.386760629 seconds)
  done (took 171.731510275 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.970592399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.971787205 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.971386981 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.97104775 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.506198097 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.973373208 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.971436343 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.97156376 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.416977747 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.407996047 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.971362324 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.491421749 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.975221643 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.971326829 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.971409345 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.973344295 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.586288592 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.973435811 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.974642043 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.971584547 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.972329695 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.333082559 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.973510112 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.347366629 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.5804807 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.974217087 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.973503983 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.973088886 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.972771475 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.971640804 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.972924953 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.972869659 seconds)
  done (took 212.910672672 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.910222306 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.974444118 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.972880566 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.973574042 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.974917136 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.9755994 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.976074738 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.973880379 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.740602212 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.730587696 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.973850151 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.974847185 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.976684135 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.974183092 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.975419703 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.974343229 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.973085792 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.963378203 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.974486592 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.975195442 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.975980696 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.589418244 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.974418346 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.571712652 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.974973743 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.980009846 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.974870622 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.974994879 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.974824177 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.975853497 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.975239712 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.975047093 seconds)
  done (took 223.75544563 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.214877506 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.975496282 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.977309069 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.965400634 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.976997752 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.976048355 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.96194057 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.227207512 seconds)
  done (took 20.177943225 seconds)
done (took 630.480928329 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.363163942 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.199609405 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.150808037 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.002799492 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.2860847 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.042319081 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.997394179 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.064450106 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.829616614 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.07294596 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.644882569 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.020493827 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.739664454 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.027333384 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.122360962 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.059117979 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.579538385 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.684350736 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.137203204 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.080749913 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.173449888 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.941003616 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.079254165 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.87014894 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.650922142 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.982278456 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.038503921 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.592586964 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.010516033 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.155940995 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.711399643 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.286977088 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.01179007 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.996299778 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.051709565 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.031488297 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.221509064 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.009562321 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.120152202 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.731282297 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.098016665 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.729738863 seconds)
  done (took 107.50165603 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.989392579 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.983503748 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.983371329 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.983547151 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.991685349 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.983966633 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.983660428 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.983948641 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.983436924 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.983764851 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.983815411 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.992563728 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.983041708 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.992844426 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.984259405 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.984926651 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.984648998 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.99224714 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.983929759 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.984900177 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.984890404 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.984357854 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.981394522 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.985911032 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.984505128 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.984819773 seconds)
  done (took 53.539756852 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.980301141 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.129596774 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.22237347 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.000368707 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.980532299 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.983606387 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.997343363 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.986532816 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.982239318 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.982724721 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.083933242 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.987226212 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.997515648 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.221198178 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.996489881 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.980832464 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.980477632 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.98129092 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.137950744 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.995703982 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.999027543 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.986328079 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.999108188 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.993964062 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.982851496 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.981363348 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.983744371 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.456278204 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.989313476 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.084213013 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.027120793 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.005353275 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.400062436 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.231732667 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.038236123 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.992057343 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.981737855 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.090313374 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.988642632 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.982045094 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.999451914 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.987206223 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.22393406 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.503994266 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.996441157 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.982617542 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.467543751 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.098899568 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.02364996 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.99306926 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.224575486 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.999202676 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.984188417 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.983175783 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.01924539 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.988340191 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.982342655 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.342137731 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.995646751 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.000348544 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.9886441 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.983913438 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.151093703 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.991792272 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.133543614 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.99275431 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.989572505 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.984685985 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.228293142 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.999678952 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.513729491 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.997492697 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.984066941 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.085411888 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.137982934 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.492819277 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.996172933 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.151830835 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.414541491 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.007351763 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.991073099 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.44904641 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.011242648 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.99190626 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.986971068 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.986276976 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.984949213 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.026730684 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.999205297 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.435289226 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.51662862 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.359455398 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.011731882 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.002554291 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.985795865 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.343515846 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.994812426 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.985967157 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.216762342 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.524905058 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.000659275 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.99213795 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.494957454 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.000683356 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.004557014 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.994139563 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.229564978 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.001693692 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.028448892 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.986707146 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.991213563 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.987356727 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.003541216 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.992839504 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.986605992 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.489274715 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.109566551 seconds)
  done (took 245.830897676 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.985749796 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.985374988 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.98535383 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.986138068 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.986790944 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.986167294 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.983429574 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.983152048 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.985968597 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.985196876 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.984536206 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.985079665 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.985298104 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.057670043 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.990922371 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.986782613 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.587462374 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.985688014 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.985019736 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.984422628 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.632295033 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.990616568 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.985963655 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.985258153 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.987972379 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.987816379 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.073720587 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.990171839 seconds)
  done (took 170.934481488 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.98908716 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.09933868 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.007746867 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.01552002 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.99577782 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.989261971 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.085133781 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.006297285 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.992463689 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.988538326 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.989049919 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.047301316 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.0001917 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.086533334 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.020247929 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.096329176 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.093091208 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.995934548 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.989000536 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.989132915 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.016997517 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.997334358 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.047968416 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.111805084 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.008025174 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.100745807 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.008815109 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.99009212 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.988080539 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.10071714 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.009917178 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.049916587 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.018620841 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.006623544 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.105950554 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.105565626 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.095907848 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.095364919 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.996563039 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.991297343 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.99114125 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.991316732 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.101227336 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.009522471 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.990469478 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.105806168 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.009773922 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.991740347 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.990602733 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.991748968 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.00344022 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.007808016 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.053278611 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.119107698 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.02739458 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.014752974 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.086865323 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.122759448 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.991800082 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.087650776 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.999439945 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.10479849 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.012377311 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.991804571 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.99321078 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.995241518 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.020591584 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.096949127 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.09546828 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.99853323 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.087219362 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.02771232 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.999404742 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.992741939 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.992752363 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.102508427 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.108324735 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.029085986 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.027006497 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.02158158 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.001370788 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.991702734 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.993245509 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.007278882 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.998121762 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.107485597 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.109391645 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.0001318 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.993142682 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.993672823 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.993610215 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.016295084 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.11120778 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.02785221 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.097610286 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.058200755 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.066097884 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.007399489 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.007336537 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.997615364 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.053700947 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.008955092 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.00522961 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.311581892 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.0521833 seconds)
  done (took 215.633646963 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.368614884 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.041643706 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.048871705 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.321349252 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.356345431 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.112565454 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.037974316 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.04098608 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.062801219 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.224411287 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.117962282 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.059206133 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.027775882 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.014632038 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.041533464 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.060549462 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.05071261 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.379619504 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.24502269 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.189949198 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.032035034 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.314333205 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.367435003 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.605909283 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.089697049 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.465382539 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.657542899 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.17476044 seconds)
  done (took 65.433883459 seconds)
done (took 860.778156857 seconds)
SAVING RESULT...
DONE!
