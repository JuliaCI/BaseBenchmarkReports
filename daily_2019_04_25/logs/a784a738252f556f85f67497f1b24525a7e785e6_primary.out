cset: moving following pidspec: 11836
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.298716692 seconds)
loading group "string"... done (took 0.59216176 seconds)
loading group "linalg"... done (took 7.225365084 seconds)
loading group "parallel"... done (took 0.168745042 seconds)
loading group "find"... done (took 1.147076734 seconds)
loading group "tuple"... done (took 2.036927929 seconds)
loading group "dates"... done (took 1.291282012 seconds)
loading group "micro"... done (took 0.239968016 seconds)
loading group "io"... done (took 0.981001106 seconds)
loading group "scalar"... done (took 39.367257654 seconds)
loading group "sparse"... done (took 12.320570167 seconds)
loading group "broadcast"... done (took 0.961463837 seconds)
loading group "union"... done (took 13.084470854 seconds)
loading group "simd"... done (took 4.405702839 seconds)
loading group "random"... done (took 8.916443054 seconds)
loading group "problem"... done (took 1.939707825 seconds)
loading group "array"... done (took 21.051426309 seconds)
loading group "misc"... done (took 1.91211954 seconds)
loading group "sort"... done (took 3.189464882 seconds)
loading group "collection"... done (took 17.853880689 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532818872 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142106614 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118145256 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139223021 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.184117593 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131909914 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144785681 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085830369 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.043033034 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162050082 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140650055 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.473683272 seconds)
done (took 5.059358745 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203927842 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087426786 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097150209 seconds)
  done (took 0.885321599 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067803562 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126200965 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080816295 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068573996 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068486216 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.084071354 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.070354147 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06843864 seconds)
  done (took 1.274642994 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074736721 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069532523 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084748009 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068942354 seconds)
  done (took 1.011862983 seconds)
done (took 4.16180307 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.894193274 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.23704695 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189797995 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452255576 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.152561852 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.193770751 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.661135829 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.346460712 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.210624624 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101501963 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105667451 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.37909025 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107589532 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.661491832 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079293545 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109882991 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.161340318 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432356779 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083292187 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084861351 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106872982 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144934495 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103501337 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078573041 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168791817 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070457116 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148273308 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096621906 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069361315 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.244532322 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.19079657 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.681936397 seconds)
  done (took 10.493799369 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101075556 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.117720013 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070002908 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14013523 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102424203 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087029633 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072203122 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084476656 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092519106 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.15875099 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114811908 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105979068 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082937999 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071325984 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102379495 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213053239 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106411661 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085807184 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087231098 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07666896 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122258884 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084096383 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094753978 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078941625 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152469355 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195488142 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115819931 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112578341 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069939956 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081934836 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132570748 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142416046 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066923365 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08274098 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.14171253 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111866954 seconds)
  done (took 4.582655967 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.021864072 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.160438132 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092171891 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152332421 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085961996 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110014449 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.08371813 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099554138 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244909802 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.087460701 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.455637273 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128271948 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101806364 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069095529 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084015087 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068996908 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.504893739 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.144964518 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103454286 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103248052 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075255008 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087555385 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.358487047 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069144813 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067258708 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085933303 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060853223 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144826896 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069676551 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.319112889 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.072340256 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088943047 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087353762 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.103629945 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102754228 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110681333 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124945799 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067720244 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108011001 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067798661 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169273426 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074692551 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083708772 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088535924 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120792225 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119413116 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069781457 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084158913 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180641804 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068061023 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099039883 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.86186723 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167201047 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080661028 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068562701 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.287829044 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.089108024 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084528286 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064787815 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.248024639 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152141012 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069476883 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084690309 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068295661 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070497433 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385550411 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.07158384 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.60454455 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071946551 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079367077 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088435088 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070286971 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082759338 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075411534 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090980051 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.0890183 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06862988 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.087511405 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068429585 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083322927 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.072145635 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066112234 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.103443459 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203887957 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066508233 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084306912 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066214602 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102011571 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09733909 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085423833 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066324347 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115766022 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069424955 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068274643 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120052651 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067411648 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102272281 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084288707 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11492723 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082800669 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.121250139 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068704889 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114437067 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07248763 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114226618 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095042199 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068901424 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153103338 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065181286 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082825477 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067349487 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065486358 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084923864 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069072094 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098094591 seconds)
  done (took 20.774366203 seconds)
done (took 37.584414779 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.294367749 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094190816 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092877947 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07612426 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.091472829 seconds)
  done (took 1.433958829 seconds)
done (took 2.192433689 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120848941 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117105551 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064222397 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112801679 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065018133 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117559944 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114297228 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081412039 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118386765 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065125839 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112846414 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065227827 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065164574 seconds)
  done (took 2.004676415 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083758924 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086514781 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088357219 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084930731 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081334113 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085609897 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082210707 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10816877 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082849899 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090376524 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066682477 seconds)
  done (took 1.697783499 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083485884 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084980041 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087558017 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08364957 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081687136 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084770834 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082686944 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105121899 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083094308 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091561929 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066233949 seconds)
  done (took 1.691820461 seconds)
done (took 6.143361726 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078723504 seconds)
  done (took 0.83000368 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.695981472 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.505625781 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083997073 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133785648 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.221094847 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153097163 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.439152843 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113189803 seconds)
  done (took 10.271175465 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.090935343 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.098570801 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070404996 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089033164 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071605305 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086655982 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072480848 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06978635 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08458373 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073500009 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087940695 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072021555 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085060616 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072071939 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070685217 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083726688 seconds)
  done (took 2.100840964 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094534359 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092772137 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092965668 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076014154 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090104846 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07442344 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092565417 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07579669 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088423759 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073039565 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092671037 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075663334 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088803717 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06708687 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091349355 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078293285 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087438666 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076593537 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091531411 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077765107 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091660807 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066871209 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088942725 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076494359 seconds)
  done (took 2.863186727 seconds)
done (took 16.82682047 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.130817525 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076985415 seconds)
  done (took 0.966725229 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082318785 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098492875 seconds)
  done (took 0.946698162 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084588303 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081889897 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089717192 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092909828 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067501131 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082319486 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.102782541 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067496958 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082111471 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067706156 seconds)
  done (took 1.585642733 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069507862 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093991767 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072209306 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097901652 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075588301 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081482338 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074626876 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084445243 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078284124 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079745176 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072137567 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098971841 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072535396 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100468362 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074116773 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084163715 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087625344 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068747432 seconds)
  done (took 2.232921853 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06717131 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068776805 seconds)
  done (took 0.904694324 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069077254 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065174757 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082665233 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067948853 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07976271 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063845333 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.08014365 seconds)
  done (took 1.276805071 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400852657 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109747794 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.246666689 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.090632266 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106505367 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262203598 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083630038 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071935307 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088995229 seconds)
  done (took 2.267324031 seconds)
done (took 10.946408008 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080198105 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088046336 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110146918 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.417009512 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10583691 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067454308 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.13189521 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.221021751 seconds)
done (took 1.99081631 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.124447507 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.61035876 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404351655 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219816195 seconds)
  done (took 2.008387073 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.372436838 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093283797 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.0773936 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069729022 seconds)
  done (took 1.391278124 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067297927 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070545428 seconds)
  done (took 0.915455898 seconds)
done (took 5.214102001 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06789612 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.102249133 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067754059 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067914644 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.082486766 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06713365 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065273157 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082598293 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067737751 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067645494 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.084364636 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.070539673 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.085016773 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06983075 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069723685 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082345765 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066815599 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069281984 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.082870938 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067573901 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066618101 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085215002 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067240837 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066663615 seconds)
  done (took 2.58233821 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086869707 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084254884 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073225911 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089176154 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071864204 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088423563 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073600922 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068371871 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088781393 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071052861 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086707231 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072566532 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08458611 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072293859 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085838726 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071855415 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088444796 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070383467 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070358998 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086949506 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073029778 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082975536 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07179803 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087970854 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072055666 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086831753 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069812904 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083412314 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072999662 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087129409 seconds)
  done (took 3.153805146 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072000877 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065301821 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081661767 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07277332 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065406488 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082234484 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065751409 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081535111 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065971831 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065476307 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082562114 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064889024 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066109393 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082132419 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065973678 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084565098 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081873246 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066129432 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081279342 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066209091 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068090189 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080483119 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065412097 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081232504 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065785992 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064739646 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081329861 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065196285 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065803833 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081364632 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067981843 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068102617 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080595681 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071982944 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084824861 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065401449 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068865761 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080790128 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066361943 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065326114 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080125552 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065532297 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064868668 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08776861 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065855465 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083200213 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06551721 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067226541 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081917178 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068882525 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081471451 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064794483 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067165924 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081669168 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069066409 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064806776 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081685351 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065559105 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082060763 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065130844 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065148665 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080434576 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067645858 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066793386 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09619435 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072255131 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081130696 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067688944 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066563516 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083068207 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066697389 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079654869 seconds)
  done (took 6.027553809 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117412519 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092255255 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082974807 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067529529 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080188185 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065505973 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069449238 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081614298 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067747128 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087912666 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065890738 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067106062 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082827751 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078516366 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081754043 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067763384 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086694754 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063773484 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065734097 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085398455 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065848741 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084479163 seconds)
  done (took 2.49545356 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.183856571 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088790008 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110099165 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091001319 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085337962 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075361409 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071193908 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087000679 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071163502 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087443555 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070493193 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086815586 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069481017 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084965033 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070376726 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085513067 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072336504 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085901427 seconds)
  done (took 2.359313814 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079056753 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067705937 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106297994 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067469966 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084551925 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069966197 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088866089 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076357524 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086245865 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068585755 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091604924 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070682125 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08638734 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068066896 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070395737 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08387113 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070292678 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083838709 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076018837 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088396894 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072913902 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091215552 seconds)
  done (took 2.53233712 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082295461 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06928102 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101685019 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086472351 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063650746 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066560753 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089568321 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067972035 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089749708 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069785766 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067939212 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082122235 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072699575 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083680441 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073127872 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08368282 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06941808 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06747359 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085051919 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064247908 seconds)
  done (took 2.322040237 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08840234 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085839691 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069080003 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092638142 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069699428 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084893812 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077033513 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0846004 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069002215 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10970036 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069676817 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084846027 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077293297 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089965847 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068888201 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092145665 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077592451 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092140452 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068973493 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085186594 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.217918427 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069065311 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093047763 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069088352 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085166772 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069218192 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069193768 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090129806 seconds)
  done (took 3.191075127 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067881676 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067769614 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081913357 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065590676 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065842793 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081890562 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065389352 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064948626 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083667437 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065593966 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067740364 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083500325 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068393272 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08375649 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067433024 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067612922 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08369714 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065676887 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065718042 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081611714 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06800043 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067977647 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084161566 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065623432 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080645422 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068115645 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066075573 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081269494 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067882098 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066066199 seconds)
  done (took 2.950451506 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077816428 seconds)
    (2/2) benchmarking "in"...
    done (took 0.09131792 seconds)
  done (took 0.961535197 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065075388 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082295432 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081687102 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072563186 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088338713 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068822963 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091918186 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072434653 seconds)
  done (took 1.414037644 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082557191 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079578456 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086432734 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080042951 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095614484 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084522268 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156347119 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08573007 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074570726 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082616253 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081565543 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066796785 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090520194 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068298841 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.08994457 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073597739 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066758842 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090191201 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070477056 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083056055 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070080091 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09221643 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07019654 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064722245 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085150353 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077167538 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095319944 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070203181 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087443322 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075471465 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072900362 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078630806 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068123247 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085278052 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06653924 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094256999 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082307385 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08672544 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077044094 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068810321 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093961893 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063172582 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087763077 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074634707 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09346385 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068877973 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068953329 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079662677 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066397718 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085933299 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064174123 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068060788 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079797831 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07469181 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087672841 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078748528 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069804622 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086128515 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07116442 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087514361 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074024675 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.0860861 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070177816 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067953287 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093563874 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072415683 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092891858 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063700908 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062998999 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082588357 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07757975 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106597967 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074163908 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084985346 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069278676 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082814002 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071966788 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069049946 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089399405 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074179794 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084414601 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074368966 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091085521 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067791359 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070247766 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092004659 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06740722 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086547034 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06628001 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099995844 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067563152 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066134726 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083061551 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078173965 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086774425 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068624872 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082100795 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074446237 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062673874 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084727145 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068974003 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084614211 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077689242 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089161106 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0741284 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092188222 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075485717 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067886562 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087461382 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065474658 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085421813 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066718734 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074149706 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078849175 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070707425 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084483341 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068504988 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076296092 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082867848 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068523631 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090924635 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073783796 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083068629 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064752748 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070861614 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084466174 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071327277 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091669435 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067028273 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063453518 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079745489 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07201639 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084465078 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071454311 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090264144 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070867582 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063224248 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082839173 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072774353 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093536892 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068894612 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068308856 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090492387 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06936527 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084359143 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074584599 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086535372 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067140301 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073296099 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08497917 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064636554 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088058507 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070806318 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066783256 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087385749 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072547916 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086760578 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068909442 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066823073 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089649532 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069741107 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083293971 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067733607 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083182112 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078015643 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.0698564 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.0801198 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066109216 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091393806 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065722768 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067698896 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083635964 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070985869 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085287394 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066163517 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068403237 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085862131 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080060228 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089205465 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069036965 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089779747 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079008754 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084621212 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070150033 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068127372 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085838262 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069241947 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092385561 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073860093 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089756009 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070265337 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065234293 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089713947 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075432755 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083456331 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066175237 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06704105 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088461112 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073422253 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088598696 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070115008 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082724829 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068387387 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071358783 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086896037 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.0686587 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083636066 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072593692 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083744707 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074492163 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069499335 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094162469 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070837516 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080218952 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071891316 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08268082 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073377334 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063986393 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082490611 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067292805 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085284402 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066817938 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070629106 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079107947 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07513851 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091551594 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068026606 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067531233 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08599822 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075927487 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086341484 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071658998 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07094132 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090684701 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077918278 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08365896 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071303062 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094272279 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068527328 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063364195 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089512322 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066856192 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084372365 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066641439 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065745466 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087135452 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076590269 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091280068 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063346396 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086907064 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066306502 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067806937 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081769026 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073376103 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088292576 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070536265 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076659823 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088194504 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070347977 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088268139 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067446321 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068692814 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085477345 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070664675 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085040865 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070438685 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066422777 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08704872 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067013629 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082743481 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069990102 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06833492 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085338622 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073841538 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084514352 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068959466 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070265951 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085983784 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068815184 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085056107 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067567827 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071210904 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086344885 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068935027 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087637933 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064731616 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076966206 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086515562 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075490881 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085511382 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066093614 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09056904 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071860274 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075197167 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08610441 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069532516 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085853141 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068265129 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069892537 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091906344 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065930235 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095126087 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076234285 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085694564 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070630518 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068093767 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086643059 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067192508 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085276931 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06937462 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067828641 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085667957 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07250248 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087494803 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068717141 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069877193 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085355641 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068582282 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086251023 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063461714 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067274126 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084664996 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068663297 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094451379 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06977792 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084689698 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067876799 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069594746 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084255779 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065101403 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092092697 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076195562 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085569068 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075308895 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06722244 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085544995 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078179095 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079669161 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06707301 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065718048 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083373999 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074826597 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085437089 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077220643 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08487929 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067451282 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066844829 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087259805 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06873995 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064268058 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085770377 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0743432 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086254481 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069145179 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069900975 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090557733 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071363265 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096700654 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069445905 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08780712 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070847655 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067402034 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086083683 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069837925 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072330686 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.089044739 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067993955 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.085163438 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069838742 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070740239 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088567925 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070240116 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088655826 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07677857 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06960823 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090435302 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073284362 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.085551687 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072515711 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087336492 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070293689 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069083816 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090496523 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07301068 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088663726 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079068199 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069671757 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088036853 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07023466 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085020768 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070213814 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069762976 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08765725 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068955548 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.088740114 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07825911 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067692691 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090210367 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069368185 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087708662 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076464336 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08792754 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073646032 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077231664 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088694395 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071256028 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094920566 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074420633 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090136092 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071449793 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071118463 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093485008 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06976717 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093521307 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070164514 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070345913 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089241492 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067756794 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087851563 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070766137 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068750927 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091090383 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069316134 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084511757 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067316001 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065469337 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085466816 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07187778 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092545725 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070552744 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088532813 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06358878 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065278599 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08618676 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066545098 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069259862 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088070689 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073641666 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087630715 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068617295 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084413463 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076670405 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073029962 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088819603 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065888753 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088942677 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068842139 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069399723 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086442075 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068428373 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086900567 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07193902 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068584467 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084953341 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074734881 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08823724 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070023753 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086032452 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069146071 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068457208 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082333096 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069880442 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08684292 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072737725 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069553939 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085325727 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078491755 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083048369 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068916035 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070670687 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084786599 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073153238 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081705373 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070237571 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086233752 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069164676 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064111677 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085152634 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066218189 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069816124 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084499753 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064769269 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095979672 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078042202 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088854059 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068446553 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067412567 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08150494 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064804802 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084418957 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069603072 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070223817 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094989066 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06811002 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084761756 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064515032 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069228441 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088677369 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071625187 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082794028 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064446928 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067607319 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089427821 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073935194 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084586515 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068136021 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071825987 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087464289 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067430479 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088938377 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065331841 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071021469 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098629805 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069503613 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085463017 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074487681 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09289843 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069211207 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062686369 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086566584 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070466277 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085265703 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070246392 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086517662 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083707248 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088800618 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066965893 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067414485 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088059015 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068111682 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093260739 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07035697 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069384679 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089776945 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069823761 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093352321 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071625922 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093056199 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071259055 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087949548 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067580551 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068318221 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083805482 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067583384 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069285446 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087298011 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0732391 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092287798 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068379063 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095107599 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.0768778 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087701098 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065345299 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067559211 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085210982 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063940245 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086654606 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066570825 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066662656 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08474764 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067661365 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068721881 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090557023 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070097702 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086787893 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068745184 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062963731 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087781174 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071471046 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087099873 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066533097 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069400427 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086897929 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07265909 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089446093 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066644758 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070925055 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08953694 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070957453 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083737862 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077328783 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068815377 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09012057 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070066583 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088137028 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07141975 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073432947 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093492957 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071416078 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089873698 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.079158243 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090659829 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067913978 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066881996 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093072869 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068794382 seconds)
  done (took 47.010705162 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107347898 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083032699 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063914077 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081413786 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076163401 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082576294 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063805328 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064103746 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082606087 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068118889 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081375215 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064339952 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090181582 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086817864 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094718083 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067829116 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081437401 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065145096 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081323577 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064657049 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090200183 seconds)
  done (took 2.481743571 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076622182 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090566094 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074639686 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095845237 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070186544 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090544729 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07434444 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090107669 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096519084 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069549122 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096061173 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073016785 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086875038 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06958795 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086437854 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073081432 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096053602 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070136481 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.089844879 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075078768 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090396769 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07422232 seconds)
  done (took 2.646607987 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069227754 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067972638 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087215089 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064073152 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06791739 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080914306 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071790526 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.0835463 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072167497 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.074559072 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084624289 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06748831 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086424449 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063106221 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06722538 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083942963 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131814658 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07133447 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067442832 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087563395 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064274852 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087007611 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063836271 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064206363 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085386541 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071785396 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086945996 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.0659028 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066998999 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084482029 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068172234 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083363469 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070534548 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069282992 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086227081 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069153087 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069323001 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087482681 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065789636 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.085871261 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069639722 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065633551 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08835077 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070815047 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067095217 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.085499121 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071331677 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087822104 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065179006 seconds)
  done (took 4.560919852 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085990731 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130561767 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088470079 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090704008 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102495737 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094085011 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071241251 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110867627 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065116231 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085472392 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084317145 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104115218 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086414402 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072542945 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092254678 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067843803 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06835446 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085257438 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071731102 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085192382 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070977043 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093098102 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100015623 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081925329 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089017932 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067148117 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085246523 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072821443 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098926005 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073064362 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089954645 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073897545 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100791693 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073230284 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08586001 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.07002536 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102410852 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085938132 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071627284 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065311762 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088369218 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07286754 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091965667 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084121009 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086051882 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072893467 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086102084 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065154713 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.09868568 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069485153 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093967259 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100855961 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071772181 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08639066 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073487178 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100307152 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067807538 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083681684 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071597012 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098293445 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066016629 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089749847 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081833616 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087242286 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074738132 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101562327 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072431384 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089583979 seconds)
  done (took 6.689721113 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07663272 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092787515 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082996294 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101247109 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092883439 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075387656 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092001165 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074725578 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09125015 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079544654 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092750473 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113168376 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070487473 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094707207 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074796944 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092592937 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074484555 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093301211 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075096435 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093809349 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092502343 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08345059 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093057619 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100552278 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104471375 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088105168 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075078894 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093213286 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083435745 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093873367 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103527347 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075438456 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093075996 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101144912 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086514213 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092484164 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068026221 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092211194 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075098141 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092367537 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070731438 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100286969 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074407042 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088380059 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074114133 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092257072 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100525066 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085074452 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094459487 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097271277 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074328777 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100469208 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074073325 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093035967 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.099940096 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10803688 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100591423 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100700342 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074561779 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100463502 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099662447 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108651438 seconds)
  done (took 6.38403696 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088777713 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095005733 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098205975 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063950111 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066644376 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089885946 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066648606 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083864279 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076620883 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094536153 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080435622 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092451073 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077368601 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10021036 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091609744 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077416862 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092570681 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073846998 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097059875 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073960317 seconds)
  done (took 2.532317949 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077465392 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10395625 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069433352 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073192221 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089954755 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073443576 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088888519 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071431805 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086878053 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071274342 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09616676 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079524371 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087253959 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07473733 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095612909 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074035614 seconds)
  done (took 2.170810261 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07983408 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.096699093 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08275332 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086985843 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066874777 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083545972 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068128709 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064513284 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083515066 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082803812 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087245503 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070578695 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086843931 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066739837 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065007258 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089791252 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064447907 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084212793 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068615643 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100675269 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078881104 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085357025 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069728183 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068978314 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088137725 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072738245 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.086719541 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066264416 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084892448 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069389692 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086662764 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075677762 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08334999 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067332862 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066734579 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085342697 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069579997 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086880189 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07133988 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066879007 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084868727 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068297808 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086531118 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070252994 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082553499 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069045207 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064434119 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092491758 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066609958 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086838823 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068678824 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08844004 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069895031 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078144968 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091130199 seconds)
  done (took 5.137851518 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081597333 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071579654 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083761858 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06674292 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089557281 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069663949 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070184784 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089080052 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069168844 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084667548 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070217555 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089333299 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070421729 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071498206 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088604127 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071640426 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082221723 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070012226 seconds)
  done (took 2.250627971 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073628308 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068730519 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094142469 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069396303 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086944112 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071117401 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065129882 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086058948 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067754271 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086679765 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068813562 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070677174 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086315883 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071136829 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086755568 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068403415 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070665767 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085667089 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07001852 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083213037 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071900669 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068843895 seconds)
  done (took 2.534997682 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074574779 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095458729 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.164430884 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.111527488 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.086604012 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.102910391 seconds)
  done (took 1.500797267 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092198301 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100176718 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069974431 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109697461 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078278881 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091623371 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072611137 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091095039 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081268836 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104340366 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071893502 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100125529 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099561337 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081424589 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09724841 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077469406 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091519041 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07255508 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090649645 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109160819 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072564613 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09970715 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072633046 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091298352 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072827229 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099575734 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081512853 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10503489 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09076749 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080547272 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097133764 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072720028 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099603032 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103471269 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072372177 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097144766 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071125482 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107455729 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076132831 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097772171 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071206277 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096278043 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097745983 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076237436 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096888762 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07048088 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093927538 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06962341 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089734227 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113777635 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07606049 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097155822 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094894557 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079286094 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097313653 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113318872 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083752757 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096867888 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095131417 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084234042 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097938864 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07613414 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09722744 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102418746 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076789742 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097063618 seconds)
  done (took 6.752677679 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086263516 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107675616 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07069629 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102542454 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097698488 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070988954 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088377732 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070906161 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089442379 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070621416 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129478506 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07100689 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098362396 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097899643 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070512998 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088959803 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071512019 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097082963 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070034877 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11390569 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088830174 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079016101 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096315144 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096589958 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083726434 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095550976 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071920132 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092327875 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072158274 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092158311 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076866528 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092435952 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098907982 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07162334 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099848244 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072663056 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092255541 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077786569 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091038274 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078767245 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100362032 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10861408 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072871888 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091436067 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086291811 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092560464 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071797346 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091347648 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07253172 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090852213 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085093927 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103679384 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102120953 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097341489 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0710103 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089287448 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071199992 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088910568 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071059932 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09414842 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078631524 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089152012 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113954634 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071257243 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089475992 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078275545 seconds)
  done (took 6.626357578 seconds)
done (took 130.047001003 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201651142 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18466487 seconds)
  done (took 1.251018942 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070234046 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09682822 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09859041 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129320617 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087413063 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102021404 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119661722 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080422013 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068077691 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087254657 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069856646 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088563153 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133718949 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068509273 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087881656 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070336998 seconds)
  done (took 2.328696927 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103409039 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196623456 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111081459 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067878842 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101561531 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080739895 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086936831 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078500263 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095268894 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067593294 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079532563 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096029704 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066981248 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096384904 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076054161 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099454951 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066670019 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098635974 seconds)
  done (took 2.545191883 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104719383 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141470549 seconds)
  done (took 1.118356312 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.20060472 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123028336 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202528645 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.415083738 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.204716513 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.279973218 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.17317485 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.172191827 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.15727975 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168724059 seconds)
  done (took 2.965970334 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100884572 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171624066 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.310501624 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138189945 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.08659417 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116451277 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138353853 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.09034112 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.102768684 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101161268 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082161165 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098094934 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099058833 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096029021 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075979914 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097808018 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121963373 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075721547 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077880377 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097059304 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118941243 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068685381 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076748652 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097337228 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079860433 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.101050175 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068832235 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.089351441 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078348376 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095961818 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081006688 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114542704 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098282914 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129887757 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.084371365 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131598881 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099122586 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073717404 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095809027 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074627543 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097677301 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078834877 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104582035 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078112964 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086355445 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079271494 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086845342 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068102006 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099800302 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078080788 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099463769 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079933792 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.13108144 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097768372 seconds)
  done (took 6.275759627 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.740306545 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110823923 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095355939 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.800755695 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089842121 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10628897 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.705990186 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117645732 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209752612 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.757389801 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090843333 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09889987 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.180795082 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.21564178 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.903061436 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.283161598 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.629177742 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105096568 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109347593 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131614556 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139297283 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174366022 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149741982 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.436031797 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076449022 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092229953 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137062839 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075740757 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.138402275 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.105927527 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094382496 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154330575 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.226346953 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.153660609 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097110492 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071080922 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091596733 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147027353 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.221036099 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190581622 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157328825 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069468881 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091115944 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138742864 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130212578 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070013685 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139331134 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.152447245 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168758606 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074364862 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075732375 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.162737457 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138221861 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.144830647 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101154273 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.264591305 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.281781873 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070424137 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119817961 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104110036 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.21451292 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10456038 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.19741205 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139395558 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.167903604 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090762945 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.729947739 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.146441009 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091218732 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076115192 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120621911 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073985618 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.15835731 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.123831683 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.368900056 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.162396419 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076071651 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070969528 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226753535 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085101482 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091403919 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141019523 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07739738 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121778723 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14293857 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.161830318 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.145770628 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.20796009 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14195635 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.139173891 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094840856 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123252957 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.077136272 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.189061148 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192950332 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.140534188 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.184176311 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139007434 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.161375776 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146939702 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077607788 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.148136541 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119192956 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10068809 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139968903 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189827877 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.102632612 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104149609 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073182943 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.158593728 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124904552 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087110498 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138054216 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.148354625 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.474480726 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.147355733 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068559021 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107958139 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139279168 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.139935829 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095394514 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.213789873 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122171421 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.146352676 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121024741 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088320805 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.098891225 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160432337 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080463256 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122816185 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136288497 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097446658 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.210940035 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.168094736 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098754947 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.192139336 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161143182 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095255676 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148775871 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119735365 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14605811 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078928162 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136857913 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097201947 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.747752404 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.163246177 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121908045 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07459958 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177848739 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071494665 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104172689 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083818301 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089576902 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.726491769 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107787741 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079842706 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104488413 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07493175 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121324549 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156810657 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074668634 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138753528 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202353546 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076372959 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11959077 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104677898 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.140316899 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077059617 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10539167 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10440266 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085434864 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123375681 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095508331 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085115349 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146661908 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.141151272 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.193238091 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.539761077 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092357387 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084242279 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.199836958 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091662232 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.240772793 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136582487 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.197401834 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140585886 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101356116 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.264388946 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.143277959 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.17746373 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107101229 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152868705 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068649801 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.157123245 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.143194724 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071911621 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096701726 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.141373704 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.144311853 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142312541 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.927887997 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071770632 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202766527 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090570389 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.149846147 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076224064 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097942681 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.25937474 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071988947 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146260775 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.141656936 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094215811 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083647882 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.702418589 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084658724 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.158519511 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07677818 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.192147924 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.142328566 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136586936 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137936562 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096306766 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.139437231 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.187786704 seconds)
  done (took 40.294295665 seconds)
done (took 57.652426407 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256466432 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179598823 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.242470223 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14414365 seconds)
  done (took 1.792384109 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.14423036 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105696675 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117576185 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086974692 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104024361 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086996813 seconds)
  done (took 1.542351327 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.401382789 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264176822 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229000715 seconds)
  done (took 1.789467862 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.281508216 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213631889 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445667475 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.296857717 seconds)
  done (took 2.24037944 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.177571578 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115219816 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068463424 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107260991 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159751743 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251229547 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128486902 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.187465993 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080944224 seconds)
  done (took 2.220726401 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197991129 seconds)
done (took 10.685018055 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.272604553 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.217432539 seconds)
    (3/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.244613885 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.194057768 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169393803 seconds)
    (6/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.228783 seconds)
    (7/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157694725 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.208963943 seconds)
    (9/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.181182064 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.128194029 seconds)
    (11/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078661328 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.17189561 seconds)
    (13/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.09673804 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080701726 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.139093572 seconds)
    (16/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.149872848 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079738512 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091639777 seconds)
    (19/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.161055612 seconds)
    (20/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.19352856 seconds)
    (21/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.223770427 seconds)
    (22/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.118957439 seconds)
    (23/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.120820102 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.138298175 seconds)
    (25/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.182799996 seconds)
    (26/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074580085 seconds)
    (27/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.098223273 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.167886059 seconds)
    (29/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.101144757 seconds)
    (30/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173724406 seconds)
    (31/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.076622507 seconds)
    (32/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.161464364 seconds)
    (33/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.171193622 seconds)
    (34/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.24217561 seconds)
    (35/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209121123 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.09745682 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074665848 seconds)
    (38/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.115468526 seconds)
    (39/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.142038881 seconds)
    (40/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098657678 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095994441 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201585815 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.158674997 seconds)
    (44/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074155614 seconds)
    (45/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.192572021 seconds)
    (46/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075511182 seconds)
    (47/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.113976192 seconds)
    (48/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.179733695 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09791879 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.118470649 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.111472207 seconds)
    (52/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102597775 seconds)
    (53/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.102158682 seconds)
    (54/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.081423612 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.098614171 seconds)
    (56/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.0817359 seconds)
    (57/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077223696 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.115748511 seconds)
    (59/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.167612317 seconds)
    (60/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.07479357 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.202669973 seconds)
    (62/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.078076341 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.119911252 seconds)
    (64/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071084287 seconds)
    (65/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.10001646 seconds)
    (66/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.09158999 seconds)
    (67/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.182893447 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068994679 seconds)
    (69/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.211212197 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.117436691 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091727215 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.095018108 seconds)
    (73/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082011635 seconds)
    (74/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054596421 seconds)
    (75/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097215766 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.190333663 seconds)
    (77/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.16947586 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.095244975 seconds)
    (79/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078539028 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.120697258 seconds)
    (81/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.223808154 seconds)
    (82/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.078866988 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.1033652 seconds)
    (84/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.160069697 seconds)
    (85/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.100494741 seconds)
    (86/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.186308608 seconds)
    (87/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075786973 seconds)
    (88/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.171295302 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.153756291 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.092825167 seconds)
    (91/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.055216173 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09553029 seconds)
    (93/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.119493468 seconds)
    (94/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159177401 seconds)
    (95/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122206106 seconds)
    (96/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.196479864 seconds)
    (97/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055368192 seconds)
    (98/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.191725849 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096456092 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.161094463 seconds)
    (101/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077589976 seconds)
    (102/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075779628 seconds)
    (103/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053741751 seconds)
    (104/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053220293 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09484065 seconds)
    (106/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070142411 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118480704 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068004612 seconds)
    (109/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070933015 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.120996777 seconds)
    (111/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069383885 seconds)
    (112/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099099801 seconds)
    (113/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055192074 seconds)
    (114/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078764311 seconds)
    (115/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112894173 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075702004 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119131197 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090677452 seconds)
    (119/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.091994171 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.093317926 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.125931359 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152466165 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103247634 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.172606237 seconds)
    (125/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.055022576 seconds)
    (126/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054959194 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.162720044 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150075252 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.095826703 seconds)
    (130/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.105777622 seconds)
    (131/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.076878867 seconds)
    (132/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085049905 seconds)
    (133/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.058332373 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.164631631 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.100649664 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077112399 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.097399986 seconds)
    (138/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.196801694 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.095104204 seconds)
    (140/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100801477 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074466382 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.076914167 seconds)
    (143/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.180389855 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075741413 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068492843 seconds)
    (146/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.077962203 seconds)
    (147/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.15357345 seconds)
    (148/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103439475 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.072089699 seconds)
    (150/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.10311451 seconds)
    (151/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.056639595 seconds)
    (152/309) benchmarking ("sort", Int8, false)...
    done (took 0.168974791 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069281912 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.100399045 seconds)
    (155/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072398434 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069321885 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.092236541 seconds)
    (158/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06783513 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069472558 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.145515292 seconds)
    (161/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070655916 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.097163785 seconds)
    (163/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.072143806 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.096930874 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078767764 seconds)
    (166/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073536031 seconds)
    (167/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114636717 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.157154595 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05570275 seconds)
    (170/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071695612 seconds)
    (171/309) benchmarking ("sort", Float32, false)...
    done (took 0.154799421 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070522183 seconds)
    (173/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.164080175 seconds)
    (174/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078333269 seconds)
    (175/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.12477301 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094865478 seconds)
    (177/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.0975822 seconds)
    (178/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.101506888 seconds)
    (179/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055342373 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091095038 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092575544 seconds)
    (182/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057449952 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.077759528 seconds)
    (184/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.081427604 seconds)
    (185/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071821072 seconds)
    (186/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.174770034 seconds)
    (187/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.055167829 seconds)
    (188/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.12576725 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076668423 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092020748 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.166970903 seconds)
    (192/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093969663 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079366539 seconds)
    (194/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054512473 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.120226583 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.152312496 seconds)
    (197/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055899372 seconds)
    (198/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107615175 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.115870818 seconds)
    (200/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.109210021 seconds)
    (201/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.287013323 seconds)
    (202/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.133086095 seconds)
    (203/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055347508 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068277827 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.126175874 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.102707218 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090505539 seconds)
    (208/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07532114 seconds)
    (209/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055681614 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092071174 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070698274 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.092271095 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.146609191 seconds)
    (214/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079386535 seconds)
    (215/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08339444 seconds)
    (216/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.056814795 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09154833 seconds)
    (218/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080779763 seconds)
    (219/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07391335 seconds)
    (220/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.132722584 seconds)
    (221/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.10844168 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.077648265 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077207727 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078558418 seconds)
    (225/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.125158364 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100251499 seconds)
    (227/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.079428264 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.056140031 seconds)
    (229/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08236528 seconds)
    (230/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094047688 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075663326 seconds)
    (232/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.099389099 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.143556088 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.092600346 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.055008636 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068171629 seconds)
    (237/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093840224 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069140434 seconds)
    (239/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.075106324 seconds)
    (240/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.100575663 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.128679972 seconds)
    (242/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.078066079 seconds)
    (243/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.056243584 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.166781389 seconds)
    (245/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067312489 seconds)
    (246/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074229738 seconds)
    (247/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.159780926 seconds)
    (248/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067612314 seconds)
    (249/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.075928906 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093216412 seconds)
    (251/309) benchmarking ("sort", Float64, false)...
    done (took 0.15023948 seconds)
    (252/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069016238 seconds)
    (253/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054797723 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090948489 seconds)
    (255/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068880874 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053264693 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.194350025 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.158827297 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191000139 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06995556 seconds)
    (261/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06347844 seconds)
    (262/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114525138 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067578521 seconds)
    (264/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.077563798 seconds)
    (265/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.05458442 seconds)
    (266/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064085927 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127916312 seconds)
    (268/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067513357 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074653277 seconds)
    (270/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.077412028 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069901664 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077254654 seconds)
    (273/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.101732844 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.055364188 seconds)
    (275/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070801789 seconds)
    (276/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.105782627 seconds)
    (277/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.065961753 seconds)
    (278/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056385717 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.093600697 seconds)
    (280/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055958914 seconds)
    (281/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.116230569 seconds)
    (282/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06473812 seconds)
    (283/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.055012088 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.101521272 seconds)
    (285/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064396532 seconds)
    (286/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076036019 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.091407336 seconds)
    (288/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.065131558 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068342115 seconds)
    (290/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054735849 seconds)
    (291/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.103644213 seconds)
    (292/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069431377 seconds)
    (293/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.101036087 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077028291 seconds)
    (295/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054591147 seconds)
    (296/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.077620134 seconds)
    (297/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054893492 seconds)
    (298/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.055648781 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074090758 seconds)
    (300/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.080638109 seconds)
    (301/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064433071 seconds)
    (302/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054627101 seconds)
    (303/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.077985746 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091784145 seconds)
    (305/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.054865833 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.099024374 seconds)
    (307/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.056139059 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067343785 seconds)
    (309/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.099028918 seconds)
  done (took 33.96831287 seconds)
done (took 34.878146759 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083669249 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114875552 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076750443 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119292936 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085241144 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104963034 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076485562 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082488337 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.107293014 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085392861 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.10601127 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058067199 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101289227 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079225955 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.101501649 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097748892 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104940102 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076656128 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.100494416 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069253575 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077813163 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092502062 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.07207242 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058606496 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.10592114 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077261692 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.100144716 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079008955 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068822407 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.093115964 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07362643 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.099463005 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069558833 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083037995 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099053352 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077842902 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102337501 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080244419 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071218212 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.092533883 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077665058 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068803598 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.098811173 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077227399 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.097781012 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074667642 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076977782 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.10662511 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095708274 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095623536 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07767945 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.103296687 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080940584 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.099367154 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07322604 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077182387 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.098019831 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095948879 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.10183234 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072155068 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076910991 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.101476209 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074879746 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.099958682 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07748004 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079064388 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.103584911 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075194132 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.10201713 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075074359 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068768176 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100392991 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073494906 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.092129979 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079099972 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079872359 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.091851232 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075246282 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07599248 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.098604887 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06943104 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09507795 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.07096107 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076101945 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095278629 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058341927 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072819449 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.098403385 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069728205 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.100642069 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075376081 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076296816 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.094561087 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081354319 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069208149 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.098119159 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.07023954 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.091712355 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071952651 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073569806 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.091996909 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072693186 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078617232 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.094219912 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07627556 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.107249892 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069075961 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07570788 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.091815711 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06925162 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.109337276 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.0796001 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069610181 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096170072 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069193037 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076398453 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.091876462 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069538467 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068283632 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.09318035 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075826523 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.092399826 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072452648 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07723569 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107219344 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069458589 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072746363 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096306512 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070331103 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.097928223 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.069907587 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069394711 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094770299 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066685636 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072078141 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.09324995 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076829455 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071799086 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.101317407 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071957534 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100716124 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074543207 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075642463 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098787236 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.069126116 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06292608 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095550189 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071450654 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071436786 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092735762 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070376884 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.090560522 seconds)
done (took 13.780094371 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06765352 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.170075112 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127220784 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097953825 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113384624 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068404538 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.103316398 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.106383326 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092346021 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128723314 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089140371 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109800133 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115100317 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.090140145 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068002112 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073716436 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.094211655 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.091408328 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127336681 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.112100861 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119779253 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090284497 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121744459 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092481666 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11413875 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104295294 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090445907 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072373213 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070858855 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116342409 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.10986616 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070765912 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068342833 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124143101 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118083918 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086179065 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089633711 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085605908 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089789671 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067510704 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.1144858 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102163354 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105300945 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082732927 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097264949 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070804121 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091624552 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087187244 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.11441873 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082270088 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111844846 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134441263 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071170696 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106513817 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067162279 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111429942 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105854287 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070834713 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068095079 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092743332 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06747144 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072083 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112176163 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116772759 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071775023 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106662026 seconds)
  done (took 7.342487882 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085723524 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.11860775 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084946574 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109343745 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067163759 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068590604 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.09124237 seconds)
  done (took 1.593040349 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068827683 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090335433 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114071636 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090940309 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110552787 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089637935 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102775493 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06876616 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108143411 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06966672 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089689271 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129561237 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069538346 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098262454 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092970719 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.092372222 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094449465 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093528795 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073034437 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.118936772 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073758606 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115225871 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072600018 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070570891 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110448447 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071021247 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142956486 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075194663 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094317949 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072694202 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068008943 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141255438 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106158199 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079394292 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068544865 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106346418 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084104919 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090845609 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085179563 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098230084 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085072858 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071606295 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.095322411 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068047312 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075656161 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.105065566 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071510434 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093703932 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071661507 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.09045444 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093689213 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083127121 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092712621 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072705149 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070572865 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098308336 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078974226 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09263786 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089311399 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071617092 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109658836 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086001482 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.108627774 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087960035 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096764234 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085518179 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.109859472 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073750609 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073085579 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.097870143 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086410421 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.091404844 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070796061 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081284876 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09549412 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094368926 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.116386056 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071190472 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102642145 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069029804 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069741625 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092205487 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092057148 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095718586 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068636926 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072999789 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094880514 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06754809 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067762643 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095326612 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067701316 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070061934 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095028472 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069669155 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093899552 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085138527 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071094189 seconds)
  done (took 9.513600562 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069690949 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069582832 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093197868 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069469051 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069610543 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093081956 seconds)
  done (took 1.451346493 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099026084 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094755413 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083318069 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098005278 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107103689 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107399824 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084284113 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10709869 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086295932 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104160791 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084246517 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107822448 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090008121 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.097823853 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083246441 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097255099 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084356681 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100921698 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081065705 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098577052 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089690102 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099254677 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075929825 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084492386 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095915608 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075415942 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101566291 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082048594 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104045074 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084268934 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097355155 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073450382 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095804839 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083962394 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.106471475 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073973238 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097545336 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073846562 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102322695 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072808079 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108574341 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076019212 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080366508 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096836436 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107277205 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073285884 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073242228 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101272262 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083398868 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096823946 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073232108 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097679827 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072731763 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096974537 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073576382 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107785918 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07397757 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.10711783 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075275276 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074717787 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095284365 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073309943 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106484463 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072917618 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105932111 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073736572 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09622912 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075864757 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098819288 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074604314 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072865221 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09462945 seconds)
  done (took 7.441013227 seconds)
done (took 28.302624241 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.651350062 seconds)
  done (took 1.63110877 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.763371831 seconds)
  done (took 1.744142357 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.315609228 seconds)
  done (took 15.301898928 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.60981984 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.753994785 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.804635406 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133891492 seconds)
  done (took 3.286521638 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.887547258 seconds)
  done (took 1.895845144 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234439945 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223998859 seconds)
  done (took 1.448020129 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.729205268 seconds)
  done (took 1.725307811 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.285241313 seconds)
  done (took 2.272988205 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.320739156 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181067004 seconds)
  done (took 1.495861579 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.523239441 seconds)
  done (took 1.518769706 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.546009392 seconds)
  done (took 7.547060015 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230480076 seconds)
  done (took 1.240272202 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267658459 seconds)
  done (took 1.266201359 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.122658553 seconds)
  done (took 4.122077054 seconds)
done (took 47.485079648 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078868049 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083045657 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105217372 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080287453 seconds)
  done (took 1.343310561 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07883561 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075907662 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101150252 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075175088 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102641946 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075850228 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100009679 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079497783 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074638717 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09952506 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075108666 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09721586 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078150063 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099157245 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072469032 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077488323 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.10098598 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075029345 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100901734 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075343487 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072753115 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099464062 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077922662 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097100472 seconds)
  done (took 3.070578618 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079121404 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074954965 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098772737 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073580646 seconds)
  done (took 1.329418345 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079387513 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116787295 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090731611 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078485439 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.118024694 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111228497 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071722055 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072141001 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097528378 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080146328 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092879972 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099737968 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112584874 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079718925 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103832445 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068210936 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070679075 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111819171 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079383128 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102429967 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072380963 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081225888 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093443914 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092405304 seconds)
  done (took 3.186059647 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078257926 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104382363 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.10321882 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090598814 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.116542947 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067202586 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101042787 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092633012 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149886403 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06736588 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095883046 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068022814 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097615245 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066792996 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078651417 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.13323055 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112464387 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.094237254 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099330921 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.09055418 seconds)
  done (took 2.920044733 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076345651 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071987333 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090519399 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070286018 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07794618 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097692537 seconds)
  done (took 1.491821844 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069441011 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06901399 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091910563 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068432835 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073801604 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092481503 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068386312 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070427336 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094540617 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070372862 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070071726 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092913209 seconds)
  done (took 1.938691313 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.382648041 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093398485 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070888117 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089253567 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072926554 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091683774 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081571662 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069772517 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116202895 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068368805 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093014687 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070665672 seconds)
  done (took 2.311923632 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260679604 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078608895 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322917341 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168144808 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140693275 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155566867 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10537407 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140735864 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198792459 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139029916 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200524621 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225553088 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134787721 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167323532 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116497139 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132879643 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185914669 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220425747 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105681419 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223259431 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205854669 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156705729 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180096717 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128149589 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135232633 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151159678 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073377248 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106895623 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230626078 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161002591 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200932209 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139009778 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099180333 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230485772 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22434889 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195491805 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162723801 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086420282 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.15744501 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165399344 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255059812 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115132706 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19313314 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134149504 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106968189 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172681937 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146363542 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.148396593 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136967493 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116293823 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174829347 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240126731 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166197816 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112646598 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138336919 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142638442 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144118638 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104319977 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266106569 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195596656 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159633766 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097153204 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098997734 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210649929 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15985157 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143182904 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153211198 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11959897 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1676789 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211367397 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147070187 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174745933 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182153397 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091038806 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14815442 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195594711 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15730232 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202537301 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18028158 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07495885 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153807396 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131542464 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084830845 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170278289 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101613327 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208479969 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126448192 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.139051543 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14103106 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137463632 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112037939 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221621546 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202374327 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106451429 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.092494196 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131508197 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150780855 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176186248 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114460145 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136139565 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148877654 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081439699 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192886491 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077115735 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153534769 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.10432648 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152113899 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162578846 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078150406 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156346122 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129129225 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128368553 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165404083 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218561131 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092544097 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10902025 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201341174 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179434576 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13268712 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175610357 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18938752 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.127119649 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129904268 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205371708 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241955498 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091893364 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222172024 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135537478 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085897298 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114490303 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155663414 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139662151 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150233939 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085059509 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179152574 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200271515 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101742301 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098787161 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191154935 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083866877 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108548364 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141403588 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128387905 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09772839 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.12737336 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135045495 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169638289 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154329466 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135439766 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153137403 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12589054 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225614011 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115649189 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131378012 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106010769 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.096737105 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165189861 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215708259 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081609807 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224164278 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155664288 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133718251 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148132269 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085234816 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169855335 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105167698 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072838756 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197725074 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139104075 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112437592 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.209331973 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131731722 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155284181 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152899226 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163297829 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159209157 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.186325716 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108410318 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114080546 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141324006 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15475481 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100811528 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09693614 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.10967452 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131566253 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123418566 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085613759 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171482611 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181041669 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100355389 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141226153 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124748411 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179197892 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104705083 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160784922 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148781126 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122437662 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.185139513 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212039108 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166167808 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127933827 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175150427 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.097516571 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076640628 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117707284 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156477658 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111006082 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085792009 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146430052 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20368311 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157990757 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167476208 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13874316 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150724946 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18696359 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097272004 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118459513 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204606962 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154453855 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155504083 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092798764 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.125355896 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175779773 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13530842 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243767196 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143603353 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152884359 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207716335 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131891102 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08244933 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13485815 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167236532 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13375032 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207603245 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127927448 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090465434 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137899517 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108518247 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131468045 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156444745 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148039522 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163573951 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144944312 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186206359 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080134884 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145835518 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151675802 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151996275 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.090958237 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149235673 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219661963 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097919837 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146076541 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210994094 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081328619 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152785589 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236260514 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200065802 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086348203 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143194542 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149930751 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157618291 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146456477 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195338371 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139805734 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164119079 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138441572 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087458728 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114750565 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100284812 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133701347 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122783678 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139863471 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145605289 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.120899914 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161278871 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14025438 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138583327 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147839654 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100972874 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118509272 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125116658 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20898949 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151166857 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232683713 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.128544187 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.2060874 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199712481 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102369123 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081925348 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107603712 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170484811 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112038834 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164501733 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123933591 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107930684 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156067089 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198968674 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097964139 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.096951169 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138719926 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165668111 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139935629 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126179605 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107447293 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221136738 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130952151 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081862008 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153761683 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132681833 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130314994 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232770696 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063640436 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124216517 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078333711 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108321433 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15910849 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2137338 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085027114 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153342934 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148622961 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149396467 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160290171 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130464398 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09984598 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140425384 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2055626 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15757712 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.116973666 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115800711 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185006688 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187824111 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133943095 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123703706 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230902813 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186625103 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221998166 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116276237 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144817881 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145159232 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112522695 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196349702 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111157669 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20198736 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110250766 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16673842 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131670842 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119973282 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159245574 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.142047662 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115881295 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180008107 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14857083 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109950927 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081063422 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146610105 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151558833 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135003151 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102556712 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169985089 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074194728 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19242182 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202711368 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108852702 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134590425 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124272429 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084679713 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137539644 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132302373 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11405958 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.121014337 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230286685 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118099341 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182320117 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197612734 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143355011 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166840392 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128986156 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66478973 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08092816 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212613112 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148427823 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23651136 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125674758 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148743552 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139456048 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153174525 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174513567 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131778403 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205042882 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162699403 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.14950334 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107238977 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132396345 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139419446 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093549802 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134261623 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144066672 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145920693 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.128638469 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150152828 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156469683 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.109725897 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097461152 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215456405 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146564327 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198654048 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170872167 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087150546 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148965697 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196472812 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082496091 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177543815 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188256299 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136235991 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126893053 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084233512 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135095082 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231265529 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.10021198 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1942522 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154169553 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139564619 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143245484 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.172789152 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163769819 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137111806 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154685395 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123553138 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141236125 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145246788 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087468761 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106549323 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134095217 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14148491 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102011634 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130523826 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.144947299 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184300425 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098266684 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098684781 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131260587 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173815568 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237049087 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116927365 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111201336 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148214689 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14243532 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.147360302 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155429269 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083611395 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110641159 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110444925 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.114477412 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138481623 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143560689 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106009102 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139031219 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226180799 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.112964649 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225855031 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124182748 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135635111 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071332996 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107749256 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124576104 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099889471 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136843989 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127007177 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232278508 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099811416 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118768034 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121109666 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076480991 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111099702 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158114522 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139605964 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150218276 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12586864 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06542048 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138667681 seconds)
  done (took 71.544250874 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.132730058 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104185031 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117556773 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.177771385 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14587118 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237604099 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180640296 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222628149 seconds)
  done (took 2.407495143 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07055418 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.118240232 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103603029 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116352614 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090127175 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069575197 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.29301813 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110884909 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068509361 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114714683 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119362021 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092308331 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.467795805 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066843348 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094925983 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085084012 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068813012 seconds)
  done (took 3.231689671 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.423723594 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.632620298 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.450435945 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074744195 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.859090306 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.108042179 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.364876875 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162976643 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091634672 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.430396789 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.729984894 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.148725393 seconds)
  done (took 17.567470068 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076213796 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069970291 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109962786 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.0842934 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099783345 seconds)
  done (took 1.534190111 seconds)
done (took 114.875383921 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081298673 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.344241602 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054520604 seconds)
  done (took 1.525210275 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083994559 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086919175 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112787766 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085286629 seconds)
  done (took 1.470840222 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075937711 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078528476 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111176396 seconds)
  done (took 1.365403796 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.277238659 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164649622 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089597394 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083804899 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079591416 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105880816 seconds)
  done (took 1.370168612 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074216777 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07698237 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099832906 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077701221 seconds)
  done (took 1.423581735 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076924012 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053982515 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056512569 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082476255 seconds)
  done (took 1.370923347 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091077773 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.106717308 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081846874 seconds)
  done (took 1.377660947 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107567508 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.11279585 seconds)
  done (took 1.32189375 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083364033 seconds)
  done (took 1.179818967 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09264087 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141605711 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.15593825 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136710389 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.166314164 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137381352 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087139667 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114996982 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104975708 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089867408 seconds)
  done (took 2.329043826 seconds)
done (took 16.438632932 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078746887 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393071917 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361361881 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117826827 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66915439 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360207722 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.056663878 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121988819 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121288023 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09501931 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084115323 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676445043 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983165251 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.354741868 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969550665 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325262303 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676898855 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069564447 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069232116 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094632564 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.013918906 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094376935 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068610688 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069732729 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676212938 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371655403 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095294568 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325270199 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06882359 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096326072 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356075051 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095027688 seconds)
  done (took 16.103452853 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071118479 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.145059405 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074657683 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084989905 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097765912 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071291405 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099214706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070048705 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152761197 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069024167 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111790669 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068896937 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098807087 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070406865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08861192 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09545949 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070328481 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070595265 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095184251 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069156639 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113209164 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069220765 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069300962 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095685002 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069180793 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107461343 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069699151 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069643823 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095625933 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071550421 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098257218 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070424254 seconds)
  done (took 3.874227748 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115808997 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153155323 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074736837 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129842572 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115875912 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098691536 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171786105 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093813297 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158753759 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070882857 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112516787 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069869543 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128057331 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070259466 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114608069 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069607631 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070153776 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095434412 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069022152 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095894538 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088027412 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069025656 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095164949 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069934129 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096381971 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081909274 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095204536 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069439776 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069423442 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097506289 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072822129 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069808984 seconds)
  done (took 4.160792929 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07403037 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076464897 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109533807 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084610811 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096930772 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073470355 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.0741332 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097695961 seconds)
  done (took 1.796234006 seconds)
done (took 27.039307286 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080029114 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071697619 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100882136 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082726243 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101006221 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079641254 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068838924 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102118283 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078492082 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074088888 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10382914 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069076502 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098700189 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069083726 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075890308 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095043371 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080662206 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099310169 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080113336 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081005376 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.097880737 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078744696 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101799342 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081531828 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107091714 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080741492 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084022396 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10160628 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071045187 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098443608 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077805145 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.113923211 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070978108 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082851986 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.097417278 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069484814 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068985124 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095808523 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080789809 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101813202 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072635271 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102000679 seconds)
  done (took 4.728351381 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089133939 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093178927 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113721611 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067638341 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099349485 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067049387 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116746218 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064647567 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06139522 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.116418576 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05778099 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060691912 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090821107 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055741356 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060948995 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057938873 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089651972 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058050908 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060420602 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087257106 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059618996 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055608791 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088027067 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064745882 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057654542 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.089805062 seconds)
  done (took 3.094273297 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076218938 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085022152 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115723334 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131020536 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134572561 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078302676 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106660042 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088840507 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11403801 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068747054 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072481392 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125277859 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089249921 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102526888 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069076514 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115037791 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083150563 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071601065 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101833811 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091752494 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112266008 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080399722 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120391489 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081841893 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068754561 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098189342 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073658132 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108919565 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074387812 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078487503 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099892673 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072137216 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097883477 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080482879 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073161657 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098451824 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091959782 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105912426 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079836476 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069355651 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099216427 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070212677 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11634944 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113909363 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.0963346 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076768383 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076241436 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105107786 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069238728 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114140874 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07888959 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069017408 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.098558785 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069055014 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095789277 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082177727 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071272538 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098342106 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078125555 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098407568 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081631983 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072467026 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11113297 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068888174 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10290564 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067851536 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070406349 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094593536 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092548234 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070661879 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.136579856 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.0723009 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097936216 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078173602 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103300049 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075182469 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068926309 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11100645 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078383067 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098940279 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077287327 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071824486 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098876057 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088815573 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098046895 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071044407 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070156347 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101788732 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072068274 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09682409 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082063423 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069059043 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099361181 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086067806 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095088192 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070340671 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075326093 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100900021 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068859358 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107240232 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074889567 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070283001 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104862931 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069024278 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098771472 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07895093 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073327837 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094263551 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074005571 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102131572 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069899765 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070688205 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098250862 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071132116 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078888915 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.101409835 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07314766 seconds)
  done (took 11.439783195 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.192417373 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.186414419 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071363035 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.179492076 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078164903 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108200496 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.180022444 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096872835 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097338761 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069304347 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070086643 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.130259929 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124658881 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.107375022 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107058739 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068711657 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114671789 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105482006 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.182018576 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.176112275 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11618638 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076919864 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070924699 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098327412 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071798915 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078823217 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113367508 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07767203 seconds)
  done (took 4.280734806 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082708897 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.129656328 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075679179 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089939387 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.119757867 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070286148 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.101812568 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071262788 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108871396 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08176147 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096200118 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075195404 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076142959 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106642062 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069978599 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106007841 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078843914 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071259068 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100048928 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074763707 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105675546 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081762741 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100370213 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068396229 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076095313 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.09567172 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06638062 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113608058 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069576006 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117881066 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068153149 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075149736 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.109769536 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069880275 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096129655 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073357729 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071827278 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099847088 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070461712 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068202764 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095356531 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05925507 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06839607 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108394079 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.0754967 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088050329 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075485324 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074590709 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101141701 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067024266 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098848854 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071855036 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072259595 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105079962 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073873424 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074407398 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.10088379 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067298713 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104182181 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073399745 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065683987 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094893471 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073849281 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068429944 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104464198 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073989578 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095148398 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072257535 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074547322 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103272737 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072887001 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071981695 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094494775 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071352939 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101691069 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073623055 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07388906 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.095186305 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068493662 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069414624 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.084078341 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069301445 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055508494 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.099539674 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067938639 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06775859 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099452396 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075473228 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109604882 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070789998 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102877583 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069778662 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068455613 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099331033 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066130668 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071807549 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112306624 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.111891371 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069077359 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067809568 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.111025417 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074213656 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068117425 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.085638539 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075550877 seconds)
  done (took 9.949354394 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095906394 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09462386 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098022789 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084456373 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123808774 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094605937 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104020203 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075470626 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070635442 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.113456251 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06959397 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104458734 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06943202 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078340084 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125630142 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078039825 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.098916203 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078882448 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073521357 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.135998308 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084071395 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.11056488 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082283058 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097210803 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074428657 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081713305 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124918777 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.08100729 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106851859 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.08595939 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081301697 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124414429 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086872929 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099998376 seconds)
  done (took 4.331144584 seconds)
done (took 38.927372647 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.218488194 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.397383359 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.186337355 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.054729268 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.186512998 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.206072814 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.196415433 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.185527423 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.329471742 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.185050059 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.419266997 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.79918988 seconds)
done (took 58.499382572 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.266956447 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.326004448 seconds)
    (2/2) benchmarking "String"...
    done (took 1.455507237 seconds)
  done (took 3.911334408 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.581845468 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.060379217 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.442404888 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.185317285 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.188494093 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.490226743 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.775816532 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.017500683 seconds)
  done (took 27.288881814 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.187148748 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.545036875 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.504086742 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.502470923 seconds)
  done (took 17.87279169 seconds)
done (took 59.054700393 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.173456692 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.217331811 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.231444931 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.18802948 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.288758997 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.211494357 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.391812003 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.434306562 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.199277167 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.172450889 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.207749397 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.204017358 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.185959823 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.415685757 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.198450545 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.188398457 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.266745307 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.635776505 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.559616518 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.198400184 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.218732837 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.25391438 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.190776168 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.202197269 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.20982612 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.190080746 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.188322216 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.206277081 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.396415917 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.194393445 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.276403394 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.589465228 seconds)
  done (took 190.817963701 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.188389831 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.177697541 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.271365865 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.222848566 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.759287238 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.384187071 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.311061613 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.702431034 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.203545618 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.208560416 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.509352699 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.187660829 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.555312477 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.152133182 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.197443174 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.293216151 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.47122901 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.541402637 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.202539386 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.458993078 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.207196871 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.506850158 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.438400944 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.444568301 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.219849013 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.207901634 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.197455153 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.217733826 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.381739498 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.401964848 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.191263221 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.226479373 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.761457617 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.047179983 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.189198998 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.203712566 seconds)
  done (took 149.975722993 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.447704605 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.188548358 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.188206847 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.189428 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.217889035 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.188486596 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.713776961 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.71644531 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.69292111 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.485008244 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.250294871 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.386264206 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.188545448 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281184434 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.202062913 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.193033499 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.204379616 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.2142225 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.192485232 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190379805 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.716126956 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.204689737 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.275918258 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198436667 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.190246136 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.219693674 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.584592497 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190131156 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219465765 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.294552463 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.504121561 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.233544471 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.190319753 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.189830113 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.472883197 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300188393 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192410025 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219990473 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.190565267 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.191411153 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.458470929 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190697534 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.191148412 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.194041086 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.756524468 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.193455282 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.716556924 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194529819 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.059346649 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.1905979 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.19064574 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.250489589 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.642833524 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.191984234 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.190002233 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.191908479 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.189227529 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.189718474 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.21936327 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.249659548 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.284215759 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.188751253 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.191005932 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.217097046 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.18815073 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.223826143 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.188636779 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.189106617 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.242993491 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.304535728 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.697493704 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.188824244 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.186853552 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.276499274 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303817915 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.185603146 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.185797485 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.186394617 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.185640362 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.290882646 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.186837099 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.187102444 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.568455141 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.192777644 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.187952578 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.244727003 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.27786486 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.186779635 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.470519676 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.190196041 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.186679885 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.85646394 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.277963369 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.187972505 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.186064804 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.187332305 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.569819322 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.699080728 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.323890856 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.190828702 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.250415872 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.190858897 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.581321445 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.681170055 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.724538091 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.188324618 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292453031 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191291028 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.188932865 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.188155037 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21674452 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.1884984 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.245905912 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.192904176 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.582141361 seconds)
  done (took 341.624637879 seconds)
done (took 685.000558355 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.873621639 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.857155213 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.967813513 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.860319013 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.836225915 seconds)
  done (took 10.528881506 seconds)
done (took 11.66262839 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.360955385 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.362038979 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.244293883 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.364136783 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.215584258 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.378093269 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.340945753 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.208104005 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.283416729 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.258208857 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.284028633 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233729554 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214140187 seconds)
  done (took 17.881776489 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.481957326 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.477108379 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.253838264 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.486751921 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.229287241 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.480704928 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.37652266 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.383445992 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.374732858 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.204206533 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.203558019 seconds)
  done (took 16.087360786 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.501621708 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.47566805 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257697143 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.48350249 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231183626 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.497375281 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.381422008 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.384376637 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.375203585 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.205544491 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.202950753 seconds)
  done (took 16.13274364 seconds)
done (took 51.236264857 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.197721657 seconds)
  done (took 2.332302473 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.230578272 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.389111405 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.213061994 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.201057589 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.198470366 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.199741118 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.202077953 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.198622295 seconds)
  done (took 10.96904445 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.194717301 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.197062187 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.194884013 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.197780216 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.196787123 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.193510425 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.197769896 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.195266709 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.194546327 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.197037406 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.196951814 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.197468306 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.194910371 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.196567427 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.195038601 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.195649732 seconds)
  done (took 20.270785594 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.196614583 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.194516312 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.194828045 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.194882386 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.19478306 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.195864444 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.195756592 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.196263081 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.193938531 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.195360016 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.1963546 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.194864171 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.196030689 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.194746398 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.195292176 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.195934729 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.194470894 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.194792524 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.199772561 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.19569256 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.195574094 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.19565236 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.195648026 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.196554162 seconds)
  done (took 29.830823147 seconds)
done (took 64.537950492 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.118226045 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.71608954 seconds)
  done (took 8.969170244 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.198302944 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.19766846 seconds)
  done (took 3.532496208 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.198295573 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.198110821 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.19765962 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.198085465 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.198214388 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.197846667 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.1982942 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.197911858 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.197454852 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.19830309 seconds)
  done (took 13.115677134 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.198094911 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.198470175 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.196006892 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.19713161 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.198779878 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.196912017 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.198570261 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.198392379 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.198727104 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.19654487 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.19886888 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.196731119 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.197673288 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.196074632 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.198226661 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.195880763 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.196506192 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.196073764 seconds)
  done (took 22.689440487 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.198534383 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.197945165 seconds)
  done (took 3.53270142 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.197181677 seconds)
    (2/7) benchmarking "second"...
    done (took 1.19668887 seconds)
    (3/7) benchmarking "month"...
    done (took 1.196581621 seconds)
    (4/7) benchmarking "year"...
    done (took 1.196342072 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.198412395 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.196789163 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.197917464 seconds)
  done (took 9.515928772 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.200511946 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.372530238 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.444273992 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.772311739 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.201827782 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.202625009 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.051881045 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.203326011 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.205216 seconds)
  done (took 13.791596598 seconds)
done (took 76.281730511 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.15957709 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.193136947 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.988332611 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.193363412 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.208591148 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.533345617 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.207664691 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.306872081 seconds)
done (took 36.927427494 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.208818262 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.870521924 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.90983496 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.19699161 seconds)
  done (took 11.112129033 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.17449258 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.030196442 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.190100895 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.122750178 seconds)
  done (took 17.652302259 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.753849029 seconds)
    (2/2) benchmarking "read"...
    done (took 1.522229105 seconds)
  done (took 4.409683478 seconds)
done (took 40.518734311 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.197562408 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.194502915 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.197668917 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.196319096 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.194401539 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.197742963 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.194559393 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.194681092 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.197854154 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.197474289 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.198134327 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.195766253 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.198000119 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198521664 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.198801187 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195353792 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195690528 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198541963 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.195663682 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196031497 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.196229887 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.198506028 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.194936662 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.196241698 seconds)
  done (took 29.85393652 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.198439381 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.196783995 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.197614486 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.198370406 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.194751563 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.199312621 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.198187389 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.195153798 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.199008031 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.19749151 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.195826715 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.19687133 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.198277792 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.196111059 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198545334 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.195735064 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.1985794 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194954418 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19805521 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.196100235 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.199129531 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196198329 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.196675921 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198613339 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.196264494 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.196783375 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.197966323 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.196341211 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198531793 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.19594807 seconds)
  done (took 37.052177261 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.202469151 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.205464122 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.198937603 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.199521271 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.198310143 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.199147925 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.198247883 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.198546139 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.198966158 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.199288133 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.199139268 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.199520259 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.199867696 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.199733233 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.199418169 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.199716795 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.199613169 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.200195782 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.19906147 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.199896466 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.200589173 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.199822756 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.200254946 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.199441527 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.199330162 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.199675028 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.199771191 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.199894497 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.200917168 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.199945554 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.201187458 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.200835663 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.198744891 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.199665791 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.199985002 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.200501257 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.204207004 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.206178021 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.200070752 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.201915624 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.200003355 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.199732858 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.199198274 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.19918816 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.199918348 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.199406076 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.19993582 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.200551947 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.198954835 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.199819985 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.200288598 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.200509828 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.200225359 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.200137388 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.20020293 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.20047941 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.199394412 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.199831774 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.199231756 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.199957518 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.200428164 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.199048705 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.200200238 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.200290923 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.201954057 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.200367032 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.199168973 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.200271276 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.199984097 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.200279556 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.200129673 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.201639451 seconds)
  done (took 87.547758125 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.20001535 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.198082426 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.198012497 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.198158661 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198524874 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.201138007 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.198098711 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2012597 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197599764 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.199912341 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200266524 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.198141045 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19754832 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.200580084 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200656645 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.198226597 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.200928489 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197192249 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.199687273 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.200582602 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200779903 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.198340194 seconds)
  done (took 27.521723385 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.200658065 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.201803174 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.197113996 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.200782926 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.196881634 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.201426484 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.200763435 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.200396594 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2013005 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200978076 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198255345 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200999935 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.197753302 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198137003 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.197982547 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.197977716 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.200982842 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.197384888 seconds)
  done (took 22.729338733 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.197894074 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.197741088 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.200450621 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.197811399 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.19846265 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.200492724 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.198132703 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.200963492 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.200348584 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.198252971 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.201078882 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200569644 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.201436437 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199038031 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200423701 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.198793342 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.201202287 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199203484 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200987147 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.199086439 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.199339903 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.202093695 seconds)
  done (took 27.532979435 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201526187 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.201407304 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.199280197 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.200088468 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.199076844 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.201392566 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.20219059 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.199472268 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.202072099 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.202530885 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199259057 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.202183024 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.200148663 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.200259586 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.198885649 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.199752789 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.202492314 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.20033257 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202332341 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.199805619 seconds)
  done (took 25.153755408 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.202060015 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203778481 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.203145697 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.203134691 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203308702 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.203488559 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.20330371 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.202697085 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.203112603 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.202344631 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.203107172 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.202949459 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203761142 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.204100871 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.20371779 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204019611 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.203341252 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204082776 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.2040418 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204333395 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.204179988 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.203756708 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.204272646 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.204093159 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.203472991 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204226625 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.203568201 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.203996449 seconds)
  done (took 34.839152171 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203829318 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.204161573 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.201130349 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.202520518 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.202261752 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.201995241 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.20239784 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.202550914 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.204855706 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.201377408 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.204440035 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.204263125 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.204437845 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.204587813 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.204332125 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.204827083 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204940937 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.201869164 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202074711 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202099356 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.20527818 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204609219 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.204798072 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.202596999 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202626948 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.204707477 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203725394 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.20379635 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206218929 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.202161851 seconds)
  done (took 37.247512005 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.223710741 seconds)
    (2/2) benchmarking "in"...
    done (took 1.223973281 seconds)
  done (took 3.589994247 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.203476651 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205169397 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.206351882 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.203908973 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.204272149 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.205669751 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.205901847 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203105339 seconds)
  done (took 10.780472925 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.204784633 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.206717569 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.205982963 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.206652336 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.206476137 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.206765894 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.214643055 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.221406837 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.20836051 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.206356065 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.211408444 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.212408096 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.210584335 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.206159708 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.206876586 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.209200268 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.206486068 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.206893454 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.20641738 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.206613402 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.207145257 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.210427366 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.21037152 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.203787959 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.208153435 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.219994885 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.214496847 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.207537893 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.207476064 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.213811356 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.207166786 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.205476003 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.207569832 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.207528468 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.20783762 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.207611606 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.218744152 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.221981887 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.216727245 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.209295881 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.208273292 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.205388923 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.20993192 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.210955138 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.20954991 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.207978348 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.208184713 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.206062093 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.207625068 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.210174109 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.211967822 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.207584181 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.205902739 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215505169 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.210762749 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.217461473 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.222986908 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.211408598 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.216383848 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.221228476 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.224418113 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.216504205 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.211675846 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.208779784 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.217261252 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.230258288 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.218490543 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.221946381 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.207309059 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.209847832 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.219861688 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.224441057 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.21936929 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.210084948 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.209176087 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.209599774 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.210283977 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.20983888 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.219907338 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.229430994 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.210197714 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.209568283 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.218893285 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228841529 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.209786427 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.211236312 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.210674473 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.210923055 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.212052829 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.222747849 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.22587739 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.211035214 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.210095003 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.210146876 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.213432519 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.210576195 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.209643262 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.212233078 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.208798798 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.211835329 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.211355497 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.214530193 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.219865251 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.210970491 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.210740324 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.220747733 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.21207128 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.210554842 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.223271192 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.21270117 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.211734646 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.211742302 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.219512786 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.209764181 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.213401345 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.223150162 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.21148796 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.213662455 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.211755496 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.212538158 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.220772389 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.236614719 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.213456861 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.214240618 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.21557605 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.220538544 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.211475139 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.216402316 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.21199269 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.209103573 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.210227605 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.217123174 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.212345728 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.213180083 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.211448766 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.214454776 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.209906743 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.21212315 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.212301543 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.2129104 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.216830225 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.213063814 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.213994598 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.216066 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.212283402 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.214584753 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.221540023 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.213466681 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.215925418 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.213989897 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.210563277 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.214097446 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.215399664 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.213328509 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.213141813 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.212647739 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.213147786 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.212631769 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.214344069 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.213993157 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.21341864 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.213696685 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.215283193 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.213115348 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.223242548 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.214647698 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.211816307 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.213065133 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.213334229 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.213722673 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.213710718 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.211684681 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.215831169 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.22013316 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.215401396 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.212249041 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.218350494 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.213165816 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.214218488 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.213883116 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.214947587 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.220407903 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.213810155 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.223448611 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.213603773 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.212995376 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.215558157 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.214042804 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.212958415 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.214949436 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.216952247 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.22004373 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.227887142 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.222478079 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.215727076 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.217176387 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.214571289 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.217955273 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.220675534 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.214847204 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.215891473 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.21398514 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214430768 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.214051632 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.216790366 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.214750074 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.2144152 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.215771481 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.21541175 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.215480412 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.216403604 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.216283693 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.216548678 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.213675417 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.216541373 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.215816222 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.214808707 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.214258164 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.214716977 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.215893876 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.215498578 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.218220202 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.226870801 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.215709103 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.217072229 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.219062879 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.216098107 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.215988361 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.217950082 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.220579738 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.217155319 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.22547448 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.23380932 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.218042275 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.226752549 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.23569427 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.216925953 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.222520261 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.218485932 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.214179434 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.219297898 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.22293848 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.219171653 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.216671746 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.216755927 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.217079904 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.21629906 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.22622939 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.215212168 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.215591509 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.217334914 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.220155152 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.215134501 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.219044792 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.21898153 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.218356393 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.220805109 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.218130362 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.218127372 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.219304759 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.217533611 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.217382321 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.217269483 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.220738329 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.223276061 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.225543349 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.21933933 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.221149193 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.219849349 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.222102105 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.218534987 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.217942622 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.218288908 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232903639 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.224299011 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.227198038 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.221987722 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.219358857 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.226096361 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.219666683 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.223131272 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.21826952 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.21942545 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.219287763 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.21761093 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.216601993 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.220698086 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.220180019 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.221037233 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.220842433 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.223261396 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.219419763 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.217507915 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.219280138 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.219899387 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.22045616 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.21883414 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.218944675 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.223620758 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.222303926 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.219883152 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.219690238 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228622051 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234983415 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.222151317 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.219838602 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.220519251 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.219608944 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.221528794 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.219994981 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.223330111 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.226152042 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.222158847 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.228907915 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.221188322 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231657679 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.221301806 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.223079836 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.226602116 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.21912875 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.21968494 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.22169172 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.220645338 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2305532 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.235969744 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.221033273 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.224099954 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.220881409 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.222234172 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.221704822 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.22183019 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.223015085 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.221186846 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233482663 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.236280939 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.224857798 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.224312642 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.218851083 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.221960556 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.222396456 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.221543853 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.228234427 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.221363971 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.22311828 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.22097317 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.224186217 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.223151448 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.221714273 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.223262184 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.220418615 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.222829705 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231011244 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.237391367 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.225227169 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.222805585 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.235436963 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.222761747 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231465849 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.237821092 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.224532547 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.222607317 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.223333131 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.226788522 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.223400526 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.225357738 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.222649349 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.223602432 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.225640468 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.223636081 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.227927642 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.223702574 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.223238459 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.222941884 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.232795676 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.243741016 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.224470993 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.22663452 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.221746102 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.224844077 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.227165037 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.223421266 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.222473216 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.226174392 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.231705644 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229694614 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.224893658 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.22347894 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.224907547 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.224492541 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.22541383 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.225485885 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.224463079 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.225303981 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.227247526 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.224116736 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.231441822 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.225964398 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.226601853 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.226508515 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.225993951 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.23645154 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.225501502 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.228230895 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.226080987 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.225147501 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.226158103 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.226245359 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.224348399 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.226507952 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.226183182 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.226964089 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.230435897 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.229790863 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.229353301 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.224278813 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.22542263 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.226951812 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.226273628 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.226997683 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.225550536 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.226674168 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.226680934 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.225403069 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.227492013 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.224370477 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.225774272 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.22684782 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.226141928 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.228190483 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.230763689 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.227077011 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.223386535 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.227201726 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.22614148 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.225384845 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.227962401 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.239574472 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.229401312 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.235043131 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.233458984 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.228684115 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.227051753 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.229550762 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.23362042 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.225213407 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.227774557 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.226280489 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.23106109 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.227816766 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.229567434 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.226976834 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.237424349 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.229291154 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.227356092 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.237858774 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.243801162 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.226515579 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.228315897 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.229982872 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.227223285 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.225267213 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.228261951 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.226169344 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.238119033 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.244858714 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228388792 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.230128057 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.230155077 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.234916221 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236585494 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235153544 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.236426397 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.229735856 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.234789134 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234005604 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.235616278 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.232463052 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.23324877 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.234443422 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.238173351 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.242659886 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.232282897 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.235117624 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.233326507 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.232566455 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232419788 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.231039156 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.22867965 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.227761948 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.229344225 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.231076876 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.234016622 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.237335067 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.230430379 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.234150583 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.232990835 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231786179 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232375404 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.237086761 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.237178094 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.229502818 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.232148909 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.232224044 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.237084388 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.232941102 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.231738254 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.231249607 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.234497719 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.233875304 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233334459 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.233879372 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.236522293 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248917535 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.24936719 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.232835637 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.231643261 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.238189696 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.234829984 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.229663559 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.231887174 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.238358985 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.23856914 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.239785688 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.236371323 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.24362417 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252735894 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.234940057 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.236279938 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.236826754 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.240678103 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.242004759 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.23336473 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.23225756 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.236594652 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.249301103 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.235619885 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241444223 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25986245 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.251776202 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.237674233 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.234297886 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232119147 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.233686175 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.239410163 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.233852703 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.235413041 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233560357 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.234544355 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.23711686 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240687082 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.234561223 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.234097306 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.235483345 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.234621516 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.238755237 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.236920753 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.236977602 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.235077434 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.236215496 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.234376948 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.235499832 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.236638753 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252273277 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.247290498 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.234966234 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.236765028 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.234658782 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.238856541 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.237779545 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.244801254 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.240497658 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.233592628 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.237590732 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.241896699 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234373923 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.232896296 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.237041275 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.238802626 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.235100707 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.235526824 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.25335685 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244327289 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.24335078 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.23882142 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23654231 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.234746292 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.236064312 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236049829 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239563146 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.243939966 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.240139264 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24389611 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.236374297 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.236522507 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.239169937 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.244725183 seconds)
  done (took 730.190353599 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.2404217 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237233532 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.234636926 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.234819291 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238997592 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238655066 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234079844 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.236768641 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.235104462 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.238996053 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.238425601 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237957888 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.233636781 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.234367552 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234230751 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.233430881 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234857406 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.235297588 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.233392447 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235274885 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.233294441 seconds)
  done (took 27.12918921 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.241035727 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.234145123 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.235161632 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.23936195 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235271053 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.237866991 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.23439983 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238831945 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.236457327 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234906531 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.237840358 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236106506 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.235143649 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.234026544 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234541335 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236884705 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.238142287 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234690466 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.237176402 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.235118527 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237795159 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.234860221 seconds)
  done (took 28.377806114 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.236897924 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.238148708 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.235764786 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.235440879 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.237859678 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.236511232 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.23753953 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.238131007 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.237912553 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.239663479 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.235630704 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.238554303 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.243586874 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.241955836 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.241775316 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.238273427 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.382923505 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.238498034 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.237184324 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.238337025 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.234470077 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.245617239 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.236384538 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.235943723 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.236425393 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.238083499 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.237527396 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.238813117 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.237703614 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.238486901 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.241109616 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.238600315 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.237945769 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.240169161 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.238164226 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.239474338 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.242323571 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.239324654 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.236933803 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.239566667 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.248487005 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.255752968 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.239535661 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.247161146 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.239170047 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.239897028 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.242101544 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.244935639 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.237925335 seconds)
  done (took 62.052954078 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.239370038 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.239931125 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.237769729 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.239459034 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.24082283 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.240227683 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.24032426 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.240068899 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.238747922 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.237316195 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.239940149 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.23860376 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.239668986 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.241364172 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.241484773 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.239785356 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.239307524 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.238598908 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.238590652 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.238936747 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.238880073 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.241857744 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.242817913 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.239001313 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.241367589 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.239232495 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.239245522 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.243713105 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.239956895 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.239741654 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.242206468 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.242286988 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.241530951 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.239958881 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.240323733 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.243289364 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.242350707 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.239451969 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.242820792 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.239479562 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.241890379 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.24255926 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.243604493 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.243475174 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.240401356 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.240005782 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.240077009 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.241572721 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.242297457 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.24419645 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.242210694 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.241108789 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.244968613 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.240358662 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.243341138 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.242915131 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.240576713 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.23987546 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.243678527 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.24193227 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.241008502 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.243483609 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.242562635 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.244886409 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.24375435 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.243406058 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.242723048 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.242989189 seconds)
  done (took 85.57443778 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.244151874 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.243648945 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244478435 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244325419 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243626491 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.245856065 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.243278248 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.243972663 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.242811335 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.244036639 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244609137 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.243363002 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.243767057 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.246041479 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.244311848 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24513074 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.243239212 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243034448 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.244038157 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243768275 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.243549568 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.24384551 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.244604323 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.244857549 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.244826722 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.245654473 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.245319062 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.247469776 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24798068 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.245385669 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.246687505 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.246042993 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.245752085 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.245445395 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.245963213 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.245588981 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.245485631 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246615353 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.246197941 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.248046378 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.247533899 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25089503 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.254658731 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.254264893 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.245724588 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.249138728 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.249510677 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.246325372 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.248779655 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.248483835 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.247692831 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.247074705 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250449346 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.247363086 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.24712225 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.246778291 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246853287 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247196745 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250556212 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.248236354 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.24828968 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.253695612 seconds)
  done (took 78.456299824 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252973367 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.256698179 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.247141707 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.24616638 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.248522889 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245357825 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.248501474 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.248647104 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.249950199 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.248740447 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247025012 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245749947 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244229078 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248356008 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.245030557 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244678163 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243469009 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.244556064 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249116039 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.245698476 seconds)
  done (took 26.135170387 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.244844891 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.247707328 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.245651076 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.245817302 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.248746749 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.246300419 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.249062121 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248309699 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246943204 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247573909 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.247938241 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.249698289 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246087499 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.246347661 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.249090864 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.247778979 seconds)
  done (took 21.14567758 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.25039362 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.248109215 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.251195983 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.24942342 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.245422514 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.246025659 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.249691169 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.245581625 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.245823997 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.249946246 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.249685424 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.249184831 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.249540108 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.248700148 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.24982057 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.250975829 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.246308721 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.248259418 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.251188077 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.250163135 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.247508113 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.247706044 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.249298144 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.251865364 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.246828501 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.248438303 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.247850364 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.247625408 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.249020607 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.249520183 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.248070951 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.247998923 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.246933743 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.246681509 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.249945816 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.247433064 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.250446362 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.25033284 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.250759587 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.251482852 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.251477266 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.248077641 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.2533008 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.25106464 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.247934077 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.251664673 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.248550801 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.2489933 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.24900276 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.251261221 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.254515065 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.253096061 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.252397982 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.251573667 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.251181913 seconds)
  done (took 69.904952293 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252088188 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.252223622 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.248811361 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.254749858 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.255661122 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.2501816 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.250782866 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.249273418 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249609371 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.25200481 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.251863313 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.253603867 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250296038 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.251997656 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.249755545 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253701029 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.24838248 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.248441616 seconds)
  done (took 23.716914035 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.249860508 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.249494655 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.252200638 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.249899364 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.249325078 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.252288271 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248099224 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.253413499 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251594066 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.250244412 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249559227 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.251921606 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251773041 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.252866928 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251438221 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251113242 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.252232188 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251281392 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.249758538 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249593287 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254432959 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252833478 seconds)
  done (took 28.713189516 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.251302616 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.252001541 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.269144486 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.292908593 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.279030758 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.250890375 seconds)
  done (took 8.784208892 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250905598 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253057426 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.251428714 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254904406 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256056814 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252799518 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25462656 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251163482 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25726974 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254539353 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253525646 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254394692 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256065136 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253969776 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258564312 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257625935 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254400005 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253077659 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254581579 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25667895 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256307334 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258648978 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251604768 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25261859 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254828415 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255000136 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257275566 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252815921 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254952857 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262217601 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25643319 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253525434 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256795832 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258942984 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258563874 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257411125 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256837227 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25831417 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258809332 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257050682 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.25855814 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257701732 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257883895 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254835828 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256342359 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254003775 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254942272 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255791295 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258122499 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261042583 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258221247 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255024038 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257920203 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257898491 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258901561 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259914312 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257902168 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254813764 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259938849 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260138636 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257443091 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258731932 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256565167 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258163469 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252180715 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248705767 seconds)
  done (took 84.093887453 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249500278 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.250743929 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249841514 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251574243 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252152062 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.245822673 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244894946 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246401819 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.245691436 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245189295 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249883491 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.245429077 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.248209125 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238428831 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238443198 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238850268 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239238824 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23797833 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237533576 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241580209 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2417145 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234361115 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229203879 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229264779 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230994277 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233228732 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228903216 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23010173 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233722466 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227332665 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22818387 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229281325 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228295669 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.227941484 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227406041 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227792636 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227696476 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228026061 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228636898 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231646662 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227618234 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230603157 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226008451 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225820604 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228460212 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228017437 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227146278 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227474153 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227825199 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228154458 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229185238 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226825565 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227264205 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22812387 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229369827 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226841225 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228754917 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226678679 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226952635 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230406348 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228054823 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229173014 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22945939 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228553822 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229251284 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229035152 seconds)
  done (took 82.621546129 seconds)
done (took 1701.879668877 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.227362752 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.261834795 seconds)
  done (took 13.657238525 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.390169323 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.342303637 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.229396919 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.236436412 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.227255403 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.249462796 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.240284569 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.224871706 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.224358223 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.225475423 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.226171638 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.410795156 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.277628135 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.224093601 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.224130889 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.315818936 seconds)
  done (took 41.437644971 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.245657905 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.235580674 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.32883169 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.250498186 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.254911691 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.393292878 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.28486593 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.234360489 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.379173374 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.270797735 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.57043641 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.255626128 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.234585208 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.184054663 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.249373144 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.392730184 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.451451956 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.573275376 seconds)
  done (took 27.953534437 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.606779422 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.252663907 seconds)
  done (took 9.028130992 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.22265853 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.246355356 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.226876082 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.223379345 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.246387875 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.260727576 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.268473666 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.268513846 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.271921223 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.237286501 seconds)
  done (took 63.642846217 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.233501333 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.217834913 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.217129373 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.214896152 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.207375612 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.207585635 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.21447392 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.210793574 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.277338658 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.325235952 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.228018949 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.22272188 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.21668262 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.216361646 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.212822948 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.249311356 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.341606136 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.213468872 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.213153925 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.221710373 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.215966703 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.336394212 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.252145361 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.214420402 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.323881499 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.292476651 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.222122992 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.222455856 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.335203042 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.215692106 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.21541115 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.21721465 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.219038513 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.760287433 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.69556475 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.227725699 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.237912877 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.225924951 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.21610439 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.390185147 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.21787822 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.223510307 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.20984072 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.662339254 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.365605815 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.314271997 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.31525009 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.217903927 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.217995504 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.276165238 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.217752726 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.21882595 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.243466402 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.926761878 seconds)
  done (took 103.480693874 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.248792349 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.706104591 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.377276147 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.23179711 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.965287307 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.81896724 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.212450373 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.455150276 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.270349453 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.210412151 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.535386644 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.665503205 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.211778075 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.216580973 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.239656309 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.215734974 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.212236048 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.94977484 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.21178018 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.217941073 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609597861 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.229046787 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.212659557 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.255544253 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.248162975 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.630896162 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.478629868 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.61236127 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.21514049 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.211657716 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.632297401 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.221564073 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.290499248 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.214737078 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.465778002 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.526564401 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.507777982 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.215099554 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.217514675 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.213073853 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.233878335 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.629497903 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.512587387 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.21343871 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.213319752 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.634188654 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.213547756 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.217862525 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.216823839 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.408381439 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.201968691 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.213415979 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.490688307 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.216405628 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.557379014 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.261466393 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.279278504 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.661167475 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.218565245 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.261062966 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.215933871 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.212683859 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.213489854 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.218000815 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.213421072 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.519912823 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.586757931 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.213939043 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.520049861 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.627146838 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.214358662 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.694988289 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.145001904 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.235673969 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.260384349 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.214250135 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.770150201 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.662900113 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.237082222 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.214922953 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.505804563 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.217563033 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.515804249 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.228447232 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.214517861 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.624279761 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.2335311 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.258391873 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.214691939 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.215396182 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.85743965 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.216216146 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.461902668 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.247297628 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.215389291 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.214684703 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.247293476 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.224230397 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.215760957 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.219214634 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.694802857 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.218756414 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.487247541 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.23335979 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.215027411 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.218943846 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.216826653 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.218297865 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.427272876 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.671740106 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.220868051 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.216290431 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.215968179 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.221870445 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.517128503 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.218760968 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.480477305 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.216760239 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.216302916 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.221670842 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.871731615 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.221227866 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.215609109 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.235645778 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.050404308 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.424523975 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.231140302 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.21722321 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.217408343 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.230076578 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.395655298 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.216230453 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.257534241 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.220498976 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.87918152 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.227411189 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.249753145 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.863681882 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.218760457 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.006819943 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.234041955 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.217958215 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.509021025 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.474889041 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.522963213 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.218182584 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.217017682 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.856372178 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.257883514 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.349113396 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.236233012 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.221462546 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.415101789 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.491488029 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.217656739 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.788963395 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.219130089 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.425487918 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.228503978 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.522021909 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.661509236 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.21963465 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.220562041 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.875437063 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.880603449 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.833481775 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.221474876 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.530885074 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.214699855 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.672453028 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.218780791 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.218230086 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.648989284 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.221666461 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.221231055 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.218385645 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.220072372 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.287309605 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.3918258 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.629540277 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.224168916 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.637034894 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.234134362 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.219430533 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.239483924 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.22399841 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.574215575 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.279608916 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.224277184 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.256695283 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.219684357 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.222509688 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.649129401 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.128254225 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.222614131 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.370434307 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.802532536 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.222194008 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.219884091 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.866423963 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.522512731 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.686339784 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.230551244 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.487071597 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.226854212 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.257177563 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.909514502 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.232608033 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.649755762 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.223980809 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.221859927 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.775569065 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.221160442 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.281315192 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.221163682 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.220620373 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.704406509 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.223006288 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.220866155 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.40517493 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.232362151 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462577297 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.222306317 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.251020285 seconds)
  done (took 1082.095028712 seconds)
done (took 1342.462862516 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.220248428 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.22490305 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.211105143 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.225321024 seconds)
  done (took 26.047122154 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.230916226 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.228121456 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.229136666 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.226993181 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.229764883 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.227422327 seconds)
  done (took 8.539070315 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.264471869 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.224414096 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.224615209 seconds)
  done (took 18.879463248 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.420100119 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.369623118 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.551146876 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.155399036 seconds)
  done (took 9.663736929 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.230083854 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.230064801 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.228829628 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.231363126 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.232219925 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.233461406 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.231409389 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.2316606 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.233691207 seconds)
  done (took 12.249863609 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.721240531 seconds)
done (took 81.265655144 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.21940679 seconds)
    (2/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.677933522 seconds)
    (3/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.210201763 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.287581282 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.237655184 seconds)
    (6/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.384021692 seconds)
    (7/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.730587207 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.21185323 seconds)
    (9/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.229564598 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.47809769 seconds)
    (11/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.321267486 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.236380096 seconds)
    (13/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.330073139 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.265150981 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.334765021 seconds)
    (16/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.223375923 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.251786876 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.456227687 seconds)
    (19/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.732321018 seconds)
    (20/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.852471821 seconds)
    (21/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.541734163 seconds)
    (22/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.243539949 seconds)
    (23/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.372785981 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.298123628 seconds)
    (25/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.497752573 seconds)
    (26/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.253737521 seconds)
    (27/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.225425042 seconds)
    (28/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.262513566 seconds)
    (29/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.225574256 seconds)
    (30/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.225759436 seconds)
    (31/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.221779175 seconds)
    (32/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.720989124 seconds)
    (33/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.583895846 seconds)
    (34/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.188513387 seconds)
    (35/309) benchmarking ("sort", BigInt, false)...
    done (took 6.236395992 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.341992166 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.328005736 seconds)
    (38/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.253256706 seconds)
    (39/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.785840917 seconds)
    (40/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.23856663 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.038839456 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.241233001 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.224596843 seconds)
    (44/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.454938595 seconds)
    (45/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.226390107 seconds)
    (46/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.253442304 seconds)
    (47/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.235368204 seconds)
    (48/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.378575865 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.581128732 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.061510627 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.272907274 seconds)
    (52/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.211958982 seconds)
    (53/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.241876801 seconds)
    (54/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.311850812 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.337871536 seconds)
    (56/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.310653687 seconds)
    (57/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.323946426 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.482473978 seconds)
    (59/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.346754085 seconds)
    (60/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.372871879 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.225637099 seconds)
    (62/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.352603728 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.230011266 seconds)
    (64/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.294127805 seconds)
    (65/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.25177155 seconds)
    (66/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.242516386 seconds)
    (67/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.813654564 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.287891467 seconds)
    (69/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.213266345 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.343122038 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.200445519 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.015830259 seconds)
    (73/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.353143709 seconds)
    (74/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.190264861 seconds)
    (75/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.253909877 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.523697478 seconds)
    (77/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.64050542 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.9171629 seconds)
    (79/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.348439134 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.72411914 seconds)
    (81/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.424958257 seconds)
    (82/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.293617852 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.62280395 seconds)
    (84/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.663442665 seconds)
    (85/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.240750269 seconds)
    (86/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.437092488 seconds)
    (87/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.335990121 seconds)
    (88/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.376674537 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.230899066 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.355885657 seconds)
    (91/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.943661592 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.46202004 seconds)
    (93/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.31255263 seconds)
    (94/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.576535265 seconds)
    (95/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.232150277 seconds)
    (96/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.228150097 seconds)
    (97/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.378191845 seconds)
    (98/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.997266155 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.625765462 seconds)
    (100/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.506745483 seconds)
    (101/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.333852395 seconds)
    (102/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.447953849 seconds)
    (103/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.01839975 seconds)
    (104/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.919076889 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.314197939 seconds)
    (106/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.288494369 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.015847856 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.068561177 seconds)
    (109/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.290858224 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.046158247 seconds)
    (111/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.329109675 seconds)
    (112/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.254222688 seconds)
    (113/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.435554375 seconds)
    (114/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.243888899 seconds)
    (115/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.421248488 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.247833007 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.451284515 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.446960993 seconds)
    (119/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.23395834 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.552243256 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.297653318 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.228321278 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.819332489 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.229891363 seconds)
    (125/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.898156901 seconds)
    (126/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.544528188 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.256176274 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.25151327 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.734263257 seconds)
    (130/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.582953288 seconds)
    (131/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.216113903 seconds)
    (132/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.908391988 seconds)
    (133/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.218306511 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 1.74633049 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.253748529 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.502533453 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.275213206 seconds)
    (138/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.515041627 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.916733702 seconds)
    (140/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.572548458 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.487838134 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.216021284 seconds)
    (143/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.688421891 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.33301195 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.571657458 seconds)
    (146/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.461179902 seconds)
    (147/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.730495292 seconds)
    (148/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.241028335 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.237363212 seconds)
    (150/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.339902489 seconds)
    (151/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.763945187 seconds)
    (152/309) benchmarking ("sort", Int8, false)...
    done (took 4.242418631 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.923204547 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.258319954 seconds)
    (155/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.398935307 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.829972135 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.005681408 seconds)
    (158/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.518137721 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.73615326 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.350242226 seconds)
    (161/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.243945813 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.296342155 seconds)
    (163/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.217625414 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.636540851 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.254335195 seconds)
    (166/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.295644256 seconds)
    (167/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.247387168 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.352171865 seconds)
    (169/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.218072559 seconds)
    (170/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.317875839 seconds)
    (171/309) benchmarking ("sort", Float32, false)...
    done (took 5.210562457 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.629264743 seconds)
    (173/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.524368082 seconds)
    (174/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.271338483 seconds)
    (175/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.409808939 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.941368818 seconds)
    (177/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.260741475 seconds)
    (178/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.978519915 seconds)
    (179/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.516072986 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.993026085 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.944356511 seconds)
    (182/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.228806574 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.445800304 seconds)
    (184/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.262110495 seconds)
    (185/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.29661479 seconds)
    (186/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.529771941 seconds)
    (187/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.631236099 seconds)
    (188/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.036137562 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.262450475 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.618567132 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.006945371 seconds)
    (192/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.233483808 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.300908661 seconds)
    (194/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.735890025 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.487514323 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.230901131 seconds)
    (197/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.237678029 seconds)
    (198/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.494188557 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.22926149 seconds)
    (200/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.402483358 seconds)
    (201/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.239279845 seconds)
    (202/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.372303585 seconds)
    (203/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.242123143 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.295701571 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.882962855 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.223084663 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.672949504 seconds)
    (208/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.260533536 seconds)
    (209/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.227003374 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.949131273 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.236264871 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.089872982 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.236981797 seconds)
    (214/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.808847185 seconds)
    (215/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.756211471 seconds)
    (216/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.061766908 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.773227952 seconds)
    (218/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.243721735 seconds)
    (219/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.921941548 seconds)
    (220/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.565659401 seconds)
    (221/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.567136276 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.457106594 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.450777381 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.779607399 seconds)
    (225/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.775701166 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.28572274 seconds)
    (227/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.679723317 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.692679498 seconds)
    (229/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.237695491 seconds)
    (230/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.31956494 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.257805943 seconds)
    (232/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.31912019 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.341480529 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.234623359 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.749906634 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.278916787 seconds)
    (237/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.265711502 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.089816906 seconds)
    (239/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.482999653 seconds)
    (240/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.261860653 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.310249818 seconds)
    (242/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.625140708 seconds)
    (243/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.222669058 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.262429437 seconds)
    (245/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.485169254 seconds)
    (246/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.262512829 seconds)
    (247/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.402348997 seconds)
    (248/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.428800814 seconds)
    (249/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.445685147 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.381356518 seconds)
    (251/309) benchmarking ("sort", Float64, false)...
    done (took 5.482527569 seconds)
    (252/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.252629516 seconds)
    (253/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.415145452 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.241107235 seconds)
    (255/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.781013399 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.755565781 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.249186643 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.350346794 seconds)
    (259/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.297097498 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.3327378 seconds)
    (261/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.90714248 seconds)
    (262/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.250416963 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.429120167 seconds)
    (264/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.759955742 seconds)
    (265/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.747915226 seconds)
    (266/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.956366013 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.310243504 seconds)
    (268/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.91461997 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.265741723 seconds)
    (270/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.78276137 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.252869977 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.630336889 seconds)
    (273/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.247238394 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.824915154 seconds)
    (275/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.34566448 seconds)
    (276/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.922944195 seconds)
    (277/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.380805992 seconds)
    (278/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.230057504 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.607353314 seconds)
    (280/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.455301125 seconds)
    (281/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.251514624 seconds)
    (282/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.563828993 seconds)
    (283/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.016521609 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.332946503 seconds)
    (285/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.568092691 seconds)
    (286/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.267469592 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.320833151 seconds)
    (288/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.433072817 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.357554929 seconds)
    (290/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.782324845 seconds)
    (291/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.35538802 seconds)
    (292/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.668615673 seconds)
    (293/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.34339417 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.388530744 seconds)
    (295/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.737720508 seconds)
    (296/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.611587793 seconds)
    (297/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.22633598 seconds)
    (298/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.379803902 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.281137451 seconds)
    (300/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.042961054 seconds)
    (301/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.543800903 seconds)
    (302/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.652909153 seconds)
    (303/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.418541321 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.563232134 seconds)
    (305/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.374643808 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.264528425 seconds)
    (307/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.268155006 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.360201143 seconds)
    (309/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.249650439 seconds)
  done (took 877.996430974 seconds)
done (took 879.166531535 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.271896073 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.265577311 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.248701812 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.270292248 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.360717237 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.278120792 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.259322514 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.251010439 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.297371718 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.299159587 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.247570589 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.277058546 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.251200748 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.249419601 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.248941485 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.263806632 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.145863584 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.250291012 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.266843436 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.260034248 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.266703617 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.248300066 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.298737773 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.277400274 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.253705606 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.252450015 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.253451126 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.269387697 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.361474343 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.253847854 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.253329739 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.261845324 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.147036358 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.249619118 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.245556982 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.270371836 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.262880236 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.260273204 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.254785332 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.283347172 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.497501589 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.252007225 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.252814649 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.251972781 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.252463639 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.256325759 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.25278562 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.257108054 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.264234107 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.265137954 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.491676341 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.26635045 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.254216223 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.252743407 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.262472602 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.25204373 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.255245123 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.266922038 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.271804353 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.267122357 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.138676287 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.256531036 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.254895717 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.26877808 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.259693171 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.53182146 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.247457248 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.257488382 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.505106059 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.257660269 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.534971147 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.260212167 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.25370293 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.267508286 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.283938315 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.151655697 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.24842195 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.25215598 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.260658244 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.252094817 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.262367281 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.266620432 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.257534075 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.253789502 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.267555884 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.28289163 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.263330673 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.253491119 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.262644272 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.272240869 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.261012562 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.264584238 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.257393907 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.249696141 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.263269011 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.256443878 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.256881387 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.256983887 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.259060643 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.265274838 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.514626088 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.273446438 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.251204646 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.251361216 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.254179033 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.268246521 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.510343669 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.255184504 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.276427177 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.302496277 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.256521437 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.143576502 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.2582753 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.271178356 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.264885849 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.258051687 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.251361178 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.145568636 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.50558613 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.26988049 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.257578308 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.254970958 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.27163347 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.258015395 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.252751974 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.158397453 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.257120763 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.269175989 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.377791457 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.266837068 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.287347765 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.254579418 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.258694986 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.284045885 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.271372799 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.287312039 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.258766024 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.271900441 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.272631342 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.253085628 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.267296539 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.267307626 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.257660878 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.263190587 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.250637687 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.288193831 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.269327991 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.269341567 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.278401019 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.377735549 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.253683892 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.14809854 seconds)
done (took 210.59721101 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.31821578 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.251725682 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.360318723 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.254334742 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.352421151 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.349998796 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.25213189 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.252390087 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.252271087 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.636671104 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.25266912 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.251727693 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.245772787 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.252822587 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.335415657 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.254470873 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.251449559 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.60178141 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.254752621 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.325134347 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.249126387 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.253097122 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.254998906 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.635564175 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.254072694 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.247658803 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.32532799 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.2553864 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.600466306 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.247902613 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.25209474 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.60078755 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.344290238 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.272512553 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.265649539 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.262630094 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.359003074 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.270319249 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.335146894 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.335311972 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.362471391 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.29400816 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.250352637 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.251530254 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.257577447 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.256695816 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.254406248 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.282900394 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.248209119 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.254428243 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.600702335 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.266268381 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.263670501 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.254704134 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.255082673 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.276133671 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.255713452 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.2568197 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.346337557 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.257023691 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.32105127 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.637505612 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.639307951 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.256923967 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.253618818 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.255382802 seconds)
  done (took 143.228555195 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.323784844 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.329452379 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.361953058 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.260071946 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.3064265 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.365228651 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.261125623 seconds)
  done (took 10.400983047 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.263281052 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.257935755 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.306988708 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.307347417 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.257557622 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.40425423 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.258624533 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.267917933 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.255305488 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.31000941 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.25886605 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.258800215 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.264478344 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.254893291 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.305932436 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.269570992 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.371678479 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.258963892 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.257863648 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.411500978 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.256192982 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.265936681 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.309858516 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.269550329 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.259512804 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.264294448 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.822822408 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.258442179 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.256946272 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.259491873 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.257313891 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.296444716 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.259473176 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.25725214 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.256712893 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.374493006 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.258576584 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.257448706 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.260408775 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.25853452 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.260143 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.259222418 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.259601177 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.258476621 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.259521943 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.28256116 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.259864001 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.260310207 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.260215479 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.260944489 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.309916271 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.260616969 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.258543184 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.258028264 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.315854287 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.267544439 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.26023665 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.257891076 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.261076184 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.258718282 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.414819796 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.307796603 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.261442552 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.309167867 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.261469444 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.261286787 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.261475147 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.260517659 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.31464512 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.261314582 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.308582155 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.258449586 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.415149499 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.284566826 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.262462368 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.263338824 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.26293972 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.260496108 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.260498013 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.267090321 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.258909878 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.261831268 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.266874211 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.259252193 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.259430726 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.363920626 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36991266 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.25902944 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.274684184 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.267896328 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.260062348 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.314618674 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.262057052 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.259461589 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.313654476 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.375738304 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.315524026 seconds)
  done (took 145.988524831 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.267138622 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.268993519 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.263283166 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.278133273 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.26256036 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.261310912 seconds)
  done (took 8.799281053 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.263845474 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.26317836 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.262179095 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.263096204 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.262669042 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.263155997 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.262981369 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.263868715 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.266258554 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.263007089 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.263587411 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.26431261 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.264851047 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.263472889 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.263631761 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.2633234 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.263838757 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.260784192 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.263732758 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.26357767 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.358898476 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.264227604 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.264218187 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.265252288 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.268244957 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.265056626 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.271778819 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.264580269 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.264748798 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.271870163 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.266224952 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.2651415 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.265510945 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.269318764 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.267202951 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.26589901 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.268250901 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.265419811 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.263158328 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.265170212 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.266801948 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.264942379 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.264983471 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.265901347 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.267505692 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.269001641 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.268901311 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.273113566 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.265226778 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.266507431 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.266222817 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.265945177 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.265367686 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.266972628 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.270413634 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.269698344 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.269484179 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.265738782 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.264628626 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.266654251 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.266723312 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.266670741 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.267414897 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.26852121 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.273781101 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.267117842 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.267946179 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.268658008 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.265865424 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.267393185 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.267965639 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.264914456 seconds)
  done (took 93.447491689 seconds)
done (took 403.054737641 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.418828572 seconds)
  done (took 7.621499143 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.478832295 seconds)
  done (took 7.682641329 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.175096899 seconds)
  done (took 19.38573672 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.272257828 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.347024099 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.265712305 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.259600244 seconds)
  done (took 26.349530597 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.422294296 seconds)
  done (took 7.625889109 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.259826077 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.274053376 seconds)
  done (took 13.739820017 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.637210441 seconds)
  done (took 7.840887633 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.308905646 seconds)
  done (took 7.518315698 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.27657877 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.285383245 seconds)
  done (took 14.02076546 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.246211306 seconds)
  done (took 7.449786048 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.862183949 seconds)
  done (took 8.066779968 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.270723284 seconds)
  done (took 7.477283223 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.337792595 seconds)
  done (took 7.541892547 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.398887102 seconds)
  done (took 8.604149058 seconds)
done (took 152.128678675 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.261112146 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.26374979 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.265844077 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.263952685 seconds)
  done (took 26.260030474 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.302281619 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.302390106 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.303731695 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.312968697 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.305030998 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.302402288 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.295324725 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.294712972 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.313853134 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.307654512 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.304983472 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.306414725 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.305138456 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.295447607 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.306592559 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.306142907 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.314911349 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.305149593 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.296801881 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.30667728 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.271321309 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.315453388 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.307150702 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.271862873 seconds)
  done (took 32.461509168 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.46671906 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.34113756 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.423027095 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.322970943 seconds)
  done (took 6.761253131 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.322577052 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.324335121 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.336342539 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.374136496 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.400630799 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.334709408 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.298779547 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.293044031 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.278850897 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.324600264 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.401397796 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.342295563 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.408167498 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.272413732 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.458072186 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.272850192 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.271928371 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.323509916 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.375513503 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.389835395 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.272961812 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.322771965 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.330913038 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.341032648 seconds)
  done (took 33.279876354 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.271611138 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.278987834 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.278079928 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.271721505 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.271644988 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.271754167 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.278368643 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.27341046 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.293394316 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.273622304 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.270639282 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.272427781 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.272176518 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.272424571 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.271038763 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.284583238 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.286115672 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.272138657 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.275044948 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.278461886 seconds)
  done (took 26.726574271 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.265725361 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.119077239 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.617091901 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.52172496 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.267440654 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.268778177 seconds)
  done (took 27.269447993 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.334913637 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.450268414 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.27251017 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.589205044 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.669179463 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.274911662 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.273040401 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.481439389 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.749615624 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.756790148 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.323534893 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.33306156 seconds)
  done (took 18.719368484 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.275285702 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.267950443 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.27901548 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.284654011 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.320678416 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.279094047 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.279544523 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.266784455 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.32391421 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.327021971 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.278527751 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.321712621 seconds)
  done (took 36.714430756 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356411415 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.311710834 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.153151609 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.992361006 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.647158624 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.479573184 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.014266777 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.690509953 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.272970533 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541961584 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.966613473 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373535088 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.522710283 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271937495 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.272153762 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.192478641 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495022412 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72263483 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274208058 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.934110387 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296210376 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.272299451 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.029686486 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.296096583 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.480550881 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.399003564 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.529591771 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270791701 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523494425 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.282761243 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280361648 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.270426765 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543212697 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907583351 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361656118 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280054532 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.957696325 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.983743959 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.272158619 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.961761073 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.690250874 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.274276625 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281326536 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270411066 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.203442031 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269418317 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.709552667 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.277215091 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.980795831 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.270662003 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.281900232 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365083468 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.27459903 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.085914251 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278404175 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271744479 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.269652172 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277210485 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845243847 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.404983321 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.288090034 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.207729519 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.641224397 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.945103056 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846388841 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.373742645 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.274729622 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.275604204 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205251032 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.950903682 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.291181335 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418741887 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.29188684 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.921235075 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94610619 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.952260508 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.21591538 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.785862146 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.279472443 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.209285009 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.499098799 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271646134 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207302347 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.229234938 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.205467596 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9224396 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281187209 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.63472714 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.279052657 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.687850123 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.284084985 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289136224 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295631176 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.495611995 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.156152186 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273215164 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.738988845 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430617591 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29473678 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.690464166 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206714276 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.276706206 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527097135 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.482734664 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.272124693 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.202794648 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.464294491 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280820888 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.291348155 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.283693409 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.285414559 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.804580614 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.285301098 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.413235473 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.292698271 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.273383307 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960433088 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283327914 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.377017179 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.974264794 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.516143165 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.995897847 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275808909 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356615707 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.275088516 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.274786203 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.069176612 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.791676768 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.273960167 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.277169819 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.275148496 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.288003873 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.274535246 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221783611 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.272058438 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.048439042 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.280042455 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.497018611 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275048778 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565845937 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208742814 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421176092 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.366618848 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.4973106 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.387077704 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.277804429 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532065152 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276629664 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.280138412 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.289524628 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293745032 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374161491 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298071748 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.279617353 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.532605945 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.279221066 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.279906557 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.478818539 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.279918868 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276987973 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.280932879 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.094442864 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807990498 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253484779 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.276851755 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164720584 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.290479567 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.340632624 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.281445597 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.286134604 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.92773676 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.084994172 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.281927148 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.277285121 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.501634048 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286611032 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.968425324 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360370551 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.459955555 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.81001361 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293182036 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.210732 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.988006028 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.969716892 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277909496 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.213096309 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.277048262 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285333126 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.28810043 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.786332654 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.811389108 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282697303 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.963875039 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.286926056 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.287900895 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.282802526 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27697326 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.901809066 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.431068464 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.291101057 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.291279769 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421716925 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.29216924 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.211732918 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.282106082 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.282691958 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.277596675 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.277812814 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311119806 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.963222034 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.745955673 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536656237 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.960344065 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.290817581 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.049137195 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.308132876 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.27832032 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.766984844 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303522556 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.302904686 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291860414 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.290500474 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.976263143 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.942308781 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850893957 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952100972 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767384364 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157018524 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.287487045 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.283083103 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.71283797 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.214536967 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.83754752 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.451210306 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.704876811 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.225356668 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.46455781 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.392080929 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.983104473 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.292294944 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.507495883 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151994084 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.772531353 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.306980927 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.492517052 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316210406 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.288404272 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.211422151 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.56738356 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499688725 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.729524844 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364623186 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.703512513 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.776531201 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.298095467 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.280946114 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.562155696 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439235185 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.995264073 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.453646736 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.281816484 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.022304348 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.75859254 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.283911073 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.507368368 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855878572 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.290158498 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.469704453 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218586001 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.293373025 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.293992417 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.283531723 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.419987284 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.291566412 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.539535782 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.293265846 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216497669 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.292564833 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76970185 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.135530047 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.288754521 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282359943 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980863697 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.285359655 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542601484 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.292131175 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.896575055 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292143416 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.216280429 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21663844 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.975798403 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.287101862 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258097885 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740627816 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.651607568 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.269633075 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308615776 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129422175 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.537482195 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.297063653 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.818753228 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509470892 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.076483944 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30650534 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.384709653 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.812824891 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.284279329 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.284411561 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.519586078 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.104730894 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.510223421 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.190937588 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.197751864 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.282747713 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.497179581 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.284216079 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.047453062 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524764818 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.997893048 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.302321884 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939847462 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311964584 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.040805241 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.214509649 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.671643707 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.29245312 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364853229 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.295385093 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.295399045 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.294875422 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443624184 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.039586492 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302447201 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.300003201 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379927321 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.460577408 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.906049326 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.292273676 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827971407 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975416841 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.826897784 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.299056866 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.286685332 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293353983 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220715858 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435254194 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.511132285 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560337095 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418748859 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.724812829 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310478907 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.824260508 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.310913052 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.500427286 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562168953 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.180696869 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287031283 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.302254286 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.287079367 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.298109656 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.497676543 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748621808 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810378084 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401966094 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.287412246 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.712791878 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562446295 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.287407551 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288687649 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.879137391 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.289198193 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.574843839 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.293848018 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.072071862 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437746061 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.299123852 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927835731 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.298532495 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.447429559 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.06116097 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.991687242 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.545531928 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.69729638 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.30009098 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.833172016 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.936870025 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551471949 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35564606 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.300143781 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.404673244 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436345715 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.29797012 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.291652844 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.289496626 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132609764 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.998718492 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.299345151 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834154689 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552933038 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.287446614 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.297373054 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315148943 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.299601161 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.512819947 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953119983 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.513701465 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.299797596 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.293342082 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.107865079 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.833909674 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.302577059 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224173635 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.294576972 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512969887 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.529831074 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.312661148 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.743131345 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.000736542 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.815618466 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.264616088 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311573749 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.289877475 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.940517538 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.835017776 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.910960731 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754292847 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.851525252 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301892349 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.567444644 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.295545708 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.302142749 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.570297165 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.295226844 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.290823687 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.305017409 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.831293143 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.996487574 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.298937042 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.010204034 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.231101706 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.631214983 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.931347351 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228335902 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.294259352 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.463249245 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.293460292 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423473856 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.30308814 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.289144015 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29876221 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.027473328 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56377504 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.298089041 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.283546041 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.884694891 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.303111138 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300548957 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.513252824 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301152152 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.961766108 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.64354637 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.54610611 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.306211029 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.281104332 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.296244927 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29367092 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.28006375 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.492136155 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.79144046 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.815312196 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.303128921 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.306179826 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.296395867 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.509831974 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.505628528 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.0780732 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.320946199 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294938899 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.327832433 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.199404011 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.795688184 seconds)
  done (took 1552.33436603 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.306287499 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.325441145 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.303749196 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.333130263 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.335936658 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.315166971 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.379868546 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.36503258 seconds)
  done (took 51.899932693 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.293856565 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.511634569 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.321144407 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.29507145 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.30376849 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.298931239 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.700773357 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.298016502 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.302064452 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.302198223 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.296209627 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.301562338 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.873657135 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.303088559 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.295109996 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.293213217 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.30128234 seconds)
  done (took 64.533699862 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.294024572 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.535459259 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.368041498 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.31081036 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.999600913 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.29538585 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.503768448 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.360506701 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.299590582 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.330187563 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.948153839 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.301740399 seconds)
  done (took 82.784813115 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.302851844 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.301142264 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.30131572 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.302235554 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.301981855 seconds)
  done (took 7.746788689 seconds)
done (took 1968.700179357 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.547926231 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.936038692 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.965070529 seconds)
  done (took 5.137729282 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.442497118 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.49090845 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.611834983 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.619010117 seconds)
  done (took 7.402239591 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.57228406 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.681263939 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.485429247 seconds)
  done (took 5.977021291 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.587742635 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.309446504 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.416097738 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.297625358 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.299282208 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.296693458 seconds)
  done (took 20.133372537 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.300849869 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.304342853 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.302193209 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.305348118 seconds)
  done (took 6.451963168 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.283544703 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.042959384 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.284284739 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.300395939 seconds)
  done (took 18.150801515 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.049315466 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.070151709 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.045560041 seconds)
  done (took 7.404256771 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.303256528 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.143726029 seconds)
  done (took 9.686889338 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.595240602 seconds)
  done (took 2.834847551 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.433416064 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.569756703 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.244974042 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.191415861 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.270373558 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.742545362 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.767582413 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.398062281 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.184473031 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.245175466 seconds)
  done (took 26.288011959 seconds)
done (took 122.565159568 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.823615212 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.544628879 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.49882214 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.794693805 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.526106702 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.497794784 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.722545986 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.763515248 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.34341979 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.297637526 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.796235064 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.526796952 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.4583811 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.544674526 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.458764861 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.299551692 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.527702876 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.86590202 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.522305443 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.683364157 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.725800008 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.436231357 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.632982132 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.450244774 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.52567173 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.450877362 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.025189039 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.543771935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.686834082 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.037530938 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.450411697 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.853576575 seconds)
  done (took 187.556676788 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.309479393 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.309783079 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.300565574 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.3272925 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.307723152 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.300944941 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.312991493 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.312603211 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.299845616 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.298664308 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.299402826 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.299041632 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.304694621 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.305547483 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.30065336 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.311788747 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.299946693 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.299303885 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.312291746 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.306926564 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.302004184 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.312767708 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.299017557 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.300254499 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.30007 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.301043621 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.300272415 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.300941905 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.317990762 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.299959412 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.301533273 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.300234879 seconds)
  done (took 202.998643196 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.311229627 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.300163635 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.301250066 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.310713837 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.301627038 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.303288359 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.303114301 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.302044786 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.30284595 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.324915986 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.301182909 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.300855152 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.299502783 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.30188193 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.300882449 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.312431769 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.301741219 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.308852878 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.301269781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.319433639 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.302897514 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.312387479 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.301215906 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.301997717 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.30136914 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.316568077 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.301646736 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.301475003 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.301987536 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.325243585 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.303470303 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.317151002 seconds)
  done (took 203.040128439 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.504185631 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.3109155 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.309699518 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.262986267 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.311522098 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.310784886 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.304784028 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.506554653 seconds)
  done (took 14.065599524 seconds)
done (took 608.901998004 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.495533251 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.223381707 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.499387256 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.330975521 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.021545739 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.334111865 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.332082738 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.487856346 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.199384623 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.488805136 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.493204389 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.328795311 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.630722004 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.331192609 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.566880032 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.422889905 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.180746193 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.297564968 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.632505178 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.780295643 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.572386414 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.705526647 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.487291674 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.196716281 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.638306333 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.71082525 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.924126081 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.182033546 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.333181437 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.629351244 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.849718932 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.24403953 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.380983623 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.364293835 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.418565412 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.401049244 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.159357912 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.364139566 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.503008775 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.473559389 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.801034686 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.02715502 seconds)
  done (took 88.690759031 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.29982946 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.300937961 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.299165636 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.300353142 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.301224451 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.300699778 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.299673533 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.29903932 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.300811901 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.299719834 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.300148237 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.302299395 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.300473709 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.301702215 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.300613493 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.299736886 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.300991843 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.303194621 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.299708064 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.30082704 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.301897434 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.300126078 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.301357416 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.30078553 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.302223549 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.302460598 seconds)
  done (took 35.068854042 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.314433502 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.537771326 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.703470525 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.3211628 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.313327379 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.317467191 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.383548466 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.317255773 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.316281663 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.316081248 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.462048826 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.316873688 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.34818448 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.710491681 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.318816266 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.315169322 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.315843999 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.314375266 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.542227814 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.323608042 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.386460186 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.318537227 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.386581975 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.326708695 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.317200339 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.315467298 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.319218162 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.807684371 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.316265139 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.464107885 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.013688678 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.38445546 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.757858029 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.713279852 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.017328709 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.319965838 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.316043281 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.468320198 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.317391745 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.315657349 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.385252569 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.315753588 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.715752823 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.931838619 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.3318015 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.31693487 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.829828524 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.467641667 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.538644165 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.327107799 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.736627236 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.322033072 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.319510093 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.318875195 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.538198271 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.325580957 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.317411952 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.825792469 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.32504471 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.387775363 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.320949037 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.317895271 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.553194972 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.317423762 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.542548193 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.317893988 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.325973475 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.318735725 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.71796661 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.322825631 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.94847044 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.333551024 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.319230322 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.465260917 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.54337003 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.859769403 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.321091975 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.558700991 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.770640454 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.386407414 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.323992808 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.7992343 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.391043777 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.324488847 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.322000626 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.321698016 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.318706573 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.362198524 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.386155634 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.879431436 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.943177178 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.846800639 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.39363615 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.332461673 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.319422278 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.831687092 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.324046681 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.319334309 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.712354998 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.951351775 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.335516972 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.326955177 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.93586176 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.337295245 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.388990356 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.3275904 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.726069038 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.323225774 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.363393308 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.319767521 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.326926765 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.322536158 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.39003605 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.326732644 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.321809795 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.924886289 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.488623345 seconds)
  done (took 172.6723096 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.314467515 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.31392543 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.314490753 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.326182678 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.313852658 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.319341263 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.313751579 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.314032123 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.320203158 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.313590982 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.314239777 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.315531431 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.316426573 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.336343192 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.323740731 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.321193939 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.925041536 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.31382017 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.315405114 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.327545167 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.092255651 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.317608275 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.315019872 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.314898203 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.315518957 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.316278732 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.318613692 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.318015755 seconds)
  done (took 151.536930962 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.322277659 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.835521503 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.326563857 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.439175864 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.342249956 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.320897092 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.437351373 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.374978399 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.323020088 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.319741272 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.319636048 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.596538017 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.326241276 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.787986786 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.493260098 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.443525882 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.789097961 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.325602893 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.321112434 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.320571021 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.441068812 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.329989783 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.598520834 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.840404608 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.326399349 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.83934512 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.315453447 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.324339329 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.321588513 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.841530247 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.324646356 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.599156915 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.394670493 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.378776942 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.841953252 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.795683672 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.796828527 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.455886606 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.323777346 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.32189399 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.321617533 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.311844412 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.841143316 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.32787775 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.324209236 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.835636942 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.340417312 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.324968492 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.332845662 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.32241427 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.375917758 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.377669638 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.600828055 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.843594795 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.393130802 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.345774722 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.441262927 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.679784085 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.326221666 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.792337729 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.314243822 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.84181616 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.327648601 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.312840368 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.324727847 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.329449454 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.459108751 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.442480617 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.796345176 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.328327315 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.79680152 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.462081719 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.323906038 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.323440582 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.325910916 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.839987498 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.797034311 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.462732779 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.445614079 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.497782614 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.317397889 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.324036719 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.314939193 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.394595167 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.32439689 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.842162926 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.792081667 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.326731608 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.327190694 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.326755274 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.327459454 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.48306913 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.845380639 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.395381653 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.785076658 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.615784125 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.601993256 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.327555188 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.379624782 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.325558494 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.604701032 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.327624362 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.378054237 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.740611688 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.603859866 seconds)
  done (took 156.68138766 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.548972238 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.442433122 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.410333608 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.43021519 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.824196664 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.870880144 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.461294742 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.441168683 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.427335856 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.556314139 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.408398939 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.419331605 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.494916593 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.412428181 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.000336019 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.38975316 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.411567026 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.441905039 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.428962774 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.289554873 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.916592995 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.596089572 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.483115727 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.36187434 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.413496836 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.031269075 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.845688185 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.82033964 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.481278156 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.496453417 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.810253193 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.39317636 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.202505418 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.947166391 seconds)
  done (took 63.171305213 seconds)
done (took 669.066162174 seconds)
SAVING RESULT...
DONE!
