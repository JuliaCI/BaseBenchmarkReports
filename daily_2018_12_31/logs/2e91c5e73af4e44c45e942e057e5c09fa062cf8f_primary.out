cset: moving following pidspec: 28457
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.337381949 seconds)
loading group "string"... done (took 0.556530576 seconds)
loading group "linalg"... done (took 7.633740852 seconds)
loading group "parallel"... done (took 0.171888164 seconds)
loading group "find"... done (took 1.274537211 seconds)
loading group "tuple"... done (took 1.936209269 seconds)
loading group "dates"... done (took 1.408974558 seconds)
loading group "micro"... done (took 0.247430437 seconds)
loading group "io"... done (took 1.016953037 seconds)
loading group "scalar"... done (took 40.925193615 seconds)
loading group "sparse"... done (took 13.446757436 seconds)
loading group "broadcast"... done (took 1.037398024 seconds)
loading group "union"... done (took 14.211960014 seconds)
loading group "simd"... done (took 4.748596394 seconds)
loading group "random"... done (took 9.614153308 seconds)
loading group "problem"... done (took 1.987084749 seconds)
loading group "array"... done (took 22.632278239 seconds)
loading group "misc"... done (took 2.049367088 seconds)
loading group "sort"... done (took 3.445217684 seconds)
loading group "collection"... done (took 19.599696018 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.574503472 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142853724 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150029593 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.131106389 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204736464 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155389861 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157482417 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098058411 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.988692795 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180824157 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153297832 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.526578984 seconds)
done (took 5.208662469 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.257264582 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093893703 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104439767 seconds)
  done (took 0.894501629 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077016435 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144870302 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094166965 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077720291 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095456597 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077249816 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095736814 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077038481 seconds)
  done (took 1.358157596 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085751831 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097343019 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081725428 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095806928 seconds)
  done (took 1.055516638 seconds)
done (took 4.349103555 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.731330898 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.282778318 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204123972 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464581481 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.1927332 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217185665 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.725331414 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.367740501 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254621748 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099236589 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.13454897 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386800928 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136720612 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.723908882 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089195567 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.1241036 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.181023702 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.483642584 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083144649 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109733489 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116269138 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143762344 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128147927 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090455821 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183093218 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080854762 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19480572 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108622493 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080575248 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.27540974 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200580489 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.770491866 seconds)
  done (took 11.098463754 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111134559 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134058461 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.0978873 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138115648 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134172829 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099597371 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084567962 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096979281 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121276625 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177224476 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.129455301 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121102255 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095404352 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082786783 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115992291 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24599389 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12013084 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099172751 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099590976 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088096532 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138023676 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112812932 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109956212 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092997833 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166939985 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221750058 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112456406 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125506019 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096097074 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113399245 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14231589 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142139702 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094203029 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080282258 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171986311 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12473938 seconds)
  done (took 5.147928475 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.094590926 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190466596 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122668183 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171178876 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081479042 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143938978 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095206651 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113875495 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258319005 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.114226417 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.49311213 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14392521 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098947831 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099948656 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083059941 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097651709 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.617595704 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.123007801 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151376389 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115058843 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103555891 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08583278 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.725353628 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096266586 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085376922 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098154537 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066609203 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162368232 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098537781 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.146844013 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10228275 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103747596 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134282332 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19414151 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124593657 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13466898 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079159087 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097014306 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176109422 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087102004 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098596275 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120390882 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133715249 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118129788 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099399456 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096610255 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.201026665 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096225263 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09756733 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.943833011 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181821965 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.122211303 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098906748 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.309156663 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097753748 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098957006 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077907759 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.281405236 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.192699774 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098653619 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079944565 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097568466 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081416516 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.751158387 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082443258 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095290603 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081413871 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106756721 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.106809464 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085578291 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097024082 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.121835439 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088094675 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104154526 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098829728 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098828084 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081597793 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098608812 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095698884 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082721762 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106941786 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.216066342 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096625329 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081623028 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094048056 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100456698 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127960016 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101124027 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078979607 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130960929 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095162754 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082738965 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098061773 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.11622745 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099904351 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106300003 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09962513 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.127359438 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096885418 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.134226829 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096573322 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124835271 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10000561 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115540671 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111877807 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099538013 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.169834809 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.077736245 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096040176 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078987371 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097820003 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078841697 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099394024 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081384445 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111600856 seconds)
  done (took 23.920179545 seconds)
done (took 41.954727776 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324944782 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104739365 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10414045 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103118184 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101870267 seconds)
  done (took 1.509562094 seconds)
done (took 2.260508979 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287811743 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173563407 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098200797 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167540787 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093480765 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.164000406 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.15975376 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093832494 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218911874 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094334537 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160506801 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076636203 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095189835 seconds)
  done (took 2.659229937 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094745056 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11519191 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083071638 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111562242 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077795099 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110621698 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09301024 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116750595 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109414079 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086201209 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093775698 seconds)
  done (took 1.839524452 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095109709 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114342318 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083931355 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110212046 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077624379 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111807812 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092983558 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118629997 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110000237 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08687352 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09386722 seconds)
  done (took 1.841198743 seconds)
done (took 7.077836196 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092596475 seconds)
  done (took 0.830592713 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.939569004 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.864929983 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11390064 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149399405 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316104478 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.173914517 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.47457884 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125737943 seconds)
  done (took 11.112384835 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.11694511 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.116826043 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104742865 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084429786 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103722386 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083866336 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100333824 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099780419 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084366981 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102664991 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086426131 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102759131 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099589836 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084057821 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102331651 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086617766 seconds)
  done (took 2.371308355 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121325945 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11969048 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.1083397 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10855246 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088310359 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105922442 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106832251 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089974537 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102573881 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104156459 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090913341 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107308963 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103792423 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080743905 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107157771 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109254312 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087010441 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106767532 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109364195 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092536781 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108286233 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095826652 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088195566 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106671112 seconds)
  done (took 3.307819869 seconds)
done (took 18.369812857 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160998265 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10993568 seconds)
  done (took 1.022695857 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096627952 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113748102 seconds)
  done (took 0.964321534 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099165103 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096524465 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122082547 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110435985 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081446291 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097152666 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121036054 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082260371 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097309853 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080984675 seconds)
  done (took 1.745855764 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084539274 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11046203 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102488896 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097718336 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106201376 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095759698 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089876371 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099431035 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.111215394 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077753761 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102208415 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114491197 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087052351 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117244893 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105646958 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084800033 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104361612 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098639074 seconds)
  done (took 2.552211842 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081147514 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098199767 seconds)
  done (took 0.940092106 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082530505 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09451149 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082948726 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099042654 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095620993 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077625236 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094718944 seconds)
  done (took 1.385219194 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.488499303 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137526729 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262412635 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102596452 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103406617 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.305155019 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.09935492 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085581758 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104103574 seconds)
  done (took 2.50487983 seconds)
done (took 11.86964112 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09423753 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116516687 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114582274 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.469876015 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108159724 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099412402 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14964899 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250262131 seconds)
done (took 2.171065364 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.145078349 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.609461292 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.431551366 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.23454033 seconds)
  done (took 2.044109867 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.40939427 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099897904 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084451906 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081578126 seconds)
  done (took 1.446850684 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081251868 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101728272 seconds)
  done (took 0.954691258 seconds)
done (took 5.362810622 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082026092 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.130435519 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078426994 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.100072631 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08110741 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.097234761 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081505721 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.098620403 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078484142 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098284235 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09746797 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081194287 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.097252037 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.081315968 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097008998 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079215407 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095441791 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081856434 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09558764 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07948733 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094865941 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082341544 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095118054 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078604841 seconds)
  done (took 2.969075449 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10170323 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099447624 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104590503 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087512314 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103415349 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086434203 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103505219 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097882377 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.0882373 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101465205 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102106739 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086446358 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099638023 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086099401 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101324924 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102861219 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087360682 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099040193 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083582144 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103435056 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103353741 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082594594 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103432386 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103356754 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085920775 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102389422 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083583806 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098878056 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103720946 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085558504 seconds)
  done (took 3.651278594 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086378927 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095008706 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079465591 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102217595 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078820964 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097670561 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079975266 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096438736 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080041912 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095696985 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080577896 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096227049 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079480064 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097897179 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079784179 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10069704 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112555662 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080487799 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095879113 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080273213 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099490186 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07991013 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096328849 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080069591 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095631707 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078856863 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096732468 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079032078 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096707871 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078758016 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099000369 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081913442 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096829109 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085725424 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100266473 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078476043 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099572203 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078931422 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097060519 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094957528 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079171932 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095805767 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079638843 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102290664 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079366163 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097755751 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080488413 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.0974708 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079801664 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099713728 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078690509 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096818882 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08128575 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097332027 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082662674 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096886047 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09672096 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079168491 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096742078 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07950881 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.0951219 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079310728 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098444484 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.08105811 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111995677 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086036088 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09662029 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081286385 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098017391 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082466872 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099042044 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110892724 seconds)
  done (took 7.266663365 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103836634 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128257876 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.099901202 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099262518 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077848527 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096976636 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084370856 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096402365 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081543603 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.103605383 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097117419 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081891608 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097730521 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095652559 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097118327 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082133356 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104182999 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094445698 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080129386 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09968137 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080228901 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09991529 seconds)
  done (took 2.861826091 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210389822 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106379041 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144649427 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107464542 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084283343 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107502497 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102658298 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088000288 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103714164 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084244691 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10209865 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.21612213 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084602289 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102077246 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100649592 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086524829 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103093302 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085713415 seconds)
  done (took 2.802841368 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094026379 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100252798 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099529773 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10030483 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099361964 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08587599 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104059535 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109244917 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085528675 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099479107 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091420531 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102441677 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101436746 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083956008 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100728255 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082831783 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101901107 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081847591 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109679396 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105080307 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088120932 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110282301 seconds)
  done (took 2.921340899 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097313276 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101220051 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118838426 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085755052 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095290183 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081241229 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106435473 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082603726 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108937291 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099929447 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082662682 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098137449 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088925055 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099885206 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104964123 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082984168 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101624631 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082778513 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101903122 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078071294 seconds)
  done (took 2.683837333 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103487356 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101175851 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101180796 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093583266 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101636964 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083270381 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11077023 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100627423 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08443965 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125988622 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101929159 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08307127 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110742515 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107491525 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100466335 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093159979 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11154643 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109298685 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083262965 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101945933 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126028365 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08395799 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11007457 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100689699 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083841814 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102544768 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100685133 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090238523 seconds)
  done (took 3.596733021 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082503649 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09919773 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083401321 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09752504 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080771065 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097010733 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080510053 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096647078 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083435782 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097295161 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082978339 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099633499 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082482896 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099441729 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082917655 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099037811 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082384712 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09716948 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080180719 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096698809 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082994123 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099820025 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082157326 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097448076 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07967505 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099538052 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079447594 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098179298 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082369397 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097789936 seconds)
  done (took 3.492663189 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092969304 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108420711 seconds)
  done (took 0.992047524 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080448937 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115456851 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079992935 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104282123 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087316404 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101466938 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107962033 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087487623 seconds)
  done (took 1.555614739 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098468158 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111555369 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084815146 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114510147 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110167149 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099388672 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172151271 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10272859 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087734163 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099821136 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11382319 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082766092 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106856041 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083282342 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106208092 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088931388 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09897764 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105822647 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086622533 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098936573 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088505333 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109829016 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08493936 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097895791 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101313853 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09350656 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113382413 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084147553 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105352809 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10798633 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08977814 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094201963 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083735516 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102023675 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081129541 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111613351 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117307302 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08662349 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111414069 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084189205 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113328047 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095574374 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087831879 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107338908 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110203887 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085128311 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101352811 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079751642 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098262769 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085702445 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096608332 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082887377 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09561511 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089955073 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106636227 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111863111 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081950605 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101917084 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086619834 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10505254 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089845088 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103795307 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10293799 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08365107 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107895216 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089018479 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111582706 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095550598 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077217855 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098310031 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094013709 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124963963 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.107360873 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084693052 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102203173 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.0819589 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104430573 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08422901 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107278325 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107246357 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084113316 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107173573 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091020479 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10188284 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084549186 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109911567 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099176221 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085569621 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098776156 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118999114 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08206553 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098404534 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081489499 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112244878 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086050887 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101376699 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080670752 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109162201 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094362519 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08522751 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102175849 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084122629 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112816418 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106213994 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089804848 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110280512 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09036177 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102444623 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103966797 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081353505 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102181251 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086670555 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10873689 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077808743 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105775146 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082904323 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103438655 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109839399 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082162478 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102112873 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091416145 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107993878 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099870823 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081034335 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104305642 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084321667 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105389593 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091479625 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100550023 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077497048 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097816292 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104169182 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084332691 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104954317 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088530874 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104712167 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078148395 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100729523 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10602769 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093521044 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102011028 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084029534 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108343149 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102521893 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082779259 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108097607 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087133964 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101523859 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089338469 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103815779 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077938525 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105679866 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103900679 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082908245 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104613865 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086836521 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104888607 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102286154 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083195695 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107297426 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085719487 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100489064 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083123252 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100355434 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111727654 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086468332 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096372277 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080768482 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109382397 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.0809957 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102480099 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082611796 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104063231 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101441709 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082206911 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100903551 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08575206 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114178535 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10600938 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085152721 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107363371 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096765472 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101773264 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085781004 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101692564 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103363895 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084503463 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111479999 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089287697 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107838962 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103719978 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081249072 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107378001 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091536388 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100780907 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080968211 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101249832 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104649394 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.089877094 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105771128 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.08431377 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100250843 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08355876 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105909614 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104607621 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.08392843 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099900471 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089191214 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101187651 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109393742 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08523745 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111843391 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087823133 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097038334 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086156516 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100742754 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107870369 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07898302 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099225923 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083562024 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102206042 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082601729 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105811025 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077905722 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109962625 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109196841 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.085610335 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100148927 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084280507 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109162295 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086156113 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106667741 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086863331 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110047955 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112243057 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083788947 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105578252 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094553496 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102609259 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09548251 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089960967 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099702521 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083118573 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100879287 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081909197 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105862404 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11130586 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091681829 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096045247 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088137086 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100963856 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082195627 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098284215 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.08752573 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106074352 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10168281 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090897151 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104169489 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086943094 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106615851 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083447671 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104022873 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103525739 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087975421 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.10268845 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086665635 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101161683 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087018157 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102157663 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08088455 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104627616 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102037124 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084273912 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108276137 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083800919 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101962526 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086958365 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104574488 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101738049 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084634746 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100978177 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087712864 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102914169 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084615473 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10543246 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.07893851 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110388254 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082263322 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112201182 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102059773 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081565273 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108764055 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087554303 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109245397 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104556739 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086205957 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103551019 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.08462489 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106017099 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090460807 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101549661 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113211775 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092525597 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103436362 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087437928 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103317763 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085194987 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102450712 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084838393 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105143665 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102057976 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084779369 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107679705 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087342654 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103067331 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08548376 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105339679 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.102413137 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086154732 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096487214 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083353113 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101179666 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084433289 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114410855 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102915306 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087795573 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.10080831 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086063795 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101838984 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081143783 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111995812 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111695855 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085694864 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110595034 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083142568 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104664848 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113122514 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07848257 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101239617 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082594164 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100217105 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092474773 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104455442 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.103016013 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104186881 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101759886 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082421495 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103722768 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083052112 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097289651 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082103724 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106779213 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086684854 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102199296 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084341636 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107261996 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104476586 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095114727 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102451483 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08422244 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104876049 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080330679 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102197341 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082748438 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107309694 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104029284 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081894473 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099659821 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084404747 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10396566 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085764742 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103406679 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085703883 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110877481 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102482339 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087267191 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108082243 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07945559 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106547086 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083885113 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103905315 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101224313 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089009834 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105612288 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08708423 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112839537 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.08303406 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103905161 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102828619 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083698825 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101483664 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083718442 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103760917 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.083453857 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104967219 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092803338 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101792502 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106052213 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085066908 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10378609 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092138995 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104887189 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086864137 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11252417 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105994181 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086050201 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112376153 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086961931 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108083982 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104570502 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086919266 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109149531 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083745544 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11076165 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08431259 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105323653 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104482566 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082258675 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102146505 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085231368 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102739242 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091018469 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105074117 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082292472 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102968057 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081266048 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104870249 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106986193 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09263794 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106234921 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087775576 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098929587 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080411162 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105494057 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100180507 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087079529 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107353494 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091892921 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105625878 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084000414 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103884223 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.11273101 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091215827 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106638045 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082381938 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108081796 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085574702 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106688231 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085284107 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104243324 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104317797 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089574533 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104605715 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083919876 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111466042 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087362859 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10661572 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104107261 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086201936 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102604631 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080623867 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104119899 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08639403 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109856829 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086994688 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104818682 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114417722 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084445423 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.103638415 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08824403 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103843612 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107487875 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081464423 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104790766 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086022305 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105072721 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080209223 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103992045 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083023267 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107059998 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083273403 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099195886 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11418769 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094800508 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107167327 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083154813 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102424777 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079316582 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099504828 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101936186 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08730855 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105546881 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095259677 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104367771 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083193247 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099587224 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084275306 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107535144 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107072979 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082818452 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09842345 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083717246 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107092861 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090270008 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102999394 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.084425647 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107794418 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106084767 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08393984 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107179298 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082903247 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107772972 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118249377 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086310831 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103958817 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092247186 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113584174 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084788786 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099448357 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104385747 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088886505 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.104356391 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086446036 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105615087 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120351001 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0886146 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102532589 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084313848 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106040067 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084391324 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113091308 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085435025 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106748568 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108539655 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087710484 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114063364 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086581617 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114700554 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107338916 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088224918 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104009982 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084833141 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102646582 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083136542 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10683611 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104618746 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090019865 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112703034 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083311685 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116550762 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112873273 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090294693 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100779137 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084125183 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103944552 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080439833 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108125163 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082574108 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103028395 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101823389 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083900888 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104108202 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091915054 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10555782 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085581055 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10496921 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079807493 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107313836 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086124674 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106010034 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100293294 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086376908 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104985987 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089639126 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109405347 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085504559 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106721191 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085862172 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105875268 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099005633 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092450288 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102447187 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088745436 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104105697 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085005652 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106319684 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087642713 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110938497 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105572133 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088341164 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117737629 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08678851 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102582838 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10047967 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090951535 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102231857 seconds)
  done (took 58.592759037 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147935792 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082341331 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099564152 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0806623 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113948827 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101079943 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080532388 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10084341 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081497818 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103233754 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08035164 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10075818 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109905383 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125587075 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09421606 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105330238 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078793565 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103091975 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099443134 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082068029 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110331999 seconds)
  done (took 2.922558731 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105057239 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122408904 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116366846 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119994718 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091313798 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117311181 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117126356 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117214211 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100193657 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113058031 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119369453 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115971847 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092225425 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11317948 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112417261 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093913726 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120670076 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111374738 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116681912 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096978023 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114874321 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11581372 seconds)
  done (took 3.284423329 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08560045 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103638184 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08641706 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099215283 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084752178 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098616804 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089110694 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102852055 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.08715515 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.104752852 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081869014 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10421988 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104876536 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080712241 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104262303 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083163734 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153014379 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108366802 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083502561 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106186415 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078757037 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107441726 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099647127 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080963427 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102250001 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089420601 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105187897 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082102912 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104703055 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083142272 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105021275 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08222707 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106986848 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103907109 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084309047 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.104005372 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085088409 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104089739 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080084827 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102837509 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086155018 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100493228 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085736079 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106416887 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082178011 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103977113 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085169532 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106157566 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.099179459 seconds)
  done (took 5.54503103 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105348134 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163552767 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087573854 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145971229 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122061953 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114330907 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088751892 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144281228 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104475971 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082725833 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125604227 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121776706 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104135781 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090517112 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112311225 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104758558 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086647105 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104217411 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109180135 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084740493 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109298502 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091819141 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122564072 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120294964 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10849077 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083885605 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105298062 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109312343 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099652195 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110740831 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110186295 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091973942 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123475253 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10772043 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083486161 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108094555 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123069142 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08483767 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.109803507 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101902942 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087393554 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110515931 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11213558 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104155185 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106262958 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111022748 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086293413 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103125395 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119504266 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088230324 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114853799 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121173639 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089064262 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107825374 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10990019 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121618453 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08611561 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10344795 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088461775 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120186521 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102367586 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089015486 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121553307 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107296855 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09285478 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120686724 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111606084 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10877286 seconds)
  done (took 8.245892963 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094942932 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112431 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12117308 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121808594 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092409374 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113225382 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112280043 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091989995 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112043992 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117992207 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112108037 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134200581 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087044796 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116538292 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112288231 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091837798 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112303646 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111688881 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091938443 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112751415 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112874359 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122030496 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091707102 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122012381 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143785093 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106963488 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091829362 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112315412 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121619017 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112068516 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124517365 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091678842 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113146343 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121391515 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124597187 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091910533 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105937073 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112524794 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093406083 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112627029 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106658456 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101593992 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112339606 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106757032 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092432212 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113234397 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121322571 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125900289 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116195087 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098806501 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112797829 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121721836 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111731457 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09249917 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121972643 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148133383 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122944052 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122267608 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112086772 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100996338 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12131393 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130953388 seconds)
  done (took 7.771875586 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108718904 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117072064 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11870572 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100926565 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084867845 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110614934 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083593377 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104559233 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114435203 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095934157 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119495274 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109970146 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09301681 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118245457 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110359576 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113726384 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08959562 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111129287 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116075244 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089466867 seconds)
  done (took 2.97050292 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096027739 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126459952 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085338149 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.1139191 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109134918 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091460632 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109416055 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108399393 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087229856 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108590027 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09661732 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118975004 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10718403 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091848829 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118118963 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112704279 seconds)
  done (took 2.545275287 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100504355 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118976913 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12234908 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085150274 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106829013 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081196726 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.108087655 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10176535 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082266635 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122244061 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085200217 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110244291 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106294537 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084368642 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10248394 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08888504 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103263785 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083018682 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107707738 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120122798 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096405743 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105695173 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106371981 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08793638 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106588143 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091356311 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108402801 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103533878 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085013793 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106368541 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086637173 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11529102 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.1023283 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085895997 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104646361 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083529985 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106399924 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085533504 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110622026 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105261403 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084518007 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105820714 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086096321 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10794815 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08186922 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107809085 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.1015701 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092687043 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104685921 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086504568 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107097007 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087127501 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108564563 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117730914 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088989831 seconds)
  done (took 6.33716473 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100827662 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110325906 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080450457 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105238985 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088232771 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109399829 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109330465 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089175303 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108934961 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083599417 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108297648 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089284063 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109323021 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109904525 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088856017 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110683821 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081254753 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109082887 seconds)
  done (took 2.658729742 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092307364 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105845172 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094103288 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10784873 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084838415 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109795829 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081033835 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.107231152 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104536646 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086740446 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105833447 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088640888 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105126726 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087773999 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106944011 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085509353 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110754533 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10452988 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087098038 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102064178 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089161244 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105356918 seconds)
  done (took 3.017636448 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119578655 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127335487 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092577594 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.233807739 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104550131 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134466348 seconds)
  done (took 1.679197674 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110549782 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122763489 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10686093 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108697042 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11619535 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087350696 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109486517 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108946379 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118412993 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101911407 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110113302 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11896682 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118873021 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097897972 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115601811 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115879889 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107284286 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088420201 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107624878 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128568668 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087960186 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119563871 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109014442 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088138321 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109760337 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118062907 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118778948 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122690393 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088469235 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120027921 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11563852 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08869879 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119718194 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122879477 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110066502 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098888325 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110728229 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129016547 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114102391 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098005557 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111269163 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116027373 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098598561 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115383354 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119730453 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108886228 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094501754 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110352349 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107901868 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137738883 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09482878 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118574922 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116043764 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119134891 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097545235 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157353472 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102419171 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118122262 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116548425 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123887571 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117464281 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094548853 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118083154 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123738503 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116675077 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096584057 seconds)
  done (took 8.216876044 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103591844 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128051697 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109417324 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123607121 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097209284 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110048944 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109030174 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087870855 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110336412 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107439091 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153494753 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089586646 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120339082 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118247221 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088024719 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110258234 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109193502 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117657353 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088280922 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136622659 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109240509 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119030684 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118230589 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097568096 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124866631 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115915856 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109022576 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088908061 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109155515 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108129875 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095024476 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110187428 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119206135 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086596569 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119551718 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110091753 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088180694 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115606508 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110164696 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115583052 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097676322 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129721713 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110416241 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109570675 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10327283 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11100267 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10951117 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087523257 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11073698 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108378697 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102317081 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125568298 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124293238 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119786328 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108646012 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089787987 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110325991 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108605459 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089610523 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116963173 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119012482 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087431302 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135843757 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111731443 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109766836 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117827059 seconds)
  done (took 8.123892242 seconds)
done (took 157.474125099 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.23245357 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.214811029 seconds)
  done (took 1.324360229 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088845415 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13784449 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096268589 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172245299 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085846656 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.149456276 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13955886 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098882893 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108102448 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08679643 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107924166 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088357216 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.191768854 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085538626 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108279889 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108068153 seconds)
  done (took 2.738324185 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.11925091 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256850717 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.12777572 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106078935 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090384867 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111031558 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084757272 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112911894 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089744135 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.107249318 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.089012442 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.110340666 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.085017153 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109243596 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111166561 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089970497 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106084132 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089582971 seconds)
  done (took 2.874103754 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11434958 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.160824705 seconds)
  done (took 1.162220293 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.247106299 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.16433832 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.234175625 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.476659776 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.27870137 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.370984182 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.20693556 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.216675887 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.172134972 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.21210815 seconds)
  done (took 3.464575486 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12039582 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182164945 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319624517 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157816946 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.108297089 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131575493 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158692034 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132019501 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123433371 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10173757 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123862488 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.120120273 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139568447 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09637745 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117391458 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118364865 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12187662 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.116346707 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11550537 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096440447 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140401635 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085191901 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116994218 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115438017 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098335626 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121045635 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107735235 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085153023 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118756444 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094473235 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115339199 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126769726 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119945207 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156823997 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123210943 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.158097824 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119106609 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092254144 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.117228794 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091041893 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120931238 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120336909 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125706595 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098165612 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107694764 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098197387 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108500258 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085613821 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117334483 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119813121 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093868746 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116057696 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156172232 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121113743 seconds)
  done (took 7.479196977 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795128957 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157734772 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090700046 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.887750053 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136944552 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104248773 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.782033541 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112911551 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257101268 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762045024 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135958697 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12151581 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207868599 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.261347479 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.005238728 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292039456 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.64930432 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.129350088 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15519056 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156465336 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119641438 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11533821 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133891145 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452251748 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.119476236 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089705316 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121582988 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120968176 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162245355 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126686386 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092278586 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.201949565 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251118827 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205344437 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094805488 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113734884 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089236681 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.195778067 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268383604 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193592996 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181365237 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110307872 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088847303 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124058981 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133781625 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086488575 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.187575366 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.177299009 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.17069634 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117145447 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12005875 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099744343 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122438013 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166619403 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123102696 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.3246164 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317834845 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090689133 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122943266 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127038034 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236522371 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126298302 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228421116 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139982824 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190975448 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113880166 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788398308 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.172208615 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113320252 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097002878 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122130671 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116576432 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100478311 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171118468 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39339267 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125992314 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116999761 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091141432 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227284423 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102128943 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114257226 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162441021 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119337472 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121308703 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103056472 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124517834 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169631003 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.258381209 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101912206 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121625343 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116567424 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104383685 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.118413384 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214199303 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221626893 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164108567 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23280948 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100253555 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187971814 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170549775 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120233309 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.175161565 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120796445 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103055975 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124315027 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219172938 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146833024 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125092323 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094344558 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121084923 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150377309 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127719142 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.0969004 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.195298237 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480918769 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.16871881 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111155262 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128213195 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099125606 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184852573 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097226949 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266190063 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122574086 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172463651 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120343904 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088541191 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121844214 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164628845 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124266763 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121892824 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101816222 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121973943 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237383826 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221694517 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123042263 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222485077 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186657698 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120291264 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173405863 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123690867 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169750288 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122351889 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098142523 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119033991 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778938556 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124571269 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099124382 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118378468 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.19657755 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090089279 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127018766 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.127191153 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086901866 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787131717 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129191514 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12178321 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103974157 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119511509 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121550861 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096728902 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117949586 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163333537 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232808808 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121364769 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097800986 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.127469205 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162018038 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.119905261 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127153 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126247619 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105380174 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123978612 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115923027 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104239027 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193833074 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165466307 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222108766 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.58177275 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115670988 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126010894 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205612055 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115876228 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29044971 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121012095 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.20580858 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18822961 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100548603 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314981858 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166128568 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197140094 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.130428937 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.17473543 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112146732 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119870481 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167352883 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113217792 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097508353 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163778504 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128094265 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124924537 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960754194 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090456286 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249741689 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089094861 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172923366 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120048154 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122660563 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295774923 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092479612 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130300336 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.167643443 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118101091 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.127204085 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.699138389 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.127826181 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100449267 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120066304 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225178946 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164883782 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122756269 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120722455 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098075766 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.186019765 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210383585 seconds)
  done (took 44.42705991 seconds)
done (took 64.351254234 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.283913543 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.220515665 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.272435714 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173982246 seconds)
  done (took 1.942106455 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174095418 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151570722 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123261465 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109555496 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.153309445 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085549308 seconds)
  done (took 1.705234606 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.36783892 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281558019 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.247627084 seconds)
  done (took 1.808853675 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.322381845 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.253517527 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.486725913 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.329884296 seconds)
  done (took 2.405672043 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.214853408 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134839604 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111552948 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104856248 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.202233855 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248084843 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144871237 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204683723 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098439633 seconds)
  done (took 2.424225941 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.200858782 seconds)
done (took 11.405435484 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.157927032 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.227161115 seconds)
    (3/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.162648623 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.183514377 seconds)
    (5/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.294765797 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.182364456 seconds)
    (7/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.21024495 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.125634725 seconds)
    (9/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.121031213 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.200227805 seconds)
    (11/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.232859763 seconds)
    (12/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.099984141 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.194669288 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.139146722 seconds)
    (15/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.235922651 seconds)
    (16/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.127690938 seconds)
    (17/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.174922356 seconds)
    (18/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.259860087 seconds)
    (19/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.105072859 seconds)
    (20/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.221348586 seconds)
    (21/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.090635957 seconds)
    (22/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.195044218 seconds)
    (23/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.230037002 seconds)
    (24/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.100246973 seconds)
    (25/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.112371709 seconds)
    (26/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091726869 seconds)
    (27/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.203889351 seconds)
    (28/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.219321931 seconds)
    (29/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.121312286 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094287561 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117687455 seconds)
    (32/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.118858533 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.183082934 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.202188845 seconds)
    (35/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.200948658 seconds)
    (36/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090271359 seconds)
    (37/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.215696173 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.134694913 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.122541185 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.117996727 seconds)
    (41/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.19440703 seconds)
    (42/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.124647801 seconds)
    (43/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.092493351 seconds)
    (44/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.123195612 seconds)
    (45/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.120791353 seconds)
    (46/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.168902836 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.119236424 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.134907246 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.110705529 seconds)
    (50/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.186892081 seconds)
    (51/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.174793542 seconds)
    (52/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.125337296 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.14069209 seconds)
    (54/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.174211117 seconds)
    (55/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.205121038 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.163496142 seconds)
    (57/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.221276705 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113535953 seconds)
    (59/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.182981747 seconds)
    (60/309) benchmarking ("sort", Float32, false)...
    done (took 0.150819429 seconds)
    (61/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.178230884 seconds)
    (62/309) benchmarking ("sort", Int8, false)...
    done (took 0.190267752 seconds)
    (63/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110831625 seconds)
    (64/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.117375214 seconds)
    (65/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.224005769 seconds)
    (66/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.191748366 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.142452513 seconds)
    (68/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.098021766 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.09295201 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.137675227 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.116813539 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.141328649 seconds)
    (73/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.072779596 seconds)
    (74/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.123004551 seconds)
    (75/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094272863 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13632931 seconds)
    (77/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.111673327 seconds)
    (78/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.085381688 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.095752728 seconds)
    (80/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.090781492 seconds)
    (81/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.200851198 seconds)
    (82/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.101002409 seconds)
    (83/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.129035003 seconds)
    (84/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.09577044 seconds)
    (85/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.114478471 seconds)
    (86/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067358294 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.110897963 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.08745301 seconds)
    (89/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136136961 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.132524137 seconds)
    (91/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068910124 seconds)
    (92/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.121153352 seconds)
    (93/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092664889 seconds)
    (94/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.117255039 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.087116687 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112931527 seconds)
    (97/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095360141 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.090421331 seconds)
    (99/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.110139256 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.117305915 seconds)
    (101/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.193394583 seconds)
    (102/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091212984 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.093511423 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093662671 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109584218 seconds)
    (106/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088184902 seconds)
    (107/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.144814471 seconds)
    (108/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.095554993 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.122465441 seconds)
    (110/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.0891664 seconds)
    (111/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.141715276 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111158794 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.088440621 seconds)
    (114/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06668573 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.121851077 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.194720737 seconds)
    (117/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097895618 seconds)
    (118/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.123672583 seconds)
    (119/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068514762 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.113270851 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.154272926 seconds)
    (122/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068824634 seconds)
    (123/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.332305634 seconds)
    (124/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.113721706 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.19448223 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094449759 seconds)
    (127/309) benchmarking ("sort", BigInt, false)...
    done (took 0.246740812 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095711863 seconds)
    (129/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.093126281 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089317931 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115976889 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095534529 seconds)
    (133/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.07753145 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.21481368 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.142471319 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.144095419 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132306162 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.068504764 seconds)
    (139/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.095760998 seconds)
    (140/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.11199619 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.1944418 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094091935 seconds)
    (143/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.140822892 seconds)
    (144/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.14517654 seconds)
    (145/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.068546481 seconds)
    (146/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.125763162 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.111329156 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094596484 seconds)
    (149/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.121314559 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.140199772 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.187185041 seconds)
    (152/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095115427 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109938459 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096887036 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109803628 seconds)
    (156/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096631785 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.138394914 seconds)
    (158/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.077685051 seconds)
    (159/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.140156 seconds)
    (160/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.174489591 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087540544 seconds)
    (162/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111530675 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.218134341 seconds)
    (164/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.152937599 seconds)
    (165/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117902867 seconds)
    (166/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.085269359 seconds)
    (167/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066284843 seconds)
    (168/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.092881008 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.087074448 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.111085003 seconds)
    (171/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.178972699 seconds)
    (172/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068806722 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.192725908 seconds)
    (174/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.115734187 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.13312618 seconds)
    (176/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.182926765 seconds)
    (177/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.1506349 seconds)
    (178/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.12410193 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.173037734 seconds)
    (180/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089073058 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.119175304 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.138655636 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.160683266 seconds)
    (184/309) benchmarking ("sort", Float64, false)...
    done (took 0.173960078 seconds)
    (185/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067528796 seconds)
    (186/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.187077129 seconds)
    (187/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.114689653 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087015725 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.140109603 seconds)
    (190/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113402056 seconds)
    (191/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.111396585 seconds)
    (192/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.177092869 seconds)
    (193/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112729404 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11922857 seconds)
    (195/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.174811788 seconds)
    (196/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.094356407 seconds)
    (197/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12538623 seconds)
    (198/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100834443 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.121076154 seconds)
    (200/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.175110585 seconds)
    (201/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095900976 seconds)
    (202/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.07555837 seconds)
    (203/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.092789757 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.19776682 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087895195 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.133743374 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.067249565 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109793422 seconds)
    (209/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093590347 seconds)
    (210/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112979192 seconds)
    (211/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.068713054 seconds)
    (212/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117719087 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12465554 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121260405 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094958936 seconds)
    (216/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.165751487 seconds)
    (217/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.09225545 seconds)
    (218/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12693992 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.11070963 seconds)
    (220/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096510703 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067552964 seconds)
    (222/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.093708052 seconds)
    (223/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.076897188 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116683241 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.1175971 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.111643391 seconds)
    (227/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094920558 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.219484728 seconds)
    (229/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.120702723 seconds)
    (230/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068149923 seconds)
    (231/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.09269848 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.166170946 seconds)
    (233/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.139104546 seconds)
    (234/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117708379 seconds)
    (235/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068922382 seconds)
    (236/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.087893747 seconds)
    (237/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.10134799 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.162378273 seconds)
    (239/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.092144981 seconds)
    (240/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090331516 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.106661131 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.140609034 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.198208885 seconds)
    (244/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.090818862 seconds)
    (245/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.087085783 seconds)
    (246/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067271406 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.13909286 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110612538 seconds)
    (249/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068149683 seconds)
    (250/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094028438 seconds)
    (251/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.187642979 seconds)
    (252/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.09108927 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095444861 seconds)
    (254/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066550005 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.112280286 seconds)
    (256/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095174801 seconds)
    (257/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.113592873 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.168440462 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.11085004 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.13468471 seconds)
    (261/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066882579 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.225706493 seconds)
    (263/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.093976803 seconds)
    (264/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.078399038 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.112043103 seconds)
    (266/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.068477743 seconds)
    (267/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.157180604 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.070337917 seconds)
    (269/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.088369444 seconds)
    (270/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.103554702 seconds)
    (271/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094524291 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111791934 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.087409503 seconds)
    (274/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.092296327 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.156248497 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.069194989 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095225369 seconds)
    (278/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.093926902 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086428947 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.103347727 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120697117 seconds)
    (282/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.226577604 seconds)
    (283/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.101073835 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088032026 seconds)
    (285/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.178182852 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096354346 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.091735895 seconds)
    (288/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.068765384 seconds)
    (289/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067939481 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.138998722 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068382553 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.111607435 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091413585 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.121685415 seconds)
    (295/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.079458037 seconds)
    (296/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.139318409 seconds)
    (297/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067082346 seconds)
    (298/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.103985434 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115436786 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.09361308 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093455953 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.111145201 seconds)
    (303/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.068700663 seconds)
    (304/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110540206 seconds)
    (305/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070980641 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.112369395 seconds)
    (307/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094107417 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125415506 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.0885726 seconds)
  done (took 40.202737094 seconds)
done (took 41.123916058 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101691802 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150146791 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096433297 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138236891 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125053629 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092379702 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.121511913 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09789422 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125870749 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126674362 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099148243 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094913574 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098269845 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122457315 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098031622 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141932864 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125518188 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095423159 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120462379 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086769462 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121064056 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087546964 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114789843 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070527464 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.124739354 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095026375 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.119433235 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.12180586 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088840396 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111057629 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091366113 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118957123 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088291549 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126048288 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093884288 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.121163499 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097660982 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.122903107 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088024329 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113425051 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120236105 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088735684 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119393575 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096180038 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117256535 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093604256 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120157877 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.10123061 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142144621 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117080799 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096466227 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122604592 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097543656 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120821597 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091914328 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.123976575 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092028114 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14472765 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12299071 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092643059 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120894083 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095616843 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.118388647 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095883147 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121984444 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.123115618 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099987651 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118331366 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097912923 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.118446076 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086748502 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121514641 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090681364 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113100213 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096585021 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.124082735 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.111168131 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.0941275 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11910653 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093305252 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.1114295 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090896667 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113705449 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095596497 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114772104 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071343368 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115744208 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095006062 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110802745 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097795027 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118332153 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094960829 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114251587 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098856328 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112278137 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092874807 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113778505 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088097691 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11573537 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091411933 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.113516654 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089671356 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.123127112 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089890482 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.120070921 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125018612 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088460053 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118430775 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087906747 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111192857 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103640571 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123273149 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087445685 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118804332 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086007659 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.121444611 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086409093 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112950843 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086320974 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11337802 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093553666 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113383036 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114127307 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095955251 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126654923 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088422785 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115712861 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090584602 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112254992 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094977421 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112849708 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.089042722 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114799328 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078557899 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115321114 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088469217 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.12104722 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091327096 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.121224733 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089836803 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.122154865 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091968953 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11976859 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093722203 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.113315011 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074490822 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118340137 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090549835 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114561245 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088371846 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114878326 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08737337 seconds)
done (took 17.201818533 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088145609 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187891021 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15432246 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.144754397 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109255365 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114711746 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123901013 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120917374 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.116548708 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14516169 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111987295 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134981429 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150802557 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08865503 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114020448 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09322736 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115372605 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103652446 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.149142503 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.135087058 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.167793018 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087341166 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.1493215 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138142404 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122420365 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115448771 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114022267 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091990229 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116429392 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104258933 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.136274145 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090509113 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.115136305 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136615021 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.106489786 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122439916 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08770395 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122095687 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087919652 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.115121354 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143734481 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136740202 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094552807 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.12022748 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092618603 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116221915 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.09025455 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123175093 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099426668 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.119056864 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127461564 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159855831 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09235356 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123882032 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087146174 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125272959 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12331766 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.092009153 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113131109 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091005425 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113461199 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092511535 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129611889 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144219395 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092412785 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12478937 seconds)
  done (took 8.767694662 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107369018 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141246672 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106611519 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.152218247 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112946089 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089022738 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114367075 seconds)
  done (took 1.811837915 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090368746 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136859354 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112798115 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.138447528 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134133446 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110834882 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125042102 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088992951 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134153978 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089016661 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137303474 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.154391734 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090886028 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122848295 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139603896 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089789088 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139251631 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089873141 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11874541 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113019888 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118817995 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136798435 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092116078 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114830945 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103927117 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115956487 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163988504 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095015563 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116520416 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092707574 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113505684 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.168215353 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105744757 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126931741 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087826604 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131465981 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129974631 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08849385 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131118608 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095961009 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130411093 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089976851 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117699421 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087868373 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121302902 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125629939 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090745186 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116491577 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093069323 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135127457 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090750225 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129064965 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090177723 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.122499172 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090823733 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123000679 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124162205 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091528591 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13548559 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091882183 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13331108 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106073973 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.131464171 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132315193 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093049158 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129795813 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103528643 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11939033 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090960006 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120387035 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132361368 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088199993 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116410609 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101342395 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11815403 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114049149 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.140850376 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11746542 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100850548 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115271242 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090832733 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115051683 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.114055374 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119619164 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089921531 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12023087 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093483446 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114577944 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.0888556 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119764606 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087428781 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118042386 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117981785 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.091374424 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118451051 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107584608 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116329696 seconds)
  done (took 11.997575649 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093433847 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116037996 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09344768 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115495451 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091461342 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.117134327 seconds)
  done (took 1.627299131 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117977176 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120300031 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10505014 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12375853 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158606371 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104636725 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.132286037 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125288032 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108887518 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130546935 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131800453 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10773783 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138513613 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123305728 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104708883 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122720488 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.131734952 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101229876 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130000568 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097681347 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140115462 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12475479 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098453754 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134892039 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119845832 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097132171 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127687949 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103821274 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130179407 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125063818 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097493123 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120450441 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096323843 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125751041 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132086829 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097198995 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122747591 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121396927 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101735894 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120184623 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10543064 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124778744 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129389713 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095548841 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.127161081 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.1229173 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096150689 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126904022 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.131021633 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095769893 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121279838 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095886305 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120926854 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094740509 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123456945 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12550863 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094865019 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.133390996 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123352925 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097480246 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119583047 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094181983 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126458853 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119855148 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106502541 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121817458 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.12228418 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.098139018 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123646528 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096951224 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121834747 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093864367 seconds)
  done (took 9.385993026 seconds)
done (took 34.574388352 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.753805113 seconds)
  done (took 1.749276947 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.804023377 seconds)
  done (took 1.803383974 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.559507487 seconds)
  done (took 18.561314465 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.515286188 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.598328848 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.89580355 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.182828728 seconds)
  done (took 3.192264126 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.971119127 seconds)
  done (took 1.98983487 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.301677521 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.262551295 seconds)
  done (took 1.568992514 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.85559651 seconds)
  done (took 1.865966431 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.370597346 seconds)
  done (took 2.379305376 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.343818303 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188657072 seconds)
  done (took 1.546632952 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.557800864 seconds)
  done (took 1.569142913 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.992454369 seconds)
  done (took 8.012736232 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.274686997 seconds)
  done (took 1.300979322 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.306828343 seconds)
  done (took 1.32413556 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.698231432 seconds)
  done (took 4.71629117 seconds)
done (took 52.591082237 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104669216 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128197818 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103520069 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12685538 seconds)
  done (took 1.473783193 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.1034364 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123239808 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101186148 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123318775 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127943194 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097038846 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125223234 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102066572 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122861481 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09729632 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123535933 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121405745 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099227065 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123788955 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094189429 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126446309 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099547639 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.123744419 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.1245471 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096911933 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119828012 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098441347 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12691622 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094515204 seconds)
  done (took 3.716839635 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106371941 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.12019869 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097723836 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119070006 seconds)
  done (took 1.471084715 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105378865 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143425272 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.140321204 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101315517 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.145129363 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137792615 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093304324 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118902591 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09485815 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126948351 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091329404 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150434096 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139454313 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099988651 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129076352 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.090018462 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119946794 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.139211524 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101296487 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127444519 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096435728 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127087942 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090934775 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141802572 seconds)
  done (took 3.872497037 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.174544813 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.150115727 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140843405 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095554597 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163917738 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.14287563 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08859032 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143027392 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08797022 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133906034 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.120163916 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.13378335 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131557115 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089384522 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116462794 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088018747 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131344349 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131013076 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.093070178 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.143904754 seconds)
  done (took 3.527034114 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104272429 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119030791 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088852535 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117736384 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099578128 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122850642 seconds)
  done (took 1.679744098 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098297478 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115800563 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090731717 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116081524 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095416253 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116269886 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089649707 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116669299 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091600237 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116207236 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090069843 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114116593 seconds)
  done (took 2.279546902 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.473422674 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.098587223 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127029205 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.115173546 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.09806529 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.116586439 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.10415027 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.120771519 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14234939 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.091103097 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117036252 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092924743 seconds)
  done (took 2.723522901 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240905438 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127461802 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289784367 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275806877 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15966553 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173546364 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.286706822 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164129143 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.22828344 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161064702 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205162802 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226445813 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155696931 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19130057 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140586295 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.147010454 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201112382 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244320841 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156652438 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204569094 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229947047 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168767349 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184063254 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15333299 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111966423 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200478635 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096360851 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132080018 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234711264 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17846148 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189365652 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16372092 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148990849 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239069396 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256466649 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222393197 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287242176 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110390916 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.176961729 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.171808787 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26700326 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113180321 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234442713 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157462481 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13376157 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192543583 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167739172 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.20511834 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.124223169 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140420586 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223657102 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214946147 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.223423644 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111839772 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23723912 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158451538 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.170456871 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195663591 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253019266 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22849933 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181929529 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122185429 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190360175 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193648946 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214150479 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170967288 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184073005 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150365215 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192876076 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190056066 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194708378 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190069415 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.215325043 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115196759 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170898136 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200936694 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174176037 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229908494 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206459714 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095966049 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171277965 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152358441 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135033778 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.198267668 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098864656 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24135894 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14983837 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164729794 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215826844 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162388001 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162822791 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202671329 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224850777 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150052796 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084407445 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156929135 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158030011 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19258385 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143198153 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16196005 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163573242 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133369787 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180502225 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126001672 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177017685 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091141612 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175166499 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212207482 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100712059 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162160623 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154446398 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152839603 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176149342 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228061136 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115764928 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136164586 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211107111 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20778005 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151868487 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18154066 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204054084 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146772872 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151778855 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200988036 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248201977 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142041245 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204268325 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159035773 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136486648 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105357984 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212419074 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156770301 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163721785 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10830076 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.212721987 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208808654 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12792016 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111849873 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214263146 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134603768 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106795265 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163149331 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150299627 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140922737 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149013709 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.15396483 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185304857 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180003786 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156567525 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16627063 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15491245 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257615852 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143447421 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151966747 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123206487 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122716878 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.19380761 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229538785 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105349709 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235822933 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.175009248 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231725191 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171112424 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109162746 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180846203 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132941472 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121641602 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196589487 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170930807 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163432132 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199467115 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229039748 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182049358 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.212781073 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174906922 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17529391 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167663653 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158455816 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111643009 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162531648 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196006255 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097296739 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14591106 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135982551 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149910714 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117380976 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137903318 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225249856 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172199442 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192822424 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160559175 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15270251 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183708673 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131285949 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177218081 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180236827 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150622392 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201297011 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226005663 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19052898 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146299217 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202966636 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122851877 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126530475 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115838973 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199691541 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108006065 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137983124 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168746276 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184200249 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182566301 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205682564 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212403792 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172239085 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222299679 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094990346 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171926551 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187782069 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178489509 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.190943333 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142713387 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152919198 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179404315 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161734563 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257296745 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17074209 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178528428 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236979094 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123709116 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134072941 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153993607 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188444747 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156411063 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179057577 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149308914 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143760034 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164188399 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134991579 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16321422 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185835837 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166173797 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220559593 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.123993564 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216542722 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100419663 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195384453 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161000866 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166741716 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083078542 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177632147 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236451507 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149837766 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170021509 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192138152 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133319781 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310297208 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212611851 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223905074 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139647805 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159908376 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13552019 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166208067 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200085735 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179697946 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161545896 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190712673 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160983152 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.110644775 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142570769 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15102096 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153489033 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132860956 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151226947 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179802103 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.111333519 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217193001 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163314917 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161495034 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17664743 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15105227 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118375796 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153783472 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246002674 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179154351 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240512411 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.123869336 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.21022832 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208462336 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128246521 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104599172 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135667053 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180462693 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138773104 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191817107 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.218281538 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205730614 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183428921 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219083197 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11242518 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122951576 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159932175 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175888698 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235444552 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125683158 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160493126 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234022686 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.145018789 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105971293 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174010917 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228077787 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120219327 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228728483 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080653816 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.284795283 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125282374 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13569719 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166660709 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209689448 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138854602 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18752521 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173269154 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170308498 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167400527 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151969633 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193132864 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243847509 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202651029 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18255474 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134670993 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157954368 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178983736 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224139204 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160538891 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112958179 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236254148 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197667634 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198120613 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.145204567 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171932032 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173007576 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159653246 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21817036 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108687036 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237741803 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136029943 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197427949 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155900564 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14500342 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178747686 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.190581506 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142815304 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219849188 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178176342 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108497667 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134866538 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171399302 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208701923 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160406026 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100685761 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181565314 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127805444 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19429128 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261022965 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138014802 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157174744 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150600357 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109074463 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159846291 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160864332 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143591492 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167087108 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207566822 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137454907 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19303804 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235135123 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170718427 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176374335 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14690193 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.695008856 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132373269 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196566231 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158490347 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236191989 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122035459 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174696433 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161052731 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16999097 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228183501 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162342485 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233269699 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196019463 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.210407887 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106338829 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159386453 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16350201 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147065092 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15321723 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170343461 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162621381 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154986759 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181265774 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171602961 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.137961882 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142148884 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202431505 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157589977 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18422581 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181601727 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141200932 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175460634 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21869662 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10684832 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.210438023 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20994228 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145783244 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15480737 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13513069 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157227013 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236198696 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127916315 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202188428 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208089328 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160155673 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170638247 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148856463 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194420367 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159730207 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18013977 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148445491 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.163110175 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158848599 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140052675 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102305095 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157579636 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169830268 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151479526 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160834196 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.169196768 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197353825 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125471958 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118536251 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226214173 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191478902 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248804462 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107670733 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138719017 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164583145 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153507775 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178694293 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182339198 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138248285 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139259723 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13811221 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13407668 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140944713 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129268513 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226039795 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169107534 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209570785 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.140623023 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279594112 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113369177 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158015436 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118445038 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104862541 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152024577 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149421451 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162289417 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222661838 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236382845 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150082662 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13520414 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152655237 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097886747 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139243292 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168275169 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165532741 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178829043 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147224181 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081158079 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160224432 seconds)
  done (took 83.681192665 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227989856 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.18481142 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.169209779 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.227812754 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197860881 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292308565 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.237206357 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.307637742 seconds)
  done (took 2.965434609 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096023937 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147234171 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.160619073 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134949139 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091819323 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.122100308 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.3502982 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.136165466 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117909688 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114848672 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175020826 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095111556 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.558341433 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091097415 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121349435 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.11143727 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092509976 seconds)
  done (took 3.836257715 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.480455211 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.750949202 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.515271348 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097964338 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.360276788 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113600861 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.093361645 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.201114832 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.116936308 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.502335773 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.782110789 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.168928686 seconds)
  done (took 19.309423577 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.101263974 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.122714288 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109079273 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.137736308 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096033443 seconds)
  done (took 1.699432535 seconds)
done (took 133.248615832 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.106214339 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407930765 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071918244 seconds)
  done (took 1.641921553 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.110715977 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138789264 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109294618 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.138737058 seconds)
  done (took 1.634450632 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099809063 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12939448 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109518837 seconds)
  done (took 1.46839035 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.326647949 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.193598706 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.166144939 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108134732 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13156818 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10293265 seconds)
  done (took 1.476892095 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099322882 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129135668 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098624163 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131649663 seconds)
  done (took 1.5943079 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.097138108 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071350538 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102826696 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074981049 seconds)
  done (took 1.475430457 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.116400533 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134236567 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105026677 seconds)
  done (took 1.492032066 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.132878437 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.140979641 seconds)
  done (took 1.410034621 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.107570997 seconds)
  done (took 1.23788034 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.123150122 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.172286716 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.193123432 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.168956092 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.233443222 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.1671626 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.144090489 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114562519 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.133271229 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.146818968 seconds)
  done (took 2.734052902 seconds)
done (took 18.089451104 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105055648 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.520191463 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.41516402 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11698781 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723587631 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381117074 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.031929374 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147853468 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16805106 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093940786 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140414405 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673599461 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.058908525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.475594232 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.017510353 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.37884859 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705800032 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093335024 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121314613 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094806718 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016118195 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092935681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124274448 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093195711 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705691816 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428376951 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095580633 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.378800434 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092465667 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128449788 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383438209 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124785054 seconds)
  done (took 17.251695475 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.098676764 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176237014 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098506292 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.140629609 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.125348255 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095727656 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126534265 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094605273 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182809354 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124558833 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111167355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122895387 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127828146 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095953468 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144028082 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09334232 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127281583 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09310057 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12313383 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123754403 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11326302 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121590315 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095240959 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123663631 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09480081 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137460312 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124945175 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094426522 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122368927 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098855149 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129609439 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095361859 seconds)
  done (took 4.915217134 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14435504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18557954 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13097598 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128202897 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170601062 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126579402 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.202471093 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11917198 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184644087 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125874881 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142695802 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093213639 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.159207398 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124835871 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115644558 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123417997 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097590141 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124179768 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093004381 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126218585 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143040196 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093816879 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124374652 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094750942 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126418618 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108294696 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125733419 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122894474 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095080726 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129246586 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099826077 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125614376 seconds)
  done (took 5.25034605 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098387656 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128255067 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110784409 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141782324 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096817357 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127472191 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098599058 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12661785 seconds)
  done (took 2.068543115 seconds)
done (took 30.618507823 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113718306 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.129209466 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10786852 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.137213793 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103341236 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.134198604 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092460648 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136969436 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.136415969 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103200539 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139912648 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092246577 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125791836 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091997215 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137389085 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097503941 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134933788 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102683996 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135605761 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.134691123 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096011401 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.136212797 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103544256 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135511611 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104523158 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135935416 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.140633861 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100574554 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12488628 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095440448 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.127100953 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.105055641 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126699771 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106037345 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129089107 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097259903 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.126607342 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094540674 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.135809582 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134639558 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.10061863 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135244684 seconds)
  done (took 6.109604392 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.110636901 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.142455285 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105558238 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082234728 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.119931688 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081105468 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.140135526 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079708853 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112414959 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108818259 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074470631 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108325915 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.0790999 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103353765 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078498331 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075520602 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.111412567 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077029522 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076800916 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107824577 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080294102 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073152643 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.110211893 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079105558 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075702611 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.11261525 seconds)
  done (took 3.65255705 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102502678 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.138221867 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113397818 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18708398 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.163829744 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.101012112 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136014107 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141992896 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110231514 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.123087794 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097129574 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152215144 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111951832 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131600207 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092603097 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139219305 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138669356 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095208704 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130501437 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113733386 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.141425036 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103126847 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.145714015 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135192246 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093122278 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125308068 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097242765 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137912273 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098352941 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.134211222 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097743024 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12795903 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125046108 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106428335 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128230991 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095219127 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.144828047 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104834278 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.133875312 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093730398 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.127623974 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124526752 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.123640876 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170852903 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09275317 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130750317 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.130900354 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103591096 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.124065962 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111845099 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133988545 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092688943 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.127379774 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092050975 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124883878 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137666557 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.095716303 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.128245065 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.10317848 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.128058902 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10623663 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.128308403 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108882661 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.124429594 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100441805 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.124718937 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.09298234 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122926094 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146652054 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094979274 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.167078007 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093952956 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125525534 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.132902931 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101066844 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130112298 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093785392 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141026456 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103857331 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.128493604 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102895991 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12760893 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.12666873 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111766339 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.126376449 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095591793 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125021794 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101145857 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.127615228 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094145226 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13932387 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09367569 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.128291178 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141455982 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093418387 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12575947 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100773743 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.130181406 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092674027 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13850419 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098167105 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.126287867 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.133665722 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094000225 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12712561 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103777775 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129516111 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091983607 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129384387 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099794414 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124934757 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09541085 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127781897 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095434258 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134058752 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131587915 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098154109 seconds)
  done (took 15.082196627 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.232575393 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218451911 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.242459009 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264598499 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.138318291 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115381678 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214687759 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.158108303 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.126999915 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.162145382 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164585281 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183590281 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140763017 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183326145 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.143381212 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.124804789 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112925363 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.168045671 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.218536465 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.295423324 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114642555 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.135873087 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164805746 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.163437275 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107152377 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134911587 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142772012 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.10618194 seconds)
  done (took 5.844548237 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.110072062 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158765884 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099681244 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.148128061 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.151821516 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093752394 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130786069 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095419292 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.138739983 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138474944 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093658935 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131014587 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.10138899 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134881879 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125148402 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103889087 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134927916 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095266135 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128367632 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097882028 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13248248 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102874423 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129353059 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123690893 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104055661 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123364022 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087889284 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144033257 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124439732 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116965843 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123278504 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100757077 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136787874 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094114212 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.126028125 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095951072 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.128129863 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095447408 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.127705679 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092559114 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.12414667 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078254578 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.124811923 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13932296 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101030624 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080578624 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131453615 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.130550413 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095560284 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122932838 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097039396 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127261355 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097271753 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132557152 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099628384 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126956184 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097488873 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118766396 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099862133 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.127279285 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085729447 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123757115 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099805119 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119970627 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101686718 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.131157778 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091941895 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.128218217 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098630699 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131598295 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095948202 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129102052 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092341147 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.128937692 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.09613257 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.13122483 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096426675 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.125651785 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.124211035 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095568258 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076429606 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125917541 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074413138 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.128799953 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091717221 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12474537 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096432029 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132240676 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.140140356 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095695065 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.134296943 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094085388 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124937438 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097001019 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.115670436 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097061138 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141591181 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143459086 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094595025 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123442836 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107772937 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.128198165 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092904599 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.109110157 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101540964 seconds)
  done (took 13.170541433 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129386709 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.157529072 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095767759 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.145887548 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158595949 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159093104 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101753445 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132902001 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095340819 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144803154 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094394807 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.134058575 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.098077652 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139822985 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159651875 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103375648 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12827475 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10739894 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.134329869 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172532249 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112522493 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144741506 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108957773 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126352624 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.130554998 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111002686 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164046968 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108176906 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.139060535 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.144506618 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109118698 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163194792 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144300963 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099206525 seconds)
  done (took 5.579228672 seconds)
done (took 50.579922982 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.244249419 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.482856977 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.240067578 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.26489943 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.271375631 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.272774195 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.257950885 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.255688621 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.347019181 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.244487055 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.497099189 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.001467312 seconds)
done (took 59.549785995 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.375404631 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.374782706 seconds)
    (2/2) benchmarking "String"...
    done (took 1.550503387 seconds)
  done (took 4.112905933 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.603680049 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.221993303 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.501534123 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.242341457 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.243468189 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.531712652 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.981900813 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.660094118 seconds)
  done (took 28.551873224 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.253576583 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.66782908 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.333709606 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.331864981 seconds)
  done (took 19.758022131 seconds)
done (took 62.572836791 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.262554981 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.267642324 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.279444502 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.221209603 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.361407089 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.284511539 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.846590106 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.297576796 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.270794965 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.227209335 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.263758264 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.255664022 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.248463501 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.319586101 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.254239076 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.242556908 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.264661013 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.811209337 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.672255469 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.26172495 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.262527875 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.317552931 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.25740968 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.244965699 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.323603652 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.244082977 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.256641082 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.251882087 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.189913466 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.248885958 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.280408159 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.514598163 seconds)
  done (took 192.474243131 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.245889151 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.157703615 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.253291512 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.291750253 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.831236753 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.440395386 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.381721908 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.908394494 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.262099539 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.26861865 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.449506241 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.245949596 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.516882787 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.21877947 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.26716917 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.335759407 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.449641873 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.525927349 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.279432157 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.4699955 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.247494652 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.487020459 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.410898157 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.417509821 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.305722723 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.322572462 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.268091926 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.284493839 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.434908892 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.394803058 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.277051142 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.266681881 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.923606778 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.105819971 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.247553648 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.27408908 seconds)
  done (took 151.646940399 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.551902512 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.248993997 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.248543857 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.248657928 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.284588542 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.2490097 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.889295308 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.888296997 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.788330599 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.513442416 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.314108034 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.568393973 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.24620053 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.346578794 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.259225336 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.246892495 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.264918148 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.292259682 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.246737562 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.249408899 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.888499332 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.262326675 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.403320273 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.255700577 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.250246111 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284827893 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.644164017 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.247523771 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287111017 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.592798395 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.299963868 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.247333509 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.65889078 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.435656694 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.36506684 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.249536183 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286353582 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.25155271 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.539164456 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.248022846 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.251706277 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.25452481 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.936541961 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.247830997 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.860307078 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.248242449 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.242896875 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.247554222 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.251108252 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.547160577 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.97237847 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.265629505 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.249697533 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.253316437 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.250869386 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.250642799 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.288319637 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.493634069 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.34857209 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.26947434 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.255037298 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2866226 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.252151529 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.813057798 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.248969167 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.252616514 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.306707106 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.357327813 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.341806355 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.892762354 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.251266839 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.252080499 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.353220639 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.373044707 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.250346929 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.252966464 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.25298735 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.25147963 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.366907763 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.251219658 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.721363112 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.256818435 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.254242484 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.314321765 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.350536103 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.251150289 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.67947143 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.249909027 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.253203425 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.066475462 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.250224307 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.354360921 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.250657423 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.253732573 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.254125107 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.723275565 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.895247953 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.549661371 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.251256557 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.718367318 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.255399675 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.741864437 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.895784248 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.975514717 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.254739317 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.370523565 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.255763041 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.252683341 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.255269251 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.25122506 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.283029167 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.272577171 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.31286156 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.251035782 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.654486605 seconds)
  done (took 353.04709012 seconds)
done (took 699.8910861 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.926313968 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.906421438 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.026722696 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.900863401 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.884115022 seconds)
  done (took 10.821840324 seconds)
done (took 12.001221205 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.45758821 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.450416065 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.318189761 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.45097781 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.283470516 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.478243607 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.430657249 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.272625319 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.360670213 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.343237052 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.362457897 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.309062676 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.286665731 seconds)
  done (took 18.983110123 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.593417496 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.595222009 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.317895955 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.594530181 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.296212623 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.589747932 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.469404807 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.490400517 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.4740273 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.289621737 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.269675305 seconds)
  done (took 17.160705367 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.626790488 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.587731836 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.320242538 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.625744327 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.294613308 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.612638248 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.467448244 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.488274301 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.481867453 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.290224782 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.270032008 seconds)
  done (took 17.246755799 seconds)
done (took 54.56969992 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.26549914 seconds)
  done (took 2.446242331 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.30260802 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.471800494 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.284171948 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.268688932 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.267809126 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.268760381 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.271480175 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.268197727 seconds)
  done (took 11.586621516 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.263968449 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.267626609 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.266164196 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.265060215 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.266150593 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.264408951 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.263198888 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.263405385 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.26199411 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.266057538 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.266820747 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.266923783 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.263099247 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.265054678 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.266399795 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.267275587 seconds)
  done (took 21.426279318 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.265823905 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.26369363 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.265986361 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.264944215 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.263293642 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.265290695 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.265734388 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.26477372 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.264828606 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.265080357 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.266039335 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.265627942 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.265539478 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.265544933 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.265392107 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.267209402 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.265987998 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.266012329 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.270381017 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.26609049 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.26679494 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.265300516 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.266836854 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.26392775 seconds)
  done (took 31.561396687 seconds)
done (took 68.201696003 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.66465737 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.220571683 seconds)
  done (took 10.068158673 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.269668886 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.269084177 seconds)
  done (took 3.725418241 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.269283473 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.269438436 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.269922682 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.269894566 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.268919573 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.270183143 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.2692097 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.270376632 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.26942512 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.268585516 seconds)
  done (took 13.879596052 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.268747926 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.268858395 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.26658835 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.269903482 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.26973938 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.266686766 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.269525286 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.27070095 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.269175062 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.266800548 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.271868728 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.26775664 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.270586727 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.268666992 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.270970905 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.268338078 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.268118676 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.268866886 seconds)
  done (took 24.026546875 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.270018059 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.269878119 seconds)
  done (took 3.726948647 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.268888275 seconds)
    (2/7) benchmarking "second"...
    done (took 1.267094484 seconds)
    (3/7) benchmarking "month"...
    done (took 1.267871574 seconds)
    (4/7) benchmarking "year"...
    done (took 1.268445803 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.266808578 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.26931913 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.268977523 seconds)
  done (took 10.062488921 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.272001945 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.449090382 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.528759857 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.878000563 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.273675239 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.275062903 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.128522208 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.275059922 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.276245801 seconds)
  done (took 14.543706001 seconds)
done (took 81.216393569 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.346632404 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.284587053 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.571161659 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.287780214 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.283005684 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.610052088 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.302893885 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.396972511 seconds)
done (took 38.271320038 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.26744413 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.049675339 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.055765853 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.266177319 seconds)
  done (took 11.559302239 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.257183556 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.298142384 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.249155245 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.365358316 seconds)
  done (took 18.360697144 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.399673972 seconds)
    (2/2) benchmarking "read"...
    done (took 1.604268885 seconds)
  done (took 5.192873956 seconds)
done (took 42.567757465 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273837797 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.271995597 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.270630121 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.274215424 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.273264427 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.270697021 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.274447222 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.271640418 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.270384895 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.27519264 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.274165603 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.273578798 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.275409689 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.273232265 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274601764 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27143209 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271668899 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274369118 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.272952919 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272013118 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273514331 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274461606 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.27190307 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.271779188 seconds)
  done (took 31.739359719 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.276274101 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.273521341 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.275576499 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.275535158 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.272342917 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.276069891 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.274899928 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.272830438 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.275878847 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.276749544 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273016291 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.272677212 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.276402797 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.273462318 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276068085 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.274161502 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.275095825 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273979663 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275969045 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.273775327 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.277051723 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273907677 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.274650956 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276207632 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.273895008 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276766176 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.276803596 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.27552655 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277382376 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.274899002 seconds)
  done (took 39.443224539 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.281359644 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.285163216 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.278066712 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.276196983 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.27780383 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.278586633 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.276449953 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.278579176 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.278380192 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.277090044 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.277331496 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.277616368 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.278036699 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.276974171 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.278347996 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.278342062 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.27813626 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.277836312 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.278438455 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.278342399 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.278013893 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.278323165 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.278823186 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.279151313 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.277982544 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.278615868 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.278274882 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.279707424 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.279146793 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.278305032 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.277855287 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.277773319 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.277926132 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.277196439 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.278785149 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.278854489 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.2853834 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.28520164 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.279452003 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.27861711 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.279422331 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.279707714 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.278876075 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.279489368 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.278979754 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.279195185 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.279393153 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.280065644 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.279433671 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.280822274 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.280262524 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.279369597 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.280248892 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.280037705 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.279890941 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.280675938 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.280343592 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.280349857 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.280656958 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.281910706 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.280017751 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.280919682 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.281350707 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.281279588 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.281478937 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.280813342 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.280436816 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.281051275 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.28139909 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.281541378 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.281876235 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.281225801 seconds)
  done (took 93.317406498 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.280716759 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.27897792 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.279329291 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.279287671 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278988327 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.282631914 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.279944193 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282959995 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279122852 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.282378243 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282593481 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281088556 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279280957 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282909337 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282428649 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.279499439 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.281115475 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.280600304 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.283629702 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.282521151 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283450725 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.280400846 seconds)
  done (took 29.381754226 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282745299 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.285390971 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.281018859 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.284099006 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.280667382 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282985048 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.282445235 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.285572049 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283769355 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280593471 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281350737 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284241766 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.281102937 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288553899 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281569276 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.283325751 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284249763 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.282432169 seconds)
  done (took 24.294168891 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.281065459 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.281122635 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.285215139 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.282424751 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.283024561 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.284896787 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282645131 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.285329466 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.284223905 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.282510517 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.28454279 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285374637 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.286091973 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282949928 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285641392 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.282419408 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.285332556 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28313308 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285209258 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282842685 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.282126739 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286272364 seconds)
  done (took 29.444798326 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283874462 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285615302 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.282238925 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.283680266 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.283044842 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.285679566 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.286771778 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.282300274 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.286964345 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.285808863 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284437517 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.286150834 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.285648339 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284853816 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.285480223 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283815797 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.287182606 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285278221 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28691993 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.284125056 seconds)
  done (took 26.899827519 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287068715 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288394031 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288260059 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287253844 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287434205 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.287707688 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28861983 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.288275282 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288526126 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288776217 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289268171 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288569503 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288954079 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289782548 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288573432 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289041663 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288551952 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287124949 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.289705718 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289560572 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290281237 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289543752 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288100007 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.288841356 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.28905711 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287904791 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29002284 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289691955 seconds)
  done (took 37.28451609 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288251992 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.289698134 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.286670725 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.287303782 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.287156093 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.286852967 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.288034964 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.286953021 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.289985884 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.286991662 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.290511948 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.290112193 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.290523512 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.289863468 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.288537229 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.290954854 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289582562 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.288451104 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287577792 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287363131 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.290984951 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291337095 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.290994717 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.287592392 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28752245 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.289531029 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288542482 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.288995693 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290686651 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289634672 seconds)
  done (took 39.872450372 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.308796817 seconds)
    (2/2) benchmarking "in"...
    done (took 1.309449484 seconds)
  done (took 3.823508251 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.290358089 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292059005 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.290761633 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.289324517 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.289232284 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.293116526 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.291949411 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28914011 seconds)
  done (took 11.530997985 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.290598451 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.292517931 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.291212659 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.292178923 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.292567782 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.293016315 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.298804096 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.310775678 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.291971053 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.29400789 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.301857049 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.301003242 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.294195312 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.291975551 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.291890537 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.294670273 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.293149789 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.293308701 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.293187026 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.29361259 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.293323894 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.294989845 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.295123068 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.290449792 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.295351457 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.305200823 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.315117817 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.293831325 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.293641308 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.29875436 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.294319547 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.292507741 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.295189801 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.29469822 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.294938976 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.294821368 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.302323526 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.31334901 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.300178796 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.314406257 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.293630983 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.29280316 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.295465145 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.295372098 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.297125194 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.295199402 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.294916508 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.293231223 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.295034769 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.29969582 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.30209708 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.294862473 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.293084774 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.297513306 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.296233931 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.301181988 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.312335934 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.30001027 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.305363715 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.306081601 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.329164565 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.320967911 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.297749896 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.295470062 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.306439384 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.320528145 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.30270798 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.312519238 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.294033964 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.297518093 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.302580319 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.328452025 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.322747396 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.29742286 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.295362431 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.297574086 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.296889658 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.297914863 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.304426303 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.319320748 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.297169464 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.297356866 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.309594458 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.322509204 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.297767478 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.298197148 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.298156482 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.297193221 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.300516697 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.307405891 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.318616138 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.299551968 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.298140665 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.297467567 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.300055669 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.298880429 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.297729255 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.298502084 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.296319075 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.297259376 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.296280733 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.304152338 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.305136701 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.298889385 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.297624854 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.304372295 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.319184001 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.297805281 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.305007664 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.299139088 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.299321515 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.302530504 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.305952647 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.296631013 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.302881292 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.30741843 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.299537296 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.301440468 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.299156859 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.300218451 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.310211765 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.330142413 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.300523914 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.300485443 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.304872583 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.313119328 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.300049932 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.302742089 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.301180487 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.297922039 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.298885373 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.300506299 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.301720923 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.300786171 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.300976476 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.302385442 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.299280081 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.302149736 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.300906657 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.301417248 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.301649775 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.301817619 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.301795816 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.304192803 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.302073976 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.301818119 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.308463233 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.320076117 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.302645379 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.302803628 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.298768831 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.30271785 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.302528702 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.303283174 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.300949372 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.302842652 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.302077261 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.303572057 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.303032665 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.303065938 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.303665145 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.305597902 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.307236382 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.304103808 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.307373931 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.301970285 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.30160345 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.302110281 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.303007594 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.302826857 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.304393212 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.302317906 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.306730914 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.313250144 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.303502361 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.302501623 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.306882286 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.303747698 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.305218117 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.30353868 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.30876195 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.312873214 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.304352322 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.310525605 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.323307573 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.305070615 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.304720415 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.304656705 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.30444428 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.304401967 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.307944301 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.315505442 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.318487901 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.32988188 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.306688594 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.309577098 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.307019512 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.309986051 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.310394495 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.304750936 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.305491977 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.305195279 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.305216913 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.305902236 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.308280999 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.306310113 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.305385867 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.30662855 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.306240728 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.30712373 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.305281614 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.306413454 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.307074382 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.304209978 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.30706089 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.306793484 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.306586028 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.305057536 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.30680843 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.306132745 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.306952626 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.307448168 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.311576781 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.303169841 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.306518676 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.308109673 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.304350964 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.303128171 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.307591 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.307669071 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.306669654 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.313290497 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.324648067 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.308233589 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.313950985 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.324358765 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.308064649 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.309315884 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.30874461 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.306015488 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.310932545 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.318394401 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.30798689 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.306936181 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.306226806 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.307759498 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.310685365 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.315938551 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.325390785 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.308768599 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.309275 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.309468124 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.307543692 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.308938279 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.306508731 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.307300541 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.308976809 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.310704365 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.310101452 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.310796607 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.309223993 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.309036436 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.307078343 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.310428183 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.318243322 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.314183182 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.308671704 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.313366739 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.3118762 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.315583973 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.310701583 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.310795735 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.311113504 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.323596589 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.336551448 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.319190861 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.330785011 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.311417272 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.315982573 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.332897417 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.315604502 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.310262455 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.312719312 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.311972849 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.312290967 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.309640193 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.312470162 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.312474061 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.312632681 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.312791001 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.31647351 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.312094485 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.312271313 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.312010786 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.311923366 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.312414593 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.312042051 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.313327408 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.31540515 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.313229701 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.309137606 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.311329488 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.31821489 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.330240208 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.310950916 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.311703103 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.312277498 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.308029917 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.314426082 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.312970629 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.314023007 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.321417223 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.316183982 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.323219656 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.317048806 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.321883829 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.310478621 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.314085321 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.322777299 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.30787619 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.30927671 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.312497847 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.313576498 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.317507604 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.334390728 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.31553081 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.318266464 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.315040306 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.316078043 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.314732804 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.314237146 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.315247755 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.314298201 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.323831149 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.334164512 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.318772709 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.316147097 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.313027342 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.313831532 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.314305555 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.312624829 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.316296325 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.316765677 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.313394493 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.311989918 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.31480832 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.312700573 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.314554236 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.313019498 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.313506283 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.314250982 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.324149091 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.337550773 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.318326381 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.314178875 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.32389139 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.336784991 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.320956637 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.335362613 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.316174873 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.315882613 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.315034409 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.319735542 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.315758415 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.316453409 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.316898595 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.316494455 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.321768777 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.317470754 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.318282837 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.317066498 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.317363925 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.31699317 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.328779555 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.340411175 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.317551321 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.323007475 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.316758383 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.317744327 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.322580247 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.31746841 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.318085953 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.320840929 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.33035015 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.329225924 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.319541182 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.318679684 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.318707371 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.319252449 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.317790342 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.320257596 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.318862632 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.318514193 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.320539327 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.318811015 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.32241783 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.319653067 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.318971399 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.321190451 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.319378484 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.329083062 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.341012875 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.32055649 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.320044714 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.320323889 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.319762223 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.321505262 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.321120381 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.319853622 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.320618799 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.32102821 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.328967153 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.327697167 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.323152617 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.32074918 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.321077935 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.319424553 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.322186975 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.321752145 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.320600018 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.319887287 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.321802991 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.320637788 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.322476084 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.32209783 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.322735474 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.321528247 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.321530862 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.325045186 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.331338969 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.321991755 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.321215044 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.32272389 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.321514113 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.321800001 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.322237271 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.328754581 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.347174342 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.334238686 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.33354807 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.328247663 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.323657396 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.325896942 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.333524033 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.322779156 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.323493187 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.32399363 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.324026494 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.323450918 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.327221513 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.323959651 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.330488467 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.344273671 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.323626175 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.332066443 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.343843571 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.323704988 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.324548 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.327993238 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.32437239 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.319750837 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.32505474 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.324100157 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.332318696 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.343976627 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.324481155 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.32421445 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.323934072 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.326257829 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.328221008 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.325142552 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.326571358 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.322857124 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.326831905 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.325951774 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.325697421 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.323810607 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.326106171 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.325029519 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.329243387 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.332054385 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.324767164 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.327509965 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.325947383 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.326373024 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.32680102 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.324578352 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.323959093 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.322752505 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.325428482 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.32552532 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.324088946 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.327609571 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.326192443 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.327154449 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.325590888 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.325900125 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.330014206 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.340617025 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.337157987 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.325366429 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.326300614 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.327973354 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.32976072 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.326312047 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.325532749 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.325695049 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.327908071 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.32791712 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.327311104 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.326907342 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.331634442 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.345793571 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.346104138 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.328562088 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.327254431 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.329011001 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.328915707 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.32529918 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.328456237 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.329680955 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.331862557 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.33774568 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.329245155 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.33394071 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.349818588 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.330634967 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.334394971 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.332177855 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.338516127 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.330444429 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.327162489 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.328119591 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.333364767 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.349448524 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.330351116 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.34155416 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.363817454 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.351225639 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.331422394 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.330913268 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.328305076 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.329362937 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.33041135 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.331413119 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.330786753 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.330999493 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.330905493 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.330330171 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.336150278 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.330564316 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.333294284 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.33075659 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.330106549 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.332077993 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.327691849 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.331098361 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.330014949 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.331104505 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.331208791 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.331204733 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.330547034 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.34571481 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.359302453 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.332222058 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.331625909 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.327028755 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.334819818 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.334156063 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.343920469 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.34105757 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.331091143 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.330028959 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.331146267 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.331962933 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.331211598 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.332458293 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.332204375 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.331128223 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.3306755 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.345059563 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.36056507 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.336992362 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.330219355 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.331440386 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.330589798 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.332744727 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.333529168 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.329104465 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.329598572 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.335358048 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.334524957 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.331917218 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.333778448 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.337230209 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.343285979 seconds)
  done (took 785.243424212 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.328556595 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.331151863 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.33231609 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.331516921 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.331910659 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.331863307 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.330758662 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.331809647 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.332044236 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.331111007 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.3305481 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.332540506 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.331943869 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.331611883 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.332328408 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.33356412 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.332303152 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.331966624 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.333229514 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332923984 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.332852829 seconds)
  done (took 29.21326896 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.334687951 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.331529102 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.333099514 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.33605334 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.333218159 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.335630636 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.333223178 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335184576 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.336199312 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333009875 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.336313231 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335687693 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.333558057 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.332997107 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333329437 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336056144 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.335565594 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.333168126 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.335537723 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.333991191 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.336416065 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.333875066 seconds)
  done (took 30.602420233 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.336664446 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.336744836 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.335225872 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.334781614 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.336807567 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.334411318 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.336282091 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.337382032 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.336652884 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.33786401 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.334597739 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.337371233 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.341094657 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.342889056 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.339179029 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.337295616 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.482124384 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.336925066 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.336615954 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.33701472 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.333548356 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.343809872 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.355814697 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.3353997 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.336477371 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.335842346 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.338042716 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.338615073 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.337252178 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.338834007 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.341968326 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.337096371 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.338220944 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.339792178 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.337199926 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.339709939 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.339530971 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.338587743 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.331457439 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.338097527 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.349389289 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.361691091 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.337328288 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.344977458 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.359897105 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.339621566 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.343297173 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.346835658 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.336795109 seconds)
  done (took 67.030061073 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.337813894 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.33992522 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.33689698 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.340386139 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.340006999 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.340725186 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.340405195 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.34015636 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.338100222 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.338170202 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.342141384 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.337759817 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.338187519 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.340316904 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.341332719 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.338418869 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.338382423 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.337915289 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.338871747 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.338336336 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.338028316 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.341644122 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.340379007 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.339424778 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.341545684 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.338206771 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.337888235 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.341324029 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.338971277 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.340079127 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.342249561 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.341653329 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.341956408 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.340435172 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.338973363 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.341103777 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.341950517 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.339240166 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.342626202 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.340166006 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.342318102 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.341571191 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.342619174 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.343381192 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.340150171 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.340467028 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.339097474 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.340264096 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.340526424 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.342274111 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.342196669 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.341335044 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.343185558 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.340548446 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.343524379 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.343078839 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.34062131 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.340881166 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.342838424 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.34161984 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.341522685 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.343170984 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.339710233 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.34401441 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.344250273 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.340762998 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.341276064 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.343849607 seconds)
  done (took 92.41409552 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.343198454 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.341815636 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.342304851 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.341505333 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.342739754 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.341768397 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.343091696 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.342520345 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.342923107 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.342819287 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.345059512 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.344546305 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.34367732 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.341526385 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.344211152 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.34109647 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.342993069 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.343404109 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.339213506 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.3439306 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.34490648 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.343691663 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.343277262 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.344386341 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.341341488 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.344397057 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.344756826 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.344983036 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.343337943 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.342474728 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.344690382 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.344770413 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.344361505 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.342427779 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.343655727 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.343683449 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.343692673 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.343846325 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.344551899 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.343578329 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.342101258 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.34555402 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.344472564 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.344913969 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.343198985 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.345860631 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.346627548 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.346932775 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.346692116 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.347462758 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.34624549 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.346323745 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.34315649 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.345555292 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.347606161 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.346780955 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.346636141 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.345867328 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.346509005 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.345596116 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.34505233 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.343843563 seconds)
  done (took 84.589092777 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.34725634 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.349120566 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.344677634 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.34593658 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.348776952 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.345570131 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.347305105 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.347780849 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.348629234 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.348489907 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347921703 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347175489 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346511506 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349901351 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.346298513 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34665355 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346851282 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.346908914 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.349279328 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.346056214 seconds)
  done (took 28.203583546 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.346430953 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.350373296 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.34604843 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.347691729 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.349825988 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.347578251 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.351498357 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.349231528 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.34586449 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350819422 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.351084347 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.349835091 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.347809222 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.348979261 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.352156481 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.346890475 seconds)
  done (took 22.840646631 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.348009563 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.349530207 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.350113787 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.350054892 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.347585277 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.347294646 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.352018615 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.347881643 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.348371081 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.352149254 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.353448562 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.351578112 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.35122365 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.350926698 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.348451164 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.35093856 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.349000643 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.349180286 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.351047386 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.351146241 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.348658739 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.349444859 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.351702429 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.35195198 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.348449743 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.35018519 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.348542909 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.34887473 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.349123672 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.351584738 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.35053832 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.3500336 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.349473495 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.349656116 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.350803383 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.347777475 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.352235797 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.35375077 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.352104225 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.353896956 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.352850929 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.350573502 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.353542757 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.35284301 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.351605183 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.352762286 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.350692679 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.351249415 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.350986539 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.350057993 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.352578959 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.353487457 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.350563376 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.353355793 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.354048203 seconds)
  done (took 75.549245788 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350907025 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.355358782 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.351162424 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.354134029 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.354406866 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.352008441 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.354672208 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.354558869 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351554278 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.353450155 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.353338306 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.356048974 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.351723706 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.354540021 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.353928442 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.354773197 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.353335047 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.351465697 seconds)
  done (took 25.624096732 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.349826843 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.351421741 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.354534422 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.352861331 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.350272645 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.353072348 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.352478885 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.350436408 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354477627 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.352819393 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352743915 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.354613256 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354405712 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.352658831 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.351529332 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349216929 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.353831415 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.351799933 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.349865117 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.349197886 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.357559409 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.354274233 seconds)
  done (took 31.0171349 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.350085655 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.350743882 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.351043598 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.367800772 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.373177648 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.374237051 seconds)
  done (took 9.431633766 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363117987 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356374802 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.354164566 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357712061 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353670877 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352836652 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352261114 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35327118 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355490311 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353899357 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353845016 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357125811 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357399277 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354058437 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354470715 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356533834 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354892716 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354005728 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351947637 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356853469 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352201154 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355067662 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352938307 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35342652 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35236025 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355502231 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354775548 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35719262 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353319314 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354639034 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358387238 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352432788 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355506146 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353977059 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356615536 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355634009 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353389033 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356275533 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355969484 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357229575 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.358971869 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358841059 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359993539 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357604329 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358223545 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357212848 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357253333 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354169268 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356339321 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359369768 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356619449 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354159034 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358108897 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357598457 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357552138 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357454991 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353482058 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355413581 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357324765 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356237151 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355268516 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35784339 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355565936 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355341438 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357140702 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358658227 seconds)
  done (took 90.776282062 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354957062 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.36085341 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359455866 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358453616 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356073768 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359615416 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358878042 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359642345 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356888368 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356039432 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359952328 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359285099 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359305785 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356911641 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358313577 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3589524 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358861588 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357103087 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359088568 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360253444 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356021026 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35621457 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355525018 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360033995 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358659918 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359875625 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357557814 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356417306 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356291493 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361022455 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360158335 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358234717 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356226067 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.359013477 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358695473 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359155912 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356649518 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358027371 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358042949 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362892797 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357689365 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363623428 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360684517 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358780186 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360260921 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358885361 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362141065 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359637911 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361137486 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357537791 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362865694 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359724833 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360046074 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359827877 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361056795 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360989665 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358425607 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359817109 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35779154 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36185241 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361945431 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358343113 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362549232 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359815101 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362236588 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359565468 seconds)
  done (took 90.971186825 seconds)
done (took 1831.726352729 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.367785271 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.358732739 seconds)
  done (took 13.998596618 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.523625056 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.48486229 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.360159999 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.386601697 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.358862167 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.368175558 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.368117025 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.358645175 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.360636685 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.359088094 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.359897134 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.550511447 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.369311944 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.36043651 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.360215813 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.455583719 seconds)
  done (took 43.666998852 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.395831733 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.366080681 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.500001134 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.385394495 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.394653326 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.579108774 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.429229782 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.3666827 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.570629974 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.417737736 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.165554868 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.391420805 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.364890344 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.644460621 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.384921618 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.574565084 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.659429298 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.164905286 seconds)
  done (took 32.029173513 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.901970712 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.383701597 seconds)
  done (took 9.561668545 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.39804787 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.390334206 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.411085171 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.362555867 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.403524262 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.422394621 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.445776682 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.431727874 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.364990406 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.416909111 seconds)
  done (took 65.334679498 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.388103355 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.366678197 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.366762217 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.364927719 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.357727574 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.357783858 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.364821999 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.36095755 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.725426115 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.517513967 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.37259818 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.373697959 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.387070275 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.367596166 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.36385877 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.407311403 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.528548199 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.367650743 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.36470876 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.374535938 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.369173133 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.463590862 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.416489039 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.368488252 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.514822159 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.675904523 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.368993301 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.374466006 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.554223313 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.370415956 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.367412689 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.36639158 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.369443022 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.015883449 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.885969956 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.380967789 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.39495521 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.375892722 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.366536817 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.541085571 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.370396122 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.374236059 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.36134813 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.892011474 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.511516701 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.499466419 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.794969808 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.385621708 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.37061264 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.435655156 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.374268585 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.368933754 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.400843481 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.166079247 seconds)
  done (took 115.204518411 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.386264366 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.750766256 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.533088035 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.381386364 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.235003292 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.197199413 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.377774473 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.698425204 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.408186555 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.360385819 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.663717537 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.921395253 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.387311592 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.407945427 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.806060663 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.422740498 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.361170503 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.212615923 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.380525157 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.366483991 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.906679011 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.365225298 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.361510595 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.619992418 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.403478697 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.865258419 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.011006497 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.954603738 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.383795368 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.361761439 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.899647388 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.391151941 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.405271264 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.363549255 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.652093302 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.770317976 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.760291538 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.385690696 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.38169261 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.364932989 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.398953806 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.863415961 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.770897472 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.381104542 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.382004918 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.867563364 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.379753156 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.368095725 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.367466247 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.579344196 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.222821537 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.365636522 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.095468922 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.368238112 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.748937294 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.454008982 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.366499779 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.89530739 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.382541644 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.617657429 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.409657257 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.366874184 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.365048699 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.365853624 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.363430363 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.767165439 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.749317233 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.367180876 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.759840451 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.911140983 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.386208614 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.951152365 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.309945248 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.371407497 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.435987344 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.365324907 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.961012389 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.905807123 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.387878504 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.367133984 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.747488028 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.386092944 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.686315442 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.384682403 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.366533194 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.921758758 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.369231467 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.403027813 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.365633858 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.374390643 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.12021062 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.37229687 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.682325219 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.443451136 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.367354903 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.365806473 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.387417044 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.366128136 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.389390164 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.368135875 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960020966 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.385617537 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.378702013 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.385589817 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.366961039 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.366867559 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.369571306 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.367847305 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.59893202 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 4.008869428 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.388873493 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.368871907 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.366663168 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.387628731 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.610403447 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.372111217 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.724307622 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.386081883 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.37105186 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.369422251 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.242364205 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.408438887 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.36866501 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.370095376 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.299154922 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.585310703 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.393777245 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.369224225 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.368686603 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.38943976 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.888580826 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.39352006 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.387182217 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.372910994 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.136660783 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.419207426 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.373332874 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.877931258 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.383685785 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.369843283 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.369823926 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.370369066 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.667956418 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.669602736 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.587289638 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.373940628 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.393198255 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.103497558 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.389311288 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.521914043 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.393198248 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.366189661 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.572413121 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.591297926 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.370624403 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.999930094 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.37220728 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.597459401 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.393173209 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.687075889 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.913353828 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.386391563 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.371923575 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.128530312 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.101773318 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.054328991 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.374134476 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.670305566 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.368853452 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.853725815 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.370694898 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.372272176 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.953094186 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.373061846 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.378259189 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.371904075 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.3715535 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.511427609 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.550041828 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.574647316 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.377238771 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.870328299 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.426369524 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.389979771 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.383719267 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.372409887 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.721269801 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.462322015 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.376003475 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.410634696 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.371962 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.37746193 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.8944483 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.302344826 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.379446952 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.530742826 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.06467262 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.390633504 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.374189096 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.168563743 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.59452259 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.968644655 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.442628395 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.729778089 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.392293786 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.413939372 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.176259414 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.39670966 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.895631196 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.393032066 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.374501246 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.018581329 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.390268447 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.493679328 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.374475683 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.373743805 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957736816 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.39074272 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.378641061 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.902681049 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.396541947 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.654264539 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.378089201 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.389783524 seconds)
  done (took 1124.0607989 seconds)
done (took 1405.129256222 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.376589843 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.375488569 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.364276738 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.38064338 seconds)
  done (took 26.788411902 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.384302183 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.382287767 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.383208537 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.381798096 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.384185205 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.381455511 seconds)
  done (took 9.592056716 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.626253142 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.383315143 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.381671847 seconds)
  done (took 19.685178404 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.613598651 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.842800729 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.798274957 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.963763081 seconds)
  done (took 11.514124672 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.382392394 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.383008548 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.383521914 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.385036611 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.386475455 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.388344045 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.386009885 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.38486897 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.38776068 seconds)
  done (took 13.759908821 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.88655075 seconds)
done (took 88.518063098 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.910060996 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.379114304 seconds)
    (3/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.692962921 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.711132213 seconds)
    (5/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.561406633 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.021786345 seconds)
    (7/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.291024372 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.417307336 seconds)
    (9/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.404175955 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.447518417 seconds)
    (11/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.357916099 seconds)
    (12/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.37566712 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.426725438 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.774153157 seconds)
    (15/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.414795717 seconds)
    (16/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.295065994 seconds)
    (17/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.381923136 seconds)
    (18/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.951804796 seconds)
    (19/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.502852443 seconds)
    (20/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.357321228 seconds)
    (21/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.358545758 seconds)
    (22/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.358538999 seconds)
    (23/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.318819539 seconds)
    (24/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.404682694 seconds)
    (25/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.44407734 seconds)
    (26/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.617587323 seconds)
    (27/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.18029494 seconds)
    (28/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.396933685 seconds)
    (29/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.501567406 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.243463549 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.483031487 seconds)
    (32/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.068817848 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.486248901 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.359468288 seconds)
    (35/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.770846981 seconds)
    (36/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.443593669 seconds)
    (37/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.376356423 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.869915666 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.398888005 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.434913688 seconds)
    (41/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.363538543 seconds)
    (42/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.516856226 seconds)
    (43/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.309700442 seconds)
    (44/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.484701838 seconds)
    (45/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.379482109 seconds)
    (46/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.366917263 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.493433638 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.91974087 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.666719378 seconds)
    (50/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.799687827 seconds)
    (51/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.384666392 seconds)
    (52/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.25245252 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.426831337 seconds)
    (54/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.384123128 seconds)
    (55/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.384039631 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.400533509 seconds)
    (57/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.381483816 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.456122389 seconds)
    (59/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.105844219 seconds)
    (60/309) benchmarking ("sort", Float32, false)...
    done (took 5.458924435 seconds)
    (61/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.86160612 seconds)
    (62/309) benchmarking ("sort", Int8, false)...
    done (took 4.410297133 seconds)
    (63/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.228508585 seconds)
    (64/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.575570388 seconds)
    (65/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.18707681 seconds)
    (66/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.082361057 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.224878912 seconds)
    (68/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.381138576 seconds)
    (69/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.36765446 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.391119563 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.047182045 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.282152103 seconds)
    (73/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.38698512 seconds)
    (74/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.489880355 seconds)
    (75/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.408384497 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.382819097 seconds)
    (77/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.486774061 seconds)
    (78/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.364012872 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.824569077 seconds)
    (80/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.974196187 seconds)
    (81/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.362589691 seconds)
    (82/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.467951263 seconds)
    (83/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.255591379 seconds)
    (84/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.394517423 seconds)
    (85/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.379251352 seconds)
    (86/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.563234917 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.435813246 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.683012284 seconds)
    (89/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.399760942 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.209703361 seconds)
    (91/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.357211685 seconds)
    (92/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.43292575 seconds)
    (93/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.403395637 seconds)
    (94/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.468629178 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.277845962 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.493880312 seconds)
    (97/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.468725867 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.363804298 seconds)
    (99/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.491566923 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.271363504 seconds)
    (101/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.365271224 seconds)
    (102/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.465136807 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.362774641 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.904869575 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.426056498 seconds)
    (106/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.427672188 seconds)
    (107/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.421605682 seconds)
    (108/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.441667143 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.586531331 seconds)
    (110/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.450877772 seconds)
    (111/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.10989311 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.395859058 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.398767656 seconds)
    (114/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.216711502 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.502497734 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.387588042 seconds)
    (117/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.393357538 seconds)
    (118/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.399727524 seconds)
    (119/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.367425923 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.403595392 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.409356204 seconds)
    (122/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.365746487 seconds)
    (123/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.439066959 seconds)
    (124/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.643556436 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 1.936469277 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.425857883 seconds)
    (127/309) benchmarking ("sort", BigInt, false)...
    done (took 6.38707486 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.644294842 seconds)
    (129/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.391914258 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.450651951 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.266964385 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.665927676 seconds)
    (133/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.816626863 seconds)
    (134/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.402965894 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.295019632 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.424008805 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.361838816 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.680051638 seconds)
    (139/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.462973495 seconds)
    (140/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.398976994 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.377161015 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.489566757 seconds)
    (143/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.324263081 seconds)
    (144/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.786392993 seconds)
    (145/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.366912029 seconds)
    (146/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.942620548 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.2718343 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.413228949 seconds)
    (149/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.469332924 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.371910106 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.488959151 seconds)
    (152/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.414295761 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.096153616 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.409661807 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.281038169 seconds)
    (156/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.414728692 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.239326022 seconds)
    (158/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.582332029 seconds)
    (159/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.609382212 seconds)
    (160/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.368840774 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.424307479 seconds)
    (162/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.428091781 seconds)
    (163/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.522599218 seconds)
    (164/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.898061171 seconds)
    (165/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.415355453 seconds)
    (166/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.221867809 seconds)
    (167/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.418458346 seconds)
    (168/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.583549148 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.974924597 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.82289111 seconds)
    (171/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.707612638 seconds)
    (172/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.369232838 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.386605621 seconds)
    (174/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.123935357 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.169022989 seconds)
    (176/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.34244863 seconds)
    (177/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.430277113 seconds)
    (178/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.416943147 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.500231571 seconds)
    (180/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.52650542 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.406678579 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.117889968 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.492922237 seconds)
    (184/309) benchmarking ("sort", Float64, false)...
    done (took 5.774085032 seconds)
    (185/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.220061241 seconds)
    (186/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.368016167 seconds)
    (187/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.574154144 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.832052509 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.450414003 seconds)
    (190/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.419104018 seconds)
    (191/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.473581726 seconds)
    (192/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.370788578 seconds)
    (193/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.405902611 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.416614266 seconds)
    (195/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.371731425 seconds)
    (196/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.053212496 seconds)
    (197/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.145664888 seconds)
    (198/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.164013362 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.452381571 seconds)
    (200/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.72447122 seconds)
    (201/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.415390438 seconds)
    (202/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.044077956 seconds)
    (203/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.855786353 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.408370664 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.671112264 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.904989017 seconds)
    (207/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.790372583 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.446945227 seconds)
    (209/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.47518275 seconds)
    (210/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.493912096 seconds)
    (211/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.373097189 seconds)
    (212/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.417730502 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.461065674 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.055850279 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.601379079 seconds)
    (216/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.390978068 seconds)
    (217/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.510569982 seconds)
    (218/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.015461284 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.346332246 seconds)
    (220/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.417484712 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.702275161 seconds)
    (222/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.380690084 seconds)
    (223/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.810827061 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.422257784 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.251534132 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.433114936 seconds)
    (227/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.4038955 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.393702238 seconds)
    (229/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.401621831 seconds)
    (230/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.690663954 seconds)
    (231/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.037601847 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.390965198 seconds)
    (233/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.493953609 seconds)
    (234/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.419514124 seconds)
    (235/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.37634513 seconds)
    (236/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.22726501 seconds)
    (237/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.839017831 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.411020855 seconds)
    (239/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.668237714 seconds)
    (240/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.477423733 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.03994433 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.41321229 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.39318147 seconds)
    (244/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.373885879 seconds)
    (245/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.495124067 seconds)
    (246/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.374441719 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.262066942 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.635004119 seconds)
    (249/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.965042795 seconds)
    (250/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.419638532 seconds)
    (251/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.375023579 seconds)
    (252/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.193533908 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.437606908 seconds)
    (254/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.709723249 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.449819214 seconds)
    (256/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.785343136 seconds)
    (257/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.479852907 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.390572486 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.798727215 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.436043284 seconds)
    (261/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.213136916 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.41600907 seconds)
    (263/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.394566947 seconds)
    (264/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.911757004 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.394547136 seconds)
    (266/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.376432962 seconds)
    (267/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.435259703 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.383230464 seconds)
    (269/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.414279458 seconds)
    (270/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.935416495 seconds)
    (271/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.500532495 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.777613561 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.426447216 seconds)
    (274/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.376248203 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.375130883 seconds)
    (276/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.438306751 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.481701503 seconds)
    (278/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.430220054 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.49651133 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.340284842 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.480585066 seconds)
    (282/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.397007041 seconds)
    (283/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.086804941 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.529577839 seconds)
    (285/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.377599897 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.247970106 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.487600997 seconds)
    (288/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.164381075 seconds)
    (289/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.007292017 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.139421575 seconds)
    (291/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.080903173 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.141306719 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.471743087 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.4419084 seconds)
    (295/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.450747697 seconds)
    (296/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.445636195 seconds)
    (297/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.751478846 seconds)
    (298/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.924599632 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.391754359 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.399858398 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.421612957 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.285501913 seconds)
    (303/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.734388099 seconds)
    (304/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.049691362 seconds)
    (305/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.414213795 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.412481037 seconds)
    (307/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.43079448 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.028989695 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.836402512 seconds)
  done (took 1073.222672172 seconds)
done (took 1074.519485207 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.434258269 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.430167655 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.41059481 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.432577843 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.521800314 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.438334643 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.421412249 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.414010196 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.460114445 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.461128697 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.409983261 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.438384329 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.412802582 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.412307519 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.410855683 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.426596378 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.685689998 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.414925286 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.427919592 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.422464223 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.428401185 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.411157648 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.462250121 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.440619077 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.416397222 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.415403062 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.415950847 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.430448491 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.525651103 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.41468281 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.416947923 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.424774818 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.684999153 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.4155509 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.409115504 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.432850066 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.424501741 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.42307282 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.416748832 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.445109158 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.077215388 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.43012395 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.41421664 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.414708484 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.416741623 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.418149723 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.414195951 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.421440655 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.426177319 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.428602127 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.065205113 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.44616844 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.417440395 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.416916796 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.424993012 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.414437542 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.418153301 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.432130737 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.434270357 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.432948603 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.672432047 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.424633709 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.419084089 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.430121736 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.420016162 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.103840734 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.428937693 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.421237146 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.073459901 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.43773327 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.096794576 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.44281594 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.417538148 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.431158466 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.446836531 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.682668492 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.416404379 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.415760741 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.423052127 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.412764782 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.42754288 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.43058335 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.420839695 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.417332764 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.431235952 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.443926313 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.427324476 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.416937527 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.425874123 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.436768461 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.424048413 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.42910375 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.420633382 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.41302967 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.427394716 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.421269303 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.418691424 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.419431483 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.422895289 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.429292556 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.070055874 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.454362573 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.415120062 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.415457975 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.416956885 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.431041501 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.072989933 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.436660778 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.44080452 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.464251425 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.421016765 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.675429983 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.426761942 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.436672406 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.428350196 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.422854272 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.416164858 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.594584521 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.063272289 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.45119592 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.420012559 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.417765391 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.437237643 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.421370469 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.417162397 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.611950748 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.419807341 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.434593391 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.540917793 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.430376978 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.451732843 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.419002267 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.422499376 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.445736733 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.437938459 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.4521003 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.423661256 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.437094058 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.436293363 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.417214483 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.430759467 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.430992737 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.421351743 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.426974163 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.415668555 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.448448518 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.43389732 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.434947365 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.44283982 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.542520396 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.419129254 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.596428431 seconds)
done (took 241.639236869 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.494413311 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.413045152 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.517882025 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.416172741 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.537774272 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.517253077 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.414038723 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.413867732 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.412124677 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.822923202 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.413227422 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.414391778 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.414542702 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.414320974 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.521572868 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.416130003 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.415453966 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.756372935 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.415796959 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.495535823 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.414413086 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.41387349 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.414515042 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.795579171 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.414177432 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.416848865 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.493329304 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.418045079 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.787130771 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.418072551 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.41850371 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.762194635 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.512906646 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.434919213 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.427479809 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.424294805 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.521548482 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.438902821 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.498164036 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.518169344 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.509081312 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.454347035 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.411094108 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.417155557 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.419319898 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.420988287 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.415984013 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.444647943 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.412580618 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.417234105 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.7850386 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.428941761 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.426162733 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.417222518 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.417204655 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.439987267 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.416819735 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.420366966 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.520329454 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.420007887 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.486829533 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.827277002 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.797394785 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.420051514 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.413406685 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.4183829 seconds)
  done (took 154.281160725 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.488296042 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.492450473 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.545310267 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.439607438 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.469974743 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.551046366 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.438580751 seconds)
  done (took 11.752642109 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.424882314 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.422166332 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.470275172 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.471183596 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.422144337 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.569106226 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.422654328 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.430505756 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.420830224 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.47395778 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.422426759 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.420649702 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.429081582 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.422460155 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.469718738 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.432723675 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.534701276 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.421674756 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.421946788 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.57780363 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.419437682 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.429897433 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.472475976 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.431812022 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.423243345 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.42695921 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.987907238 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421117608 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.41941461 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.422498443 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.420566825 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.460158993 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.421534714 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.42213514 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.42141228 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.53819817 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.422245 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.421125769 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.4233574 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.421372896 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.422829563 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.423514935 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.42226214 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.420543539 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.423295159 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.446832788 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.423610292 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.423870783 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.422802766 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.42517938 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.474943813 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.424076996 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.421532743 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.422147915 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.480558096 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.431285127 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.42443997 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.423148799 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.425811886 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.422613012 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.579354761 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.471811814 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.425329772 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.472845255 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.425863277 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.425591236 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.425740781 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.424130245 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479640407 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.424826561 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.47333304 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.422646081 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.580758351 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.446879519 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.426444811 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.426625915 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.42766475 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.425108384 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.425519762 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.430660985 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.423438046 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.426211804 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.43102772 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.423453363 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.424118527 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.527866648 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.533496928 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.423533833 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.437998295 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.432997019 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.423444107 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.479048874 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.427850705 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.424021193 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.478037052 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.540799113 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.479777209 seconds)
  done (took 162.021882353 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.431205289 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.436502692 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.428675076 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.443602975 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.427795009 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.42730231 seconds)
  done (took 9.929771891 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.429804153 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.429365001 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.426684545 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.429300739 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.428036192 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.427988669 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.427826725 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.428778082 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.43387529 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.427961756 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.42964978 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.42868889 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.428271134 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.428577562 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.428084994 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.427456624 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.427486171 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.42621484 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.427685222 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.426951457 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.522780913 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.42899495 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.428396149 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.430706906 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.434721505 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.428688749 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.43851475 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.429022379 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.428084897 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.434565454 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.448718262 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.431602927 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.430920908 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.436075679 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.43398701 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.432197102 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.433842167 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.4301174 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.427384804 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.431060524 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.43104429 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.429280762 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.428650115 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.431747127 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.431915899 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.437953711 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.436786703 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.437302142 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.430964965 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.432049924 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.432815418 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.431541428 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.433202006 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.432898268 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.433034817 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.454578622 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.437305714 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.429906695 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.432212141 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.433623046 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.433885375 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.432427096 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.433349819 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.435542697 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.439616872 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.43270273 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.434599786 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.437333645 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.432273117 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.433105122 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.435054878 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.429306863 seconds)
  done (took 105.533554777 seconds)
done (took 444.841269282 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.791904543 seconds)
  done (took 8.129577522 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.694737457 seconds)
  done (took 8.036773419 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.87607436 seconds)
  done (took 25.503354515 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.425276055 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.488967722 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.447500831 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.43363226 seconds)
  done (took 27.133791236 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.55673907 seconds)
  done (took 7.895995234 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.422441636 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.454989786 seconds)
  done (took 14.219117614 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.856194703 seconds)
  done (took 8.194757509 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.916482652 seconds)
  done (took 8.263269364 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.424440084 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.450611416 seconds)
  done (took 14.232555373 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.405584828 seconds)
  done (took 7.743603466 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.852232745 seconds)
  done (took 9.194330582 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.430671272 seconds)
  done (took 7.769585113 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.426417103 seconds)
  done (took 7.764353787 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.630153445 seconds)
  done (took 10.968693114 seconds)
done (took 166.389209804 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.427272352 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.434225365 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.432289529 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.429747985 seconds)
  done (took 27.061043043 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.468043207 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.466850144 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.470223879 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.478553413 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.471445202 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.468135465 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.459501129 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.45916787 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.47661832 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.470876824 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.470197211 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.472440649 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.467259416 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.460975743 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.470331142 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.470401167 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.479670463 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.467561894 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.460182116 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.470472519 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.435587751 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.478484476 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.47374306 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.434711395 seconds)
  done (took 36.543925222 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.955046453 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.506388403 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.589148375 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.486981039 seconds)
  done (took 7.880365293 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.485120431 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.488953188 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.501000077 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.538876282 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.568115771 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.499213332 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.462258253 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.456297462 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.44393125 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.48856186 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.563783265 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.50642634 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.59074673 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.438778683 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.629138966 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.437547336 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.435599312 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.487658372 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.540604217 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.554677749 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.436414547 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.488696178 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.492822508 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.507250627 seconds)
  done (took 37.385536439 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.436963436 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.445261946 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.436373738 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.435874309 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.446611595 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.436083199 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.437085967 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.438412197 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.43496295 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.442142344 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.434876642 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.449593851 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.435845537 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.436934264 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.442573136 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.436325481 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.442730105 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.43710541 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.436452877 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.441940849 seconds)
  done (took 30.129101644 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.427848777 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.282525915 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.781822551 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.689193281 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.432914189 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.430966244 seconds)
  done (took 28.389977195 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.522683689 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.687198635 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.437710734 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.873359709 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.966343031 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.456554163 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.437959236 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.71515356 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.105236337 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.130646766 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.510071897 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.515505875 seconds)
  done (took 21.705232675 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.44054977 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.433516196 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.437026971 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.448508262 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.503899651 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.456507275 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.442872706 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.432175663 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.511216798 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.522468252 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.458942123 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.50533014 seconds)
  done (took 38.940361752 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519968623 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.483945717 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.646940943 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436366069 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.198199307 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.646867587 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.480351247 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.914507113 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.438701697 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708164888 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441556547 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530910743 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.693791366 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444656623 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.434680074 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.583699445 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681014786 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980154603 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439027385 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.088135863 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470572486 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.437516574 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.193117538 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.476641274 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.669448841 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.579377962 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.696344092 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.223551962 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.796466417 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.453212998 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446544205 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439725747 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710371724 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212209465 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559780003 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447766711 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441827123 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.087001216 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.418779287 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.116215876 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449242961 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.444888737 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446697799 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439309282 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.371755681 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449968431 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901287703 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.442627926 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.149983098 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.438899018 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446785855 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533994923 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.43996984 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.01154089 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436985292 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.473742374 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.436331534 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463501285 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025337238 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.744449528 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45518723 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.380980074 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.459116669 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.088016335 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168697571 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.559701852 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.443764815 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.444837442 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.384673686 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.179491709 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463405461 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.585155033 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.460822537 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.130315753 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286941143 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.46573707 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.388363572 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048722257 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458147929 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.379278118 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670627465 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.217297765 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381283395 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.386303436 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.374823815 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.280898777 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453157373 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.997068999 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468650902 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.930843855 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.450576655 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462904243 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464961437 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.665427484 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.319917368 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440337723 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.45235629 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.569045744 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463026562 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.90613617 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38431311 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.445621517 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.700201638 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.651699685 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45709705 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.632316818 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70868892 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451106685 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.458708655 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.447414486 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.458940635 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.133572682 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.478583521 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.479272013 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458071988 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.221306795 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269723874 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453503474 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.547455858 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.462812965 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735419147 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.285941906 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.336805123 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510521371 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.447102537 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.441924821 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.193502885 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.047602857 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.343986596 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.439636315 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449336565 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.459568118 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.445856508 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439395669 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.456648797 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469465653 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.228183287 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.668083563 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.457068719 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725271125 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377645858 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587784944 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.488181164 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.668106897 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.909517909 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.465643394 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.706985309 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456013547 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.464814823 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.46251895 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46184712 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54509853 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466376213 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.463474315 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.708787398 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.447447452 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.448055008 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.22365304 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.231145749 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452679504 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.450072681 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458055178 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165968456 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448066636 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.449740101 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.339211405 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.457191776 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512531151 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.451606991 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.456697247 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.629308917 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483752394 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.449947486 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.457395529 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676883368 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.456807464 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.147270658 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532345787 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.671520809 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122547529 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477721414 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.380982136 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.160841519 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.137923285 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446262874 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.640021101 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.447030502 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455686731 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.456938368 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.466288117 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.119049689 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465468263 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.064932626 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.459503758 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.457001344 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.451120379 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444996322 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.687862394 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.538687602 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449285813 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.463462651 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591489248 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.461570981 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.381785217 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.963924444 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.454112952 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.448966508 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.22540813 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482338981 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.113553524 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980053761 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.709581604 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.463468798 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.459814534 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.124483728 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.48411981 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.451579779 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45335367 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449195143 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.461150656 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461269246 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.461278002 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.249273893 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.858592923 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014166479 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30819563 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099128557 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.532337688 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.450915307 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.361235734 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.91846665 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383673047 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.109612182 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682291506 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.951664706 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.4422735 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678072319 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.910671402 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.373538635 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.460845504 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679614576 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514143274 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.467079831 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462125287 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.663357822 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482816989 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.45456422 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.396796163 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.730412593 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.726035296 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45841547 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528169941 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926719424 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450104387 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.229724121 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.533737524 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.925912676 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.678101142 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.082249469 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.877098638 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.450007722 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.45789837 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994632965 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.453790889 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.980711406 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16042981 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.479352796 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.683844504 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391850995 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.464582535 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.463429283 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.44906118 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.113330285 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.448178968 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.730139422 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.464721816 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.387579643 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.467922124 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078058838 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.327382068 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.45756299 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453448676 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281546462 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.460114703 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811853658 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.456974596 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.601950999 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476041507 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.388041174 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388691281 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.146728231 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.463688405 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438120056 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018012415 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.464412943 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455982781 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.475534331 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310399659 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.711387365 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.46805149 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134378392 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698414004 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.460347112 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47808999 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.556697849 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.469515234 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.435910967 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.335571785 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.691724742 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462497243 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.689140504 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.688943261 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.358292496 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.492695276 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.695125835 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.335187529 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.455077844 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.785575237 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.187375682 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.472663447 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321519613 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499535394 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.464250655 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.501475653 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.470793276 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47469294 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547037779 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.466934054 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.467203802 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.467061595 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.664440472 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474962113 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.457430599 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.470731923 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549354108 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.537719667 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.602392941 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.228498679 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141082049 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341227985 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159164936 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490022089 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.456846132 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458514791 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399475895 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608507318 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.986033235 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.731696511 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.581975961 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.469083924 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487854015 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462480763 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.48228686 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676132604 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.732523692 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.434956245 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476751004 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.253612315 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.616200682 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.469855678 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.666892875 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026564774 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087544732 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.573500664 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.462174066 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.928821936 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.730751148 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.549645422 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.456406402 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.055731499 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.484138802 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.917808892 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.484982817 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46247454 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607768613 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.467379745 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231943354 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.488327635 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.614433536 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.232037841 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.181978019 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.723894558 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.06436567 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.468732779 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143529586 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.293065014 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.723807271 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529917657 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.472138026 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.571855252 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607598028 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.460479403 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.341333854 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.460771766 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308405719 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.169350412 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.469896626 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145647288 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744328653 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.45742621 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.45696858 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482686376 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.469556944 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.685153865 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.252220635 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.685993339 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.470927807 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.471194389 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.035539321 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143342232 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495109608 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.404220672 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.464953752 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.770203018 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.724838938 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483425636 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.914676593 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.17413276 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076841687 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.435307548 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484257026 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.470226897 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319806965 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15114358 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.728821912 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036997724 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.122962471 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462116561 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.743840573 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.467193429 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.477601524 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74007392 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.467231289 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.477251671 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.481421166 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.146030121 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.391034498 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.462247113 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.203864537 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.40885334 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.69118456 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.468160222 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.418021547 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.463637013 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.678916421 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.471027083 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.591207858 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475124548 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.47513047 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.479544263 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.204505485 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.773400218 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.468501591 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.466412809 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.451894247 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.466380978 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495844691 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.762733495 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469700195 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.138205369 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.817999997 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.723774584 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.465914916 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.451010638 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.468791227 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463998532 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.221604232 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.515090854 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.466817908 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115681699 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.471320521 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.481343142 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.470629236 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.681438613 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676202739 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.473155648 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.478459655 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.478246774 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48588657 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.365891013 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.267666764 seconds)
  done (took 1719.507515358 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.471788647 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.52170103 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.482181316 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.572499562 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.50983523 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.485870402 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.574124061 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.4993857 seconds)
  done (took 53.494685769 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.472388942 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.638138723 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.501265118 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.467640949 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.483615193 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.469450368 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.995175292 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.487497073 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.479269827 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.477948489 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.484626238 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.474037266 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.238794666 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.484981385 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.474182164 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.452515284 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.477211744 seconds)
  done (took 67.945930834 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.468838713 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.641796646 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.547527237 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.477438227 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.717881546 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.485575825 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.49284874 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.470551248 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.467727187 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.810572702 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.131622667 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.479576431 seconds)
  done (took 83.572205109 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.476388005 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.479039803 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.47761387 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.476919317 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.477718318 seconds)
  done (took 8.768088355 seconds)
done (took 2162.665829685 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.719318685 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.30104051 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.2285068 seconds)
  done (took 5.910418856 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.616752885 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.668385628 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.842471607 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.815112522 seconds)
  done (took 8.323688059 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.747967261 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.842253298 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.657907474 seconds)
  done (took 6.62830386 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.177071554 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.478683436 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.472956773 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.46872666 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.477957525 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.476650916 seconds)
  done (took 20.807136625 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.474966263 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.478695997 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.475784026 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.47989368 seconds)
  done (took 7.292533195 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.449310799 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.171175495 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.451415962 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.468452167 seconds)
  done (took 18.92178426 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.221871249 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.235072862 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.221823507 seconds)
  done (took 8.059219087 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.484506785 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.323600152 seconds)
  done (took 10.18946655 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.780858524 seconds)
  done (took 3.162676941 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.605926794 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.811811871 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.70033548 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.568597833 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.722888636 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.183841842 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.487887471 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.975272025 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.537004992 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.148044653 seconds)
  done (took 32.126215309 seconds)
done (took 140.650453497 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.981335853 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.875000185 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.679584854 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.953731369 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.702940022 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.678303229 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.742303063 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.91619334 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.460285601 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.447473896 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.995762379 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.703642699 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.912589893 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.875164243 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.914857446 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.4971664 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.701871887 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.03238482 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.487391549 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.473574882 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.762365338 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.593026663 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.820279066 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.616915786 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.702030209 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.631417685 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.176904378 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.497099831 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.474073906 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.19717603 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.631066272 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.474884337 seconds)
  done (took 204.991575314 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.485360832 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.47319379 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.475020414 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.494236898 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.492908213 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.474638531 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.495575952 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.492422216 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.497307883 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.479767745 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.485480781 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.485169956 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.475881056 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.486232207 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.474079411 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.474353137 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.484558252 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.47706677 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.475144209 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.474085774 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.495715892 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.4922973 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.47447168 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.504910382 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.486338976 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.475336384 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.474954126 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.475592809 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.504263331 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.475465312 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.475152727 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.475452683 seconds)
  done (took 208.848864032 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.493650817 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.483536889 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.475935974 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.475076844 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.494962574 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.495691907 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.477852603 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.487499508 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.484571973 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.476403483 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.476131218 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.492568143 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.476031681 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.490684602 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.49562738 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.475939357 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.516708714 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.480105084 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.496172973 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.477032508 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.502353491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.479001883 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.49004862 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.495281091 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.478538329 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.479348494 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.486452097 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.476560916 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.496573033 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.478339264 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.480229697 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.477526162 seconds)
  done (took 208.93126997 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.681939522 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.486243725 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.489127556 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.458772582 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.489024095 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.488500315 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.487900256 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.681668479 seconds)
  done (took 15.652320715 seconds)
done (took 639.806555863 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.151589846 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.727472098 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.708697494 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.507313066 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.404524564 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.527292296 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.511594104 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.708443526 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.475448757 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.728244766 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.872642674 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.525402148 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.027614822 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.50598739 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.800004201 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.620801767 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.44324128 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.575227285 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.881364319 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.230459799 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.815918081 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.111540092 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.738207557 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.509792765 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.051209257 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.100098391 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.379453313 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.476134415 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.532764753 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.876384488 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.507798075 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.633603971 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.588090169 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.583552128 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.637841828 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.61935292 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.620574914 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.584785524 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.73081614 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.867458789 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.227353371 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.31904153 seconds)
  done (took 101.835334303 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.470821966 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.471013696 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.472341182 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.470782993 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.474546656 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.469878154 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.473062571 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.470971066 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.470390736 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.470834423 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.470830633 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.474053607 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.469813663 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.473754918 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.470542043 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.471076673 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.471656378 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.476134833 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.471014863 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.472219313 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.473633162 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.472796273 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.473049989 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.474372798 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.472757696 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.47189049 seconds)
  done (took 39.668853273 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.490461359 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.77955756 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.977659163 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.505113431 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.492908676 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.496256326 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.591810624 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.50141005 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.497539349 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.49756033 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.690475504 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.497212248 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.537454933 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.987779671 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.49343973 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.49239405 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.494481467 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.495029993 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.776087779 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.502399469 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.61566426 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.502797199 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.591713831 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.510081976 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.519624519 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.493204755 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.49703718 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.034647232 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.522353627 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.67952868 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.478862821 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.593505588 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.980324902 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.984404187 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.481184082 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.50172142 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.497004181 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.688318874 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.494162899 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.494207102 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.588857147 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.494090402 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.973796773 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.147504048 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.514756795 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.497031406 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.052727144 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.70467552 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.792007565 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.503055825 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.993277904 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.496520341 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.496781279 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.495943842 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.797552225 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.501302662 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.495981684 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.071760107 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.522621365 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.589874724 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.496939599 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.497371629 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.780179216 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.496022978 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.767891717 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.497577869 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.506427549 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.518097897 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.968842966 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.498465752 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.174524053 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.516828681 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.496330279 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.680928704 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.770062547 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.08898155 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.52099856 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.785971137 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.99330477 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.607563277 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.501193226 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.019138636 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.611526643 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.500177024 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.499977745 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.501495623 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.500549997 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.550354721 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.590308341 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.094456509 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.179871738 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.090575222 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.614113056 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.508955317 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.499003227 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.072458843 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.520984104 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.500239588 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.965899022 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.171400925 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.518133832 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.508240732 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.177113302 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.520895595 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.595727737 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.503465633 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.972733099 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.497759706 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.553618335 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.50070696 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.50913728 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.52513961 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.59957084 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.502775453 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.501450906 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.148481628 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.713149469 seconds)
  done (took 197.089873692 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.506288161 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.491901671 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.502407413 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.492182013 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.492346229 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.500363588 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.493793657 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.490447266 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.49748117 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.493492208 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.492464846 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.492221294 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.495710086 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.49396612 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.505263625 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.500207498 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.105678177 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.494418841 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.491545301 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.49240911 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.334346248 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.503957798 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.495616995 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.493704983 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.493942073 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.4945123 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.4993731 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.495601122 seconds)
  done (took 156.739884817 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.501321622 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.183937488 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.520172057 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.66635171 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.533758444 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.502233782 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.659502416 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.573252272 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.528329224 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.500186537 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.498328448 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.866181791 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.503377589 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.124405027 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.744344788 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.683264466 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.123712221 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.520354881 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.499799093 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.503884611 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.665247119 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.507293501 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.871029055 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.188130559 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.522974507 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.187188732 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.486618564 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.506057767 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.503935165 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.190214528 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.521307576 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.871071786 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.601635976 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.580698992 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.215163273 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.146873945 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.146253065 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.689340579 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.511136128 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.500810971 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.501886871 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.488961967 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.191228204 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.524259743 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.503456515 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.17656159 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.525079691 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.506148509 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.510773377 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.501489092 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.579398238 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.601764562 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.896360536 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.195063837 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.621821581 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.518152776 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.66372632 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.903951967 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.506332474 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.129484946 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.487141006 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.194645803 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.524864793 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.48919535 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.504438947 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.511947011 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.687871002 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.66458018 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.133323781 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.523267854 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.136609462 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.704219608 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.503430053 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.505006467 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.508930985 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.194424734 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.152687677 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.705189257 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.668192328 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.749886925 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.49819949 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.507407108 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.48943582 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.598580755 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.505267362 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.197979418 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.151510309 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.525571818 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.508812916 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.508953207 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.508312775 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.731723315 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.222400751 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.62078469 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.122839594 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.894313329 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.875542957 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.507228936 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.582825278 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.527124292 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.879258486 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.508772149 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.583349854 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.977379514 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.877295197 seconds)
  done (took 181.56426288 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.789154456 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.898561427 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.607154744 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.655743201 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.170561169 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.111183148 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.8809554 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.667601224 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.636031645 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.812689612 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.850418631 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.597652287 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.708649359 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.611230619 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.308380986 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.611507082 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.638010817 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.679926197 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.636088769 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.621160519 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.234347757 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.81875744 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.705188541 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.581515513 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.614918089 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.421019333 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.120707338 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.08062203 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.699144984 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.007994881 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.103212277 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.729480484 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.581307573 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.280051214 seconds)
  done (took 72.881943256 seconds)
done (took 751.17068653 seconds)
SAVING RESULT...
DONE!
