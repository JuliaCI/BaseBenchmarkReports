cset: moving following pidspec: 26160
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.986156967 seconds)
loading group "string"... done (took 0.517391325 seconds)
loading group "linalg"... done (took 8.443370154 seconds)
loading group "parallel"... done (took 0.170318835 seconds)
loading group "find"... done (took 4.039813957 seconds)
loading group "tuple"... done (took 1.929983812 seconds)
loading group "dates"... done (took 1.384098095 seconds)
loading group "micro"... done (took 0.190316106 seconds)
loading group "io"... done (took 0.524707093 seconds)
loading group "scalar"... done (took 49.30746792 seconds)
loading group "sparse"... done (took 13.39141617 seconds)
loading group "broadcast"... done (took 1.246283657 seconds)
loading group "union"... done (took 9.090946484 seconds)
loading group "simd"... done (took 3.045939358 seconds)
loading group "random"... done (took 11.591733602 seconds)
loading group "problem"... done (took 2.234394009 seconds)
loading group "array"... done (took 24.107327725 seconds)
loading group "misc"... done (took 1.126464313 seconds)
loading group "sort"... done (took 3.777754415 seconds)
loading group "collection"... done (took 19.391058206 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.686682257 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.149153361 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.203494963 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.211098638 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.283000765 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168263221 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157390867 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.172595485 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.66911835 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211894647 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140993219 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.436815323 seconds)
done (took 6.202782554 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.310877877 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.060598334 seconds)
    (2/2) benchmarking "String"...
    done (took 0.171121587 seconds)
  done (took 0.898421628 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093784911 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.161755649 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112166663 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097040868 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096719789 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.172347768 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097103517 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110754351 seconds)
  done (took 1.50731452 seconds)
done (took 3.472427882 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.501025562 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.968415364 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.59002772 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181646918 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.312719479 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.316435173 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.271567777 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.227192697 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092781467 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085409423 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175665399 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.514343314 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.404099993 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.030271405 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068928491 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.111041488 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.138394162 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.86171756 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081374175 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109964662 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.537749474 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.215642922 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11725336 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.107349172 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.188196001 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134622853 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.143714512 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.105432083 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.724938986 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133837688 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.215819702 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.084857292 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.139892358 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.167509255 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.226977887 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111962164 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.75311673 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202287069 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098869704 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102928958 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.740116315 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.126812109 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.207181175 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107671895 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.070314278 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.170533514 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.120059685 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.081595134 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095920269 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103594328 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.175795898 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.468798945 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107466218 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.19815957 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095064003 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.764702892 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098662429 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.280979027 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128774784 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097928848 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092063293 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.092165508 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.175156195 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.100014977 seconds)
  done (took 20.954039606 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.175484757 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.192864607 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.080578961 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.1652817 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.130250978 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100743464 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091312961 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082058392 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.133922756 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.186323931 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144444965 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.197264893 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.078669524 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.093168091 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.172838066 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.241077423 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.128060429 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.107520353 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091668571 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.113872183 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.130615116 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116709429 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.099985744 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.101193097 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.176022058 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207516965 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110446714 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124541544 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091380494 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.103349697 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145780102 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.152129085 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094105773 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09019789 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.19514807 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109927217 seconds)
  done (took 5.439235204 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.237929051 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105928339 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.251808856 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.199052057 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.153897233 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184955926 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.177831518 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.305769077 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.314976299 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163377043 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130127094 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098185791 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08224239 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083186696 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.0981003 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.8473282 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158101678 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.168951631 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.168395362 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117791813 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099095262 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.725140968 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104857723 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.088701811 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112294417 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.10921612 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064801305 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.224281284 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116339722 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.476558878 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.104026779 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102550787 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134576637 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199820095 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.174505199 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123554418 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141121474 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098142766 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.105824842 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.218781997 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104968867 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081015896 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.099025352 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119230546 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132769797 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108731526 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.111702979 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.136327525 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.090424493 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115561123 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.11418723 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196371718 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.147674574 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.104935247 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.275939191 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.131045649 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103950521 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.112339434 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.822447283 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138440536 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086632732 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099195713 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099826918 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080593369 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 1.021732965 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110018565 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.589485425 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.088474624 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.162383286 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099243994 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120230437 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088866087 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10342813 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113374403 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085926502 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.10640238 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082908536 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.088314164 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098401584 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.09302166 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.129225971 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.087406755 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087464094 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099425839 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148276415 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.100176725 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.126309595 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112279505 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10763486 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.089240045 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12931749 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084439587 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.091221437 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.187168614 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100755636 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.131419344 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115713927 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131458325 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.106137061 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.260235771 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086865761 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124833954 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102769623 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129238009 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102298495 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084187066 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103266093 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081983085 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084268247 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161748193 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089230247 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08277063 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.107667569 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09633381 seconds)
  done (took 28.903733708 seconds)
done (took 55.959469809 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.41496644 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083630138 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082571589 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10336495 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083656941 seconds)
  done (took 1.506441458 seconds)
done (took 2.21885977 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.308676016 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.204839249 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090921545 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.194095431 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090142497 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200689905 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.185196234 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.103532642 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.212157001 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.088780271 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.196033549 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089196273 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107792958 seconds)
  done (took 2.808710586 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.1082021 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108940021 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.107088027 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122915824 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089796899 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104555882 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123121762 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110247372 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104397135 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11536765 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090017177 seconds)
  done (took 1.895520718 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103261647 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107482146 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095671651 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120131709 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088781667 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103378252 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118719118 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109659798 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102563007 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115975367 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088143315 seconds)
  done (took 1.868271974 seconds)
done (took 7.28294191 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.234244242 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.005369845 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.193611317 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.249388273 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.349198871 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.302572129 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.618541612 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.204809367 seconds)
  done (took 16.001237117 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.197189873 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.118152857 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100125324 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097467278 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.111866783 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094270627 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.093741029 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.111665186 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.098908852 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095397344 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09977637 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.111651564 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097891765 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092859014 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.111715045 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098379003 seconds)
  done (took 2.512128949 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.137690684 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119279196 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117085753 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.102961713 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09847933 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.119157305 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104785963 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.11883792 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.097835933 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09948498 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.122271124 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.101518578 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.100979025 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.113044819 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.102564163 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.120943215 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.113912307 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102429761 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.120997428 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.119582687 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.102392231 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098860919 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.117020436 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.102302733 seconds)
  done (took 3.459844556 seconds)
done (took 22.687264065 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.152111663 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104853216 seconds)
  done (took 0.981123903 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.165904898 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.185105238 seconds)
  done (took 1.077689889 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.116361194 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092354134 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140619843 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107530746 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094549471 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109672773 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121264329 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.11110264 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.09458958 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094870768 seconds)
  done (took 1.816620512 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.097391457 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099157401 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.126495498 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.171762959 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.120098036 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096315827 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.098666886 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.11476935 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.100411615 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.095005936 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.116899863 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112354061 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100532188 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.131565445 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098596019 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.115426371 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103900983 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098155621 seconds)
  done (took 2.732290382 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.094688009 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095447262 seconds)
  done (took 0.925954331 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097863402 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092765944 seconds)
    (3/7) benchmarking "month"...
    done (took 0.096612921 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111704529 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093591683 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093454912 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.110613759 seconds)
  done (took 1.43224507 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.531549722 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.241814231 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.376373772 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073571966 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.126254343 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.325886433 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.106485318 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073690565 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092260545 seconds)
  done (took 2.718530542 seconds)
done (took 12.415506874 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09514927 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.440850485 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.63733696 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.133325354 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.09361683 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.14922074 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.334564862 seconds)
done (took 2.622867528 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.355591994 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.166368642 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084368604 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094990344 seconds)
  done (took 1.434774451 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.085444244 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102960401 seconds)
  done (took 0.931646015 seconds)
done (took 3.10750784 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092098445 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.113935969 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.109537575 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.092507356 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.091408007 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090792397 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.110701739 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.091208244 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091652952 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.111834117 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.093070335 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.09105365 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.091989741 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.107911111 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092798448 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.214518575 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108117485 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09191064 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092237313 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091476093 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108152434 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091855359 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.091698718 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.107849498 seconds)
  done (took 3.245984403 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.115447684 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094505667 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.113346077 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097826758 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.096788231 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.114231472 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.098287079 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09488789 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.114381559 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095328025 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096746605 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.114617783 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.095965359 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097120557 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11092308 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.097612222 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.098154752 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11168943 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095885773 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097430902 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.114675962 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09537571 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098085326 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115028349 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099648154 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096996839 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.093534261 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.112695827 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097467288 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097353112 seconds)
  done (took 3.814105912 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.101034126 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090059854 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092626453 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.119063036 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090617577 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.093134842 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.107367979 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094091885 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094107211 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092951156 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111537897 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093735421 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09223864 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.111194955 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094286595 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096870577 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.119069005 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.093035186 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093504326 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094965158 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.113093766 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093053473 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093408265 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.11028101 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093001322 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.090031618 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.111728199 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.093804582 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093075734 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092705641 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.114026343 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096459568 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093034582 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.119908443 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.096902475 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09224182 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.11602966 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089194888 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094841003 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08971962 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.108091481 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093074518 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.092135071 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.117189712 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094751546 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095006405 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.093855367 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.111184303 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092436217 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095416954 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.107500278 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093289828 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095412522 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.111901929 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098124178 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.090850828 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094685575 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.106859695 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09493795 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.093781026 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.107490701 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.09096464 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098610805 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094640496 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.12416006 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100935486 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.092287234 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.111565151 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094175017 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098801849 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.112396143 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.104358495 seconds)
  done (took 7.92051679 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118277433 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102176768 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112749998 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095072194 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093440262 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093250003 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11795657 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094177517 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094040669 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11829203 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093829575 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094770993 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112558082 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096108313 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09517001 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.112544487 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100124382 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094976792 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.112449347 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095356975 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094054117 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098522903 seconds)
  done (took 2.996890233 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.246378663 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101714258 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144250194 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125453994 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113162832 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.125171225 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098960537 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100154255 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11595361 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104403919 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104592986 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115674871 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113396683 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121333354 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103719985 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105175147 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11543877 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10549568 seconds)
  done (took 2.918656915 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.108458109 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095012794 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.15781755 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096655199 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.095456582 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.115076936 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100437791 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114361941 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.114945179 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095557215 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.102928211 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114527981 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094769395 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096539216 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114211273 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096636797 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09567463 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114022068 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104105759 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102125978 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.118922858 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10437432 seconds)
  done (took 3.112565686 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109501233 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095437194 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.131358088 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099591609 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095016409 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.112843218 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.101003276 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094979039 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.120375465 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095660299 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096089953 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095336151 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.128723539 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09571655 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.100467364 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112630798 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095524594 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096567956 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114698336 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095393718 seconds)
  done (took 2.844570927 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.199639604 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129024224 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112792939 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120312474 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131516736 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111585787 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.139300389 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111995842 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114913056 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140594338 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112377008 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111659482 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138238605 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11745581 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129787171 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121081091 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137260844 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120823578 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112712347 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13039908 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124075243 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113694299 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138087286 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11079824 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.129180257 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112377346 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11174594 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.135467129 seconds)
  done (took 4.278468597 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094827621 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093498532 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094181586 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.112082229 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093152608 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.094245909 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.093461883 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.111734922 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093330365 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09396011 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.113655253 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093790439 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09453031 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.111960575 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095829648 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095250982 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093761876 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.111280346 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094668697 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095320705 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.113282823 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095021269 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094767317 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093556842 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111713521 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094893587 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095035048 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111658828 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09697681 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094475967 seconds)
  done (took 3.735182905 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10767571 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104377709 seconds)
  done (took 0.974912178 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.103578772 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10907007 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.09430415 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112730608 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10280472 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094921872 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120733758 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102331435 seconds)
  done (took 1.60484948 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.167556285 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.191390646 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.099501943 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.12519383 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.171222925 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.183657765 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134107288 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.120178051 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.094790295 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087816146 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.185371591 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086659785 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.114217621 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092601081 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.095756725 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121749051 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096471637 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104780181 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.121173388 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098485948 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100302129 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11902956 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097873582 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106489987 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.108247795 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.098710116 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099193585 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.126896706 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092975668 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09634144 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.112764697 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096329685 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.098227523 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.118657582 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097105808 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.193071864 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102970099 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091343164 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115190346 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101369227 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.128925326 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.116398274 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09862955 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093968725 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116754357 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100139873 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100806043 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.115035755 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.088693206 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090909249 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.115584813 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09242386 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096120787 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11416963 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.096795057 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101311267 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.117361179 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.092941879 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.092772958 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.109512994 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.096182496 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.092790766 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115709337 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100493538 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097317868 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.096368876 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113590226 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.097105095 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09786573 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.114703158 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094979255 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111550656 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.115654751 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10197868 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10081121 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.116482657 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094640495 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100781666 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114117698 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.097207082 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100534836 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.144271792 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097468347 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091486267 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.108903541 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.103691301 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097552776 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.117182 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.089736553 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103750232 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.11637901 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098120104 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.088980976 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111830432 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.092765689 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100094174 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088199006 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114821779 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095789151 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101362396 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119877336 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094990435 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.0976599 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119568297 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10169508 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094710261 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.177735111 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093513092 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.110999324 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100304895 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101222304 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.109606176 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.095644967 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096322424 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092692312 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.11086015 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101726782 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.096127058 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.116790188 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099766461 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09808294 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.117726299 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098339407 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095697244 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.11056441 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099823349 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104220789 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.115548012 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098558839 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096794297 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.114928015 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.096060399 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100161953 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.111759676 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10197525 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093708161 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095274613 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.1161743 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.101058905 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095757591 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.111166843 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.095500995 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.097654121 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.11494984 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099902913 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.096694523 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.110191357 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08841086 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09715896 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.111183105 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.098164917 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105459897 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.110537476 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099123616 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092266416 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124052381 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.094305069 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102298831 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117018245 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101504863 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102802246 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.107835499 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095058288 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100221369 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.097251843 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.112677698 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097972357 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.095892385 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.122900216 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089548049 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100133387 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.107681996 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.093902964 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102301691 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.117081378 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099283607 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.0924913 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.155284116 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109440006 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10290279 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.1144064 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096200844 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100518423 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.114321197 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100805745 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102818999 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102174892 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.114658185 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09523666 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103724249 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.110892428 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099194021 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094787103 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116341897 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.089442315 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098440836 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.108238196 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102046636 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.098227564 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.120903569 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103423494 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09907592 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114517118 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106694895 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092768092 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100374628 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.108678006 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101308695 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.108125572 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.122046932 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103562368 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098231542 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113290243 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097785759 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106512443 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119134559 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.097328967 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098017421 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.108929259 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.090552443 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101524658 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.119033454 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.096608647 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096488183 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098516656 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.118752782 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.094452912 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.089227523 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.120881831 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101418977 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.092458838 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115975746 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.094169925 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094600332 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123846712 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.089939648 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.093289691 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.117780478 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102171259 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097836783 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.11625074 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099797849 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103627843 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.118537535 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.101003698 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094482047 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.12340513 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.095655842 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097216659 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.093106692 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.118593508 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.090374003 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098962459 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.126891097 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.09340022 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.0929483 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120721101 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104379191 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102601218 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113463524 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.10245729 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102285508 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.122676469 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095435157 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102361805 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.110964749 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08954446 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092720945 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09030723 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.118511182 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092650515 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101148177 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.113959546 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095756982 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100001262 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118912195 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.094773237 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102829553 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.126448875 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.091797437 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.090772709 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114991899 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098094145 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.093158171 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.113434973 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099260275 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098859034 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.122868399 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110794743 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.0936761 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.117468018 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.103930751 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093464593 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.122892289 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104648071 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103822801 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091966326 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.121136284 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.094651701 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099922037 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.111038601 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096714202 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095163257 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116076223 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.094021633 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.095076447 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.11279721 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.090601134 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.093317847 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.122232055 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095828876 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101667668 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.116372568 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.095702345 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.094105493 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113354375 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104007864 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.096398711 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.121948321 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097999979 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089971752 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089893206 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.122304548 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097856817 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102651886 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.112079712 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101202226 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105384125 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.119649674 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098230061 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.106508314 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.125501416 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104955975 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102450343 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.11003109 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.095232001 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101773308 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.117196729 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100926208 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099796328 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090612619 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.119182952 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103298227 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.098328062 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.115281361 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.091386931 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098194289 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.123789731 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10069613 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100760613 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.118599154 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099451689 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.093695807 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100056476 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.123821499 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097918494 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104709615 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117623778 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102434729 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093962348 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.12283076 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097924542 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.092694881 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.111075425 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.095835332 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103640648 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.111577862 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.103450917 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102174835 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.094243272 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.116729633 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101223892 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.093987993 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.120321783 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10253844 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.095051471 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127822702 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098698896 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.095217409 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.122483309 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103444128 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090646177 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.11635157 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096173181 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103988039 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.116167846 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105150455 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097359253 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122040483 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101459862 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102203407 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102592751 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.124647661 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.091463756 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104674585 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120859213 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100954161 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.094402449 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115606357 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.09265288 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.096274924 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.124422246 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.095431149 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107332881 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.122620109 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.096271528 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095344557 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101939684 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116727257 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10423357 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093834195 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120372308 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.091000162 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.099396303 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.11731257 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105351927 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.094308872 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.112122269 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103055388 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10344477 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122635835 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.100208087 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104265163 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.112523483 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.09214143 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100707041 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.115297202 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107670267 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100948835 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.115751255 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09708424 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100336338 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099673758 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125331638 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.093230825 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.095414704 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.119108292 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099351397 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.096629932 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.113008192 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102041155 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096895618 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.120786699 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.096688214 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.093430153 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.11614149 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104162018 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.098083683 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.114776889 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.095872472 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106503726 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.097513701 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.115761342 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.093212938 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104607221 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.121599633 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105325463 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.095724091 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.118781686 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.095717209 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101041766 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.125166624 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.095926285 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099894891 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.117111975 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103758276 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103651528 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.111727278 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.095348698 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10787043 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124435971 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.099761106 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.101289232 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.116985533 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107358077 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105002055 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.121029934 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.093714112 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.093466861 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.097118573 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.112012058 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100408766 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103803285 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.117776239 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.095227368 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103401325 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.123208288 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.101278443 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.101131611 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.113065869 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106586876 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.096549352 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120515728 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.091989647 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.092219579 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100926429 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124442686 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097746964 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.09785653 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.120360136 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101027994 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.093071175 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.115224486 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.102690083 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104036817 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.124670841 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100266248 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.097248357 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.121943503 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109610157 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100062164 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.097757618 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125498758 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105420826 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098786081 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.118847337 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101334017 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105138008 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.123504975 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105745713 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.0969195 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.118775688 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10587381 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105461648 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.129974697 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09762138 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0927271 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.124962225 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.096194875 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.09354261 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.123336278 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105964205 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106101714 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.11966838 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.095874843 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108244188 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.123944168 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098603047 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.096856073 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.116625622 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10362981 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096884262 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.122137438 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.096399174 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106012308 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106006553 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.125925703 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.107071981 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.092677775 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125240513 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.101388224 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106186423 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.120448025 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.092586262 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092809976 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.122930683 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106277874 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.105023747 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102626953 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.124506257 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103395763 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.099467081 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.119558909 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.095927729 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107627819 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.125083251 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100118838 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.101012834 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.118881487 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099957238 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101017545 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.125695295 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105750826 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.099986393 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.128894653 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104852522 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.096947398 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.116823882 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099549487 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101206172 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.100423344 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123988753 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.095690648 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092923959 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.125659687 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106706381 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099750018 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126507376 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106623557 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.098665323 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.12295 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108032809 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104574546 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.121426031 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.100654984 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102675841 seconds)
  done (took 63.90294334 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14885795 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109224141 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122602686 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101833067 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120726259 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125104299 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101844273 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103513911 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123122973 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111177919 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10145211 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123021736 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117809753 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143772779 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119313229 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113352753 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122666953 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102230557 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102109046 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122575023 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117006382 seconds)
  done (took 3.273102101 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.118487676 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115804916 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134462849 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116360535 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108874784 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.134020358 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112594987 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134442809 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115166686 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111207289 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136196138 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114225101 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.129803402 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109936846 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110666132 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.131660469 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116722345 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108796116 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.134699927 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.113326929 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.132508939 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113575747 seconds)
  done (took 3.473210799 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.13170302 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104559705 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098831474 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.121698532 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104855288 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.102327444 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.126013156 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101013771 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.11063979 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.11684783 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092843579 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096034407 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.1002276 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.122454085 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09567008 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.102213918 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.130367946 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.104886262 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107089471 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.121433542 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092876763 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101166887 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.102501045 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.113880417 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106583199 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10683999 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.123017416 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10552896 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.093472505 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.125210137 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.102021659 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095441688 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.092767591 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.113211683 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092030909 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10597124 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.124392019 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101812096 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.102048744 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092778862 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.122802204 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105371584 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.093065787 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.123491676 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101718182 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.095387614 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.125419334 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.102161515 seconds)
  done (took 5.977769346 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.132720281 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160578445 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.105678359 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.131812157 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.139260745 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112098289 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104944763 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.131928111 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103497609 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.127587635 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116785154 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116225811 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12892469 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.109714024 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107386325 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.129721878 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107757615 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104325217 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130635016 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104818149 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.131395962 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.108884615 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.116923845 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.137685449 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108547348 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106283007 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126480696 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108382424 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.114651628 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.131795502 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10892378 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.131452389 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.116353107 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108699429 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.125326767 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108451885 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.37910429 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.127717856 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108397012 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105567825 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.128574955 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108421789 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.107604309 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.139842283 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107681628 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108123249 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.127938128 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103241364 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114351934 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.129474978 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112999195 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.13902525 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108658559 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10787632 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.130294798 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.116631965 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.107710194 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.127597875 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.108581668 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.114686473 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.126200371 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108581888 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.138548406 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107434022 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11339101 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.138660783 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10778514 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108641379 seconds)
  done (took 9.276389196 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.136803792 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11054679 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138732372 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118578027 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109179271 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.132785524 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110332648 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.130485479 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110382127 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114889917 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130553253 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.227499861 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.130256314 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115200939 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132274707 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111109067 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109844018 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132861422 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110364311 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111190172 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.130118957 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117923259 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110547359 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.139774901 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121057984 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12672856 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110120949 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110108793 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.139384509 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110524298 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142595374 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.110481057 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11385215 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.141207663 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12099096 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.109875394 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124578843 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110909689 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.109454873 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.132150152 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107920286 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.139478353 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111216924 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105700342 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130774089 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111130876 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119086101 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.14187916 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116824844 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136340574 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110939312 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118862439 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132057246 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109163139 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118229193 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146329615 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117949664 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.140015738 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110249109 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118038236 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138635958 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.125620099 seconds)
  done (took 8.495484353 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103556015 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103131709 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103340436 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122630243 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102108891 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102776923 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122498574 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103496177 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101969371 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.103398584 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12387298 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103547174 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101868376 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123177868 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.103447583 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102178769 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101931659 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.123040088 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102882708 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101901822 seconds)
  done (took 2.993369673 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112940601 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120359684 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.125385839 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111873751 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10402657 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.1306369 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104611764 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104468174 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125505634 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105576618 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114710675 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.133948461 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105130372 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111189349 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.134530723 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111998584 seconds)
  done (took 2.694379553 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123318916 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120521566 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.210190049 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106945877 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.128232824 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110995612 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105189012 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.129550723 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103682424 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109841507 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.1310755 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107040209 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104797156 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.128052483 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105576041 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108767868 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103129122 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.129529251 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105215153 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.218194219 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108759454 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106871163 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.129330334 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108418963 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.1059007 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.132936786 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111845003 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104123231 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.128709571 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105982653 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105620722 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.133815772 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104279947 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108869461 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.126448855 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106483214 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105356997 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.125686921 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10764358 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104796645 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.128596404 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106319426 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106628805 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.128515396 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.105403682 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106747574 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103914692 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.131487254 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105552639 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.107003974 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.126227176 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109481456 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.109031996 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.134590807 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112749169 seconds)
  done (took 7.323371951 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116635933 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106875528 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138315233 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103763895 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.107248169 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105941052 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127964495 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108521549 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10650409 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.126605228 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107134763 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.107048911 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.128767055 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10583639 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106323502 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.128056709 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.104577339 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106485847 seconds)
  done (took 2.886569031 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110739664 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10604856 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.109681714 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.127646602 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104543117 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104698449 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.126320853 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104018701 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105626274 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.126010343 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106078164 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104523239 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103673774 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.126862165 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105106352 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105060017 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.127728911 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10412212 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.105047818 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125180603 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10531805 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10453269 seconds)
  done (took 3.294414245 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115360375 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.214912277 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.111423798 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.223473826 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101615212 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.124338852 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111920856 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.102449161 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.142571153 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.102165509 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.10062236 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.124395292 seconds)
  done (took 2.421390485 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133580737 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143289294 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128944454 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106672549 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116101809 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133379576 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111379897 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109984977 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14107016 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120388891 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132144027 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120606475 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119235169 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14062597 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115880177 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137385386 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11083594 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111920095 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128006381 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126844268 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1105223 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140174019 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110646493 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132731636 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110765733 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118432913 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140877967 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123271027 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131887414 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119025177 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11467427 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132847546 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11883105 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143863439 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107047858 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118686246 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133465145 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127004049 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116166983 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141509165 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107479067 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136486167 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119377951 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116100559 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140461242 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11148687 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136977765 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11076027 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111110057 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154033756 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115962356 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140423791 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11492058 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119716716 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140934965 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13160463 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14469137 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119137623 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136257329 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122773334 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119630267 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137145442 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11995812 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143846482 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115621658 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120115451 seconds)
  done (took 9.11479151 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145798733 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108852838 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133504635 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124205674 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141089149 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111403528 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111150065 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131896427 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111577515 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107498521 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176538339 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110810717 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141007593 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119912768 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110854933 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131838419 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112089496 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11946903 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130107898 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13348393 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132392135 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120459531 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120053749 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141049723 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122699028 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13741617 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111468245 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110430345 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132640836 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11151313 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116864784 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133252005 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119792338 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.128668314 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119327025 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112515186 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131712683 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117844382 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11056758 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136941679 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120968863 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147697519 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111871615 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110646059 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145073695 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114973451 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133847994 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108497417 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111478664 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129446919 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123053418 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122006049 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144262734 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120101851 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133849421 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111076482 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111131608 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134030633 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111649409 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115676168 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140809638 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111480582 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15470169 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111757929 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11092945 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14236083 seconds)
  done (took 9.07091964 seconds)
done (took 172.387999988 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.176982037 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.215423204 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.197829765 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.158423889 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.097109661 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.155595058 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13004526 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.19931342 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096532535 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.097068168 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095920332 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.123540982 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.164215224 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.097398747 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.120519147 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.099821273 seconds)
  done (took 3.075224603 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.197493106 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.3486113 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112378897 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.124675768 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10385466 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.101246758 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.124196548 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.104078908 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.101510356 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.13188508 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102000631 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09763519 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.132038577 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098516485 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.101539082 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123298848 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109786605 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102437895 seconds)
  done (took 3.181549815 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121308985 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153973173 seconds)
  done (took 1.139845947 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.133031111 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.218759164 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298963375 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173801851 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.124097425 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.143442701 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151924957 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.137654686 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.193822936 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.137479933 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114993478 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.100193767 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149821571 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10814963 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.142122616 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099891511 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.131207698 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.138294123 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11509836 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103639828 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.149288776 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106129168 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.109032161 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.139795107 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18344271 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.138197224 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107569169 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105540137 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126229131 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116512224 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.131882002 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.120665979 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113956304 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.184585302 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.127847805 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.15831119 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.131556731 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102359735 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116458595 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.124965055 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.106325607 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10678333 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.137560634 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101126417 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105478384 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.132727989 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106605328 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10646997 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.132793776 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109620707 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.133373536 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10967324 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.179546881 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109455732 seconds)
  done (took 8.052244008 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.888336969 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.150434268 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101486452 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.031568589 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146576836 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11605943 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.877185732 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.15084063 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259722349 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.900949433 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11858937 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.131897413 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.245078758 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.261765649 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.290339409 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.364577904 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.746137244 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114228001 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.133132103 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.166023752 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108054696 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142974259 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117507786 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.518329385 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102289069 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101524948 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128918323 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111114402 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181675553 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101982454 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129004628 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177015194 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293485199 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.214738118 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102740843 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.124447671 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102027409 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187186026 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275993387 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223843162 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.198863861 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099197975 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.103276226 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129400937 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117012603 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099909282 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180381358 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194778421 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.192336004 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106833802 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110981227 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132276504 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106179067 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.181837355 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100357716 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360583968 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.385717047 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102957608 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109053555 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135941067 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274103196 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10391454 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240361562 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147047247 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222041676 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102777907 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.849027372 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189891916 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102850847 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107171899 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.129522334 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110515316 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128544507 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170178162 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.50034527 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109907445 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.1069255 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123869602 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.238866931 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102789332 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101813089 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185529377 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102895351 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131318195 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111016535 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108780362 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.191855955 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.274360126 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108918494 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130734533 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.108108771 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113742064 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.125876226 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.238898724 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.23691168 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.15634774 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232720262 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12930988 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159427372 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189232563 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107221262 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.191533871 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128985956 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115717019 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106421036 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229039124 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.160115708 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104484536 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.130383746 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108660823 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161663818 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106202102 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109084784 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.19231816 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.555524715 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.189626273 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.100308595 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107685539 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131476985 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161956033 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132734589 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270559283 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110151607 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190030823 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108885658 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.122334484 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108794198 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.182646891 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111149016 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109453823 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129084334 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111669083 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.282987186 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226831994 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111288892 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255465035 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.204098153 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107300073 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195904763 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130837259 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171256633 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136305854 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106342749 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104054336 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.833455403 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13704878 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108648326 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107860144 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.209355231 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102574674 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128145126 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.1032645 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103298004 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823164956 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129740915 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100135179 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10648245 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130383123 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109586622 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109680202 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.131268399 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159627526 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.272001164 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111646612 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108585671 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125683138 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159566849 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.127127171 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103628266 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103126352 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.127156549 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110217908 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.108255775 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128677031 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171973125 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.179612301 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234602579 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.657600855 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.126022823 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10335758 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245473948 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125337167 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.331639308 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109661845 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.238998416 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18725143 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100481569 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362191402 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.189118104 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.210187126 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10650915 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19512316 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101200127 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131714834 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.159120462 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.126126952 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109964008 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.180441874 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113335019 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.110468895 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.307918354 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103652085 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256485454 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.101569751 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.193101459 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106095773 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109533927 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.354414765 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10459443 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114603665 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.182952176 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108156062 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126722844 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.626702103 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105033285 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112359567 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131486948 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.236262395 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.189578428 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110360488 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11058389 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.135187018 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182617935 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.213190355 seconds)
  done (took 48.232301562 seconds)
done (took 64.5364408 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260277641 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173665783 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.373168322 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.156773687 seconds)
  done (took 1.922948173 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.271772786 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.171631955 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.256194568 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.101362891 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.261647549 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.100546098 seconds)
  done (took 2.054213253 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.181184829 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171079747 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150738222 seconds)
  done (took 1.395262691 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.21310215 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.209663018 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.351688598 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.26436215 seconds)
  done (took 2.015265077 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.286844619 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119965477 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128151303 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.23692071 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.25372683 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209672149 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126309616 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176803855 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132989385 seconds)
  done (took 2.600455135 seconds)
done (took 10.880347824 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.236289577 seconds)
    (2/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.31188183 seconds)
    (3/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.366512954 seconds)
    (4/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.158621461 seconds)
    (5/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.40675504 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.112031843 seconds)
    (7/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.408059365 seconds)
    (8/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.180842774 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115731971 seconds)
    (10/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116586239 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.257845438 seconds)
    (12/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.265152388 seconds)
    (13/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.193822507 seconds)
    (14/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.223403306 seconds)
    (15/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.124737258 seconds)
    (16/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.113708937 seconds)
    (17/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.280473408 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.239645784 seconds)
    (19/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.317236746 seconds)
    (20/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.13331594 seconds)
    (21/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.119627253 seconds)
    (22/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.420416565 seconds)
    (23/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.287347591 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.239187182 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131770618 seconds)
    (26/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.200534318 seconds)
    (27/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120000657 seconds)
    (28/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120491901 seconds)
    (29/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.140803178 seconds)
    (30/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.139572847 seconds)
    (31/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.33553718 seconds)
    (32/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.132583901 seconds)
    (33/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.201386786 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.23929245 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.128394327 seconds)
    (36/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.192726404 seconds)
    (37/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.165912155 seconds)
    (38/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.240278038 seconds)
    (39/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10813616 seconds)
    (40/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.138591385 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114191051 seconds)
    (42/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.153656821 seconds)
    (43/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.217031834 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.085639691 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.132021938 seconds)
    (46/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11262522 seconds)
    (47/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.187752908 seconds)
    (48/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.137761779 seconds)
    (49/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.101851531 seconds)
    (50/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.137840139 seconds)
    (51/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.27961093 seconds)
    (52/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.135110627 seconds)
    (53/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.184123973 seconds)
    (54/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.194336252 seconds)
    (55/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.147283465 seconds)
    (56/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.372128587 seconds)
    (57/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.129708465 seconds)
    (58/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.166843591 seconds)
    (59/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.147132725 seconds)
    (60/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.080740234 seconds)
    (61/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.199267146 seconds)
    (62/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109764509 seconds)
    (63/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085605728 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.132318922 seconds)
    (65/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113601271 seconds)
    (66/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079083902 seconds)
    (67/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082665367 seconds)
    (68/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.102944835 seconds)
    (69/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110810264 seconds)
    (70/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.131750739 seconds)
    (71/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.215023244 seconds)
    (72/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109697966 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.132089953 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.129146245 seconds)
    (75/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.175266713 seconds)
    (76/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.141237455 seconds)
    (77/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.136186535 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.12056186 seconds)
    (79/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.132861268 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.147695089 seconds)
    (81/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.197215698 seconds)
    (82/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.193512673 seconds)
    (83/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.08287776 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.126078291 seconds)
    (85/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.222248044 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.109486561 seconds)
    (87/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.112420578 seconds)
    (88/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.19155225 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.126526605 seconds)
    (90/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079306186 seconds)
    (91/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.080992861 seconds)
    (92/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.085582812 seconds)
    (93/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.139063396 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105469472 seconds)
    (95/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.10594823 seconds)
    (96/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.137106826 seconds)
    (97/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.086530378 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10373759 seconds)
    (99/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.127631854 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.1139578 seconds)
    (101/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.087199934 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104896846 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.154705906 seconds)
    (104/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.102706878 seconds)
    (105/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.079949319 seconds)
    (106/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.126121509 seconds)
    (107/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.086230494 seconds)
    (108/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.0807224 seconds)
    (109/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112058903 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.102674265 seconds)
    (111/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.167457239 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.106926797 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10597921 seconds)
    (114/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.105406249 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114515032 seconds)
    (116/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.088446851 seconds)
    (117/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.114823088 seconds)
    (118/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.10425407 seconds)
    (119/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.086825175 seconds)
    (120/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.087492556 seconds)
    (121/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.134751361 seconds)
    (122/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.180988021 seconds)
    (123/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.104412388 seconds)
    (124/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.083649866 seconds)
    (125/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.089454294 seconds)
    (126/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.176071771 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.107099486 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126369939 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.15061346 seconds)
    (130/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.081119899 seconds)
    (131/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082455221 seconds)
    (132/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091774257 seconds)
    (133/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.086667424 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.140529557 seconds)
    (135/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.085837061 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105533942 seconds)
    (137/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.127610524 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.106777086 seconds)
    (139/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.080164715 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113649131 seconds)
    (141/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.188074565 seconds)
    (142/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.080704874 seconds)
    (143/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.08666215 seconds)
    (144/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087147471 seconds)
    (145/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.110524732 seconds)
    (146/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079751935 seconds)
    (147/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081457403 seconds)
    (148/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.086462547 seconds)
    (149/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.136624501 seconds)
    (150/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.138016102 seconds)
    (151/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080921829 seconds)
    (152/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.086254312 seconds)
    (153/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.079668142 seconds)
    (154/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.111582096 seconds)
    (155/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.083210082 seconds)
    (156/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.083246168 seconds)
    (157/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.08281698 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.129639248 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.104816162 seconds)
    (160/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.081505377 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112154408 seconds)
    (162/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.171856851 seconds)
    (163/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.114199214 seconds)
    (164/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.088015731 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.15122881 seconds)
    (166/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.08782859 seconds)
    (167/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.134413237 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.105997389 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.131613717 seconds)
    (170/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090889087 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.107850077 seconds)
    (172/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.136965329 seconds)
    (173/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.081834972 seconds)
    (174/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.080212881 seconds)
    (175/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.127209653 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.131595363 seconds)
    (177/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.084366738 seconds)
    (178/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.085980653 seconds)
    (179/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117171881 seconds)
    (180/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.087547217 seconds)
    (181/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.110575098 seconds)
    (182/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11756265 seconds)
    (183/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080399559 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106442035 seconds)
    (185/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.106939608 seconds)
    (186/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082988659 seconds)
    (187/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.083106452 seconds)
    (188/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082966198 seconds)
    (189/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.080981703 seconds)
    (190/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.10517193 seconds)
    (191/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105099485 seconds)
    (192/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.080657311 seconds)
  done (took 27.564511379 seconds)
done (took 28.461188234 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.22837191 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.132234876 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.114139907 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11372155 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.234095455 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121386244 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.157194986 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.116439442 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.124923367 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.139951314 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104226121 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12681913 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.13911914 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.207618398 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.143177732 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106922417 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.104353947 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.149453447 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.130542719 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129695411 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.235998714 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107284832 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.150322749 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105830141 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.23668841 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106822654 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.113467404 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.140173724 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127671431 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114375384 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.140391507 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.107950738 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.130272494 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.153264971 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106386496 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.114210403 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128543238 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087635616 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.115483187 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114889552 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.151867246 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115470055 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11438134 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.131381307 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115294907 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.114306097 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.129173426 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118557628 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.103198645 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.13975797 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108532614 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.13029421 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.138034655 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.104972732 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103644842 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.130231252 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.127444524 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104209895 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.150824946 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1061084 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105534584 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127715001 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118021604 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105083438 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113874707 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.130199763 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115287862 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116808325 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.136813861 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108614338 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103933217 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.137617362 seconds)
done (took 10.252794562 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.11032833 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.149848742 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.235413267 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.238601033 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.134237756 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.147372879 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119330488 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128881437 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143931767 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124430802 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142853202 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.162266142 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.242565378 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.122556375 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.121576386 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.143011336 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116878539 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113593712 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.236326308 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.15799074 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.131601064 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.122247529 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.158003222 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.123632517 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108337506 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.168443564 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113883805 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.117451268 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.132608625 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.119601283 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.15346429 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110394387 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113476274 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.152190289 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127454237 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120775941 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.146358652 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119568048 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109905035 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.134597352 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118710751 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125745093 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.135026161 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.123341379 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116838017 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.148571855 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.117709435 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120924231 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.133902514 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117508484 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109959648 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.160046297 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.121581137 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12491103 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.146302808 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122662961 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122508208 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.14619841 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113438823 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121646392 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.134351654 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.110018111 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110684569 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.155477465 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.113774187 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.146041621 seconds)
  done (took 9.923482924 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.12937259 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141641839 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.144213328 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.121245211 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114831415 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127805063 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.10308883 seconds)
  done (took 1.823514094 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104845493 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.245767159 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.220107764 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.247680384 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.242743771 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.257198007 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128776662 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104784432 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.166759847 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.116137505 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.24675292 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.274841754 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.115473411 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.14583059 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.225166347 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.131519133 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.248198663 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.105604256 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120434169 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.248751749 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122587214 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.163856182 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.119265765 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104739257 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.240525824 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.107144461 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.293876025 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.150856277 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116403517 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.119875682 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146827686 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.186970829 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.241798793 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.147618083 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115372396 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.245785145 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.216475439 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.146735425 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.25825045 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.110198852 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.24343056 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.120763792 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120785687 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.147794538 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121716816 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.233942095 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.125261131 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.120467246 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.146014279 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.252424174 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.118397944 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.24388712 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.119751722 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120164893 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.142785787 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122663665 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.127386319 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.146876556 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.226336251 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.15042004 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247027227 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.2204022 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.2455922 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.248586498 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129593763 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.24743258 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.234925908 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119605709 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141124075 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122646047 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.249580882 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.120348545 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117525862 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.236199007 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122824227 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.251365268 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.250225063 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117766089 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.147500923 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.110726177 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118373986 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.133553983 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.213985309 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.14924494 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117734551 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124168997 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145739002 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.121456367 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110623884 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.155803383 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.120866973 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.142517802 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.12720074 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.120823957 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147340188 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.252739455 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.118790961 seconds)
  done (took 17.256363177 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108707663 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.107998001 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111676807 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.13322696 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.108217184 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106975903 seconds)
  done (took 1.648898243 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.146287814 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121270605 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.155707235 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123597249 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.195087059 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.227794969 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.261567089 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115652517 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.168396426 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132081482 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.254676633 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.256429609 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.254448225 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.125478643 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.260757878 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123458721 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.264558283 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.120292988 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.155261175 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119208565 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.121614779 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.150411001 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119036969 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.245844704 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122821024 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.121851322 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.140844157 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130975625 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128112192 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.142322356 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124602519 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.145203297 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.114781747 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.116172206 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.259208994 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.113872931 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144768915 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123908703 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12322979 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.149339119 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.259430361 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119315413 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128309091 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.150175826 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11627546 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.113258102 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.172560998 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115334146 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.261878842 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124027609 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.150486132 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122841989 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.122842115 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.150863698 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.114843748 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116064491 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.150365109 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.235856686 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.153465116 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.114004778 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.147635846 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.124026787 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11634486 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.152507595 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.123136462 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123446302 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.138894095 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124506348 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119413826 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.147924038 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.125175621 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122124887 seconds)
  done (took 11.952798411 seconds)
done (took 43.540490395 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.687589555 seconds)
  done (took 2.656791526 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.123249991 seconds)
  done (took 2.092876499 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.713238817 seconds)
  done (took 19.713943215 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.442450328 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.484311677 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.173047103 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150320411 seconds)
  done (took 3.219444893 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.850916909 seconds)
  done (took 1.846829899 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.347949381 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260160017 seconds)
  done (took 1.587443874 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.718450214 seconds)
  done (took 1.708027518 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.567537152 seconds)
  done (took 2.546272265 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.296811083 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.25121621 seconds)
  done (took 1.540231985 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.647804705 seconds)
  done (took 1.639603422 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.110582421 seconds)
  done (took 21.104756153 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.264889822 seconds)
  done (took 1.262162819 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.296136472 seconds)
  done (took 1.295216483 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.722301046 seconds)
  done (took 4.723138745 seconds)
done (took 67.918451134 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.122113487 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125532249 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.149779771 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123012511 seconds)
  done (took 1.508739335 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.126710595 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123458153 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.150796624 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122437992 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.128023111 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.145952049 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122341299 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.124379782 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120926597 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.149495705 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12224573 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120159304 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.150294833 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121221964 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.119391483 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.150175452 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126069881 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121587697 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.148212694 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122860336 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.122134703 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148330886 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.1256257 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.124506069 seconds)
  done (took 4.139367981 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.118703434 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.112676318 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.11337441 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.136578041 seconds)
  done (took 1.485828561 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.1303182 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.134326258 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156596776 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129399627 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.134378932 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157306104 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120077774 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.119108618 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.146557408 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.131786949 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.137635388 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160896349 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.134654938 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.147876207 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.133119518 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11753182 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.122537706 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.158641323 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.128306966 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.155088419 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.122279417 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128934452 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.15229019 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.133284946 seconds)
  done (took 4.292785351 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.19923133 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.132230936 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.180211269 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.167235179 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.181675081 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.119149534 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.149626603 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.15374109 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.129286518 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.149528761 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.124472189 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.168754089 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.15461712 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.12427418 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.12143404 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.153397133 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.134703459 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.151901206 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.169516287 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.126984057 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.154809571 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.134966934 seconds)
  done (took 4.289641044 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.125205067 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.112404029 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.136155854 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110718076 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.126422527 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.13943382 seconds)
  done (took 1.761641577 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.111746969 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.107391713 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.107335732 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.13190865 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.110412288 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.106950254 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.129714086 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.107472109 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.106248074 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.106410213 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.132045498 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105564727 seconds)
  done (took 2.366990938 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209453957 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14879308 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260736134 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.402064655 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192607607 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192304999 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287521661 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193712501 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.210112675 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141262684 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218298754 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166392654 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184458289 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190065597 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169422763 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161189419 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196541757 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211572657 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172232464 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246330528 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160925936 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204986352 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192557327 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17981123 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142338582 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192640176 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122772605 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157098868 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173076902 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195960517 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205418857 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15329167 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143588728 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222365077 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26436156 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210964347 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273801165 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137474646 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201418862 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.194952097 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262327524 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171291414 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22653056 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154659753 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130136609 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217366572 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185427289 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.188427521 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.16418583 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147839996 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216195863 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183083558 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.20010929 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164508072 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300862927 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161942054 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145469703 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208851122 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218087412 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202673061 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209458294 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.1250698 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203696238 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220379539 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218477008 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.172913591 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.194175328 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129631802 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167004132 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.236280424 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21356071 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161375912 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.240579561 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160970713 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174986052 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200530042 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159008705 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236633487 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203556118 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122891097 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181328239 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136765994 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128640831 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.219108093 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123838267 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245371239 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133712508 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.344535874 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210670381 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159219709 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194163517 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190933921 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166238976 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179064471 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102761649 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144035146 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.19166322 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162358965 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159509549 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15883982 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169162741 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128976099 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154864701 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.152772613 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171632755 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.162654856 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166014691 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203420385 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.134314108 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208794093 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150867201 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.192702333 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17349255 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223672208 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159788269 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136490386 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253279041 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172648551 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.166777261 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178453724 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228060675 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.150906141 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166446294 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194641268 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197097095 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173162998 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202571354 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169107957 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137534825 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170414646 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175122393 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190865062 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161482037 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158067222 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.167551076 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222934833 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127562759 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171304435 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183273434 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164153582 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126360665 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166521398 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137949976 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.144112389 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.179720059 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.141633345 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185281049 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169325455 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196376823 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161459712 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164644831 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203803292 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133031385 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.170524106 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179495183 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121618733 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20701912 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227271188 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132650589 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182743317 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.193365778 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212412516 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175323258 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159109299 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185500352 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159416413 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121443848 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192640503 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173095829 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195589619 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.217687076 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180152688 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.195971717 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192441834 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153991934 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200610078 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185072024 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186943678 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.146072928 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205923003 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17240972 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.150490016 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125437624 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.129793871 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167327432 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133738769 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16684957 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183852309 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196095061 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205364164 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170648956 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167052934 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192607065 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.155699458 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163878597 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.207413844 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140642385 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.22048512 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220532726 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181334143 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170234974 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165491996 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.148898187 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128675777 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.135485798 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192150331 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138326745 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166690645 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14348928 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222045516 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176122211 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18109837 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218730728 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168797064 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229214729 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121958709 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.191211323 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172073204 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198029964 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.189370157 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161065479 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.165249292 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223683615 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145045037 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223812203 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199416107 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182130739 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228584287 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.192649356 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133746369 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151435238 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192751635 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139957779 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19262793 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148707403 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159454926 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155408417 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.165894582 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144600694 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220307435 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145737986 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212688209 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.159147907 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202769921 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12783897 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172825572 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175561045 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176582846 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106365824 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202211061 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222947976 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152102841 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186321147 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176395268 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16022337 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.319784177 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21918699 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180464554 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167983403 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139598323 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201803431 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162978039 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194378114 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18669687 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172642816 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241751868 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175438768 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.174248069 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13459494 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148966072 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18215453 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.141147656 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.181936058 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.19106489 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14685931 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222037091 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139898992 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201204536 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178899529 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.175790843 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.152031029 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141688126 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256446878 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2009989 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204329207 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.167499734 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.195409392 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186818295 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12555681 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157629664 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136844458 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217533868 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132055219 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210837237 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.167322445 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21250909 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204419171 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164527979 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172885167 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.130961385 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199176872 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15174561 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215446368 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138040003 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.167994898 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222058004 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130335504 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132269546 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192404136 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317232556 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151281978 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203607613 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108696533 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.308538202 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133119806 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13525959 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194011446 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173158425 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.164167823 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187210061 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204836267 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142833657 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192606584 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137536564 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207979754 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186105688 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197547234 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207383172 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147780936 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194607167 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163936783 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206704005 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14815687 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.178769476 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16302079 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225641449 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.208198531 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.134645661 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171360819 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200193479 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201520789 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178313807 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169444064 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186439577 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157862875 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169371629 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169489554 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127028482 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162399027 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.197415472 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159470714 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179821363 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202536325 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134054475 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129111899 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17866259 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19451759 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142900508 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132307131 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21830825 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.130562707 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213902194 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243076765 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135125935 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199463499 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148732032 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133109476 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170099779 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1460078 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162575386 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.178848016 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212084818 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135591455 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208857683 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170538617 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196700476 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1620011 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176113539 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.266308527 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.159757527 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194516056 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184289669 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199196661 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181601982 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17902909 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201838921 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152475455 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197769462 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181092138 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.223377452 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197019265 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.168979167 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161527416 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146426099 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139858577 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.165250401 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154193385 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200036341 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144708555 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.16688302 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.172124515 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175752844 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.150128342 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1428135 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233808262 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182199322 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192179084 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218928806 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140365634 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207255023 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209033305 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131151429 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.196763423 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177147985 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173591639 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156355748 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.137275468 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.169495531 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247498719 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.128362804 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162565134 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206268903 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198399785 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175232559 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.137917402 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20953219 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172386037 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180543017 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129188229 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.185674565 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171735162 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166719168 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129588569 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204217608 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165260359 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.197420484 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145824557 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.204474448 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199336679 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.152437174 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136654744 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314295012 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166179496 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228024892 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139440136 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169271405 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150705646 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191746788 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.171819146 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202022277 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.132884145 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130824861 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.177154354 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159937069 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.171794387 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170314093 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213861083 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164256224 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2168561 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135324631 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.287225987 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14518924 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203487893 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117944391 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.160112149 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143135599 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137124259 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175659861 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.2100505 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218693482 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.195248586 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.149994773 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16739518 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129350576 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131904949 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195475044 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154558583 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200149009 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148997587 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.13407992 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144362448 seconds)
  done (took 86.983154549 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176331086 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.174934881 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.190556975 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.239707761 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.216075772 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.307809057 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.252257969 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267265143 seconds)
  done (took 2.917402779 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.122386241 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.16378844 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144764134 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146783177 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.112363848 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.491419709 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.163735456 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.124619864 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164793381 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154698987 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.139277246 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.582664917 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.119099709 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.148463463 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123984862 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.138189009 seconds)
  done (took 4.126948356 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.352914314 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.559502319 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.223818533 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.292134163 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.273661467 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.217628531 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.805714025 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.212396236 seconds)
  done (took 13.02419072 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.17897893 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.174376313 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.463575669 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.317518356 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.187319074 seconds)
  done (took 2.420242099 seconds)
done (took 130.306888842 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.128009057 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129027824 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.126214552 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.157826601 seconds)
  done (took 1.626458378 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.195846513 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092697772 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095564562 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121241479 seconds)
  done (took 1.602472189 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.471298251 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092705506 seconds)
  done (took 1.68901274 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.151846935 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.146721176 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.172862474 seconds)
  done (took 1.581591095 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.13884571 seconds)
  done (took 1.239287394 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.125376481 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129928006 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.280273704 seconds)
  done (took 1.639337848 seconds)
done (took 10.482210029 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123863696 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.935681979 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435074845 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137614902 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.715916522 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431142276 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.433916532 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.181231386 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179891576 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.14228506 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135825585 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.693764966 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.446941951 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.883972876 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.402722074 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.912048622 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699106099 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115764781 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.149651474 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114847225 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.412898554 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141028414 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115670457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114239546 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.724176247 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424215358 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113229209 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.925518742 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112665011 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116500543 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.431983497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1145134 seconds)
  done (took 21.110175615 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115570977 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173578442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150670118 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115833138 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11737836 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.143320952 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125312151 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.127793361 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209776772 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113918903 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.165727624 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113258146 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120498428 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142834908 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138639854 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113279805 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.145880477 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117105713 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122373204 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.14537272 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136728911 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112759554 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.144627211 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117584139 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114344799 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.164535828 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113860444 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12730638 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.142691641 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118296658 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118895132 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143401701 seconds)
  done (took 5.386297461 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.163180544 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181950053 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.15223772 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153052193 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193202398 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116412147 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.232591994 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154003152 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209545275 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113909875 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135742838 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.142795429 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156000461 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.115094524 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.169500185 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11329155 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117442492 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146488623 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12273313 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116378132 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.165810125 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11377624 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.1155723 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.145343055 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115417222 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.166765675 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116292691 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126568378 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.143103105 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118614221 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120480798 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143293066 seconds)
  done (took 5.706855159 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12988838 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129686829 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.136178901 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.167773469 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.124475356 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127182227 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157834216 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126492496 seconds)
  done (took 2.209054905 seconds)
done (took 35.51748955 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.140298246 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.132314859 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13622518 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.159277802 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.257598294 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.121750609 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.132980518 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.121175107 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.160612915 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136647323 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112028548 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.155253191 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134738472 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.124880586 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.259243958 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.130085463 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.26407086 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.261033491 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.122269018 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.130922806 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.153423442 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.233330768 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.158097177 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.123463544 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.256619766 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117922343 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.254720987 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125957785 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.124225389 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.145896352 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.232289787 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.158998512 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.123312238 seconds)
  done (took 6.505782155 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.241561676 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155676026 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.124906785 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.122994639 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.123513592 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.152032099 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.249007096 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.155221523 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122589393 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.122051684 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.153131286 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.229383239 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.16052129 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.118041279 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.12512454 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.11289001 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.280596684 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.156154477 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.115847521 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095790695 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.119643269 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.152607496 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.262091168 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.149320846 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.123731811 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.122800182 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.154452851 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.128866532 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124143801 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.124763086 seconds)
  done (took 5.704748837 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129565042 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136680786 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.17069335 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.192854731 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.152458821 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164762669 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143245009 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138111517 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.175711686 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116430499 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.131480877 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.183012742 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135118431 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127280516 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146340066 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13583582 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.139763389 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147753197 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125184719 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1335854 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.168500907 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.135618286 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139750078 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.155297113 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.116288379 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122995207 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.158480988 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128452848 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124613542 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.161264527 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.119142526 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.120356025 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.148316112 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.153176231 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.117943303 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.160621501 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.144451771 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128680552 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.160246808 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.150340652 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.120651876 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.147961914 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144913772 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171652963 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.148468003 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12986873 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127962411 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.163338289 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.115413463 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13420452 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.188907382 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.116337574 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.137407972 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.14717962 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.115290695 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124516506 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.147233483 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120751969 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131171233 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.148445991 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.142438732 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123381343 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.157108272 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118760328 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.127848329 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.145333353 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.116039339 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121148345 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142708954 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.154182172 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.154448681 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.11535083 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.158960412 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.129788885 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127793708 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.158605361 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.115647595 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127678161 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.158099685 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123765078 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129042181 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.148198332 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.121212944 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.133219321 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.167648635 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.131030995 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.127315063 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.160150907 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121623923 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.119251901 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163675051 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.1174821 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121561743 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.158559328 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118435219 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121020556 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129891798 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.157880964 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.114453262 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142823702 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.150130738 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.116960248 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.142321335 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.150917605 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122674468 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.124971183 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.187858806 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116795233 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128058838 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.160072539 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117367927 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.125107907 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.14911563 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.117551973 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134759647 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.161845793 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.1274942 seconds)
  done (took 17.413188159 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.358037753 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.345326526 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190119162 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.436145489 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.130738385 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.275488508 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.343806451 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.348412652 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116889033 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181834768 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.179026476 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.314611421 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.14983759 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.146257559 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.34902907 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.405729936 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.180032407 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152648929 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.185238785 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130959186 seconds)
  done (took 6.062310727 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.138139214 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.1534445 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169774715 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146353939 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.126983327 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.164155472 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.117041357 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139937605 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157946185 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127309041 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.119542086 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.163829612 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130255878 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.134102413 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.16226028 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149978737 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124297779 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.152552859 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.141099356 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121865876 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.13457736 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143623217 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125151825 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.170286504 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.136622957 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.127282827 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.146446131 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122760747 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123811703 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.156919801 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122748543 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134590269 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.154396707 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106827956 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129151784 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.162299237 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.124882945 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120165816 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121808197 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.151114908 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.133146499 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128963864 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.155762478 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.101211328 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.136526168 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.110862429 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.162275945 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.130108996 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108535164 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.167459801 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130364466 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.131363775 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.153298844 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.139620741 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123088833 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.164080336 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128490633 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.13253154 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.150600398 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115829222 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115546216 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119579828 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.155259467 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.131755795 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129303204 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.168409304 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.135268281 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.11622938 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.152427552 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121374264 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.12048207 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.161150818 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138352788 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125821186 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.154117371 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.130095737 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124737136 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.125610687 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.127579378 seconds)
  done (took 11.967605538 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.142567426 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127589088 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.164123722 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.153644933 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131396941 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.152565244 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.128028262 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.137399707 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.131139276 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.165263252 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.136314247 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13169189 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169126013 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.129064455 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12641582 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163164795 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131490663 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.186407081 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.1362108 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.145541032 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.162237459 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122078822 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.130406147 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.158043783 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.147587863 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.129063717 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.174922381 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.132098835 seconds)
  done (took 5.201538453 seconds)
done (took 53.97277065 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.299373155 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.475824882 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.247660258 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.245817178 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.244455812 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.275094812 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.250972819 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.247620461 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.831422039 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.220388778 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.246089065 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.247949706 seconds)
done (took 28.979630895 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.382954609 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.396405471 seconds)
    (2/2) benchmarking "String"...
    done (took 1.56960755 seconds)
  done (took 4.115393004 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.237186142 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.237734928 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.49363695 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.238195449 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.238790275 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.24003527 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.237119922 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.243049873 seconds)
  done (took 16.067683977 seconds)
done (took 25.944241845 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.266837573 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.538228339 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.504703573 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.222738874 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.239835233 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.247072916 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.240830749 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.290725485 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.240084189 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.230106557 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.663923059 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.533400953 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.240144285 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.655546557 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.222464809 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.247812969 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.255031578 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.607118257 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.242124125 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.219113722 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.233121182 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.221065209 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.280254221 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.253315563 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.249377321 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.249364347 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.242925408 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.245074021 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.551782973 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.25265717 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.275130523 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.244238585 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.232615325 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.257876086 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.242110658 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.25690694 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.52213739 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.25027774 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.226500198 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.273100938 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.540695572 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.24417554 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.2425929 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.25178819 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.230685899 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.256006665 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.229897485 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.378697065 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.270129072 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.250410947 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.303434543 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.639744551 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.256181016 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.250653225 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.248121939 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.581204793 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.26642518 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.344100428 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.278470017 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.247233892 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.241605046 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.249932805 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.279318218 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.244245347 seconds)
  done (took 146.934319326 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.243113608 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.243496699 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.244133718 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.250988268 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.248992336 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.242453626 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.243105759 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.244488788 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.244334256 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.267807084 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.24288444 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.244039518 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.247086038 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.191929719 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.253449032 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.259944568 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.24493876 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.2452924 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.255316366 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.24427344 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.267865026 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.244370143 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.244779463 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.245047631 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.290497578 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.329346409 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.258705788 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.244817855 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.253028374 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.244581406 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.253276697 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.247618487 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.913732626 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.118078269 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.257463763 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.279222186 seconds)
  done (took 81.739394925 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.244873311 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.245336798 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.244160858 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.280337945 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.245703533 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.871717721 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.875687164 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.310127095 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.711329168 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.76995397 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.513472603 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.246491792 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.34064691 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.258642263 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.24652903 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.340278367 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.273156289 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.250110676 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.245906605 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.871903185 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.262416425 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.259158998 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.431790562 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.264010598 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.28212377 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.246916835 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.640089322 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.246938249 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281431905 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.586146262 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.298138257 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.245839102 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.616223274 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.433121957 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.245984559 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.360330774 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.249320295 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281839903 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.248537964 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.532897924 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.246557073 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.248331698 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.250567482 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.899506811 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.248804789 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.876217829 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.251790398 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.235244492 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.249835164 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.248997321 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.287261807 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.930372226 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.247927135 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.247319253 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.250722798 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.249008693 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.248377862 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.282097398 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.273941666 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.150194837 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.249380206 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.250797466 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.28390993 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.250311331 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.255011259 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.251990913 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.751461998 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.309275483 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.465794173 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.878159462 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.252093643 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.347217072 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.370813674 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.249607808 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.249566858 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.250984178 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.250054988 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.249633506 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.363926247 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.250082125 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.970060946 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.251305621 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.432486652 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.267195242 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.780680798 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.353516283 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.251182016 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.623242065 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.250467705 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.248443581 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.003529765 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.346609778 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.250335978 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.250291746 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.25053048 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.975663588 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.883821755 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.561796488 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.255628966 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.855546631 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.257062796 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.145731791 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.851987433 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.901387975 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.251061896 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.364163304 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.434119652 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.270101073 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.251299481 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.785523053 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.255619834 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.313288012 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.251265303 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.652670079 seconds)
  done (took 383.301619261 seconds)
done (took 613.114525703 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.116214467 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.059425811 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.227598784 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.083177447 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.054363748 seconds)
  done (took 11.691212487 seconds)
done (took 12.841791958 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.459236096 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.464722037 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.321102754 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.461602692 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.291016713 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.481272964 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.447780883 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.274481679 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.376002503 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.344573443 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.372808437 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.311362199 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.291144281 seconds)
  done (took 19.048442082 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.541999298 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.265618926 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.321183398 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.533591042 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.299621377 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.549428273 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.58930722 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.265096298 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.422299344 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.278796565 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.277292424 seconds)
  done (took 18.4969674 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.55356516 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.268251585 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.341639834 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.536430602 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.30255739 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.578835477 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.59572969 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.266152001 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.423795058 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.27911583 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.277163497 seconds)
  done (took 18.575329122 seconds)
done (took 57.273241433 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.295798931 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.360982898 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.294110994 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.272373061 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.274229343 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.272986161 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.277269206 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.272425579 seconds)
  done (took 11.47244619 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.271982416 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.271174734 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.272422833 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.273437942 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.272756814 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.271827056 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.273630867 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.272291068 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.272352816 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.272708829 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.273346359 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.27276193 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.273386766 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.274103206 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.272909586 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.273712166 seconds)
  done (took 21.519297325 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.274110959 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.274281122 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.272527297 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.274045416 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.27338559 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.273532298 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.275236972 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.274727075 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.272871222 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.273123896 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.27414268 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.274401301 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.27398004 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.273843187 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.273808957 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.276755776 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.274619526 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.273638705 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.279375462 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.275340713 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.27527818 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.283260773 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.273272624 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.275344707 seconds)
  done (took 31.748753383 seconds)
done (took 65.893673565 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.274539886 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.262682386 seconds)
  done (took 5.693462704 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.336829068 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.333398976 seconds)
  done (took 3.827889667 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.275450678 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.275198043 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.276715807 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.276289175 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.274186953 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.274194567 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.276226139 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.273723457 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.275960718 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.275007313 seconds)
  done (took 13.908629454 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.276615256 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.276608763 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.275963744 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.276411004 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.278335175 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.275539341 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.275583358 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.275967912 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.276586934 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.275257136 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.276175112 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.277355903 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.276051575 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.276289224 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.276991608 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.276173177 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.275736357 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.277450114 seconds)
  done (took 24.131526515 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.28955562 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.296269261 seconds)
  done (took 3.742314228 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.404422987 seconds)
    (2/7) benchmarking "second"...
    done (took 1.318048821 seconds)
    (3/7) benchmarking "month"...
    done (took 1.380782099 seconds)
    (4/7) benchmarking "year"...
    done (took 1.374172981 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.316864393 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.297767406 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.316779715 seconds)
  done (took 10.567302816 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.264241513 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.565584647 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.751334542 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.425308886 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.258304312 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.280680497 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.251136557 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.285427239 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.281757905 seconds)
  done (took 14.521867609 seconds)
done (took 77.5515858 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.26130486 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.342888607 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.299115798 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.282599401 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.574168666 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.313992227 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.265007979 seconds)
done (took 16.498651172 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.249318406 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.259539051 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.246762635 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.290730126 seconds)
  done (took 10.205539228 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.271949669 seconds)
    (2/2) benchmarking "read"...
    done (took 1.592165063 seconds)
  done (took 5.023776912 seconds)
done (took 16.389323583 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279016151 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.28077241 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.280267173 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.279876165 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.279403891 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.280069857 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.279782125 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.280802946 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.279960677 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.280768311 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.280677465 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.280824134 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.279759216 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.279763644 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280683798 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280224469 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279389773 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280541685 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.281030607 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279159818 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279771006 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279980905 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.280125409 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.279333729 seconds)
  done (took 31.882212509 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.279493858 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.280660698 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.278973415 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.280276616 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.281513294 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.279273685 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.279287756 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.2801401 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.280397311 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.279927571 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280116788 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.282434231 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.279472028 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.280250214 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281427342 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.280677429 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.281449049 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280429314 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28253652 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.28233566 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.281450151 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281080871 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.28021746 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281614713 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.281388162 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281667738 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.281969858 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.2818033 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281505743 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.28209068 seconds)
  done (took 39.587742898 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.286201124 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.288239845 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.282591887 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.282560242 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.281314505 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.283162326 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.282140679 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.282099894 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.283691096 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.282895873 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.28213157 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.282147554 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.283512739 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.281236986 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.280483976 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.282034934 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.284842638 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.28239168 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.283526543 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.28490844 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.283087787 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.284129279 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.283399598 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.282187455 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.282276988 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.283262766 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.283304655 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.283307594 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.283133267 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.283494955 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.282802565 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.283990051 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.285340898 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.283532938 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.283064154 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.283719291 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.288424255 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.292740999 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.283182895 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.285020526 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.283763 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.284894455 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.282967287 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.283722221 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.284317548 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.28448902 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.284196509 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.283843152 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.28420601 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.284031008 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.282641258 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.285698554 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.283761898 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.284666973 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.287225511 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.285701445 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.285101845 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.284360246 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.285153189 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.28580284 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.285523877 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.284965856 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.285260596 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.286466782 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.286060308 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.285719703 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.28586659 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.286995064 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.28551441 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.286317269 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.285929975 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.28510655 seconds)
  done (took 93.631243143 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.286231237 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.287319422 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284675896 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.287008173 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285541423 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.287205508 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.286319532 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285972737 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286386759 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.287027438 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286570676 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287292311 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286826817 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287216982 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285683229 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.286132356 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.288054252 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288313826 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.287751377 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288381121 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286983205 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.28785333 seconds)
  done (took 29.476681017 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288758305 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.289255848 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.289993971 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.289505617 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.288631422 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.29028007 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.288456131 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.288647852 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285901863 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288105475 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287308617 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287787348 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.291735374 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289437713 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287549416 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.290872429 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288988807 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289804407 seconds)
  done (took 24.370607414 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.28862393 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.288789569 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.289414327 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.288275055 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.288230486 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.28870901 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288220494 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.288323077 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.289056478 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.288411102 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.289884495 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289580887 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.29028903 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288823129 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289535879 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.287803686 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.289461337 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288444964 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289507465 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.290395493 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.291229487 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.290273421 seconds)
  done (took 29.53071525 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289644777 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28958848 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.289442469 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.290438999 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.289361894 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.289201633 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.289731575 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.2896982 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.291365642 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.290111449 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28992438 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.291365557 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.291605642 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.289546107 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.289765611 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290027185 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291580853 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291066394 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291925932 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.291057653 seconds)
  done (took 26.977556679 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292322265 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292145695 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291555904 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292486244 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292056655 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.293555759 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291331243 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.291487508 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.292003177 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292488758 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.293181504 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292014568 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292358867 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.292452702 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292335738 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292585559 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.292805604 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293748695 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293646296 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292828413 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294211257 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.2933972 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.292987572 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.295119536 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.293796195 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293703116 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295349239 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.295144294 seconds)
  done (took 37.375626574 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29437519 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.293748467 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.293868619 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.293219158 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.292969093 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.293837749 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.293920181 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.292968309 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.294025733 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.293801738 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.293760953 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.294748052 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.295160774 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.293845124 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.293911768 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.295482184 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294213124 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.294193714 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295150136 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293717751 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.296833547 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294458935 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.294831701 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295066054 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294910957 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.294407991 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296386076 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.296231638 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294871657 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.294699064 seconds)
  done (took 40.006696434 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.316138779 seconds)
    (2/2) benchmarking "in"...
    done (took 1.313374487 seconds)
  done (took 3.802405595 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.294789954 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295900467 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.295311313 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.296610068 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.296205201 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.296124911 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.296449462 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295113212 seconds)
  done (took 11.541377995 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.287999759 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.295006575 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.29563534 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.297013633 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.296711806 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.288918825 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.296990718 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.301666834 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.289203746 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.290357597 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.296301398 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.296620727 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.291852089 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.29201935 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.290888123 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.293650899 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.300289346 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.298370975 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.29758738 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.299056766 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.29850038 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.292707299 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.295472671 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.301665701 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.29155812 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.301602287 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.299230138 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.3018873 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.292556859 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.296599622 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.294577565 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.302307435 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.298881241 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.299495039 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.300209512 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.299152848 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.300900204 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.299515085 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.301243503 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.304849852 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.300560892 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.300327469 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.294071995 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.296347875 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.297296555 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.303246265 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.299511448 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.299832108 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.293703877 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.296434285 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.306714989 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.293746969 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.302234439 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.296973361 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.298671583 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.304081873 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.306976215 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.296140847 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.301175332 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.305441091 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.312513227 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.309748183 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.300032893 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.304329179 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.303865493 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.316676791 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.306800545 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.30872683 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.303233324 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.30108925 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.303499714 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.315136726 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.316344638 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.305943288 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.300995658 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.301630426 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.295395734 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.306220121 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.304633358 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.305559203 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.308097921 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.302280085 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.304106305 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.317381193 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.297331075 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.305219717 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.302473684 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.303313608 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.29446866 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.308346617 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.311665277 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.301778201 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.295946235 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.299905535 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.298669011 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.306075672 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.293962317 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.29894734 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.306487309 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.304865082 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.303628781 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.298338985 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.307985068 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.309823259 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.305171453 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.307592975 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.313032093 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.296810019 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.308368092 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.311115228 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.306277954 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.300100742 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.304385841 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.309844323 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.29969953 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.30616599 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.30968591 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.300563866 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.311588384 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.305368694 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.30632969 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.324684214 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.312656048 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.305545389 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.300175473 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.316318363 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.307450638 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.30272217 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.310097649 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.305000147 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.305045505 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.303397235 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.31130884 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.301695831 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.310696064 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.299895642 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.309453697 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.307268502 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.306531854 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.302530682 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.307763269 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.304200768 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.305651584 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.310995686 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.314141241 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.304313314 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.314798988 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.307456657 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.305720868 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.308834047 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.313914585 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.30714055 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.301756345 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.310579092 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.29889154 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.310285069 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.302542376 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.312423821 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.308504082 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.308719547 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.30716466 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.300093721 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.304062272 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.310974014 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.308255102 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.308578934 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.313497709 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.309742089 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.30873398 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.302287539 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.312534975 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.299189325 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.304951139 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.316017572 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.309500207 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.310333794 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.307005681 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.317520338 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.309420685 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.309240585 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.304543498 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.312055166 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.315501562 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.312188127 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.319432966 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.310737981 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.311499061 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.304101398 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.306656097 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.312700274 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.304653135 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.318913771 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.317880928 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.323521803 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.306723999 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.314969763 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.303657925 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.31522625 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.311748064 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.317380465 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.311063157 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.311062701 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.303574634 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.314606508 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.30711315 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.317148419 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.302904672 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.313747954 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.312216535 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.312390647 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.312055625 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.305814326 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.308395717 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.315761416 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.31334352 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.312912868 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.305884143 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.315451247 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.304004132 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.30623207 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.316406604 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.313596245 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.314335491 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.3212792 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.310674943 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.317055449 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.312798525 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.308191262 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.316716986 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.311347268 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.313003367 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.318208881 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.316005348 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.310278691 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.319400767 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.316784188 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.307089756 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.313648822 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.322752272 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.314693762 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.309291646 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.322461071 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.314308853 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.314230845 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.314469626 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.308782324 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.317932429 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.317137576 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.323535894 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.308841848 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.321128891 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.309810086 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.318452546 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.311668579 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.317638873 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.316391274 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.320018383 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.324540197 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.316505607 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.30983084 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.320505341 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.315507023 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.314221117 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.309044686 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.322977443 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.31710911 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.316946166 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.314463822 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.314138667 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.319380143 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.309307561 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.317366778 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.309583097 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.328119464 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.338873604 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.320022208 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.320714013 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.31929044 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.319388069 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.319889642 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.312337344 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.311530925 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.314452437 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.311410351 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.312844824 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.321604529 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.31035047 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.321219321 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316487159 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.320384881 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.320357058 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.3160999 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.310450833 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.322298908 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.317581043 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.317313441 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.309191602 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.32038717 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.313348159 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.318991613 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.318351831 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.312327483 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.325956048 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.322464844 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.315199 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.314743771 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.312314843 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.310970829 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.315614467 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.323725215 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.312739789 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.324343114 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.312906635 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.32021328 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.315688677 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.325052274 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.329603545 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.313377612 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.325965999 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.318343978 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.310938962 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.312343662 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.322369853 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.325873035 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.33243531 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.312088172 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.323654018 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.320707501 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.320315536 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.319486252 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.320321924 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.318993453 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.320857513 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.326171158 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.324028588 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.317676036 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.321017881 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.329440199 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.321096275 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.322699596 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.311297759 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.322339601 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.331417987 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.315752976 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.320031531 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.314844199 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.32424479 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.321112147 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.31968681 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.322473494 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.321972885 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.326185982 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.326158524 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.324894877 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.321996459 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.327092265 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.334336165 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.326033492 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.335367377 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.315954717 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.328648022 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.321798622 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.315927052 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.315906684 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.31777555 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.327298715 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.317387911 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.328401527 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.324685099 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.318846575 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.322963884 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.331200444 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.315295482 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.324504376 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.346254261 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.314717918 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.327014365 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.323128452 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.315225647 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.32577249 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.323375376 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.312618834 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.319472498 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.323061796 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.329882725 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.317488706 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.32576362 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.316474761 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.328515804 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.324195646 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.32564646 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.321614608 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.32385016 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.31683211 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.326530844 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.324377252 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.335709476 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.318135497 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.32532454 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.31982581 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.332678519 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.33826601 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.320690442 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329696417 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.327211471 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.318393135 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.322893268 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.331533322 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.31924682 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.328432253 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.31938329 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.323264187 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.323583658 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.327577594 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.329194294 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.329484481 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.317774978 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.321562537 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.329654756 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.324526181 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.32806076 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.322701596 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.331793693 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.319462474 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.319885354 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.32853814 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.321842723 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.333585136 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.321269418 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.32611648 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.324809096 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.330499783 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.328185044 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.327205038 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.317293659 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.319694977 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.333843934 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.333239129 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.327249301 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.328255354 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.329759722 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.320993501 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.326779561 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.328164583 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.321438252 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.32365548 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.331466898 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.322351835 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.323215972 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.323894631 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329555643 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.332461619 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.331530337 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.322252815 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.336331609 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.339642564 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.334679212 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.320224053 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.325722809 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.324422685 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.330395856 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.327341966 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.321783745 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.338949907 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.336325593 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.330819153 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.328609656 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.331408963 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.322103988 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.332135554 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.328491334 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.326659098 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.336782376 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.325944042 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.338914815 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.330715434 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.330413078 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.322206706 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.322809084 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.325436341 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.328588184 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.331086993 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.330597268 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.334813313 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.329884596 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.335585844 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.330755803 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.33206075 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.331749472 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.321762578 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.332768186 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.32330863 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.332832065 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.333948961 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.324178831 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.336185372 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.330646437 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.325885506 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.33224671 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.338919099 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.332392778 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.324595593 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.330720954 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.335813703 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.343725238 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.333009044 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322954511 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.329498305 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.335260878 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.331832982 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.330450031 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.325962057 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.344534297 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.346978679 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.325152801 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.32934294 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.337464911 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.343759398 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.331763629 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.333055669 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.328336661 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.332201545 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.339361691 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.331753215 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.336703023 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.339568626 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.330387303 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.336369836 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.328365986 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.331429157 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.335301217 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.344095607 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.33347275 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.32979649 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.347632348 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.348504288 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.335632896 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.358837063 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.341361557 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.335460958 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.340937118 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.324958118 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.336335503 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.329268841 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.34013589 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.334988132 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.336816599 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.33517472 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.327461782 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.338200633 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.345221495 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.34796773 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.335236204 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.327075426 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.331087658 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.337882505 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.336074491 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.3390361 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.334965386 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.335317037 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.334865048 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.328804171 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.34828777 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.354805515 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.342389637 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.336790073 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.335749118 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.337164745 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.340544041 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.336084728 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.343673057 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.336626112 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.337838246 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.333695159 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.34533806 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.337270365 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.329141895 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.330862491 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.33085325 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.340686348 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.345727264 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.359235985 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.33917921 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.340196631 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.338431316 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.337764614 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.330869423 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.340406355 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.336159381 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.330320471 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.33370196 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.340201699 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.338865439 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.338081085 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.331244066 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.344900249 seconds)
  done (took 786.868174379 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.337376358 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337775605 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.339394989 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.33808265 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337773516 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339693716 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.339415287 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.338424622 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.338385947 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.339072337 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.338754749 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339123395 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.339802145 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.338892054 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.337291258 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.33942865 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.340276631 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.339442147 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.33832718 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.338831576 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.338341607 seconds)
  done (took 29.323778888 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.340674691 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.337863496 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.339824581 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.339623928 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.342157801 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.340569451 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.338666295 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340693714 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.342076068 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339864331 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.3410935 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.341134875 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.341420914 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.342308788 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343485593 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.341342632 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.341029284 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.342611628 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.341777864 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.341953853 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.343099215 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.341827919 seconds)
  done (took 30.715804055 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.343341349 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.340468676 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.334518173 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.344335567 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.342565979 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.342242369 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.341548698 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.342465609 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.344421714 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.335016442 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.334972162 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.338002632 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.339971121 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.348373674 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.338488362 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.349145954 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.34326853 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.343297635 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.341485018 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.341749317 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.346473228 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.355311193 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.343671077 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.334653051 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.345589801 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.343540628 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.343101207 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.343072958 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.335633682 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.347387898 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.343567521 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.335613327 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.345740367 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.346084008 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.337535998 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.347102192 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.343448624 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.343457266 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.344388043 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.346339944 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.364908929 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.344750632 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.34839889 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.359290401 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.343852069 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.337544945 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.352168898 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.342597639 seconds)
  done (took 65.707877151 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.344747468 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.346022221 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.343709378 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.345356267 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.344824907 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.3439735 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.344912104 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.344880737 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.34488558 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.345633721 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.344706806 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.346218635 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.347990309 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.346048829 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.346573961 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.34728343 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.346230521 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.346645392 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.346708765 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.347619607 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.34725662 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.34785909 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.347906693 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.346987371 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.347191252 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.347884948 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.348078436 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.348289693 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.348330361 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.347185487 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.348016253 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.347170648 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.347727247 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.346572683 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.348108985 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.347733822 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.347161524 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.347131971 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.348115463 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.346414862 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.34905793 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.348317265 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.348217334 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.347701835 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.347506413 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.347029512 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.348854691 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.34928396 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.347434163 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.346639249 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.349355597 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.348118795 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.348369295 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.348641044 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.348997512 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.347625773 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.349821137 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.348974843 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.348408623 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.347781251 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.350109643 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.34879346 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.348746224 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.348807783 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.349528036 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.348230297 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.349330656 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.349604769 seconds)
  done (took 92.84407079 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.350708252 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.348691958 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.350896393 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.349176615 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.350304876 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.349855077 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.349971993 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.350606489 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.350914545 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.349498572 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.350917811 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.350123931 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.34987455 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.349483001 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.351232878 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.350689494 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.35167554 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.349214867 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.351535037 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.350432375 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.349888561 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.350910347 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.352230629 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.35099109 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.35246624 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.351898617 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.350430898 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.350834366 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.353155195 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.351629169 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.354648574 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.351195933 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.351681694 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.350971134 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.352255859 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.352165924 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.351686768 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.352761647 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.352040945 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.352018015 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.35199875 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.352554224 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.352513111 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.352066377 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.353533757 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.351139772 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.352581611 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.3523791 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.352084391 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.353366068 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.353753659 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.351822757 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.353188993 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.35339904 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.353565604 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.352750347 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.352461424 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.353936449 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.352268103 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.354204251 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.354224228 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.354318502 seconds)
  done (took 85.027447276 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.354511318 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.351468704 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.354156507 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.353282623 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.354893184 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.353745929 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.355041712 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.354175507 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.354346814 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.354048317 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354346504 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353911333 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355739499 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354831873 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.355204208 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355553526 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.354217774 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.354063511 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.355028109 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.35414236 seconds)
  done (took 28.310626057 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.353867313 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.354999839 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.354736909 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.356585574 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.355433849 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.356142864 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.355549164 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355588856 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.35698036 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357214295 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.357176415 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.35807239 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355868862 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.357491001 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.356029194 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.355549332 seconds)
  done (took 22.922772319 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.358277973 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.35534674 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.357167707 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.356361584 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.357007394 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.357198743 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.357505273 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.356417027 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.357102832 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.358600962 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.357713804 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.358357891 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.356875627 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.35744596 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.358610967 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.358211238 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.357567113 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.358174534 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.358040651 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.356685919 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.358267104 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.358303627 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.357516971 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.357826043 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.357116681 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.359242653 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.358271353 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.357785276 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.358870899 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.359032024 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.359932539 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.359317391 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.359420291 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.35839647 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.358707538 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.35923562 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.358671459 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.358450656 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.359960587 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.358932415 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.35913915 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.358452981 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.360137623 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.360055935 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.358975021 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.359465985 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.357791347 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.359394362 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.359659949 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.359682444 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.359528497 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.35954485 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.359328132 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.359568682 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.359197825 seconds)
  done (took 75.937984187 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.360677036 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.360385042 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.35928149 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.360700101 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.36099587 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.359047901 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.360721905 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.362464947 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.360615051 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.36083651 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.361900997 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.361281514 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.362240004 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.360955417 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.362311862 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.360551322 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.361508312 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.360705321 seconds)
  done (took 25.726096782 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.360390477 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.361169601 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.361173984 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.360262244 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.361464851 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.360617227 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.360408963 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.36297796 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362311184 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.362818796 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.361675076 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.363229907 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.361351253 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.360756564 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.363016289 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.362794567 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.361526077 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.363419997 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.360045365 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.361606546 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.36342354 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.362838144 seconds)
  done (took 31.190131528 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.352739974 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.352599573 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.35256967 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.369908713 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.371433205 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.351744988 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.351751117 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.353124669 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.374672574 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.394489844 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.389259405 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.373054327 seconds)
  done (took 17.617568206 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363545812 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363956432 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.364249873 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365312759 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363373756 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362876499 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364215261 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363053447 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36438381 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364746073 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364836244 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365250687 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364921388 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364238331 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364737589 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365162145 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365534895 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364322898 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364424428 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364751003 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364176258 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365386433 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364593866 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365566015 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364647056 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365845452 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364451109 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364838462 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365410292 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366407938 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364595103 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366095991 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366836348 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366071384 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.366456929 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365105595 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365957942 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366886189 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365604111 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365249588 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.365209144 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365293481 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367094258 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365688684 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365391018 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367314019 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36510915 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365525473 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366904294 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36594334 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368622114 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366201776 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367399436 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367128674 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368197373 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367915043 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367759114 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367658683 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366967279 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366071317 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367910412 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367064505 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367995644 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369877015 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367815026 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366929984 seconds)
  done (took 91.372563766 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369527511 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.366644154 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.366861965 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3677395 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368016308 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369428631 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36860874 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367259588 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367169654 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36616566 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368265751 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368920302 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36905542 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368013409 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366995847 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368172505 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367749228 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368401224 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369528523 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368340674 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369428145 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367962673 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367369423 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368790742 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369580313 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369566509 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368681317 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367979312 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369375583 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368691956 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37053984 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372040887 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369358834 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.370490732 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370027659 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37025438 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371569571 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369431489 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372211292 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370395198 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371119359 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369094552 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371277155 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372929832 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370251755 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36937927 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37100244 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372608722 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37106766 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371495692 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37098032 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370403565 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372801988 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371985218 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371628927 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373455047 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371288198 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372026182 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370659193 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373184731 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373295146 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372809545 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372256117 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373178609 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372954714 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372202134 seconds)
  done (took 91.656560938 seconds)
done (took 1844.564775118 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.528065766 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.484374949 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.361363903 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.376780158 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.36215187 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.384736417 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.375594262 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.361496195 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.363447775 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.361103867 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.361686952 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.581875685 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.399061994 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.363077599 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.361035125 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.45910359 seconds)
  done (took 27.723268763 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.394373784 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.375430848 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.501472906 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.371360985 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.393025879 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.584480945 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.434407056 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.373464365 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.574382795 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.392188092 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.373273951 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.409688549 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.370829103 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.368544084 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.393019776 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.58515887 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.656782164 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.359372494 seconds)
  done (took 30.151661001 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.910123731 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.375751924 seconds)
  done (took 5.52669188 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.392259343 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.371953102 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.37014238 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.366067955 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.361900835 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.364744207 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.367307326 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.365225495 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.373372775 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.520934653 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.375393758 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.381485182 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.368290598 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.368969442 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.378120196 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.417394186 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.544653443 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.378706318 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.37582687 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.375538599 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.367594661 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.472992484 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.415608974 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.382944533 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.51726837 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.380030441 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.375576728 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.377739915 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.491868977 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.379460521 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.368780458 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.370085107 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.370170765 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.363015867 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.951659193 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.368180681 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.395744143 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.381540404 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.378312123 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.513609545 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.372579969 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.377569322 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.363654356 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.953865946 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.497365629 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.513052953 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.368033633 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.376408556 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.372259209 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.444117557 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.376234912 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.373606175 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.432057808 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.23554037 seconds)
  done (took 87.746517714 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.424784416 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.364471805 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.554078612 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.393779194 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.365268418 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.387958493 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.387614245 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.718454427 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.388608621 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.365294692 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.725544505 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.060520551 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.373749461 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.430880414 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.401707891 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.419062116 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.368229437 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.38597735 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.373186987 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.369217229 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.978637408 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.370011514 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.389226499 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.442330214 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.410032351 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.994113089 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.36965602 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.373070013 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.375689693 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.366121632 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.028366958 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.376335692 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.413880875 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.370925168 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.690644418 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.849731611 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.809056514 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.378244553 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.402976955 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.371176185 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.391981696 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.995044782 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.831059405 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.371460667 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.369923771 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.018896497 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.370472517 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.373041336 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.37076581 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.644638785 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.371712143 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.369754669 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.369593837 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.372766655 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.367862922 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.413796416 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.415067532 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.998333501 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.378779713 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.370698633 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.375828268 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.367708568 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.373100104 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.371162818 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.372160551 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.827863619 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.632263573 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.372554464 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.827991878 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.022386012 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.373543583 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.098275065 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.373008446 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.383060492 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.400669059 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.369914745 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.373920697 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99655586 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.383586845 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.369510482 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.810058214 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.378765635 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.705511388 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.393606735 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.374178917 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.001687026 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.379566737 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.412719101 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.370922022 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.37205602 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.374622485 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.372649212 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.694651757 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.434266019 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.370514853 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.370605483 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.411097811 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.371395302 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.374812316 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.380139353 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.09476316 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.385279528 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.371086607 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.394521841 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.371286229 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.375244695 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.374823227 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.372935887 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.659605844 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.376484502 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.377320912 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.374021646 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.371141644 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.387777006 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.447441686 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.379880025 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.762582703 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.381696787 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.372255649 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.403077862 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.371604932 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.409584036 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.372780029 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.376456034 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.373984301 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.749978456 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.394094896 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.37662964 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.375718336 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.389571512 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.378804201 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.374317095 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.427654415 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.376156001 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.218592823 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.418952433 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.373887172 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.373981195 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.382306809 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.373727563 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.38421439 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.375958514 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.693187156 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.692605323 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.623950552 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.376867035 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.373324575 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.248954847 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.412641274 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.562707437 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.396617924 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.373845474 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.679695244 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.607902283 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.376415579 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.374145386 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.376096105 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.663096488 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.378883714 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.721735301 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.056705977 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.379336223 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.381608493 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.220352682 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.233533454 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.38065706 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.377331577 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.701670911 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.39679706 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.3754915 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.374660754 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.37698862 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.379491046 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.381041528 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.377095787 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.374592392 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.375877986 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.718946245 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.575491327 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.395846659 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.376747323 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.001031834 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.401394375 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.376466923 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.385210386 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.378915836 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.376394974 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.430894415 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.380581922 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.406127083 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.377605581 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.37951295 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.086493717 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.395370327 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.382361531 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.577036313 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.182323697 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.381221269 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.37905765 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.379860788 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.437383331 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.032549149 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.425508237 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.768761513 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.393866899 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.421921964 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.398338652 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.390202693 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.031868626 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.386925407 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.378101673 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.194841847 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.382709643 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.80680446 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.378559962 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.380518642 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.125629513 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.381548884 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.380585876 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.378631343 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.379293873 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.690066162 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.381670156 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.389682713 seconds)
  done (took 511.257836212 seconds)
done (took 663.644202916 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.379577297 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.384185848 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.381498534 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.37936066 seconds)
  done (took 10.781684604 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.39687287 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.38670014 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.398276218 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.38524812 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.397633701 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.386143176 seconds)
  done (took 9.610428412 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.380221463 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.383549865 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.38460868 seconds)
  done (took 8.408059621 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.629257577 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.412938368 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.802147228 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.398033475 seconds)
  done (took 9.502189307 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.397466782 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.397634495 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.39667478 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.39656954 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.399468954 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.399328621 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.399095904 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.399067617 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.399588176 seconds)
  done (took 13.84100492 seconds)
done (took 53.401640255 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.452179844 seconds)
    (2/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.609565544 seconds)
    (3/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.363369903 seconds)
    (4/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.494969034 seconds)
    (5/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.479934251 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.457919036 seconds)
    (7/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.720191373 seconds)
    (8/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.662094025 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.423868306 seconds)
    (10/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.424118037 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.562855023 seconds)
    (12/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.73112877 seconds)
    (13/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.705470727 seconds)
    (14/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.38150081 seconds)
    (15/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.395266006 seconds)
    (16/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.465646787 seconds)
    (17/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.552352689 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.67129424 seconds)
    (19/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.369021576 seconds)
    (20/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.478752166 seconds)
    (21/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.525131376 seconds)
    (22/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.702415847 seconds)
    (23/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.418492883 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.49219938 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.46900731 seconds)
    (26/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.623322503 seconds)
    (27/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.389453006 seconds)
    (28/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.444940194 seconds)
    (29/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.431310909 seconds)
    (30/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.414984474 seconds)
    (31/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.364668868 seconds)
    (32/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.552780593 seconds)
    (33/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.627764768 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.563436291 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.474421224 seconds)
    (36/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.543793474 seconds)
    (37/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.496629274 seconds)
    (38/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.37958907 seconds)
    (39/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.525320332 seconds)
    (40/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.425208277 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.457785031 seconds)
    (42/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.793817678 seconds)
    (43/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.538730055 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.784637472 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.492601143 seconds)
    (46/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.423324928 seconds)
    (47/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.3616063 seconds)
    (48/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.367672671 seconds)
    (49/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.504598936 seconds)
    (50/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.537723716 seconds)
    (51/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.657703868 seconds)
    (52/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.368746926 seconds)
    (53/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.586207953 seconds)
    (54/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.371162712 seconds)
    (55/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.631042452 seconds)
    (56/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.668191698 seconds)
    (57/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.393860996 seconds)
    (58/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.376543959 seconds)
    (59/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.413255516 seconds)
    (60/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.365276703 seconds)
    (61/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.368817612 seconds)
    (62/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.527562775 seconds)
    (63/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.390405099 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.666669361 seconds)
    (65/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.423424626 seconds)
    (66/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.365971542 seconds)
    (67/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.404728574 seconds)
    (68/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.495454678 seconds)
    (69/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.60773006 seconds)
    (70/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.49222245 seconds)
    (71/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.629861537 seconds)
    (72/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.480841756 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.483465934 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.494619128 seconds)
    (75/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.585891678 seconds)
    (76/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.422479726 seconds)
    (77/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.426472984 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.488832692 seconds)
    (79/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.581468528 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.402975923 seconds)
    (81/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.982090451 seconds)
    (82/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.635952016 seconds)
    (83/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.716934357 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.477357623 seconds)
    (85/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.402682866 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.52098195 seconds)
    (87/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.427816032 seconds)
    (88/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.367371674 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.476955485 seconds)
    (90/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.372808023 seconds)
    (91/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.718560561 seconds)
    (92/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.744736619 seconds)
    (93/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.467773868 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.564814784 seconds)
    (95/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.39261979 seconds)
    (96/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.471496657 seconds)
    (97/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.982568665 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.534036134 seconds)
    (99/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.521954135 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.428118085 seconds)
    (101/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.397539784 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.407453037 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.473762786 seconds)
    (104/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.587122279 seconds)
    (105/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.465544532 seconds)
    (106/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.605770671 seconds)
    (107/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.513365972 seconds)
    (108/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.501869172 seconds)
    (109/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.42983502 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.520981128 seconds)
    (111/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.631778085 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.567716839 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.395221728 seconds)
    (114/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.48690352 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.430197116 seconds)
    (116/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.38218468 seconds)
    (117/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.465564909 seconds)
    (118/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.369093878 seconds)
    (119/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.822729866 seconds)
    (120/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.37239091 seconds)
    (121/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.646307627 seconds)
    (122/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.678430918 seconds)
    (123/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.458722639 seconds)
    (124/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.498715172 seconds)
    (125/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.37126603 seconds)
    (126/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.385964552 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.567738627 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.529763153 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.484867818 seconds)
    (130/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.412097706 seconds)
    (131/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.59533169 seconds)
    (132/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.375239542 seconds)
    (133/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.397074553 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.523454139 seconds)
    (135/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.555618073 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.501859619 seconds)
    (137/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.486606142 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.500852167 seconds)
    (139/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.370894218 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.479532064 seconds)
    (141/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.759896712 seconds)
    (142/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.617787486 seconds)
    (143/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.670029501 seconds)
    (144/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.372283423 seconds)
    (145/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.81417052 seconds)
    (146/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.374791578 seconds)
    (147/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.373513344 seconds)
    (148/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.572177734 seconds)
    (149/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.426963164 seconds)
    (150/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.370510087 seconds)
    (151/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.39052693 seconds)
    (152/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.533337229 seconds)
    (153/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.480433478 seconds)
    (154/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.71966448 seconds)
    (155/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.484179047 seconds)
    (156/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.493492784 seconds)
    (157/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.890505984 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.529723381 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.461360804 seconds)
    (160/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.371491737 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.431015724 seconds)
    (162/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.577267189 seconds)
    (163/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.437546914 seconds)
    (164/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.792578714 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.510926435 seconds)
    (166/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.580117521 seconds)
    (167/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.710697925 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.523022761 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.57543376 seconds)
    (170/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.377987347 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.448757297 seconds)
    (172/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.429210151 seconds)
    (173/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.48884615 seconds)
    (174/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.377282272 seconds)
    (175/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.602644225 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.66597131 seconds)
    (177/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.563036756 seconds)
    (178/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.518067454 seconds)
    (179/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.568679559 seconds)
    (180/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.676489819 seconds)
    (181/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.517972239 seconds)
    (182/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.481169069 seconds)
    (183/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.53851123 seconds)
    (184/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.432914384 seconds)
    (185/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.429287528 seconds)
    (186/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.627715071 seconds)
    (187/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.521515657 seconds)
    (188/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.567999296 seconds)
    (189/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.475008449 seconds)
    (190/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.375812309 seconds)
    (191/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.549610528 seconds)
    (192/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.49417088 seconds)
  done (took 339.803149748 seconds)
done (took 341.062929597 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.425324795 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.501554253 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.403698375 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.404170511 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.406167008 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.402409596 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.429705478 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.40437665 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.421667642 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.420320912 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.396644872 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.415606397 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.423386631 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.416211064 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.439624166 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.407883115 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.40554887 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.417517023 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.422144229 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.424557743 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.408194352 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.406285384 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.433344257 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.405549947 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.415440523 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.415208569 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.41318954 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.397929807 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.415619067 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.422142999 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.404225166 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.419316522 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.422494222 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.418290505 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.40771714 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.416667016 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.406901025 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.503158834 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.427601015 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.419563301 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.417665538 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.423072263 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.411850667 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.413259497 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.420352911 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.435761702 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.415408109 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.423190424 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.397819822 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.417426302 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.433280816 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.420489706 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.416197362 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.398830275 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.403506638 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.426214537 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.418599268 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.428442035 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.416785296 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.410020354 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.442475082 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.429365576 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.422187645 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.417915536 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.416882647 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.423196513 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.419717721 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.427149563 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.418897743 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.412118568 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.411535034 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.419940108 seconds)
done (took 111.454220845 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.535150497 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.403715789 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.570663329 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.417773601 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.580005196 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.534050208 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.418585693 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.417675228 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.417592063 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.212380445 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.418201034 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.416548006 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.408061184 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.416149261 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.53242412 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.418421458 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.416869962 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.112628216 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.418694323 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.544405469 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.410031075 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.417811283 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.41744141 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.225555091 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.407292286 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.401916748 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.544383526 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.419449625 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.121158865 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.400160346 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.406452807 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.121480468 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.545252013 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.437583261 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.430135732 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.427933268 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.582173651 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.421875614 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.537038539 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.537654697 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.572162799 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.458230008 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.403940213 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.408144392 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.421357765 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.420609493 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.420152484 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.447062948 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.408901572 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.419045299 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.113633771 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.430197821 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.429623617 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.41987525 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.420067443 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.43994406 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.421717698 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.421626937 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.54957284 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.42230246 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.539504512 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.226830826 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.216953688 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.419986041 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.408499066 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.420642939 seconds)
  done (took 113.78146455 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.480740577 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.487334623 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.534938824 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.411680519 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.463471035 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.537503097 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.412551273 seconds)
  done (took 11.607730309 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.418689933 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.421829869 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.459961308 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.459779031 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.421531513 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.587175543 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.422305236 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.425429649 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.421836366 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.465042921 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.422169587 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.420884134 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.431395067 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.41302932 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.459460331 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.423473475 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.53101685 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.414515102 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.422335515 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.568046566 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.423182286 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.431791598 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.463411604 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.425876799 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.423124669 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.420724408 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.193496948 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421727899 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.42214424 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.424607511 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.422785445 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.482505301 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.422722272 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.413690134 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.424256319 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.530102082 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.423902096 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.423249069 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.422332028 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.416590593 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.424537538 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.42315932 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.424148808 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.422998752 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.423872312 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.439623734 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.423583889 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.423738117 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.425142475 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.423596668 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.464632611 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.424359899 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.423951446 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.424475178 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.469654569 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.434011203 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.424850581 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.423838923 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.425951179 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.425746403 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.572045425 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.462501432 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.425251075 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.463185645 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.423992258 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.426505837 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.425637417 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.424819675 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.509794 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.426667557 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.463673965 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.426107383 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.595188083 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.439964773 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.426249609 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.420267466 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.420113242 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.42480552 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.414870988 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.422725042 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.425402944 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.419488012 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.424616358 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.425269213 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.42658129 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.575022196 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.523646666 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.426306914 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.433318461 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.424484546 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.426149026 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.468555552 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.427020279 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.426931551 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.467865513 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.535283649 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.469637726 seconds)
  done (took 146.061822333 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.430848758 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.431579073 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.42221476 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.444290927 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.418882764 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.418018479 seconds)
  done (took 9.850097122 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.420286414 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.432253117 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.428236546 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.428093176 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.428006025 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.428937766 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.42905859 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.421791279 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.433074016 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.428913054 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.429012944 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.429125733 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.430817343 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.430276407 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.42954716 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.430426663 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.430149201 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.429466043 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.429749006 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.431316933 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.415919724 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.429876109 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.431358783 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.422545403 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.434029165 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.430769113 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.445036824 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.4315993 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.431581087 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.429555446 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.433924742 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.430515526 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.423202371 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.427360523 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.433595471 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.42268905 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.435107097 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.431344217 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.431041719 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.433317838 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.430783308 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.431213228 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.431869111 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.432324974 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.423447747 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.426597836 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.436486891 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.446118162 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.431790586 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.432176694 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.433146126 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.431056961 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.431233607 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.433181015 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.42585757 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.428665808 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.436670181 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.43366738 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.432456225 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.425323127 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.43676864 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.432398187 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.42513435 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.436307152 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.433515326 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.433067572 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.424280882 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.436580491 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.433261763 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.434480612 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.433642038 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.432635908 seconds)
  done (took 105.297897435 seconds)
done (took 387.875824454 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.781544551 seconds)
  done (took 4.077140912 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.535910429 seconds)
  done (took 3.827082174 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.362593476 seconds)
  done (took 27.656335708 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.460608486 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.426801804 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.434206626 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.424722135 seconds)
  done (took 11.03505442 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.785966221 seconds)
  done (took 4.075563751 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.427606175 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.424829003 seconds)
  done (took 6.141250615 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.719652382 seconds)
  done (took 4.010447044 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.824147989 seconds)
  done (took 4.121223326 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.427283318 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.429302565 seconds)
  done (took 6.154185506 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.398182585 seconds)
  done (took 3.688431402 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 22.578428357 seconds)
  done (took 23.872059594 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.449166877 seconds)
  done (took 3.743005301 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.459744077 seconds)
  done (took 3.750232095 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.778815672 seconds)
  done (took 7.070102594 seconds)
done (took 114.513032545 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.419681153 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.425431727 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.424644458 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.423968834 seconds)
  done (took 10.985954834 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.499726896 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.49919997 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.509787501 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.493158652 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.493196215 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.502969553 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.462412724 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.46216973 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.491811032 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.486602868 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.504135102 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.494163216 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.503686852 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.462775055 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.486992252 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.505088797 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.492517132 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.506935381 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.461247057 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.493967078 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.436842194 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.49517928 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.487679002 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.438081114 seconds)
  done (took 36.964486996 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.945252249 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.498208836 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.582106259 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.477691476 seconds)
  done (took 7.796054413 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.541826191 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.54171961 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.560286179 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.595501372 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.624684761 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.555839676 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.463594444 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.458017286 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.445190741 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.54184532 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.619661682 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.541358092 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.758884987 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.437073768 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.755357756 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.436793031 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.438178832 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.541359303 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.590034585 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.620346016 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.439393472 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.541741319 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.545355103 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.542286784 seconds)
  done (took 38.431156168 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.446757338 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.455617776 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.440220293 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.454629338 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.43981715 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.440523831 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.443408521 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.445799348 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.440364295 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.442897591 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.442739744 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.452849329 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.440700357 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.44097878 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.446566833 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.440906996 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.442144585 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.446468337 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.450270594 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.441989433 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.441797809 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.44673892 seconds)
  done (took 33.079352504 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.423139335 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.424269487 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.77648397 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.681256352 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.424268318 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.424387463 seconds)
  done (took 14.449158037 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.517490926 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.675154575 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.432105341 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.877654816 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.979250457 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.436471103 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.432341085 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.728546426 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.116003727 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.111779999 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.499230374 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.513337102 seconds)
  done (took 21.615895798 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515988274 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.437000974 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.435834966 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504619948 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441001702 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.437634204 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.520715999 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.246675166 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.447517522 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713837637 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454972852 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524675376 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.685877346 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43704403 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.442923469 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.418882207 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672824576 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0221242 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440689943 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451388632 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474391786 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.438627299 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.462905399 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.684534188 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.439691652 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439004206 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.700836791 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.43892795 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.785586558 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762696945 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765656386 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.446506744 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716425768 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173326652 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549159009 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.677607549 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452864146 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.440761175 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.426350375 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.459323848 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.446106962 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.466287954 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759064956 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445058613 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.438805705 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454496156 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262908771 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.452719239 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.440101306 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.439321441 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.76165351 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528345805 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.445569604 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.44105042 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45208964 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443575828 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.445120987 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.57520652 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087000211 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440013234 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45943329 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.444010775 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.440886117 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443382847 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183160651 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.449102541 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.446186689 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.447665769 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439897903 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.442130242 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487690597 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441556726 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.463541721 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442065889 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323498733 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.442270795 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466964743 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059644317 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462256503 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.444985777 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669020171 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440516984 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441108767 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.441819409 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.441443453 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.333667813 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453891104 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.409807514 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490027325 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.250303269 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.687707174 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462771816 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472761824 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.665270932 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.411510383 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441122903 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.442945835 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448092287 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463861876 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.263929117 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445862923 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.449377809 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.692529808 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.654758461 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453846352 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.416574757 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027041381 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448110585 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.474323383 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.452728653 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.689517877 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.189694196 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.778734396 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453691205 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481844051 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.444327185 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.401522794 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469571002 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.455385288 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.44430456 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765149334 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.403812218 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451167717 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518636056 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.444318005 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.445991916 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.465911394 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45126644 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.446053762 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.663376412 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457022535 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.773526985 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.450241151 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444212857 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.45382939 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468641371 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.452610872 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.669334468 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445478725 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.72414533 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44648333 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446609621 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448409888 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.668391293 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.447292432 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.482435313 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.787199248 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453030412 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.458540774 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.776896411 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484436043 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558265337 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478850829 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.456608466 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.701697918 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.453961275 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.455339049 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448975252 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.473132476 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449405423 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.455403394 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458737597 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19654361 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424542657 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.455189423 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.448993094 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.464775662 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523354564 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4568264 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.689753488 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.454244736 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444300831 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.475510648 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.462898545 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676232386 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772648603 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.455450822 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624202779 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.008386251 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.197273356 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46918568 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.449142359 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.448735245 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.449203519 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447554018 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449158729 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.450339264 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.690984008 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.7790657 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.451558715 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.224006361 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455116483 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.451041484 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.462018698 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772654332 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.463293761 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450422602 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.448560882 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464228182 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458464394 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.779167354 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67662963 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.466055659 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.45113451 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.969348768 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.458672335 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.449448724 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.45067595 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476399285 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.450702121 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367211461 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793392482 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440836577 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775148823 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.458733829 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.474045352 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.449363902 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452210674 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456891149 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.479733353 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459697582 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.696194854 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.453890434 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458217517 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093648219 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397855584 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144602526 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469564874 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.457403542 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.457501263 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.274421942 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458051575 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454176818 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744256569 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270524107 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456171908 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016634008 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.470496126 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.385200822 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780785002 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687570714 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464551111 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.464327085 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.783330432 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.670285538 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4808068 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.465485348 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457831114 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.42229375 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056846576 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455085519 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.636435638 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271546931 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460366315 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.459649621 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.511345354 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.458128051 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941281537 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.459249715 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45456278 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.45497511 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.461688747 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368901943 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.463020377 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454671609 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208221127 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.474271627 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.025785834 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46002945 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.70040452 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.781834928 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.762572921 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.475240029 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.463528253 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.708952875 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784265559 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463027788 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.474338831 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148014928 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.318716008 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.465964946 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45595643 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415015248 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461298384 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814273172 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.470934007 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.461100269 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493554136 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.457244696 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457851475 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.457241574 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.464202919 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427148812 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049164436 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.461637044 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458998333 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490130164 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462171593 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.706503234 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.472438272 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.207991719 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.692749675 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.452646253 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490244596 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.465531171 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465038082 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.433141292 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.458145144 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458226229 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458321288 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.686360403 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.459117317 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.431622194 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.517829028 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.675257792 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.4579772 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.460150834 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.717302664 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.459136158 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.460712493 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374013917 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490979801 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.460947008 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465116075 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.460451543 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502796503 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534001752 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.704686933 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.789708295 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.791038531 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947076986 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464604626 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46610422 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.475327465 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541206219 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463309399 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.465830719 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.464832394 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207350392 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362395057 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.216001107 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793620357 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.46800567 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459568473 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460850284 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70214325 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460766389 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735981475 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46091413 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.475765482 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482534935 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469902744 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478161762 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678249151 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735507938 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463271761 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466021936 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466543111 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.462397227 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796683797 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.679308158 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05742405 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095033816 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462888692 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.471257012 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.293853065 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74353028 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462246153 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463278161 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461932973 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.464658055 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.464522313 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.475339617 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467832356 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692524295 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789631334 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225167286 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.794898202 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.493620028 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.388492333 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480017012 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.716006632 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30046768 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.710946054 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197864066 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.312340478 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718037202 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537425549 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.7086384 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.464196753 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702432675 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.482590939 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.469671377 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464509554 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464321227 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.463389032 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.790934936 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227290286 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.724945112 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.47181974 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.480754403 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499151625 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.715393405 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.692756196 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.371509851 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.691395408 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799055808 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.476795085 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.466154297 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.230515056 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.802922408 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471469667 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.472080969 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.72127082 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.46878685 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501590625 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.342012449 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.465387987 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094046956 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.680030937 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487766263 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476444628 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343108344 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221580953 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.474241971 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070830111 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47149251 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474238271 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.747124614 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.473872535 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.483122407 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.751759223 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.472454817 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.484220924 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.717551806 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.217345495 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.41452942 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.477518058 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468712445 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.473065387 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468338612 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53913871 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472345512 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478494247 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.954239677 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.472371596 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470203656 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481402133 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.467350263 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481082221 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.473130679 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468678885 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.476421852 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.444057877 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.453805544 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484771153 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602726531 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08932628 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474654605 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.140811814 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.806212163 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.718979539 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479037068 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.444011419 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.475298717 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469398773 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468788667 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468920935 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.46148896 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099888494 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.481762253 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.805555084 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.483187232 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.683173437 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682330481 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.478999043 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.72877764 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484572379 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495497486 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.440608391 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470164549 seconds)
  done (took 1030.052394636 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.480806727 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.47555023 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.502904664 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.546619131 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.492924907 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.598050298 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.568947978 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.579413922 seconds)
  done (took 21.572705049 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.460626657 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.475704055 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.481089979 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.475586097 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.473918466 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.062463941 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.477734172 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.473188711 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.487196453 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.471641611 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.477474948 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.226133308 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.477046083 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.473245118 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.484225449 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.476452549 seconds)
  done (took 34.287657299 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.666145519 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.691265082 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.093222977 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.467820399 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.479988753 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.484581526 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.871121154 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.485144245 seconds)
  done (took 28.568558075 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.478322662 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.479780967 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.479009593 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.47932414 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.479726256 seconds)
  done (took 8.724627426 seconds)
done (took 1287.822384786 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.481674973 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.480078036 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.478093006 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.479151192 seconds)
  done (took 7.250499246 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.442626884 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.444286496 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.446126241 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.459956843 seconds)
  done (took 10.124669805 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.345829139 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.131422029 seconds)
  done (took 5.813505357 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.043016447 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.040428583 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.036513074 seconds)
  done (took 7.453172762 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.781354094 seconds)
  done (took 3.118752281 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.465622957 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.469335125 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.491582063 seconds)
  done (took 8.761632322 seconds)
done (took 43.853441208 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.468321505 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.234846085 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.622370767 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.465452233 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.628986489 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.6217716 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.74515108 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.477790658 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.473875431 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.471433293 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.465313964 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.632401638 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.733326225 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.23544539 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.733400263 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.235162985 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.630449498 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.478238403 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.470608657 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.482719439 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.747571181 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.4842116 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.46575183 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.465231861 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.629346534 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.612944628 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.467561236 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.238154798 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.468979055 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.468193488 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.637253959 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.470215947 seconds)
  done (took 85.794466293 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.466798146 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.479852981 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.467639557 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.487477181 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.483972983 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.472878798 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.487713613 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.468960015 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.471654606 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.467937788 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.468878634 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.489002426 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.470572166 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.469065997 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.488905461 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.468489067 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.485899754 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.470144187 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.486570855 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.467145069 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.471007588 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.480353389 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.484023928 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.48462647 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.480826722 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.469711511 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.478708192 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.470004598 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.468851718 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.489348979 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.474405684 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.46987135 seconds)
  done (took 80.575940282 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.468511345 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.480252367 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.475373056 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.509474983 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.469786975 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.476595968 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.495482006 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.48977369 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.480982825 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.479484494 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.476639929 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.476132954 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.476388352 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.470657809 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.473512932 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.473863517 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.474263954 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.474208942 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.482047444 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.476726805 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.47681968 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.478736992 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.470628101 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.485495102 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.476552794 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.470475393 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.470273639 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.486048479 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.473345212 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.471348158 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.477073708 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.476620877 seconds)
  done (took 80.631051049 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.713205174 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.487213163 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.490194291 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.482399782 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.490648854 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.487084181 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.481813503 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.722121585 seconds)
  done (took 15.69322156 seconds)
done (took 264.028985452 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.493083814 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.079459997 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.513546282 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.481408278 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.500271329 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.508924481 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.7174965 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.511770926 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.704652445 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.48492537 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.498432455 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.491950423 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.472942264 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.634372787 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.423472293 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.499805281 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.478163947 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.499745562 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.181831612 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.740854502 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.510955814 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.495833254 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.427326842 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.488872621 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.457793172 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.564570388 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.563699293 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.657836593 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.618354939 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.556748184 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.077690866 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.50747293 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.488847544 seconds)
  done (took 68.671821622 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.481520324 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.490203352 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.490891853 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.490014868 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.489612745 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.491133885 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.480043876 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.491116363 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.492683551 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.490568336 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.492361749 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.49231408 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.492545395 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.490180556 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.492151786 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.463950382 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.48185526 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.491305872 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.480992652 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.46429331 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.490947822 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.492106449 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.492357813 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.493484577 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.493824561 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.49331985 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.491526996 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.493295011 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.492233748 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.494061749 seconds)
  done (took 45.997846267 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.492240786 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.185207468 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.380355634 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.49592607 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.484310259 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.489152767 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.857040653 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.500898407 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.487968504 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.488517892 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.078521175 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.501760282 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.523317343 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.391034765 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.494207686 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.496330621 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.493813751 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.487872737 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.196491009 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.500631167 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.851383679 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.501353784 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.85422478 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.502032589 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.489809869 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.487468532 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.493179001 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.400225285 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.516722567 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.079059192 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.483115303 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.854910802 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.32732714 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.442588452 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.487464071 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.500093457 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.496771809 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.083741354 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.493319292 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.488072177 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.845814491 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.492712211 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.387859788 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.232676539 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.513632022 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.496595293 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.403204518 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.070875743 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.801597604 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.498334456 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.436949526 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.495934226 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.499261058 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.489455728 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.799144184 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.495517091 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.489452316 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.459912254 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.495115253 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.856959886 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.502512707 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.489418272 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.194883177 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.494196216 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.189802843 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.496033522 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.497121517 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.491982005 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.403296503 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.499485246 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.247328919 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.514758329 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.498144112 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.076177997 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.197551928 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.466391177 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.491900259 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.197438299 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.365047144 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.88448426 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.49827973 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.38518486 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.885828801 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.498579976 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.501446411 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.500520731 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.498333042 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.56381056 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.856717157 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.17372346 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.251019274 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.525570756 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.864762549 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.504437158 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.491333199 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.482055783 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.525810492 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.501063538 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.394873084 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.253843376 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.518708276 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.499461931 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.235101041 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.52030989 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.86177997 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.502162537 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.445798049 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.496577026 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.563742971 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.500500798 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.499331206 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.496473776 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.846813299 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.49653045 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.501767628 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.234873236 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.121196824 seconds)
  done (took 212.160783378 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.48719778 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.487516151 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.485945521 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.486371804 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.486332004 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.495462759 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.486275239 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.487193353 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.491686201 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.486683094 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.488279835 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.495957254 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.493374936 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.487285747 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.496522274 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.48727493 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.486360247 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.499842809 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.487759614 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.487657325 seconds)
  done (took 47.140911009 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.503746596 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.178966816 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.171613398 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.507679098 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.503105603 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.494920384 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.565796251 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.510204584 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.502973837 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.860374328 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.709857655 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.50662077 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.503469373 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.503735832 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.17922341 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.479692339 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.878477772 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.224640076 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.508508657 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.214799133 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.479936218 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.502285168 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.494583624 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.179856119 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.870968533 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.863465926 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.573999 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.222521519 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.508829937 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.504047377 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.225075943 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.511911408 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.497580973 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.166553409 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.50588704 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.518634782 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.507439102 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.569923198 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.577156501 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.867950691 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.189908563 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.871452107 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.521329023 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.673569502 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.508277785 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.477281169 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.240300396 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.512366601 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.477485362 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.508536691 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.511734765 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.193738921 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.503449422 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.193911803 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.512200144 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.507558078 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.230609657 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.201860991 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.189519898 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.722303935 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.503317193 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.851747139 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.505973554 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.194749619 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.508988326 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.506359843 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.507349781 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.721073351 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.190264498 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.85303869 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.867283235 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.867515376 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.508591968 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.580289702 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.513374461 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.865167796 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.579784355 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.916853849 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.868433151 seconds)
  done (took 138.668588075 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.821321145 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.635272697 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.944899075 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.143267891 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.06980228 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.647895347 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.63201744 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.781040279 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.51090211 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.63562889 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.275674768 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.61320863 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.36638758 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.584908485 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.624469755 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.639608075 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.961850938 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.494260284 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.219760802 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.250986494 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.525610281 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.621589743 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.04279715 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.728956668 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.508886681 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.168715036 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.530830023 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.087541341 seconds)
  done (took 57.423036156 seconds)
done (took 571.400901832 seconds)
SAVING RESULT...
DONE!
