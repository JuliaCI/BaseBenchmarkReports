cset: moving following pidspec: 32319
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.438954198 seconds)
loading group "string"... done (took 0.488339932 seconds)
loading group "linalg"... done (took 9.370928611 seconds)
loading group "parallel"... done (took 0.167384267 seconds)
loading group "find"... done (took 3.171298828 seconds)
loading group "tuple"... done (took 2.129535104 seconds)
loading group "dates"... done (took 1.422734577 seconds)
loading group "micro"... done (took 0.195904089 seconds)
loading group "io"... done (took 0.519092307 seconds)
loading group "scalar"... done (took 58.822647212 seconds)
loading group "sparse"... done (took 14.992572399 seconds)
loading group "broadcast"... done (took 1.371232247 seconds)
loading group "union"... done (took 11.296404859 seconds)
loading group "simd"... done (took 3.911809625 seconds)
loading group "random"... done (took 14.317275904 seconds)
loading group "problem"... done (took 2.359460243 seconds)
loading group "array"... done (took 26.798462675 seconds)
loading group "misc"... done (took 1.244123438 seconds)
loading group "sort"... done (took 4.314506423 seconds)
loading group "collection"... done (took 23.458938779 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.729486246 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128846494 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.204714198 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.202616239 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.280376926 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.173409018 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159481315 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.12998329 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.599237105 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210212718 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138946964 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.368062887 seconds)
done (took 6.11358388 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.319097937 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.062829036 seconds)
    (2/2) benchmarking "String"...
    done (took 0.197417493 seconds)
  done (took 0.968405127 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078505803 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159561102 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111129235 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.0951399 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095485651 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108996996 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094381607 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107456737 seconds)
  done (took 1.48560021 seconds)
done (took 3.565938126 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.520913551 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.889788745 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.508429887 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.189828277 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.366793676 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.308080128 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.265940178 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.22833863 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090002689 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08521732 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.195963848 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.428627904 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.395291426 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.965375801 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.071129155 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.09627846 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.165892072 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.782524302 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079654917 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111910743 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.532972417 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.227641654 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117300136 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.107877443 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187477712 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.129117781 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.146880345 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102659993 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.674667889 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134030555 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.217153518 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.084139975 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.148339736 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.16264021 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.216444298 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109344459 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680011871 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201793919 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097967064 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101967707 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679163111 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116501712 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.212560357 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108316845 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.070225396 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.167925514 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117108092 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080544704 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094969221 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.102626519 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161469835 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.446096696 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104218911 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.195935779 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093523692 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.716129394 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095601175 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273178915 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122543782 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.09296593 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089718233 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088895331 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157143622 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093975018 seconds)
  done (took 20.355890844 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.195459529 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.215021599 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100222486 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14686882 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.144376216 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.083551974 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.089557295 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09854434 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.116359431 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.201618781 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.127240904 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.219818926 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075700074 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.110087009 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.172932074 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25647099 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107883957 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122520013 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091103949 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.095615178 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.146430393 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096915805 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095937195 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.115764138 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17255623 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206653493 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110892837 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125199541 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091035586 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.10006539 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144599129 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150405626 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093464608 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089695321 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177684655 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125647013 seconds)
  done (took 5.546922412 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.241466851 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104324876 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.250240997 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.189997911 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.126704081 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183774444 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.198393398 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.310595745 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.273626348 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1622005 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125711144 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.094941592 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078541929 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078954663 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.103213988 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.821081201 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.168638495 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.139023609 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184669481 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112299816 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080239626 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.383239538 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085545513 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.101043761 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094388908 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.079303493 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.227565923 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094156826 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.476535716 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.081712733 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.094479395 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129896105 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190473979 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132552533 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119432247 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10821773 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.215775241 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083648873 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.210039654 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099823677 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076330608 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.098581002 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114888325 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12910878 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.104314075 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.104339803 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.132701677 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084384906 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.107202707 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.093310482 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193047472 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.1599724 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.103034526 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.276775327 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104245615 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095507678 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.106383628 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.828166365 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134501526 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083412829 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095945313 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096300101 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078838549 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.473961179 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105298972 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.292956051 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083308969 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158416916 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093619704 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.115656719 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084734464 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082740238 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.122025095 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083943018 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083256873 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095259011 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08423735 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077687223 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104583173 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081832782 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.12631891 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084002256 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078913148 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15794664 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095123309 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103873386 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124600512 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088802928 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099213697 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082454055 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125665221 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079952352 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.087256114 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.203878791 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112047774 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111947057 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110547975 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128099733 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.105187727 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.306271343 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083027818 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122257453 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100501818 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127288869 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09654273 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079524765 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098482667 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078870246 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080156419 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157082703 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.086783879 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080325457 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085436744 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110023283 seconds)
  done (took 27.31796115 seconds)
done (took 53.933664802 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.434352097 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08034343 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.100539624 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082216187 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080669942 seconds)
  done (took 1.56462951 seconds)
done (took 2.325676756 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.304187067 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196273566 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087862552 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186716349 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086443525 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193943335 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162508348 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118472497 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204882503 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085549425 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.186016287 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084411254 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086459021 seconds)
  done (took 2.773411374 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10620639 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100008039 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.105096407 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122929567 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087497082 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103804548 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120917117 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111399843 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103076429 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11551769 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088558162 seconds)
  done (took 1.929382058 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101980893 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098527681 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09458799 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11984098 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087899468 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101934571 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118956941 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10854215 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100834847 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114756001 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087442799 seconds)
  done (took 1.900021523 seconds)
done (took 7.363802908 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.205190917 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.866038456 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.181073199 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.244980309 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.328617196 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.29756558 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.611735817 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.207300823 seconds)
  done (took 15.836479246 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.226827327 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09407779 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097551314 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092689038 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.112576069 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097721009 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095410373 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.114015835 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098760638 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09378199 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.111790118 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098577088 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096659019 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095870164 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.110623745 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097339356 seconds)
  done (took 2.566709645 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138583288 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119659876 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.119127365 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100368901 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095911094 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.121369246 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103326675 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.099427319 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.116334783 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096236278 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.104205185 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.117797167 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099711129 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094033625 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.118613976 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.119373004 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095478657 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.118217794 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.11810695 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.10017587 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.119199728 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098240167 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.09924842 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.1177214 seconds)
  done (took 3.484214249 seconds)
done (took 22.653750207 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.143856074 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086561698 seconds)
  done (took 1.001074195 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.173387998 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.191259937 seconds)
  done (took 1.142313443 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115174685 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092236302 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141340771 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104518881 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092965605 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.110302688 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118810001 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.093395708 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.111800762 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093559147 seconds)
  done (took 1.854612745 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096746142 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098789641 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.124648829 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.164086121 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.1217208 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095662583 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096668634 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.117363296 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.099229337 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.09228295 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.11893469 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112456224 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09746075 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129826803 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097738318 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.097361833 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.119929905 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095961678 seconds)
  done (took 2.758289585 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093524944 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09349483 seconds)
  done (took 0.967685383 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.096701023 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092506406 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095312607 seconds)
    (4/7) benchmarking "year"...
    done (took 0.11200922 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093111602 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090970047 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.109594657 seconds)
  done (took 1.470371618 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.520101122 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.235903937 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.369984564 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072037565 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121657462 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.30128978 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.123108902 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073380989 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090709567 seconds)
  done (took 2.723941305 seconds)
done (took 12.695108479 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093963183 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.214004711 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.62119411 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.128530921 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090024182 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.145821728 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.347268856 seconds)
done (took 2.427265792 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338005515 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.177963507 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083553946 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089787545 seconds)
  done (took 1.469487486 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083913273 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099950381 seconds)
  done (took 0.972547793 seconds)
done (took 3.232363445 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09209492 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.113800851 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.11012419 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.091008755 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.091321529 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.090028272 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.112392061 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.092465472 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.0878696 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.0923069 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.111618507 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.091506375 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.090992975 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107881576 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090823571 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090761008 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090732757 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.10848359 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090476271 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090979169 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108188155 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092149183 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090646575 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.090265362 seconds)
  done (took 3.143820353 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113595196 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092994453 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.113282491 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096512378 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095809548 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.233387112 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095751176 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093254794 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.113215815 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094566767 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096152468 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095179038 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.110354091 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097097685 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092175316 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.114830374 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.097073048 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092901724 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111476979 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097363504 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.096505931 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111211574 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096887624 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095465702 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.113906937 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096634752 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092784361 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.111168678 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095535913 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095672186 seconds)
  done (took 3.945134658 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099601006 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088444031 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090677849 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.118247747 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090189703 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091625284 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106541816 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092772113 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092964182 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09002797 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.112183896 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091348699 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090524608 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110184949 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09496975 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09495267 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.100819784 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.110799946 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.092308192 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092834966 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.114163915 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092126976 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.091698349 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.091048968 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.110753958 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089303932 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091892065 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108858706 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093240065 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091756387 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.094315733 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.113417581 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093285644 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.101267189 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.112758643 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092329709 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096555871 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.108864466 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093470599 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090178997 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.08784526 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.110560311 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.092720514 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.09877148 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.111164571 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094718397 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092198818 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.092490821 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.111643265 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094452023 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.089117244 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.109395283 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095320285 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093494128 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.094883724 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.107268221 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093480768 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088321218 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.111134445 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091937443 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.089936658 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088793017 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.115445311 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.095183297 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.107578175 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.115717806 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.092764135 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093212022 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.111005176 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099171625 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093545834 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101461792 seconds)
  done (took 7.885861622 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117057452 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100281519 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112018452 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094883868 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092440197 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091851104 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116505488 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089645526 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090295924 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112930723 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090292109 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090144305 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107081083 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092613421 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091243034 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09092367 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11572037 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09270556 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092822957 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111727786 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094157055 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097330987 seconds)
  done (took 2.983083831 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.219553321 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114070374 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137842107 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119992743 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106768326 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119300642 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095152754 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096021197 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111308886 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098135322 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098661315 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111171389 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107717259 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099948895 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11610464 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101026246 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093107882 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.117005946 seconds)
  done (took 2.863496151 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10726059 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091164712 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.152883339 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091649816 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091511263 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.109391702 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09899857 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110087172 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109439367 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093182825 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.097108267 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110082716 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092104667 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091185061 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090223525 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109438453 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.091235482 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091415817 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116113393 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096944074 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096452067 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117626422 seconds)
  done (took 3.05771865 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109054586 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091605531 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126727526 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095553735 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090740823 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.0904252 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.115768531 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090995405 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096889364 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.110687497 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091916676 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090681498 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.123569651 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092169106 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096475949 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109601273 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092674905 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091861064 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108866383 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092199245 seconds)
  done (took 2.81059755 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.191177409 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125724771 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107617289 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113845287 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12550661 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106786627 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13175678 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106577668 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108020967 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135114165 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10762769 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106357416 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13222957 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112631482 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124201114 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115390337 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114056044 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134979509 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107634468 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105762489 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135769243 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108995982 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132821881 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10800703 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106826696 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12452931 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106988958 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111437121 seconds)
  done (took 4.155435934 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094894397 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094272969 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094041283 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.112582599 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094275544 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.094611471 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092325952 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.112824706 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094547518 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093791272 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.11189504 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094834653 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092901668 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.093741697 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112936257 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094099427 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093751184 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.111391223 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095100388 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092305724 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.093258939 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112944961 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.09468534 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090915636 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090340971 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.110211203 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090581555 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090138256 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10845031 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091459388 seconds)
  done (took 3.75104095 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.106972963 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105129575 seconds)
  done (took 1.019602692 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.102245737 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109571387 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.094014204 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109949469 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096672662 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090673319 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116345538 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097363493 seconds)
  done (took 1.625276066 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.190310586 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.2086838 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.115396453 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.101434059 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.207409347 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.188669897 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128323969 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095923258 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109932258 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08424645 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.202537408 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082595861 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08954294 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109385479 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090822824 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094981849 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.111074936 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100342635 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097407552 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.111397631 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096214827 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095104997 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111336904 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10147114 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085829777 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112381749 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094928444 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10222039 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106296841 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092158281 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08880412 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.109336438 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096684935 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095325531 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.090556186 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.205993807 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118675757 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088322591 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091593945 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116290382 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122064613 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091253763 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.112198131 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09122347 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095163402 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.114142404 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.096323298 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091811595 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101576918 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087631033 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09093024 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086842505 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.10939328 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092513433 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091716548 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116377768 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094374576 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086985049 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.106290588 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087284126 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090169005 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105045209 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093927934 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.0940364 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111180362 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092209019 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090065014 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.109775852 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092940069 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092905576 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090301507 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12461847 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092249462 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.096148505 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116354139 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.092855532 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08739907 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116461303 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090499188 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091466808 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.115768923 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119324142 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093488289 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105500443 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087402598 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09894346 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.111629593 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095519941 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084171312 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117023778 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094060294 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09212638 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083040061 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109281453 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087554017 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.095004115 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.104816261 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092739046 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090451355 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.115652386 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098266595 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090819358 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111685837 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097684662 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097629785 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109251814 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.142422157 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088234864 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107853192 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093001056 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096013783 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105890046 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092261886 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091527952 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087712221 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.106491375 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.097353186 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09095511 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.112353141 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096123918 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092789081 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.11308606 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094020516 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092106045 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108031914 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09719724 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09849599 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.113529787 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094722057 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092671493 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09302227 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.111786467 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095599 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088200058 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115989928 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090196699 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091533182 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.113593375 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097849041 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091870846 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.106364121 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091318301 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091981553 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.109952895 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096417428 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093753759 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.105998384 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085765229 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092535435 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086948798 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.112752141 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102187451 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088006573 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.114024861 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088139485 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100620735 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.108452022 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.096734027 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09372871 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.116942772 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098831203 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08439581 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08830386 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.114729993 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094039862 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088392657 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.112169288 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09190608 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098950783 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.105112027 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097229586 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084812048 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088457507 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.116773329 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093616009 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096139182 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.108262279 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.12805328 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102797078 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117238963 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091883186 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091323193 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.115755456 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091791342 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096396859 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117992571 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.096578759 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089618652 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110649307 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098134509 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087304249 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093312945 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111833937 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092742609 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084022047 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113469121 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085572309 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096111264 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.115472978 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097064949 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097256865 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094417286 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11120348 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101032796 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087963892 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.116423857 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084916308 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096570049 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.122574208 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098328257 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098472808 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114282103 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090367398 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093558047 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119611027 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094804978 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092131376 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09310652 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.105019875 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085564676 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.097690559 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.114983162 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089352244 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.091937585 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113330456 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095103513 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090397357 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104492393 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097620132 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095163853 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08762972 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113897093 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092144715 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090459028 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120515235 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085351867 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089584363 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113740887 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096327344 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092532626 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.11293822 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095428047 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097948858 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.116220099 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095758301 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089375127 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100662814 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.11187823 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092540172 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088180525 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.115731115 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08675313 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094559291 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112735554 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090209616 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088753398 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115867974 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099420049 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.09803551 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091302422 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.117224244 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.098226255 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.098414279 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109784879 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.098942939 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088539442 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10648654 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089297467 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086540304 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.114228847 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08913866 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.097701316 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090051668 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112367534 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.096168321 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09482995 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110282088 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100091955 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10275951 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.107051977 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086606552 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091589057 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11220941 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.089038203 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089822605 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.115718574 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094867799 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097149603 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113982998 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090101289 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.093681508 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.098723724 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109644281 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.099170243 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098319908 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.118392839 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089129917 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.096577173 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.109673272 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097147948 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.096501411 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112612978 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093202603 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091349662 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109672938 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091184861 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089776494 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086673824 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.11028024 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.098078947 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09157223 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.118034027 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091827885 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.09108354 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.110443868 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089744429 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.09993817 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.110675049 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098768504 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094414108 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087195355 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106435297 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.097214954 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093641044 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.118910267 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086980319 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.095427161 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119890995 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.096150125 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093844952 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.122460537 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100911148 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.098324458 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117440886 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087205056 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090338658 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097648985 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.113784334 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.106010882 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095198136 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.107976764 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095093333 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099308677 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.114197402 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.092548261 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086742132 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093808903 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.120397908 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.096911498 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096535025 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.115926399 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094160307 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088721608 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117417248 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100166522 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.093381019 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.12026626 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094046087 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098233194 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090052341 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.121004648 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095141807 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087785481 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.107544009 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092079578 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100094546 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.107234389 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098448496 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098192007 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090482137 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.113431022 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.097550002 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090375636 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115365961 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098818861 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091972861 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122932804 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095094323 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092193823 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.117962714 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10011933 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086837328 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093603331 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113009252 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1010896 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092529557 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.118714378 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093994018 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099694484 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.117684653 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099158682 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099757862 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.12035283 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088643279 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100177669 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096329468 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.117954694 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.09135618 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092660359 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.109003447 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093256862 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101603038 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.110843678 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10274831 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.099071448 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.111028834 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091060345 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.099221326 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092583368 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122271861 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.09029252 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095041127 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.108344274 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095013453 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091324064 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.12257158 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090929251 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087584206 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118757888 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099422934 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097757645 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096045933 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.12335839 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088031967 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087549623 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.116539446 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090077637 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103296464 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116928894 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091540198 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092315767 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.116544574 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09671214 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100448996 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087656811 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111782001 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094077274 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095532888 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.112117164 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088661343 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098838888 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113188588 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095902674 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093166545 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109019714 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093033114 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100736402 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.112790077 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090478832 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091753781 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101067787 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.114000248 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090302974 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087968067 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121445989 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095389632 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101657231 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.111887048 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094992189 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091352121 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.117698942 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10062309 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092346616 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11415027 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.09273098 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099612782 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119432997 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087142453 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091634227 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103476047 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120514142 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.09522159 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.09682014 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113916295 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100764184 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101108958 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.117304732 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089150012 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088949946 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.112733665 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089313109 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096759102 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098523513 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113251196 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091931271 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099452875 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119344531 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097021563 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096969478 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.109558587 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102038637 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091687675 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097697402 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10892217 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088543796 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097596347 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120647242 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09347785 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095061211 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.117933105 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097020594 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090240866 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091223573 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.118499967 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098016702 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100689058 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114959855 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092139137 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098655378 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126170041 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096246064 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093821252 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122254244 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.100868401 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095815073 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114240605 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100355606 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101823749 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.09600201 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.122018816 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092365101 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093371247 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.123133184 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101377833 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103522667 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114704187 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088754672 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099515688 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113718055 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08852316 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097782114 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122232923 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102035793 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095669845 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112490572 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104072252 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099635754 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114608253 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093386507 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091924707 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.09949159 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113502836 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099313032 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091701698 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.12395528 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102576688 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100457261 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124079374 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089976272 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100509027 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117440751 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103708097 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096446685 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089126959 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.110706417 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09803776 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101728589 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.120852543 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.09886444 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099157232 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.098532438 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.115604986 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095376513 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091566517 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.122503418 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100043137 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096400403 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118062271 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094171185 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095282985 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.11740156 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102295611 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102042402 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094817999 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12742831 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099476467 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093645233 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.112547857 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094837249 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097682421 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.116661438 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099603794 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092975133 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.109169866 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10117542 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102270479 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093008126 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12366882 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102763197 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094680837 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119274373 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102995006 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.098480314 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.117926504 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097387936 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098163848 seconds)
  done (took 61.471232363 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149209806 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104067207 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117736628 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097612195 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115846868 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120417551 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096871933 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098995524 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118664263 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106655664 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097874315 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117305749 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112735735 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118143525 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134656081 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106849652 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117728069 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100475235 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097271465 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098155067 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131337178 seconds)
  done (took 3.22060052 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.121121078 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109231667 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130308847 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11183076 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103027671 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129045316 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108176464 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129532182 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112238468 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105450222 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131711393 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108465062 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104890343 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.125847383 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105632316 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12593992 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111950825 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10447926 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130675518 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108875612 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105949127 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.128961791 seconds)
  done (took 3.4105108 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.132906844 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10052732 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.094765341 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117867129 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100711529 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097491373 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121040163 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099721822 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107134292 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092295313 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110129279 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093442943 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097127955 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117744555 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092503366 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098003091 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126330154 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101487169 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10244707 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096927034 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110089147 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097808161 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098113296 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108927467 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103988302 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102462908 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.098632087 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.121115204 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088861609 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100016427 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118927997 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09126896 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090058022 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088842833 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.109833709 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102237321 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100801621 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.117037631 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098249006 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089421532 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.099004851 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.123091547 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089550929 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.09848263 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.117047881 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092181658 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10127363 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.096745921 seconds)
  done (took 5.81563699 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.132979094 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155621281 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101522443 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125368155 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133955552 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107326991 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100808328 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.150200968 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100091308 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.10056236 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.137084489 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112087292 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12455381 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104747678 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10143848 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124780033 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10422288 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101536491 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128025301 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10302497 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106216733 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.124435814 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110925113 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.110792625 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125362507 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10175283 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101095174 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.125858341 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111255508 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.106400102 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.125423312 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.1080588 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131790211 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104599535 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102472021 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.122883303 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114020005 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.101975811 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124080312 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099447086 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.102938319 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125784324 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103679671 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.114240188 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.125072465 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.105058918 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102939559 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.119168834 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112150691 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.10313804 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.129520492 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113835673 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103862679 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.125073778 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.347335671 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.111434614 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.124729268 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101101053 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.103475731 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.132525002 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100000731 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103525086 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.133655592 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102968454 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.128891739 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.11262885 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103310528 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125859507 seconds)
  done (took 9.004285825 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.140739897 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105166439 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135472596 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113148388 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.1050753 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127649272 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105011777 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106074723 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128037388 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111284513 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126900336 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.216148621 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.12553818 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110240185 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104831188 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127782075 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106015179 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104193563 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12774789 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105855979 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104827118 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134048664 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105805663 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135161964 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115438125 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102611379 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.126462257 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106137823 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112151145 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12725421 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117216556 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126298676 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106987328 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11335637 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.138455128 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105875995 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099733884 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127545745 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106130434 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104807767 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.123151971 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113534572 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128313289 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103832131 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105733951 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126352291 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115691748 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116410257 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132288525 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110259504 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.105437091 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135546569 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106130144 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.128067496 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114007306 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.119547573 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135180944 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115053717 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127034346 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113789137 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113962684 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.141876846 seconds)
  done (took 8.255612144 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.1053516 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099284477 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09951604 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119931022 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102340156 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099164388 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097990416 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120785321 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099896655 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099434938 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119068619 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09973785 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098736665 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098519875 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120618294 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099125082 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098448072 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119115774 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099931258 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098654422 seconds)
  done (took 2.972144692 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.115719572 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116429396 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122889977 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108141007 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101202116 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128096666 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10176739 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101401731 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100734463 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124147058 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108775434 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107148877 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122316674 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107245769 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108092631 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.129155853 seconds)
  done (took 2.684032047 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.124864062 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116626832 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.201014109 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103020679 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123074273 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108235633 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100921133 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125599389 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101092647 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107479496 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104949222 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125953708 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101816184 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101944148 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123436184 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103623906 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099922413 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126784542 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101744711 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.207826798 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104767545 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103723338 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124586942 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104829146 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102645002 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.127183308 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10628826 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101719567 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124053936 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.102678289 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103484812 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.128730887 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100771746 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105189302 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101942842 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.125775807 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101174623 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102164971 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.124970064 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101410335 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103284656 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123607976 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10237465 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104383052 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099766263 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.125648874 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099279722 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108149635 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.124680492 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103408077 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102409535 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128357394 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106862305 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109902412 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.13039473 seconds)
  done (took 7.162270053 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.118473211 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10352361 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134669398 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101217761 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10206764 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102936891 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125992401 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104574783 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103125598 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122103767 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10346066 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104049742 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.12464574 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103699268 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103368925 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102198295 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.122878228 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.1031934 seconds)
  done (took 2.868912536 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.111602135 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101608864 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106736569 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12355732 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101656873 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101257246 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12147005 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100980849 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101608481 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10139708 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124164836 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102776908 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100516763 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12439134 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102870691 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101641971 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.12347466 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101878048 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101728486 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10080989 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124636339 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10038073 seconds)
  done (took 3.268730671 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.11866409 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.229256423 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108238932 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.23731016 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098297911 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.12180947 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.110474108 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.123188468 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114664957 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.098874514 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.119748667 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.098523913 seconds)
  done (took 2.469897201 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135609175 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138852835 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125339455 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103049399 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11177439 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12924255 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106749681 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106772506 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137710024 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117380818 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128939088 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11630623 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115753816 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137181612 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112026402 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110758421 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12887083 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107590774 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102782743 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144021035 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106615486 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136687022 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107220501 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107174429 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129819794 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114079828 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114206895 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140548714 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106636023 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135996079 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112554645 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106175206 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137430479 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120870421 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124788283 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115497677 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106772328 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143044878 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112225981 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136523582 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103338993 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110823882 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136015578 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112529328 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114516789 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128753469 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113340114 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107212041 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129729158 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126411895 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13498498 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116310501 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111627429 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136016117 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115657099 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150496979 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118690386 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137964131 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111630982 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116933378 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137001501 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111817691 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137801718 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118800161 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111614818 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137799711 seconds)
  done (took 8.914548089 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147938761 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10413949 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129780804 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118974225 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114957057 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131264254 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107686949 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129364001 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10847866 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10434449 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170552804 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107558289 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11481443 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13617954 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107139441 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129085883 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108112555 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115430098 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12658891 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127711138 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10699136 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137002414 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116202519 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13679076 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118338898 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111099789 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129284992 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109007244 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129288827 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106981401 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112281401 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12925997 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116623888 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104568923 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137716665 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107622433 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107591024 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1342043 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108656132 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110860369 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137200618 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123345199 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13026329 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107842699 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118530437 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129639289 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108256654 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105581693 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130000119 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107100922 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140744578 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119182973 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118482566 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138005403 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107938318 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109661214 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130442691 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107368435 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128652176 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11306233 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115876906 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129876123 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129197564 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108134319 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13074647 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115550298 seconds)
  done (took 8.848152355 seconds)
done (took 168.39756387 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.182120269 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.215025617 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.199791918 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.156864299 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093334834 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.15242502 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127262795 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.20155176 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093297136 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092734343 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116729835 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096108937 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.162790261 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.115572669 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09357272 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.095749519 seconds)
  done (took 3.086342268 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200060339 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.342680252 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.132894105 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.097950486 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100062407 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.097659734 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120033801 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101352241 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098658269 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128516477 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09942088 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093884827 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12686945 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095429754 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099389896 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120357077 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105240078 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098903594 seconds)
  done (took 3.163149053 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123943175 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151351792 seconds)
  done (took 1.183056179 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.135146248 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.212279598 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293630852 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169146798 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118774723 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138657001 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147739365 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132198387 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.187521953 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133184377 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111121489 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096124069 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146758795 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103394865 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115038106 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119596957 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127188527 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11286792 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.135853058 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100235759 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144530124 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103028315 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105078572 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135045059 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179063811 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13245525 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102534593 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102590205 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121750774 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112481816 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106114714 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137525132 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111238519 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178446262 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101572202 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176213252 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105211788 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121760492 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114001841 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.100748236 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12363871 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102501963 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111730858 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11863458 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102324535 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.10502086 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125187468 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101934319 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10648497 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128666309 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107807146 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127196317 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15155385 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127707099 seconds)
  done (took 7.877188967 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.912656264 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.146252757 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097965 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.052735493 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142375319 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112376705 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.892626008 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147567443 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251235909 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.922422601 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115786259 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106036084 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.262626045 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259649032 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.252332801 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.383711185 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.732381156 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133585859 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129733367 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165063681 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104044721 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137051387 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11641375 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454494852 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099703925 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09839928 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.125434705 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107628732 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175458912 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099243978 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102920937 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196879211 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291498933 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213210845 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098363037 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120081068 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098057453 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186432184 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269370748 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220665816 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.166732083 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119719866 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09902285 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103358328 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135054781 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096649996 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180205931 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192340793 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169758842 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125593922 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108751586 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.105380491 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124166844 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.1781321 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097606923 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359109516 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360403745 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120235986 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104710605 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110905484 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264130459 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123956336 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238682899 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120507204 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213141798 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122124573 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813294168 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163740638 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120547032 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103465117 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.103885508 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128089743 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102805043 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.183056507 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.408082448 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126656065 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104235751 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098121095 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227771489 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099820938 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121311527 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157376707 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121118944 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106388327 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128491075 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105534079 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189189112 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248775061 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128108783 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105649678 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126508072 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110151046 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099972189 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231028528 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.23156765 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17761239 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.227882174 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104522661 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181958727 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163835538 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127141431 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190947503 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.103631084 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110190162 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125484229 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22729432 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.13491513 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124108509 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104846721 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.104920425 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159620079 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103018994 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12783291 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166447587 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.493063085 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186668045 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097023855 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126552992 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105492139 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180055756 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10727015 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261961909 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107021264 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187836394 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126568672 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09863809 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105923911 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180772086 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107641688 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127849262 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103951482 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108609882 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.280423325 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221390541 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130623066 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24819853 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.171044292 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12667538 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171172732 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127915985 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163537438 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131749758 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103495934 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122596018 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798133011 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112025565 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105982627 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127902695 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182248482 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121639927 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102379873 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100682711 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097293055 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794352073 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126674094 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097948323 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10226016 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126591334 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105407337 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10515604 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126111106 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157708806 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.270704894 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10914541 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104764902 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.121774246 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.154856698 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.123705575 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099734818 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100292665 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123473539 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10675812 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104784912 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125618845 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164853046 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178206118 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229924931 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.565250288 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122796903 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100921852 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242509819 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099867027 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.351013567 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106959322 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.23618205 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184089339 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09731085 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359474499 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.183358797 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.206571127 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103432855 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192749489 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098143967 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106125578 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179630951 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100123087 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12929832 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177167871 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108167569 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106230182 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.271223162 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122712513 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249056624 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098184487 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189998398 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101214145 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105153116 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326083359 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122988336 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111726585 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180936164 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104305989 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123071497 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.945376259 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.123529158 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109260904 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10571992 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.257167539 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159632558 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128235722 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10790573 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129415559 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158262478 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.227369333 seconds)
  done (took 46.491758801 seconds)
done (took 62.704176618 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.226182564 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166024793 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.350085296 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147190902 seconds)
  done (took 1.910692869 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.265324886 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.164442924 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.242194044 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097395257 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.248975724 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097239992 seconds)
  done (took 2.050809343 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.177258083 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.164242592 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144403159 seconds)
  done (took 1.421849056 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211208197 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.205628364 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.343494855 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.233140286 seconds)
  done (took 2.015033283 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.279192832 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11509702 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124552183 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.22544282 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.246500055 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.204530075 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.122121495 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174451298 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128220595 seconds)
  done (took 2.598720171 seconds)
done (took 10.928885332 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.222522121 seconds)
    (2/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.385551847 seconds)
    (3/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.466394507 seconds)
    (4/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.428159001 seconds)
    (5/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.234538816 seconds)
    (6/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.135069271 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.236785077 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.111982259 seconds)
    (9/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.327089208 seconds)
    (10/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.286548291 seconds)
    (11/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.244213601 seconds)
    (12/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.206898358 seconds)
    (13/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.1517009 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.137203577 seconds)
    (15/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109303726 seconds)
    (16/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.133686464 seconds)
    (17/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.19284001 seconds)
    (18/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.130069265 seconds)
    (19/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.13572575 seconds)
    (20/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.191303747 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.253565428 seconds)
    (22/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.129909191 seconds)
    (23/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.214547481 seconds)
    (24/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.23010423 seconds)
    (25/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.406371019 seconds)
    (26/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.397295304 seconds)
    (27/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110970017 seconds)
    (28/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.112596828 seconds)
    (29/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.153083435 seconds)
    (30/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.171948758 seconds)
    (31/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.159008593 seconds)
    (32/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.196567567 seconds)
    (33/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.309223327 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.119260532 seconds)
    (35/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.108361453 seconds)
    (36/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.287359618 seconds)
    (37/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.198507993 seconds)
    (38/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.240885828 seconds)
    (39/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.231577813 seconds)
    (40/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.208470247 seconds)
    (41/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.172416292 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111309124 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.128208074 seconds)
    (44/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118132722 seconds)
    (45/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.17355501 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.147704869 seconds)
    (47/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106383226 seconds)
    (48/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.14388146 seconds)
    (49/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.166304967 seconds)
    (50/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.106814306 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.117249314 seconds)
    (52/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.143595003 seconds)
    (53/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.170022174 seconds)
    (54/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.105156641 seconds)
    (55/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.196801572 seconds)
    (56/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.162755228 seconds)
    (57/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.084821531 seconds)
    (58/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.214558581 seconds)
    (59/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.135801844 seconds)
    (60/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.153476159 seconds)
    (61/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082520053 seconds)
    (62/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.144397574 seconds)
    (63/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.146470647 seconds)
    (64/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.283386375 seconds)
    (65/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078659136 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.128326418 seconds)
    (67/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122580869 seconds)
    (68/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079300377 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.126304536 seconds)
    (70/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.132853153 seconds)
    (71/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.081544792 seconds)
    (72/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.104775302 seconds)
    (73/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.203813769 seconds)
    (74/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.123678513 seconds)
    (75/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.203319417 seconds)
    (76/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109758459 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102990502 seconds)
    (78/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.114761686 seconds)
    (79/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.101931141 seconds)
    (80/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102869279 seconds)
    (81/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.174109922 seconds)
    (82/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.182760321 seconds)
    (83/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.195747878 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099204181 seconds)
    (85/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.157359774 seconds)
    (86/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.110969681 seconds)
    (87/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.084424078 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.12445925 seconds)
    (89/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103626314 seconds)
    (90/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.085452735 seconds)
    (91/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.08535322 seconds)
    (92/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.105255863 seconds)
    (93/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.101503466 seconds)
    (94/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126321918 seconds)
    (95/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.139366841 seconds)
    (96/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.10947175 seconds)
    (97/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.289269942 seconds)
    (98/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.08556919 seconds)
    (99/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.078949328 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102782584 seconds)
    (101/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.153357773 seconds)
    (102/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.138215294 seconds)
    (103/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.081651816 seconds)
    (104/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.081158979 seconds)
    (105/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.085273596 seconds)
    (106/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.153354702 seconds)
    (107/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.086879396 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.103050541 seconds)
    (109/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.108600077 seconds)
    (110/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.085067207 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104625698 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.102778596 seconds)
    (113/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.133730889 seconds)
    (114/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.137243911 seconds)
    (115/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.112099839 seconds)
    (116/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.078982917 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.132972055 seconds)
    (118/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.089643354 seconds)
    (119/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085980305 seconds)
    (120/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.081156707 seconds)
    (121/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.102881947 seconds)
    (122/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100335013 seconds)
    (123/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100139776 seconds)
    (124/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080874587 seconds)
    (125/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.104295423 seconds)
    (126/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.086370537 seconds)
    (127/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.089026211 seconds)
    (128/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103459672 seconds)
    (129/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.134127266 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123149665 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122965672 seconds)
    (132/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.086143107 seconds)
    (133/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.135558363 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.113550582 seconds)
    (135/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080385723 seconds)
    (136/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.086102308 seconds)
    (137/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.104088592 seconds)
    (138/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112275807 seconds)
    (139/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082574296 seconds)
    (140/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.10322595 seconds)
    (141/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.134680623 seconds)
    (142/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112022241 seconds)
    (143/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.084697865 seconds)
    (144/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111006909 seconds)
    (145/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.108452377 seconds)
    (146/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.176350706 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103490089 seconds)
    (148/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.104508827 seconds)
    (149/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107264891 seconds)
    (150/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.195955475 seconds)
    (151/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.104715279 seconds)
    (152/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.110770009 seconds)
    (153/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087095508 seconds)
    (154/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.151441509 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.128999501 seconds)
    (156/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.08197642 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099728459 seconds)
    (158/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.124435941 seconds)
    (159/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.080325818 seconds)
    (160/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079965002 seconds)
    (161/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081356398 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.10920845 seconds)
    (163/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.109339267 seconds)
    (164/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.087540438 seconds)
    (165/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109462293 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123226388 seconds)
    (167/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.106779821 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103850944 seconds)
    (169/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085944542 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.101868525 seconds)
    (171/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.103233412 seconds)
    (172/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.087103586 seconds)
    (173/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.083047002 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103219913 seconds)
    (175/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.117309953 seconds)
    (176/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11020459 seconds)
    (177/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.08355253 seconds)
    (178/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.0854078 seconds)
    (179/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.100701849 seconds)
    (180/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.104383039 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104878853 seconds)
    (182/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.112193158 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.147161302 seconds)
    (184/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.081711148 seconds)
    (185/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079401314 seconds)
    (186/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.086639838 seconds)
    (187/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.087178593 seconds)
    (188/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.11028872 seconds)
    (189/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079689691 seconds)
    (190/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.082063793 seconds)
    (191/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.085594944 seconds)
    (192/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.082182144 seconds)
  done (took 27.43209255 seconds)
done (took 28.372593867 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.232276137 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130201165 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110089497 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110673163 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.233782352 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117338894 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.152252189 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112019905 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119414716 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.135593248 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100539575 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121774461 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.135318589 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.244316036 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.114106672 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.10225417 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100506136 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.145965143 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.124461989 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12626597 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.233615407 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.128459721 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.121778963 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101508454 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233987126 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102488918 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.134155735 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112516229 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123086671 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.134794002 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.112279544 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101406056 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.150624152 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.128135706 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101805282 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110847522 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.124892746 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086933343 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110534654 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.136142887 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125473595 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111724169 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.135383186 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103653745 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112393767 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110096519 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126525179 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.114348611 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100385626 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.136989725 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103962273 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128198543 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.134634597 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.100605794 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100961651 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.126145636 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.122889161 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100613314 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.146573309 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102558893 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103123537 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101168983 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.137530082 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102018081 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.109967306 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.125652145 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112175488 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112726463 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.133079415 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104321198 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10164599 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109968096 seconds)
done (took 10.040514837 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.113538203 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145304539 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.247375234 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.251094805 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.154761112 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.119133469 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115622303 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.150625257 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.116015733 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.119336361 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.164260727 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134736622 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.254218923 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.117265978 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.143102864 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.115397777 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112855824 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.137301885 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.24974068 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126316657 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.124823201 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.144577291 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12733071 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.11866691 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.131573809 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.138232543 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.135590226 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114724006 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.106234613 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.136583951 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127895391 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105911958 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.132380792 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125829153 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123519792 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.139266162 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119537863 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114408963 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.129398979 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106937662 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113047076 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.144925521 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107585044 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119150437 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.139149274 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121894532 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.113103123 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.141407304 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107897505 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114171776 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129371878 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13098217 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.117753164 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.147067228 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119723452 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11852383 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.143765718 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119258415 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.109646965 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.141146279 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107974681 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.10609135 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.106255024 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.150393176 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110070444 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.14264328 seconds)
  done (took 9.785901976 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.132796077 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136754961 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140604882 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116617949 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11130587 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124885592 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101243308 seconds)
  done (took 1.846704847 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.109505444 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.26912815 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.259444568 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.258297346 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.248310864 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.269148615 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125110387 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100829434 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164481561 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113634384 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.267242041 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.323755465 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.139311591 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.117602956 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.26302458 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.101464752 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.260393499 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102559194 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144268741 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.262139915 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118985028 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.158474254 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116808787 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10313798 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.261729545 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102925125 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.327871672 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121848496 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112016469 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114955645 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145228828 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.178238049 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.260558044 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.144086148 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111401425 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.256780375 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.25076539 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116576075 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.331826508 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.108450392 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.248730238 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117471916 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117908692 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.146484047 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.1167626 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.245795235 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121832658 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.145863053 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116737406 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.27189837 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.112548317 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.264955942 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.140369104 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117649613 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111826409 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.144761462 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12450713 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117388598 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.270458404 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146233376 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.230929357 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.259265078 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.254201863 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.259714396 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.155638308 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.264092312 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.210907099 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.144039145 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112062813 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117649008 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.26048113 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.144249818 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114804513 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.251136782 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119319318 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.262986007 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.262574833 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11353226 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.143075149 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.106122673 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114373848 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.130174717 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.253469554 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117366268 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.1146747 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147575217 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116080262 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116921613 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.135082969 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127233601 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115670908 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.140712091 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122343202 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116436301 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14537462 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.265728808 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114475336 seconds)
  done (took 17.717270652 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.112136766 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104897173 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107067171 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129575875 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105641906 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103476735 seconds)
  done (took 1.684168379 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.148641759 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11827702 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152109512 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119643191 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165665458 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.251590196 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.25822975 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138019746 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.136999676 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128864097 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.252151298 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.256071338 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.254062993 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121848158 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.258267511 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121009802 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.261600955 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.142530676 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127256404 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11490771 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.14433564 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122336642 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116302597 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.245320252 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11762746 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.146288792 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112004466 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125238372 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.153036674 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111727628 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119848575 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146873698 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110330896 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.13695888 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.232429021 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.138914744 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114830805 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119505022 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.14725281 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11932059 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.259979928 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114875769 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.152148455 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122536728 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112327014 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.136999103 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121694235 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110144339 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.25799674 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.148076439 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122181289 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119121047 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.145019793 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121293402 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.110292583 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13945131 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122347758 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.260267178 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122814138 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110081625 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.147005792 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120799581 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.139948335 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122783903 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119574998 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.144649061 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111773413 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119248686 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141675035 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.121159074 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121793447 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.143999894 seconds)
  done (took 11.790183872 seconds)
done (took 43.807182406 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.672038271 seconds)
  done (took 2.684363904 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.091916232 seconds)
  done (took 2.108662483 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.323552602 seconds)
  done (took 19.37442212 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.423974161 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.346068443 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.035172149 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149467092 seconds)
  done (took 2.971733744 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.085749081 seconds)
  done (took 2.121802678 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.343792977 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.243172547 seconds)
  done (took 1.609997146 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.733360755 seconds)
  done (took 1.767838285 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.768637408 seconds)
  done (took 2.791372271 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.276048707 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.242691893 seconds)
  done (took 1.556155443 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.692661602 seconds)
  done (took 1.729398114 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.741097925 seconds)
  done (took 19.783395202 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260776578 seconds)
  done (took 1.306129249 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.29714394 seconds)
  done (took 1.341201555 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.626523763 seconds)
  done (took 4.669252498 seconds)
done (took 66.839171219 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.125607823 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.122931259 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.120598707 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.144182266 seconds)
  done (took 1.543999293 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12970038 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119076067 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.121683818 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143340114 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123181444 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118190666 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143525056 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122665943 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118048042 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14724844 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120075453 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116346149 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146706945 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118188214 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115507391 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.14721332 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122606765 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119848817 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.163759525 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120667476 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11949729 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145149168 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122509741 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121356243 seconds)
  done (took 4.128622177 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.122236269 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11036454 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.10984191 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132769202 seconds)
  done (took 1.524113462 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.133963808 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129605789 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152434442 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124800906 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130255087 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153513883 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11986299 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114716624 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142455189 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126482704 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134167171 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156550151 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130078016 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120401796 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154416154 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112821511 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119440717 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154565847 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126444087 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12717946 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144305486 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125510529 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.121345768 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152828389 seconds)
  done (took 4.250087264 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.199457821 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129393377 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.176515566 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163078947 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177097835 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117075818 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.14440292 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149576017 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.126142147 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.118993423 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.146864532 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.164120924 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150550864 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120801432 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118001015 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148375629 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.131334119 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122998094 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.190709445 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122551799 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150455476 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.132021884 seconds)
  done (took 4.244709024 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.12856302 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108090758 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.107164332 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.131300016 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121428698 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109953883 seconds)
  done (took 1.759783952 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.114943951 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103689249 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103243551 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127792704 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107948729 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103308277 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101788899 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.128826851 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103578565 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103332674 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127325843 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103068468 seconds)
  done (took 2.381545176 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209187945 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144823577 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250228518 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.393593263 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188060192 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159238717 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.312054108 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186217483 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.177420754 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162845913 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181174205 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189794479 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15219645 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214017196 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139981003 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.185214752 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172640134 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237029906 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167933939 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215637293 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183721304 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174849071 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215145894 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173700762 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139371352 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162499576 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.145117411 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126671379 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191753113 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163794371 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200727934 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174973039 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142028986 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213277891 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233262827 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202907773 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273440773 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160408484 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.172638687 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.216837461 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255551956 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140764925 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216977244 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151068141 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155382559 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189377507 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176030615 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.209837431 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133855473 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143279541 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209373724 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204806918 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.168558922 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162126368 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300538399 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157725662 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141376215 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204848535 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212308891 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200058987 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205549472 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12175251 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200984226 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218230094 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215048251 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168430925 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161545415 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151218353 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164006906 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.232991704 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209818602 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158499455 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.237965709 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159316693 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172576688 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194051176 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154532155 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234494341 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200691892 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120126355 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150950581 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160191933 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125492283 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.214486662 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121313231 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243714343 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132208081 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.210538345 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17977321 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179495629 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15911337 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187065024 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160301897 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175201967 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102158472 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141460815 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.185424969 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157064974 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154823452 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149096925 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168102447 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125742113 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176617567 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12280918 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167783325 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.162164088 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156947819 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19834544 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130262656 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208456696 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146586921 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.190411156 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166050371 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219940747 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130836827 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15895382 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247636423 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170381075 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.163366887 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169783409 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224321548 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.152661207 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161628807 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163319756 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21969706 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140905507 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224878468 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1639705 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135252885 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138428631 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200285054 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184053414 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.158817825 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125642106 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.192212578 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215252731 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126497088 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137460714 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209739826 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131388746 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151451479 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134747906 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161862589 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142532465 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148481426 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.165371752 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151548979 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195197426 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164534745 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183651676 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132449158 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20089137 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130092491 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.196517392 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146306311 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.145699736 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171981103 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22453473 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127643895 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206838995 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.157136373 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2108317 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199324553 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127693744 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211052665 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127555298 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119118249 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18912244 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198195204 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161305347 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.215278403 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205345061 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.164498117 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.190920185 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147516842 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19616063 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.181344285 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183772496 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138475819 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199485759 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195180901 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122933875 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121857794 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.153452744 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137233974 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128287945 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165368419 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179349029 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191247618 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202679191 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167221971 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165260738 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189723144 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.151452905 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15874443 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.202941704 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137962941 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.216749947 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189586868 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207085542 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16532126 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162594677 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118269285 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153609756 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133036547 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186269882 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137966376 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133067095 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168528784 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216888261 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167189725 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176281825 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215782927 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163601072 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228378225 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119394372 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.159182529 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19229374 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194590186 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182296907 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132949036 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.186221614 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1920496 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169527262 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2172343 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168653485 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207545318 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191269317 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.193883176 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128475831 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170217476 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15829294 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165821461 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158350388 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168623483 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130226636 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146802725 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.165294805 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139824979 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214709451 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142452761 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202569434 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.180782539 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169719193 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153032364 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142143214 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1995584 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144994919 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105632456 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192572035 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216835479 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15032954 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150476759 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198598925 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129580506 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.347065273 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207607845 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170913021 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163623923 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139237076 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19612244 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155992323 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186115366 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184228408 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167554977 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206398522 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197989184 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137651973 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158315939 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146691007 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176114446 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.140053546 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.181466171 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.1625584 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140831483 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213362518 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164267845 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16877342 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205720608 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144622529 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.176915681 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138895441 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254311676 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168280218 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200480082 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.161882406 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189870874 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208822341 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123195014 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124964891 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.158485426 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184047689 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127253871 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206111967 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189643054 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208267905 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175152635 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189418632 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139809997 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.125983834 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195963427 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145859455 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213258948 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160618272 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136814154 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213993605 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127871414 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129398847 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1874408 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309978233 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146662385 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194855353 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107932079 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.306051466 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130665316 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131463006 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183850918 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170133334 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.16162222 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181697265 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201354508 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140369293 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184085424 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13605979 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20386107 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18263146 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194081584 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200833713 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14473186 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188352158 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155760742 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198167666 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146708045 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.172164127 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158235866 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222613226 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.173460295 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.158696351 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169189962 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196224017 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169923911 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203438102 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137828406 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211192297 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12754722 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193487316 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137445546 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122360008 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187789229 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193640424 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131243307 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199445164 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171369265 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157997381 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127331896 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144652034 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194713717 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138326586 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.157430325 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183609499 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.158827283 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180175784 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237755605 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128147564 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199307559 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141974257 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159193128 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138843879 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170551387 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132339955 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173147099 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203273468 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129864348 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201806141 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164552594 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192024429 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150775142 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171088913 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.262552111 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.15596779 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192045165 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179066704 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194435259 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177545992 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174780168 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199068882 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147291203 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194987533 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145357915 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.250656981 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163436345 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.194827782 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129855392 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172132942 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137494235 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.160537464 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150910219 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19645673 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141348659 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135468484 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.196869309 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143184454 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.174503706 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139576432 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228684864 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148812376 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215983836 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21489158 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137722494 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203137997 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174202459 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156828957 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.163239537 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200213691 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141958118 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180999346 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133858084 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135191534 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243219688 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124528164 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188489585 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172836403 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197611255 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200341732 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134164831 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205166559 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140214746 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201568966 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128065849 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149233513 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200025071 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133201131 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.154851698 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172034598 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186912551 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.16540836 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169182554 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.175494149 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220217735 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12413177 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133483644 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31632454 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159701573 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221969473 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.132084655 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166604783 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144544161 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187828783 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.167013113 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199507093 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129681332 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128157849 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.173841459 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159554792 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.162551457 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167837521 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21106217 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155248217 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215472002 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132530898 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284014115 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140120584 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202142684 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117568654 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127048843 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169248402 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134865801 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170991369 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209368922 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215828403 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.193065923 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.1459565 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162473312 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127156211 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130420463 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18789888 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151175805 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197668964 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147618661 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103836018 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170018464 seconds)
  done (took 84.718501515 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17656383 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.198945395 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.188002713 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.230614794 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196040725 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.298558714 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229818104 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246164335 seconds)
  done (took 2.897254226 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.124019237 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161250541 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141550569 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.14370485 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110707783 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.497654748 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160283893 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120387027 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160326096 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.153080933 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136910597 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.572821094 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115957505 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144663161 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121563612 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.1356554 seconds)
  done (took 4.125257267 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.057644012 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538309446 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.007400554 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.306544587 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.235059025 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.213660849 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.79096499 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.19875972 seconds)
  done (took 12.483211639 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.173608432 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.168293964 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.463418561 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.324444106 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.212538258 seconds)
  done (took 2.481234028 seconds)
done (took 127.571722981 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.656313485 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127946466 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.12283056 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153320549 seconds)
  done (took 2.188345391 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.201144402 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093664862 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094034786 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120188685 seconds)
  done (took 1.648508389 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.357016743 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092771218 seconds)
  done (took 1.624634496 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.15072194 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134394061 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.162632316 seconds)
  done (took 1.597939758 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137800188 seconds)
  done (took 1.276285426 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.121346965 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.115043767 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.279219254 seconds)
  done (took 1.659991233 seconds)
done (took 11.139903017 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.126409169 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.925657993 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432048984 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133847109 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712535364 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427458971 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.438414588 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174592808 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171989378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108750919 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160075977 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.71382745 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.446768359 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.878647937 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.409643439 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.909439498 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695552438 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112841435 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143555895 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111874371 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.415772944 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136267718 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112581315 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112767473 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.68931491 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.447768082 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110799318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.920988143 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111074761 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113396266 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.425369844 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111382873 seconds)
  done (took 21.072331668 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117638378 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.167371767 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146667364 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112636848 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114198897 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139553674 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122971862 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123677678 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202420281 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110688061 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159580454 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110397446 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116003029 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109984022 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163666264 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110725391 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113357159 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141897163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117797202 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111724999 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161385764 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110305712 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112462037 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141131934 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110320106 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133561443 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140851854 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122918328 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110352157 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143482249 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114945049 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110799246 seconds)
  done (took 5.273282384 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.164811323 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178579374 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148510853 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149584042 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188806732 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113280498 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197686798 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177262213 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203895225 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112125984 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132694395 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136937819 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15200915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111337318 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.16458882 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111573671 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114344805 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140758256 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119244621 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112151414 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16086233 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111021492 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112721305 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140220154 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111395558 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133288006 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138939708 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123962937 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109664417 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143548726 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117970241 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110755987 seconds)
  done (took 5.601676365 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.130639666 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125953251 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133384425 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164608721 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121096817 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124395825 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15519074 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120992785 seconds)
  done (took 2.233587346 seconds)
done (took 35.329159381 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.139054104 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126562198 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132293927 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.157014037 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.275642356 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.118868522 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.128378349 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.14749037 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.125878625 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131485318 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.10930554 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.151299513 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132259664 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12092562 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.274116868 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.15642187 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.249570587 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.276694412 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.151357783 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126230019 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.119490499 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.281460671 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.152151929 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.11959479 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.275475438 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.114909445 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.265680407 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122533756 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.120845202 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.142542596 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.278675883 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122120726 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120353948 seconds)
  done (took 6.608381584 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.232114482 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.152381874 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122309828 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120054488 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120770944 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.150686029 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.230123235 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.151795975 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120409587 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117992461 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.149877013 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.214289548 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.156198055 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.118050483 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.12057021 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111138332 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.26323003 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121447123 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.143066512 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.094649958 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115164435 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118290567 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.276897555 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115681159 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.151131418 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.11985138 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121297302 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155486054 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.121936148 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120364744 seconds)
  done (took 5.595011507 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131122722 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132637306 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.136068402 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.216757527 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150063305 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161255038 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137371155 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131032685 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171342558 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114246954 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128685031 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.179294897 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130213651 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12417363 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.141067972 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130827679 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.128716915 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142746533 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123168601 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129693634 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.132851145 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.161008335 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.136097903 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.120625047 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.142018655 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121416416 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121590202 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.153604269 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120692074 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.127723011 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.144571949 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116745652 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.114586523 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.176551222 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115073589 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126738892 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.166123413 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125727455 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126384453 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.175093201 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116079927 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.114084746 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.168715583 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168831395 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.114866098 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.156090322 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.114745091 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.12785952 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.140150103 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131876481 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.155832661 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.141544399 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135789074 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.111524383 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.140672596 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123450859 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11239234 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.115833572 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.157810874 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.115145697 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.133289673 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.149306728 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125411182 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.114568441 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.153456484 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112470363 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.11262402 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116268609 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.168895879 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121252125 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149555864 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.142385224 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125696014 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125202465 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.155042312 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125138301 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.111622723 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153543094 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126090341 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.118581685 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.155592317 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117400137 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116403216 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.12873195 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.164007818 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126860436 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.154756182 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127144192 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116570081 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114526508 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161769387 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115343572 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.116989342 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.156984146 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114545304 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.116247291 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.154973492 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125782459 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.1111307 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138125517 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.14827768 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113111341 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138652454 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.148047288 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118979136 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12184153 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.18552048 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113460129 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123873616 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.156464742 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.115134275 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121760905 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.14706949 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114668156 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.128620717 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128257894 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.152390377 seconds)
  done (took 16.951468567 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.380368021 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.363669236 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.212715038 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.40793943 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.127387633 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.283143369 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.396010605 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.369086915 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114336469 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.14685604 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.20715441 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.330063441 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.147101119 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143826777 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.369222806 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.447501719 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.142442078 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.18557706 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.15060466 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.159685847 seconds)
  done (took 6.261781877 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.140083477 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149043116 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166660391 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142796891 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12406319 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161226356 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115078375 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134618945 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156019778 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124627144 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116443234 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.16024362 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127977983 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130817383 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157611635 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.147481931 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122669688 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148389763 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13773457 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117839755 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131951261 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140335263 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122158134 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166947321 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134410346 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12469748 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.141932863 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120308605 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120966609 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.122028818 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.148648692 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132988857 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.120972573 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.135112181 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126412684 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129299113 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.150087543 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117911311 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119858854 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.116251153 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.160296708 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12739365 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123290241 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.128208981 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135021031 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111554093 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.1275089 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.156468979 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107691956 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134138042 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.155547394 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130684233 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.1216238 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.134546841 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.149947414 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131478952 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.123398822 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.157777024 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119597683 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112326963 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.142895775 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.117926135 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.12236055 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.157687692 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126636518 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133795006 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.160337221 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114959131 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.117961195 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.147209469 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118380416 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.128399286 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.165233408 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124688238 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121923578 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.124424038 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.154776918 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096797093 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123901237 seconds)
  done (took 11.737370219 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.145831611 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124891737 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132568281 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179606917 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.12735333 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.12011586 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.154610642 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134188143 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128303148 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163791464 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130041079 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12772957 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166853216 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125444617 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125195001 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159331287 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127838583 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.15149583 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.158776378 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141105748 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12780505 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.149508314 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128087323 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125503466 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.172250809 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126838314 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139826455 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.158411628 seconds)
  done (took 5.148545642 seconds)
done (took 53.461353149 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.322337961 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.517759719 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.295597143 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.291217852 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.31013755 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.291796302 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.287094155 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.307131032 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.749545747 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.260006389 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.294215407 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.288051575 seconds)
done (took 29.403908914 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.437269063 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.432822845 seconds)
    (2/2) benchmarking "String"...
    done (took 1.609423711 seconds)
  done (took 4.231930917 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.283435667 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.280286912 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.52613139 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.279885727 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.282167056 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.279838023 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.290007612 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.284575371 seconds)
  done (took 16.404639673 seconds)
done (took 26.542668748 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.270852117 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.52284138 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.541941918 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.267498521 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.281390445 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.277397965 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.281012575 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.325589471 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.28913335 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.261783379 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.718294974 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.576826109 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.289452112 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.720728356 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.264108077 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.28777262 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.296789076 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.584882097 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.279253776 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.322515112 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.259415775 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.265225552 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.305729203 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.285583321 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.295020073 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.293832745 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.263353924 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.281435875 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.575476776 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.287374824 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.320027747 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.28434615 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.264927235 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.288418995 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.288887679 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.282815296 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.590422706 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.295226067 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.263270866 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.297967779 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.585917949 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.305633783 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.286549736 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.292608113 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.267872248 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.295070748 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.269377395 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.400981152 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.303488289 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.286293812 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.31051363 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.668078859 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.297913634 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.309936384 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.292272784 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.58049979 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.309355247 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.379559359 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.318811796 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.291326034 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.290808182 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.284440543 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.35827078 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.299538712 seconds)
  done (took 149.415560197 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.288261379 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.285541093 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.285342514 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.344323026 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.286931933 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.284236477 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.287478986 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.287492204 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.286608449 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.312707109 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.286216343 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.283719768 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.286349957 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.23055216 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.296657069 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.307578569 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.288715684 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.289559376 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.299272172 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.285327405 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.28870555 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.289205241 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.285074651 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.286329634 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.303819113 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.381350173 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.290490593 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.303208181 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.297944655 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.284591933 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.298395425 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.287350043 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.93299952 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.160047389 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.299352586 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.325280474 seconds)
  done (took 83.302069879 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.289039713 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.290306215 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.289454113 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.323082073 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.290128353 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.89916824 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.897351561 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.312413365 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.578505437 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.793562681 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.556837681 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.287322588 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381218035 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.297278917 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.28834391 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.382190677 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.311396488 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.293388241 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.289069084 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.90190346 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.3013428 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.30182057 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.471826391 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.300152212 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321777479 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.6870074 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.287539821 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326980933 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.630381133 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.341645819 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.288047679 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.70043278 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.564242075 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.404990427 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.288178089 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322833809 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.293377711 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.290226823 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.580141266 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.2866297 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.290515713 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.294652614 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.995445527 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.293419265 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.902190775 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.29297262 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.352395895 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.292851935 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.292944205 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.517106325 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.132717843 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.292568962 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.290068672 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.295911501 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.292238201 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.292353189 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.327423955 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.414215837 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.195335394 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.289425675 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.295909237 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324484456 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.294417695 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.46458035 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.295699775 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.982923138 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.342226115 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.405999709 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.904326746 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.294537654 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.390288395 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.409287805 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.291964619 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.293573847 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.293620913 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.293334089 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.292778663 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.40424854 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.289590995 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.293751554 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.019542732 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.469992664 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.306447243 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.854906841 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.393780073 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.289830118 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.680613246 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.291476195 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.294025941 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.292288116 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.041422702 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.38885104 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.289956524 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.296841114 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.293439373 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.018939265 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.90062189 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.618755577 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.297337988 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.082331565 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.29607279 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.187998117 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.902508428 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.943188673 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.292389717 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.409706626 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.472345331 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.309450769 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.293209262 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.821809971 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.296064449 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.35824889 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.290901848 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.69712657 seconds)
  done (took 389.028459291 seconds)
done (took 622.930681673 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.276775874 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.27351929 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.272031122 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.273377888 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.290578875 seconds)
  done (took 12.577137115 seconds)
done (took 13.774253921 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.495696534 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.497152407 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.360807686 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.500988093 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.32909728 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515132542 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.477911589 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.311943446 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.411991361 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.379477778 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412840847 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.354815347 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.328688968 seconds)
  done (took 19.564623919 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.607378343 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.306072579 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.36144082 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.582338759 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.341897434 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.591034089 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.628846776 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.306536204 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.47664694 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.320168153 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.318894281 seconds)
  done (took 19.030524831 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.617945783 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.307180951 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.381271445 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.576359637 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.342475649 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.596902381 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.632797603 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.307976729 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.473909066 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.320728943 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.319307437 seconds)
  done (took 19.064820856 seconds)
done (took 58.854506809 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.337672677 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.396873216 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.330145845 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.314951684 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.314013313 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.318295443 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.316765186 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.314566644 seconds)
  done (took 11.83147333 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.31474156 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.31453962 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.312496565 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.314550108 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.314916565 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.31312711 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.312560718 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.313472451 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.314057982 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.315372679 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.313523767 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.315638393 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.314182189 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.315946331 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.314128381 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.314315007 seconds)
  done (took 22.217405572 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.317345931 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.315985898 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.315109385 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.314822861 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.314569044 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.313084764 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.314848442 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.314414636 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.313789985 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.314706841 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.316438206 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.316565923 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.317559062 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.315449742 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.319692559 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.318704098 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.319283126 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.317000936 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.320187472 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.317136743 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.315649654 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.317442625 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.315801502 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.317754994 seconds)
  done (took 32.784922048 seconds)
done (took 68.029277031 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.302665458 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.299868207 seconds)
  done (took 5.795146028 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.377031951 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.375194054 seconds)
  done (took 3.945983977 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.322314708 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.31988577 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.319878176 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.317936919 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.319122376 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.32181924 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.316720359 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.316371385 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.321169922 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.317723061 seconds)
  done (took 14.387099753 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.320708987 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.322480167 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.322657331 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.322391941 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.320314448 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.318413266 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.319094171 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.320007685 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.321291107 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.321271909 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.320225334 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.323807826 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.322010694 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.321287461 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.321471972 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.318904779 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.317947404 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.319150946 seconds)
  done (took 24.968636732 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.334006958 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.339707881 seconds)
  done (took 3.869149223 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.453157691 seconds)
    (2/7) benchmarking "second"...
    done (took 1.361088034 seconds)
    (3/7) benchmarking "month"...
    done (took 1.425899787 seconds)
    (4/7) benchmarking "year"...
    done (took 1.417923209 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.360168627 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.3437466 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.360633644 seconds)
  done (took 10.917730534 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.305033263 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.612954332 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.818741605 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.471128131 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.296108335 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.32787595 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.283689744 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.332239573 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.333999744 seconds)
  done (took 14.980556926 seconds)
done (took 80.064499322 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.304820365 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.332045353 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.327929248 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.324535683 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.660245248 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.348728779 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.309033057 seconds)
done (took 16.812203845 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.290741341 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.288467659 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.281994481 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.312014097 seconds)
  done (took 10.369650643 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.31441245 seconds)
    (2/2) benchmarking "read"...
    done (took 1.629833916 seconds)
  done (took 5.142524642 seconds)
done (took 16.720507681 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.324153623 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.32418553 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.324531849 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.322271892 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.321145974 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.325930821 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.321086646 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.324428946 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.325749612 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.323089766 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.322862111 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.326546503 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.321983138 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323979601 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.322782948 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323854155 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.325686775 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.322691557 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.325060786 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323817755 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.324224564 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.331091479 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.326119905 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.324039728 seconds)
  done (took 32.979231973 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.326428918 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.325901936 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.322845857 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.32689941 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.322165568 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.323011578 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.323626087 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.324564316 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.325475622 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.327046432 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324664783 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.324123743 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.324545648 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.325586126 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.32590974 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.327046028 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.325392035 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328869849 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324389435 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.3269816 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.328195668 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.327715355 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.323107377 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.326322542 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.326167785 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.32610131 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.327029076 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.32668254 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.326745571 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.329404221 seconds)
  done (took 40.976064173 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.334486349 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.332897685 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.330999959 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.325426695 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.326141449 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.325815632 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.32611991 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.327402763 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.328649814 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.324519249 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.324429899 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.32772343 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.328007621 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.328053264 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.32486114 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.326450634 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.328917427 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.326742829 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.328406788 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.328394514 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.326950214 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.326015844 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.327417081 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.328553901 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.326217697 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.324586473 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.326165327 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.328046074 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.328898376 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.327888054 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.328220854 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.328243327 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.330270983 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.327932423 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.329827863 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.325454797 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.333013054 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.336558361 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.32979336 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.330114986 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.331434908 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.328733057 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.332571387 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.3261042 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.327771715 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.330235336 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.33148093 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.330501876 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.329442597 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.331482316 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.330127599 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.329896233 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.330841602 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.326128996 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.331297073 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.327278644 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.332144247 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.332310177 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.328723527 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.330961793 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.327906503 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.330029829 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.330774271 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.329532786 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.33045956 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.32994039 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.329983781 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.331509159 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.333246423 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.330404493 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.331388528 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.33245597 seconds)
  done (took 96.895752624 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.329507445 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.333139667 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.332447969 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.331833242 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.328888176 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.330925209 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.332342256 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332912897 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332678587 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.333990555 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330184908 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.333291762 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33323759 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.331496641 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.331874309 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.332719121 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.334683329 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.332238928 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.333476303 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.331659359 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.333085001 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.333113463 seconds)
  done (took 30.516724552 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.331516383 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.332410853 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.333809443 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.332323189 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.335912896 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.335934004 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.333159825 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.334007469 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33110757 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.331248227 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333489587 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335784293 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.331503332 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33237875 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.330660044 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.334925155 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.335983057 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.336668762 seconds)
  done (took 25.210679282 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.334994119 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.335742038 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.333076092 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.333088394 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.335281793 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.336083842 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.334901163 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.335603362 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.333096657 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.333114279 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.335853914 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335728183 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.334902462 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333886412 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333672176 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.335036363 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.336881241 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336182688 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336206052 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.33578672 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.333968873 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.335890097 seconds)
  done (took 30.577499283 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.339316114 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.333552283 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.334265772 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.33494478 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.336674773 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.337112621 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.333113267 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.334177276 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.336992545 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.334435092 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335187589 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.334502111 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.337418662 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.33660756 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.335223696 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.335224834 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.337627355 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.336405538 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.337268806 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.336072946 seconds)
  done (took 27.92313228 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.337982362 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.335455021 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.338319017 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337409707 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.332943787 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.335403899 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.338441665 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.335086614 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.338572074 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.337951916 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.33985784 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.337494714 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.336727917 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.338665161 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.335213525 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.338414931 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.339235509 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.340134407 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.338291648 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339204471 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.336513906 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.33764067 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.338292285 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.338316348 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.338984092 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.337279985 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.338667256 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.339807156 seconds)
  done (took 38.665169774 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337361722 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.342150632 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.339777804 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.340793227 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.338605858 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.340535011 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.338389695 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.339294836 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.337656963 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.339460902 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.339340537 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.338952393 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.337134593 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.337857036 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.341696553 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.341372209 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340957531 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.342282014 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.341019867 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343084843 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.341740208 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343864465 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.3408206 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.341180774 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340061503 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.343279298 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.343881551 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.342825165 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.340830086 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.343717502 seconds)
  done (took 41.434625185 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.360780162 seconds)
    (2/2) benchmarking "in"...
    done (took 1.358951584 seconds)
  done (took 3.930214815 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.342786057 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.341394015 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.341820084 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.344298817 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.3436329 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.3419274 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.343272982 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.34399819 seconds)
  done (took 11.95545162 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.33517774 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.343145861 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.340599544 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.342805889 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.340968565 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.331840106 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.342372713 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.344093424 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.335866962 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.333875821 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.339157394 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.339942865 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.337947151 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.334806229 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.335803797 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.339703 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.346824596 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.344571413 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.34339564 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.343089904 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.341809366 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.33941827 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.34077548 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.34730413 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.337295429 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.344405637 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.346391312 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.349869946 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.335522889 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.343894128 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.339746229 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.346557853 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.344607468 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.341833745 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.344746882 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.345077188 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.344787944 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.343399395 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.3479732 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.350478886 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.345771981 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.342583631 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.336441684 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.343852455 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.34214305 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.351862301 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.345086121 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.344159287 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.338227031 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.341078036 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.352804467 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.337726987 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.348737699 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.341888635 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.344942071 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.350771506 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.353731423 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.340797801 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.345662371 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.349393579 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.357612389 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.355959772 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.343980631 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.351406274 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.349023797 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.362801196 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.352544022 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.354489063 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.350081205 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.347747723 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.34703605 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.359243181 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.361091058 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.351686215 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.345588535 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.348321984 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.339706576 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.353478462 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.350060132 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.356343255 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.35211848 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.346320142 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.350841342 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.360231405 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.347914967 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.349677122 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.347819745 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.34986208 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.341234121 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.355566958 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.357637721 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.350717114 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.342796869 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.346590018 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.348817089 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.35034384 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.342434549 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.346645864 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.355141639 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.350160107 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.349644298 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.345694884 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.351663435 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.355024559 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.347386243 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.352705709 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.359906361 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.344148795 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.358689177 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.36014705 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.349417404 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.345460328 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.35143428 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.355744644 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.346583848 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.35244672 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.355197569 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.346110738 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.354230008 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.353587461 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.355320696 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.370410288 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.359352175 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.35386346 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.347803081 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.360479975 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.349618335 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.351042702 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.360220392 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.351108522 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.355644526 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.349118017 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.358587246 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.348866755 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.355215464 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.345679107 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.360375974 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.354236564 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.351886086 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.349295006 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.354899156 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.350182978 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.355401856 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.359462235 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.360496253 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.352808745 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.364015785 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.353759212 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.352127786 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.357476876 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.361404279 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.355756172 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.348448345 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.354705946 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.348970291 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.354194906 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.347961336 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.357319994 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.354509762 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.356205135 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.356491486 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.34679601 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.350106889 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.356407054 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.350902081 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.354454309 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.358610221 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.356648217 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.354786167 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.343827226 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.355297826 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.34374255 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.348957352 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.360551979 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.35564556 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.356056975 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.35174152 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.365912547 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.355802262 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.357089751 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.347596177 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.356524742 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.360055411 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.355653005 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.364567598 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.355443636 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.356860184 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.348900557 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.353060713 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.355394336 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.347886841 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.361143398 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.361553795 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.369535237 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.349837946 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.358876915 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.347876227 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.357536637 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.353013776 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.363616898 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.356854704 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.355654756 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.348758066 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35951335 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.353734718 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.359976453 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.347826869 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.358239158 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.35904188 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.355105945 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.357298591 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.349291137 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.351297896 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.363054367 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.357166038 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.356906541 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.349772337 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.35983557 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.350017033 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.35332048 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.359105748 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.359029541 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.358924946 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.365854945 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.35633714 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.364652499 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.359660611 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.35158398 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.36081111 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.3535202 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.358798682 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.361243262 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.36212599 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.354339998 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.364732072 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.361940717 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.349108994 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.360919273 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.365748227 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.354137458 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.351566099 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.366673845 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.360762565 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.358454908 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.357725169 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.355677576 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.362906324 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.367232699 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.371324266 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.351769025 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.361700882 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.353510924 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.361506858 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.357688411 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.362207424 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.359323267 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.362395142 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.369628277 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.358499953 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.352244904 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.364800257 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.362247683 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.360713544 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.354137474 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.368063405 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.363277827 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.361829108 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.359089161 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.355212858 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.362858724 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.355504959 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.36137503 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.352086058 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.36999109 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.379854535 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.363537879 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.366560929 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.365343555 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.364619489 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.366740951 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.358437102 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.357653555 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.36104982 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.356653885 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.356333901 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.365795642 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.358506208 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.366782848 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.359072046 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.36564335 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.368742109 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.364625475 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.357742467 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.36417047 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.35998267 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.364749119 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.35552094 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.369146111 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.359832884 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.366632526 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.367036346 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.35837953 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.372017407 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.370490532 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.365140584 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.363769461 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.361423349 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.358069797 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.363829248 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.369950084 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.35993461 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.368852376 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.359808091 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.367631658 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.362836127 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.370463422 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.373901282 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.357926465 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.371112475 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.364367766 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.355027046 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.358577497 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.366925901 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.369899088 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.374464366 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.355760017 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.367559132 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.363087345 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.363975368 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.364135364 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.365065288 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.366638017 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.369105938 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.370814227 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.372483498 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.35974491 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.36839346 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.375445497 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.364550689 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.366354525 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.356744038 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.366530064 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.376720124 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.362275416 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.364106368 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.360885056 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.368645748 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.369366465 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.364914393 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.367821807 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.363576252 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.37114099 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.373439693 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.374327548 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.365291466 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.370703207 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.379884486 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.370712819 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.382954766 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.361633756 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.374754674 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.367609236 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.36178544 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.362474107 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.363948495 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.372263968 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.359407935 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.372525841 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.367728345 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.36475711 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.368523572 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.375658922 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.359492192 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.373478106 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.389496363 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.359993826 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.370851882 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.369236855 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.361992715 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.371834347 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.368006353 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.360685995 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.363115175 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.371186499 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372513724 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.362941757 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.373107981 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.362326608 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.371898714 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.369583074 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.365579681 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.37011312 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.368328213 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.358869712 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.371016828 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.370594314 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.380246907 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.364477359 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.368173945 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.363237314 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.376866883 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.384105615 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.364178277 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.376982566 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.368487064 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.364495971 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.369094545 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.375365354 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.365445153 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.376910799 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.364540444 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.368297524 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.369291474 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.373835848 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.37987447 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.375281549 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.365401951 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.367163188 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.367754767 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.37096788 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.370395792 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.368832494 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.376319665 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.361935418 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.364254514 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.372547351 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.366318154 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.379231233 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.366996279 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.369313135 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.371600418 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.375969837 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.374826576 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.371131478 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.365833176 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.368877217 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.37905719 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.379093713 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.375018364 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.371384824 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.378246324 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.367054448 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.371596511 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.372302578 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.370375577 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.367591441 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.37847071 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.366194739 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.369058716 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.367147571 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.376952098 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.377533168 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.378623991 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.365606534 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.379612006 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.384468693 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.381482274 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.367383184 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.370428579 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.371065396 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.377050946 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.376185827 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.368273177 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.383739285 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.382429702 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.380928236 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.372213493 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.374777731 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.366475704 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.378274392 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.374982892 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.36936585 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.382393998 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.370062165 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.381589331 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.375328168 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.37363204 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.369214529 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.368441859 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.370910529 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.372367407 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.375800467 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.377321007 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.382258744 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.374099356 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.381886351 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.374196572 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.375702329 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.379025469 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.371310141 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.376281638 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.368076283 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.379169091 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.381739757 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.371317816 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.381612697 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.375580294 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.372640832 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.375311327 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.385661347 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.379086235 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.370711589 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.373360963 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.380622288 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.393897595 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.377389353 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.370485267 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.374698489 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.380121622 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.379441663 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.379813873 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.37220298 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.387002309 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.394832688 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.372682491 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.374277516 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.381936191 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.39186703 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.379900714 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.37944878 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.377183619 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.37853956 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.3889052 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.381920643 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.381663371 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.384204259 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.37477398 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.383134276 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.370797136 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.376612793 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.379632288 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.393975045 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.382550382 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.37353355 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.392233662 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.39123809 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.380826285 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.404526403 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.387217084 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.379669395 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.388993634 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.372527353 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.380794222 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.374169037 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.388677512 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.378629677 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.380009988 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.380181893 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.371112062 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.385401785 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.389706769 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.393643898 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.383313315 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.371761813 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.375840734 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.381517825 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.380298364 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.380998593 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.383022267 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.379304621 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.379569817 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.373827608 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.395458733 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.399995941 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.387626369 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.38416007 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.380863679 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.383592773 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.387933002 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.380750349 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.390492374 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.38639334 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.385127502 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.379270387 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.392571056 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.381225593 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.37522205 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.377169184 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.372377839 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.387256628 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.392637337 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.408092375 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.386383651 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.389536836 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.384443551 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.383137067 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.378317251 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.386958256 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.384102505 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.37664446 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.37911153 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.386332361 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.387770351 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.38630683 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.381108563 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.392744744 seconds)
  done (took 814.058863218 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.384594581 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.3867656 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.386279212 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.386304821 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.385365734 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.385801647 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.388474406 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.385644944 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.387890719 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.38562886 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.388550441 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.385809065 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.387648105 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.386812096 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.387734757 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.388164533 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.385898133 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.38876136 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.385558346 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.388860819 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.386885671 seconds)
  done (took 30.370520792 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.387337899 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.388565332 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.390177214 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.389724762 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.389999215 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.388806949 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.387860145 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.386352291 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.389050133 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.388163257 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.387240723 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.389382687 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.390997537 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.387947898 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391997041 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.391656004 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.389381532 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.391218241 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.391002363 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.387335475 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.391483888 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.389720544 seconds)
  done (took 31.817258145 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.386516237 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.386445926 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.383347684 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.394617234 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.388235508 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.391366805 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.38896837 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.386673936 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.389049369 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.379882926 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.379934441 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.380932021 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.383715935 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.391572055 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.383510011 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.394743351 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.386901031 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.390144149 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.389581264 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.390354796 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.391739608 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.401542108 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.389662736 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.379864427 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.394907826 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.387997597 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.388640013 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.391227538 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.377295273 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.391534605 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.389389344 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.380648161 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.392805477 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.391276714 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.383988122 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.394459289 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.391060902 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.388130052 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.38665571 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.391861496 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.412126157 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.390603082 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.390975273 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.403190141 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.390334926 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.382934097 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.394924582 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.389818556 seconds)
  done (took 67.938956092 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.388906755 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.390568719 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.390125285 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.391280095 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.392356259 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.391540669 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.390937319 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.391583871 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.392513069 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.390361781 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.390111489 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.392029416 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.388789669 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.389714432 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.391177368 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.391893107 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.389501203 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.394273884 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.392745293 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.393156038 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.393384628 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.391171474 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.390655853 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.391014545 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.392126631 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.390060439 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.392602445 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.393508646 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.392339704 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.39361144 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.393093174 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.393958589 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.395306378 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.39270438 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.393606954 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.396989282 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.397011662 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.395151364 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.395113662 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.396709326 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.394365026 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.395400806 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.395346405 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.394279521 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.395055904 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.395023976 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.39171199 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.393218045 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.39360061 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.396119976 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.394625458 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.394196875 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.396347072 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.394427059 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.393432013 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.395075272 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.394248773 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.393951855 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.396130456 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.394259779 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.394461347 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.396125026 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.393430051 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.394826091 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.395562357 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.395374226 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.396177705 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.39689444 seconds)
  done (took 96.003788762 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.395859102 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.394047423 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.395449204 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.394461033 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.396044181 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.397525237 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.394196938 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.394281067 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.395436508 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.39739902 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.394213574 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.397475879 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.399301659 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.399696559 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.399623454 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.400007264 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.398864146 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.397528922 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.400059565 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.396795147 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.400693447 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.39870785 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.397709625 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.401870761 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.399710216 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.399660819 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.400593815 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.398963987 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.399139444 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.399006598 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.400490922 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.399669616 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.398298667 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.399707288 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.398653224 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.399379277 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.399350274 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.401631798 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.400090419 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.402098519 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.397831529 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.40040323 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.402515379 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.40211961 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.40185607 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.398735942 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.396381675 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.401359696 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.397361145 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.400555793 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.399343559 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.400102344 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.400442361 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.401779369 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.40080718 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.400318511 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.402522856 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.40090364 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.402052951 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.399808213 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.399744951 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.400128028 seconds)
  done (took 88.001426141 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.400705295 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.400562299 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.40044084 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.399593257 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.399637461 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.399864542 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.398990108 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.399685888 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.400319491 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.399676342 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.401939705 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.402245783 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.400421037 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.400414219 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.398915227 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.403059904 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.401612668 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.400110195 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.399967936 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.400844041 seconds)
  done (took 29.274935529 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.401390743 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.400343204 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.403094275 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.403809118 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.401864927 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.401232925 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.401109533 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.400046677 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.399801653 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.402523012 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.400969405 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.402248449 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.401079046 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.401001254 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.402784217 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.400959894 seconds)
  done (took 23.690727037 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.402353385 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.403865774 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.404249945 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.399985629 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.401176379 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.403819405 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.404018634 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.402572428 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.402801994 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.404478962 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.404654193 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.404086356 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.404173337 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.401138625 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.402307511 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.402792969 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.401912136 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.403753867 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.407333981 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.400329376 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.404590205 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.402591623 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.402964277 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.403666511 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.403763619 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.404790864 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.403153688 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.400637281 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.40212916 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.405696806 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.404046466 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.404799012 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.405971317 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.403600817 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.407850402 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.40225501 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.404628632 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.405974553 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.405202371 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.404722214 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.405533166 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.405233503 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.405290313 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.405251532 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.404369803 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.404936017 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.405390726 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.408241974 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.405240513 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.405685811 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.402249615 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.406991465 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.405261878 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.409476936 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.405770039 seconds)
  done (took 78.497992441 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.402974377 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.405401862 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.404722792 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.404880566 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.406298388 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.404816646 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.404326176 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.408586004 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.407229374 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.408239291 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.40572156 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.407614468 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.408519198 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.411402374 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.407429416 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.408685959 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.407906943 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.410636116 seconds)
  done (took 26.595125178 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.409696117 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.409875151 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.411772273 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.408165419 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.409655039 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.411420333 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.409793688 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.411214582 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.410433643 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.409324148 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.408492414 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.40865138 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.412017516 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.41169035 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.411075498 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.409761857 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.408949111 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.411730599 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.412796625 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.408696124 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.411740305 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.410479492 seconds)
  done (took 32.294691866 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.399685406 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.400530518 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.398517374 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.415421217 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.415718706 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.398697172 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.397389675 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.399676949 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.420862521 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.446220411 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.43969256 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.41490459 seconds)
  done (took 18.216723955 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408669801 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410827642 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.408729376 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409852272 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410103658 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409126978 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410168025 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407780138 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410814124 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410682824 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412168295 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410670718 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410259064 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410438705 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411948396 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409003061 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409335071 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40761051 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409114489 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410290168 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412382758 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409033559 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411139084 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408852459 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40953623 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411815304 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41238034 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410188149 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411960085 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411652372 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410060574 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412482708 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.412228948 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413396738 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41121531 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411315709 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413345391 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409132543 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412560935 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409523737 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.409267866 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413693708 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413216583 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413069023 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411956958 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.413240391 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411539655 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411614211 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411215657 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415302253 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413016215 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413237449 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415960976 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41449833 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41447754 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41541464 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413914491 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412697154 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415407988 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415136049 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412023334 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412919226 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414894753 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415126101 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413570786 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414266614 seconds)
  done (took 94.443609191 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411886708 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.415712622 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416966426 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416292594 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414745378 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416517409 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414317469 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414231104 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415378208 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415241011 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413437719 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415270377 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415645547 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413990255 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415340771 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413739941 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415899693 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415370971 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411732075 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414817679 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413573551 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413263917 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416127956 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416448027 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415387379 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416885183 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414197959 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.4162394 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414021894 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416774515 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417361596 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41666458 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41559988 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.416114764 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416801557 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416389714 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417578711 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415171531 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416583739 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41884389 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417501766 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417479408 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415907658 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416036875 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41930047 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417785071 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418568516 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417883503 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418612017 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418345262 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418006643 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417432112 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417998534 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419599525 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416111788 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418392257 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417693809 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416222507 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417677461 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419158498 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418390058 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418875305 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41688725 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417124179 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417510535 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417255242 seconds)
  done (took 94.753969296 seconds)
done (took 1908.228544955 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.57358645 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.537647301 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.409931381 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.439398454 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.401997261 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.414950168 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.410721814 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.402519059 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.409166697 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.40765563 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.408827786 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.599037527 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.462982613 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.40185978 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.408005914 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.508992615 seconds)
  done (took 28.473205788 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.439852717 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.419080365 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.543658368 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.41501284 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.441054123 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.621033278 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.473571852 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.413383967 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.612717963 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.433790874 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.405585539 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.438376296 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.413973981 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.403057015 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.433149451 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.619892939 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.708589478 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.414094157 seconds)
  done (took 30.927019958 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.930802328 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.420115902 seconds)
  done (took 5.632131686 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.438041083 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.416077289 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.417782172 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.411621438 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.408212656 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.399659027 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.41309963 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.412834648 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.422993382 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.55786925 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.418473368 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.429358979 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.42890354 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.416670851 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.422597972 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.467788659 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.565909821 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.424427418 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.42381318 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.422782645 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.412210178 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.516267549 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.463329819 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.425894487 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.558948157 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.418224933 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.41674161 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.421287172 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.5433581 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.424290429 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.417601267 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.414871446 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.415294495 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.40720145 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.014705588 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.410705761 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.438139745 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.424065317 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.426611357 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.573242269 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.415887491 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.422041976 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.406401221 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.002390931 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.529065072 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.549197194 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.435679134 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.420111932 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.420472481 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.488785106 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.422168839 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.422198381 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.482844785 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.266279401 seconds)
  done (took 90.238358599 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.459577197 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.411712259 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.598276827 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.434952935 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.408248572 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.424695341 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.426584451 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.748510915 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.464928704 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.409927915 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.749088997 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.063312604 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.408609721 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.488859341 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.438164357 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.465173857 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.415019032 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.408732497 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.40543213 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.40711806 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.01019491 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.426217762 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.416430251 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.608242631 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.457934142 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.017101876 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.421969895 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.414943031 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.413130843 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.412948337 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.057225409 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.416330227 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.453135803 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.412594241 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.729621379 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.873089821 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.836865237 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.421172933 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.409509362 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.415131782 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.408945005 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.026027951 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.859488294 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.412781163 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.415517122 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.023083782 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.414451447 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.422272209 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.417977721 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.690505155 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.416163394 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.417560353 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.421872617 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.409978034 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.416220276 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.454348806 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.45924576 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.017471687 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.413917942 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.411651442 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.428368664 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.418710427 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.424375152 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.417359715 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.417954586 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.840253705 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.609492498 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.423900249 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.848225748 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.035340601 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.412723511 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.132170098 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.415764298 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.440107644 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.532354265 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.417501002 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.437228503 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.022026387 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.429512713 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.413728281 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.843213968 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.421729738 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.746073764 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.433116605 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.414721071 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.028025299 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.422277349 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.469484124 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.416076737 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.414550438 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.41173931 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.421312913 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.73250536 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.436756485 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.416744941 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.420076432 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.42126599 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.413578011 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.414315186 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.425117987 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.121111949 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.422334854 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.417197809 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.419666483 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.418856826 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.434274118 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.416823941 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.420040431 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.706847132 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.417850133 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.421260113 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.419385715 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.416074844 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.421557099 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.624476141 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.42623857 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.787867409 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.41618409 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.435461523 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.41959489 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.417856009 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.467125134 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.424814957 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.42422151 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.36514641 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.763388303 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.438146266 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.434802905 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.417368403 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.418382727 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.414334958 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.41833217 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.468047968 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.420221595 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.244498935 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.441866365 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.446393415 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.418024702 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.426326809 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.418073061 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.420319327 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.420222478 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.734752868 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.744899679 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.604628144 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.417181799 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.421824805 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.273479215 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.46366493 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.605845609 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.443632023 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.419436949 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.728214488 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.629499224 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.422155898 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.415087179 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.418647224 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.722391886 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.419096525 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.759016809 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.082729399 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.418887925 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.430075245 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.252559522 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.173872453 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.420075505 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.424768216 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.752949977 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.437502906 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.420311627 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.417189443 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.423330076 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.421380163 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.422578159 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.424022457 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.422156345 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.421486184 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.490523648 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.623501374 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.44007337 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.431550864 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029470436 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.444200587 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.417275722 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.431935903 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.42484779 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.421370447 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.472982372 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.42175031 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.452680855 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.421235053 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.424406596 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.067205079 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.423332893 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.423227155 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.623526695 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.208577842 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.422076622 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.424381726 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.418360986 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.472301097 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.041426992 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.431899133 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.800195547 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.43279273 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.470025616 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.438516749 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.440037717 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.04791936 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.426366436 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.428845158 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.216224763 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.423842834 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.198284727 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.423380667 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.42461815 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.140056328 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.429504864 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.424667557 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.421054673 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.422287165 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.747121628 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.427529946 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.467726587 seconds)
  done (took 519.400309512 seconds)
done (took 675.956010068 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.423925867 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.421856812 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.427576696 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.422125254 seconds)
  done (took 10.995334716 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.448044442 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.429816814 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.445307065 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.435651094 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.44540602 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.433634593 seconds)
  done (took 9.938849347 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.427375918 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.419533732 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.424805038 seconds)
  done (took 8.567821538 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.683922185 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.445167616 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.841579624 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.43207248 seconds)
  done (took 9.70266249 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.443616794 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.442378385 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.442640839 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.442067836 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.449779964 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.44563112 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.447390678 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.449197147 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.446347499 seconds)
  done (took 14.307341787 seconds)
done (took 54.813132698 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.512443399 seconds)
    (2/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.762998534 seconds)
    (3/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.556937772 seconds)
    (4/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.948515919 seconds)
    (5/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.40704987 seconds)
    (6/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.498946136 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.50325695 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.460959573 seconds)
    (9/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.712341561 seconds)
    (10/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.405498392 seconds)
    (11/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.846538623 seconds)
    (12/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.733222861 seconds)
    (13/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.515964657 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.531322943 seconds)
    (15/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.463718019 seconds)
    (16/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.461509821 seconds)
    (17/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.405236128 seconds)
    (18/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.595864145 seconds)
    (19/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.528026986 seconds)
    (20/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.824681533 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.698427265 seconds)
    (22/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.510011606 seconds)
    (23/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.506412578 seconds)
    (24/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.405171734 seconds)
    (25/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.813855992 seconds)
    (26/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.8976622 seconds)
    (27/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.501870629 seconds)
    (28/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.711845099 seconds)
    (29/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.566933581 seconds)
    (30/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.620069709 seconds)
    (31/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.597334179 seconds)
    (32/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.405166735 seconds)
    (33/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.615665449 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.594377895 seconds)
    (35/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.475282309 seconds)
    (36/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.533800406 seconds)
    (37/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.531807832 seconds)
    (38/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.558716071 seconds)
    (39/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.4225319 seconds)
    (40/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.595054574 seconds)
    (41/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.409148632 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.553443574 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.596627331 seconds)
    (44/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.475762876 seconds)
    (45/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.502148464 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.441092251 seconds)
    (47/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.637923682 seconds)
    (48/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.462630883 seconds)
    (49/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.517873632 seconds)
    (50/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.553727812 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.597058048 seconds)
    (52/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.445828244 seconds)
    (53/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.778255589 seconds)
    (54/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.553085495 seconds)
    (55/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.40626803 seconds)
    (56/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.411283333 seconds)
    (57/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.412528798 seconds)
    (58/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.690761107 seconds)
    (59/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.407414183 seconds)
    (60/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.529803225 seconds)
    (61/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.654038589 seconds)
    (62/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.653209857 seconds)
    (63/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.658174321 seconds)
    (64/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.516069865 seconds)
    (65/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.409602453 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.603153828 seconds)
    (67/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.509900204 seconds)
    (68/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.536442407 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.533997494 seconds)
    (70/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.62526716 seconds)
    (71/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.865539099 seconds)
    (72/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.560987603 seconds)
    (73/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.906749455 seconds)
    (74/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.514329642 seconds)
    (75/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.41052736 seconds)
    (76/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.471373715 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.537645755 seconds)
    (78/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.463167621 seconds)
    (79/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.409550328 seconds)
    (80/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.47101064 seconds)
    (81/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.416756928 seconds)
    (82/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.759204727 seconds)
    (83/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.6535366 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.571040579 seconds)
    (85/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.561465115 seconds)
    (86/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.465489034 seconds)
    (87/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.601556025 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.56764725 seconds)
    (89/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.459879663 seconds)
    (90/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.409738749 seconds)
    (91/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.957512728 seconds)
    (92/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.837837617 seconds)
    (93/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.521079982 seconds)
    (94/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.513941572 seconds)
    (95/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.519274748 seconds)
    (96/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.832320216 seconds)
    (97/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.462549548 seconds)
    (98/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.940410258 seconds)
    (99/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.421216226 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.597296791 seconds)
    (101/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.529648361 seconds)
    (102/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.461943756 seconds)
    (103/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.520806136 seconds)
    (104/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.573530944 seconds)
    (105/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.136735092 seconds)
    (106/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.509234028 seconds)
    (107/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.940049061 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.46009252 seconds)
    (109/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.132829018 seconds)
    (110/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.602355376 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.717121709 seconds)
    (112/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.454261943 seconds)
    (113/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.479866226 seconds)
    (114/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.463780568 seconds)
    (115/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.523672654 seconds)
    (116/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.466969936 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.483576112 seconds)
    (118/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.42523917 seconds)
    (119/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.408036639 seconds)
    (120/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.672432452 seconds)
    (121/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.406583186 seconds)
    (122/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.643348023 seconds)
    (123/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.555947867 seconds)
    (124/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.408438512 seconds)
    (125/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.780467482 seconds)
    (126/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.608882816 seconds)
    (127/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.410787446 seconds)
    (128/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.462634555 seconds)
    (129/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.480019282 seconds)
    (130/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.531212504 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.58615366 seconds)
    (132/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.876479923 seconds)
    (133/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.530008426 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.564352951 seconds)
    (135/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.413553259 seconds)
    (136/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.529660869 seconds)
    (137/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.429515106 seconds)
    (138/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.508802071 seconds)
    (139/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.461008433 seconds)
    (140/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.455830068 seconds)
    (141/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.468671403 seconds)
    (142/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.528898146 seconds)
    (143/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.663892286 seconds)
    (144/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.473150876 seconds)
    (145/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.601739173 seconds)
    (146/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.733069714 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.56624455 seconds)
    (148/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.405803448 seconds)
    (149/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.515665776 seconds)
    (150/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.415020626 seconds)
    (151/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.546906015 seconds)
    (152/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.466788377 seconds)
    (153/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.416327924 seconds)
    (154/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.703233058 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.560506609 seconds)
    (156/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.615108026 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.509820419 seconds)
    (158/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.510738141 seconds)
    (159/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.428529927 seconds)
    (160/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.577159349 seconds)
    (161/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.410775025 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.497501954 seconds)
    (163/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.72434451 seconds)
    (164/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.70757979 seconds)
    (165/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.475892177 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.548836845 seconds)
    (167/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.041166907 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.53528326 seconds)
    (169/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.781417079 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.548138792 seconds)
    (171/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.415906034 seconds)
    (172/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.593060045 seconds)
    (173/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.745498209 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.600605274 seconds)
    (175/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.910275008 seconds)
    (176/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.476281567 seconds)
    (177/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.413096051 seconds)
    (178/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.735368103 seconds)
    (179/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.583370325 seconds)
    (180/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.416300266 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.708841913 seconds)
    (182/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.622238674 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.641472522 seconds)
    (184/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.551368329 seconds)
    (185/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.415345571 seconds)
    (186/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.874777853 seconds)
    (187/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.441688077 seconds)
    (188/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.64500806 seconds)
    (189/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.42056631 seconds)
    (190/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.426425695 seconds)
    (191/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.890076507 seconds)
    (192/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.869461562 seconds)
  done (took 351.293112109 seconds)
done (took 352.597325183 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.472859897 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.53729698 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.454503024 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.451501879 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.454604075 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.453343172 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.466689273 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.451947727 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.465549973 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.465878226 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.452134248 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.453014648 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.466467 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.463575356 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.484642922 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.45117435 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.450146361 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.461039316 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.467749367 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.470176179 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.455092804 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.45695963 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.482385375 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.45359682 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.462766783 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.460352368 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.460008899 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.45747528 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.453351767 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.468984529 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.458020845 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.450830522 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.469144725 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.465178374 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.453434012 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.462688507 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.454894194 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.540429615 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.471220095 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.463304348 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.461954916 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.469391052 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.456823688 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.456388453 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.463887334 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.480433618 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.462953279 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.468452789 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.460347286 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.438139211 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.470464019 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.465237141 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.464560675 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.444393669 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.449635343 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.46483424 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.464671321 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.475539438 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.463940031 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.458675088 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.487522876 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.475387214 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.467813869 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.460236815 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.465080661 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.469585608 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.465681015 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.471487545 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.464364394 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.455251759 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.455799132 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.462905045 seconds)
done (took 114.751949304 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.57796124 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.448349769 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.611249219 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.461332372 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.625823414 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.576572518 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.463568901 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.462430867 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.464064343 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.255325503 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.463598992 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.465069681 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.45266748 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.461323316 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.576186906 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.465720019 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.464526901 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.160302177 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.463912206 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.590978184 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.456446073 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.466006848 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.465471079 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.262229072 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.452172963 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.450437509 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.593492089 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.470592551 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.161319098 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.449704493 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.4492873 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.161474864 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.59199463 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.481890601 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.474640777 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.472931591 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.629764028 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.465855485 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.582985144 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.582371806 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.614913617 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.505822173 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.448763336 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.454622692 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.469088644 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.466636147 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.462468935 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.491488585 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.455403155 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.466532807 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.157247699 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.476419035 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.475781824 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.465999617 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.467343754 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.485515241 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.46745166 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.469058703 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.593459758 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.465500459 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.579193514 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.263218616 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.260702893 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.469668985 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.455267866 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.471822964 seconds)
  done (took 116.804698334 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.530119158 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.538467416 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.585005379 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.45749714 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.506424178 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.582696371 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.460410574 seconds)
  done (took 11.976458034 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.464130901 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.471332988 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.508260881 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.506486892 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.468786659 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.631313672 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.469157934 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.46827682 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.471010281 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.510014651 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.467401899 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.468823308 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.478488607 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.457438094 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.515948079 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.470163446 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.579067564 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.463987644 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.468277149 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.614077425 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.472893304 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.481001944 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.511384348 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.473258335 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.472324791 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.467827216 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.224240159 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.469453995 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.467982216 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.469121926 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.469785894 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.5264557 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.471842672 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.459949455 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.46993716 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.575151556 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.468684242 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.4699201 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.469876806 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.460289232 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.468737261 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.472233692 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.471066794 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.472038605 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.469522717 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.485420761 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.470181854 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.470567564 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.472335755 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.469645227 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.511453231 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.471954074 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.47250974 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.469519155 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.516354149 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.481888105 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.474060939 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.470228575 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.473448532 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.473598813 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.613703106 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.51003538 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.473393959 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.511267971 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.472472845 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.471663231 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.473981451 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.475207866 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.553637962 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.471927175 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.511697677 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.472088415 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.64510097 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.487015774 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.475119258 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.468694014 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.466746126 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.472848043 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.459335019 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.470560976 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.474813773 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.46731283 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.471067952 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.472283084 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.475233832 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.621474019 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.574250422 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.473948059 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.483282506 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.471783133 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.475950889 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.51826097 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.47591843 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.476487006 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.519187167 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.585890879 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.516867792 seconds)
  done (took 150.671822396 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.478031526 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.477318524 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.470829715 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.494374824 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.466317245 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.464162181 seconds)
  done (took 10.171480684 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.467402908 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.478997148 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.478524786 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.473531863 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.476675383 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.474510254 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.476858684 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.466148633 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.479545233 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.474526337 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.475643882 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.477221512 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.475748655 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.475426685 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.47669973 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.474034066 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.474477101 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.47779465 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.476320129 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.479473468 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.463312902 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.476890892 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.47836523 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.46745979 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.479069318 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.476045195 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.490703737 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.479507529 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.475122305 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.47317605 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.480811073 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.479211628 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.466246608 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.471303357 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.479015808 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.471609338 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.481739576 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.478249163 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.478607225 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.480334195 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.474204351 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.477380645 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.477385312 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.478492842 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.469635385 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.475925489 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.481584852 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.492212785 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.478248811 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.481261268 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.48099371 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.478049343 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.480778756 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.478853396 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.471744939 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.47259426 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.482830319 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.478050826 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.480467765 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.472022988 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.483430759 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.480903721 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.470547254 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.483754503 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.479249439 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.479449062 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.470918824 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.483440339 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.477664318 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.478336584 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.477796655 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.477840833 seconds)
  done (took 108.67182563 seconds)
done (took 399.614024941 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.949174728 seconds)
  done (took 4.27816016 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.579162475 seconds)
  done (took 3.908987888 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.192224552 seconds)
  done (took 26.528341655 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.496879719 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.465112085 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.474433075 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.463641935 seconds)
  done (took 11.22840573 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.011842614 seconds)
  done (took 4.343406185 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.490793843 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.471888968 seconds)
  done (took 6.293996489 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.781351587 seconds)
  done (took 4.111430334 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.290745959 seconds)
  done (took 4.624214034 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.486796959 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.483861461 seconds)
  done (took 6.308716904 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.439055099 seconds)
  done (took 3.767635545 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.647843302 seconds)
  done (took 21.979786569 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.488580962 seconds)
  done (took 3.820497455 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.499892204 seconds)
  done (took 3.831884797 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.501048146 seconds)
  done (took 6.828697244 seconds)
done (took 113.188973267 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.464844137 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.467936773 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.466055342 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.464796645 seconds)
  done (took 11.18951513 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.543134968 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.545257 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.552089665 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.539133729 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.540677642 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.548448885 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.50572627 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.523981739 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.537422951 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.534233023 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.549647148 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.536959152 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.551327836 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.520358085 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.531837726 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.552913693 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.537779823 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.552949503 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.508644829 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.536487877 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.483475451 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.537722073 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.534276692 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.484087397 seconds)
  done (took 38.123388702 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.993208828 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.545501135 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.628837744 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.527969061 seconds)
  done (took 8.025798078 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.589365171 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.591801659 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.606115914 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.641831793 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.680879464 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.61495972 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.509083125 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.506036243 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.489948136 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.590371853 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.667397642 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.587312293 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.801379721 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.484007728 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.800337039 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.487629023 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.486309948 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.586165449 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.638595624 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.665558507 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.484443374 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.58677896 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.591646827 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.587674557 seconds)
  done (took 39.608827513 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.491673997 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.499879851 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.489496028 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.501014571 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.485531723 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.484592856 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.485394318 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.493224189 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.484924755 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.48691905 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.487530323 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.50046267 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.483633271 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.489503049 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.493115585 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.489463734 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.487835053 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.49284138 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.492787563 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.487497311 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.488514325 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.493680753 seconds)
  done (took 34.122446795 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.468680443 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.46939339 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.82166021 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.721382255 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.473430954 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.464258231 seconds)
  done (took 14.753307944 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.557642743 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.714503078 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.470152313 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.908068179 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.999604218 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.474110019 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.475476679 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.756394193 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.127931178 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.125421046 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.543361345 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.558686162 seconds)
  done (took 22.047219654 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562474331 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.483368742 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.480316831 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529779404 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47704007 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.479898826 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.544294865 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.983249518 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.4837095 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758416871 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486049825 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566664433 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.732747798 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49589119 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.480691776 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.453146384 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.709522043 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05294045 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484000508 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480672974 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517297622 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487937127 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.481850936 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.725281034 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.486319456 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48095594 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.782808479 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48493046 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.822223199 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79008231 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792124713 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483709685 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761722872 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965479854 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592092978 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723382438 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50520847 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.480673587 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.457780696 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.499413327 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505269845 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.487903167 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788797571 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485760748 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.484495449 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498544366 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02617939 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.495826733 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.483402913 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.487863474 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.798909809 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570129187 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.491616129 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.485625773 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.568635404 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479821677 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.491108054 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.65089797 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128823302 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500926064 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50272695 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.487643927 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.480079699 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494913164 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240768582 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.495003411 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.491855278 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.492776295 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485948642 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479240884 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509390155 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486885224 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.506619665 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488943047 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399289058 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.499053231 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489746176 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101066383 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49121139 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.48875854 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.716945696 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484127109 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487044429 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.488001082 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486909187 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.330543534 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491937675 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.454407514 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565617852 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.997727643 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.723450978 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510811505 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518550402 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.711365225 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.454774942 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487792085 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.500270966 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490535316 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5047476 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.029974441 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48863394 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.490581871 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.738578028 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.698856304 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495671203 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.460764386 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029877396 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498478868 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.513955318 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.5005125 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.728044552 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.215935804 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806567469 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489749045 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529723641 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49132148 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386822169 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493792976 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.495176617 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.499941167 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.810062829 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.422614456 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485755458 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561344339 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489195548 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.494522431 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489517062 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492760175 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.489758888 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.704616438 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505670489 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.80375711 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.494786932 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492314763 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.490369487 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503896887 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.489769489 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.713634565 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500174826 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.764481503 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494048049 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49284052 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485112522 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.70790521 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.490730791 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.497554226 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832621419 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501935595 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502004019 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799775094 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525528046 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605660691 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52649815 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.50046819 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.740122708 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.497122397 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.498267012 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494858818 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.495425771 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496807656 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.503638814 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484825603 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222122518 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46402757 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495418423 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.49387225 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.507873535 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568711307 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.501301143 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.733883885 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.509022405 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494958532 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.497441283 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.503897598 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721252664 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8035873 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.495889425 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670531546 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.006542315 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.223126759 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.512280391 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.496199841 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.496321258 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.497843705 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494222881 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495990064 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.495819192 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737704918 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813863712 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.510741555 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.225124776 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500984278 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.499420005 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.505652765 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804331907 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.507576796 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497096932 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.495786802 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510301305 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507485558 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.806430847 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.717306259 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.512766321 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.496972454 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.014717402 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.503513447 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.498160319 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.49484166 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522426099 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.503348337 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091357868 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.831021227 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493492557 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80374414 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.500553614 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.517344725 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.496082608 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510602377 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505188025 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.500099425 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503049472 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.739538967 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.505781037 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499205609 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133459215 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441896472 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166943948 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.520330958 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.501887207 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.500838009 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.045766361 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498671173 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498480681 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781297267 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.011470457 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494083357 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006853607 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.494940701 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.383970172 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804847006 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.727660876 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508048334 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.510767243 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817132687 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.713557805 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522697636 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.507510603 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501957568 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.461374183 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087716968 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494355941 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677514569 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012990531 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510388593 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.500211525 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.533368369 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.506566766 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962586563 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.501010364 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500594241 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.50132558 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.516118226 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091638664 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.50470539 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501421222 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263082661 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.504238502 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.052549343 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499255429 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.743881755 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.816593087 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.788476153 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.504098378 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.504280452 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.747689795 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815869469 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502004591 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.502247895 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173933498 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.362887611 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.512165833 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502247054 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.399236398 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511667368 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844774302 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.516519595 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.50157805 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51194663 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.504129675 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503734795 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.500209407 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511311899 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474002426 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072565176 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.513228596 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486614186 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506140983 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504654838 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.751298274 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.519192915 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.237765639 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.735214098 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491038432 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536275061 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.511110283 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504205641 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.473632666 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503271767 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.503438503 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595390864 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.721682048 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.50483096 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.47329379 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.557289399 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.712899241 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.501846464 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.499556708 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.777660606 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.507781405 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.51970426 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444050796 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541134285 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.506189509 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524917946 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.51097771 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566781622 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582291579 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.748156587 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.824632871 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.822395485 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970727146 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503886194 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.527248715 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.520352744 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586297178 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513263844 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.507279129 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.507359695 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242094177 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396966283 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.240036992 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.825547647 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.508879405 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507988107 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505353837 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.746100367 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.5061959 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.783680042 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50935432 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.492510131 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527587178 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508042831 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52182681 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.7247284 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.777557177 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507089743 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52391813 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511538407 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.507977941 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827160097 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.724320676 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089165691 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138661237 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50568892 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.51786394 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.06487189 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.788464103 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508210248 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507251479 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507569211 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.529867585 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.520881636 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.515713881 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508486932 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.733414061 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823470568 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008915887 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.823369416 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.533160163 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.390574178 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509064967 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.75937163 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343182712 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.754543466 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251710511 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372292791 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.76678739 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584654651 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.75419625 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.513782521 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.748508621 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.527748657 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511468376 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508007792 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513381241 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.510058674 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.827370688 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25079486 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768794274 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.519275137 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.511627633 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561489667 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.757941943 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.737209825 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.36352891 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.72943436 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.832266019 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.521037727 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.50982161 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257186002 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.833344989 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514070037 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.511423956 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.76516459 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.513471437 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550774991 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.37637082 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.512429017 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137551886 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.723054771 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532730777 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512494445 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381291716 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258694259 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.519116296 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094709356 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515044351 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526976399 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.791849616 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.519804778 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511885581 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.819754676 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.519472542 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.515596402 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.776453293 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.250254942 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.424115856 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.522646491 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535350854 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.512340995 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512191499 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.580816975 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506611297 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.517292966 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.961673308 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.51588207 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515844573 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525418467 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.515843771 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532217551 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.514886424 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515485416 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.518586892 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.509481746 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.477478686 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.517740613 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.679858965 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112739403 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512644871 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.130398927 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.853632345 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.764303468 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.529039913 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.484133195 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.521566909 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514488764 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513152871 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515875073 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505261444 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146456317 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.529159864 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.833282838 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526368628 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.729829987 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.728541689 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.515198412 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.76546998 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517826699 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.539244854 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.481401 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516992651 seconds)
  done (took 1046.544361784 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.519185335 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.553994931 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.535934557 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.598405782 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.532338844 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.65441035 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.515337916 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.6230599 seconds)
  done (took 21.897684971 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.515024707 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.513127523 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.514055283 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.513406862 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.515307097 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.059216639 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.505228843 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.51480886 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.543585719 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.514585767 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.506001386 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.235686273 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.521576979 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.51981822 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.51451732 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.519323924 seconds)
  done (took 34.896137421 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.748497693 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.680725024 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.065733979 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.569782805 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.52292507 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.503291028 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.867129617 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.534042974 seconds)
  done (took 28.861616594 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.52363482 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.525681799 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.527078929 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.530690485 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.525636017 seconds)
  done (took 9.001107239 seconds)
done (took 1310.409266048 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.525638371 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.524325779 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.52778702 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.527535081 seconds)
  done (took 7.472093933 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.48881494 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.487352225 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.488612016 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.498134006 seconds)
  done (took 10.330911324 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.943569672 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.128792142 seconds)
  done (took 5.439823077 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.523231338 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.282993243 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.259874822 seconds)
  done (took 8.43461264 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.823766012 seconds)
  done (took 3.191309786 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.969535851 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.019279272 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.53000355 seconds)
  done (took 7.885755998 seconds)
done (took 44.131882693 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.513782206 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.273069499 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.664078603 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.509442713 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.712189339 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.670120279 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.802965292 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.528898525 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.512796327 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.505000567 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.506924447 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.705866404 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.788410022 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.275285804 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.786544951 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.280537657 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.674865536 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.526652705 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.522475 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.506666067 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.795484932 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.525335099 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.507388716 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.503388046 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.668383337 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.655724973 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.511314708 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.278030305 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.516886319 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.51129613 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.648902844 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.525619647 seconds)
  done (took 87.284633027 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.524471509 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.517108082 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.506652262 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.526987818 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.52682143 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.52670028 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.527120639 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.508312288 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.506959379 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.517788529 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.508764624 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.52563045 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.512901502 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.508538541 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.527655368 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.507623152 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.528728375 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.507732387 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.525156507 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.511184571 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.512279682 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.507633871 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.519959533 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.510198145 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.507557643 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.512379785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.508570133 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.509434215 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.510274067 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.534672439 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.508479928 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.510592069 seconds)
  done (took 81.875969892 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.513667653 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.512453039 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.508454506 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.517207568 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.512741581 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.514964835 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.517873633 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.513520768 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.518315872 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.520655841 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.511610856 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.520801328 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.512980775 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.5089014 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.51168056 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.512570897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.509835858 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.519497991 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.513449447 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.513376886 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.514027431 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.515007673 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.529725998 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.527420002 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.516529764 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.513696674 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.533281397 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.516098761 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.526832207 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.514179987 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.522412835 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.535730092 seconds)
  done (took 81.923338267 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.759765944 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.531740002 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.537598459 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.527457152 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.539687399 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.535256622 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.525918565 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.767388558 seconds)
  done (took 16.099116679 seconds)
done (took 268.560205281 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.527563576 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.55504645 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.556113292 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.524474001 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.540455663 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.556428116 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.766874491 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.555299917 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.753818276 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.52832738 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.538714272 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.533663532 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.480785 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.678481066 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.522088519 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.531086956 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.537957761 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.52006602 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.54191627 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.784178839 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.557813153 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.523656811 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.52568322 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.531705113 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.499312866 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.604909042 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.608131906 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.69517938 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.662308536 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.601150617 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.538668374 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.532013025 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.542011412 seconds)
  done (took 71.331308813 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.5269284 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.536892071 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.539201022 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.540288193 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.5387538 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.537453354 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.526137139 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.53763277 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.538309998 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.53547807 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.537650938 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.537820903 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.538125448 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.536332895 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.540267399 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.511230321 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.528539055 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.537559874 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.527025891 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.510781538 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.539601474 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.5408182 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.538677847 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.537033797 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.539695519 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.53874351 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.539728776 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.540829667 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.539301652 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.538018634 seconds)
  done (took 47.430403126 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.539285148 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.522623698 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.562127802 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.534523917 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.529412953 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.533736783 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.887218332 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.541603218 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.534045026 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.534786246 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.524582724 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.542173415 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.587269504 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.5238829 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.550263854 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.541119913 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.538944773 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.533847138 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.524287403 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.548671317 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.899662594 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.544792004 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.891953507 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.548874425 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.535703399 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.532816612 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.536533219 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.522450445 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.534274671 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.522709542 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.481278084 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.883030279 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.530055453 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.543177639 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.482210549 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.539558834 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.540806465 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.533505242 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.535752969 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.533084631 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.887780358 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.536719777 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.524924694 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.526191655 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.533035603 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.541115455 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.527081952 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.528234776 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.835339669 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.539933404 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.548073308 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.536486982 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.544656581 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.535104882 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.83242491 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.530247289 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.533754517 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.526280138 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.558529851 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.890787687 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.545022765 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.533348625 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.529058384 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.535666853 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.527160556 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.538585056 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.551694381 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.536306813 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.52539774 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.537581282 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.527967537 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.535977925 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.545906003 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.52781135 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.530135495 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.529819249 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.540133886 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.526637846 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.530449816 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.908082718 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.542381833 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.527203326 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.905154442 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.541121389 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.547789389 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.546038328 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.544486769 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.653247126 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.885491757 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.492980534 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.541258477 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.550063279 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.89642897 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.544824843 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.536260039 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.528383267 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.563352077 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.546693951 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.529985111 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.532498645 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.536342647 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.55279275 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.531076291 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.540471445 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.896163184 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.542800784 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.544041889 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.537316519 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.618020603 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.5447958 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.551486231 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.541672935 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.907667503 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.544006844 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.549642843 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.533679572 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.552035125 seconds)
  done (took 224.251626982 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.532243112 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.543611314 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.52933177 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.54566379 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.531711686 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.539430205 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.530259064 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.533226876 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.539107585 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.534939761 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.529409179 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.54195902 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.538175081 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.535588031 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.531158718 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.536285736 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.536208486 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.554137018 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.533801162 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.533748713 seconds)
  done (took 48.114591817 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.549598361 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.247740795 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.194755745 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.553425483 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.551863694 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.543885204 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.612959124 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.553417198 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.554178989 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.920947195 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.755954743 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.55297846 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.553429946 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.551528847 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.191462152 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.524300881 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.918789915 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.249082432 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.554219749 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.246092072 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.52110002 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.553631249 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.539892278 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.246337944 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.934137523 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.89799354 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.615655818 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.249494328 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.554158236 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.551467707 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.248817468 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.554814386 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.544141228 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.229528061 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.557096385 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.569646693 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.554031327 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.614686775 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.616571997 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.924351221 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.254097594 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.911323503 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.565445331 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.750138101 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.55764249 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.525544262 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.260014542 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.555472469 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.52036413 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.554979017 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.557423982 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.213116669 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.544038635 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.211385223 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.553674034 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.550126757 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.250408582 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.213544495 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.201307745 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.754154231 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.542603988 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.898697233 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.554773217 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.230131427 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.550001879 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.552957499 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.552000367 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.759274427 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.224401676 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.896273141 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.921232973 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.919187046 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.553573536 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.626515747 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.556275848 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.907347351 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.621249389 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.989307481 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.913874469 seconds)
  done (took 142.122820151 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.880735051 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.672398246 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.981878392 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.178379077 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.10073826 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.690618492 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.671465826 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.825229406 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.556099221 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.653685184 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.303083516 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.647448007 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.409592435 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.630057057 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.662455686 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.684228596 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.001555181 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.541844809 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.257824778 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.277557214 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.543342455 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.655476639 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.356782175 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.975606513 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.549322112 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.334880282 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.543962829 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.140654314 seconds)
  done (took 59.120058126 seconds)
done (took 593.753049095 seconds)
SAVING RESULT...
DONE!
