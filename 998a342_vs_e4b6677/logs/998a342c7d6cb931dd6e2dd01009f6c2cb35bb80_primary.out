cset: moving following pidspec: 27702
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.434208181 seconds)
loading group "string"... done (took 0.483084035 seconds)
loading group "linalg"... done (took 9.57062115 seconds)
loading group "parallel"... done (took 0.169793447 seconds)
loading group "find"... done (took 3.112476904 seconds)
loading group "tuple"... done (took 2.204473068 seconds)
loading group "dates"... done (took 1.427824736 seconds)
loading group "micro"... done (took 0.20439986 seconds)
loading group "io"... done (took 0.513786285 seconds)
loading group "scalar"... done (took 58.955910904 seconds)
loading group "sparse"... done (took 14.498040641 seconds)
loading group "broadcast"... done (took 1.320084011 seconds)
loading group "union"... done (took 11.144359471 seconds)
loading group "simd"... done (took 3.883920586 seconds)
loading group "random"... done (took 14.246924485 seconds)
loading group "problem"... done (took 2.183924674 seconds)
loading group "array"... done (took 24.455173108 seconds)
loading group "misc"... done (took 1.131688698 seconds)
loading group "sort"... done (took 3.795435474 seconds)
loading group "collection"... done (took 22.055341739 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.690855527 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124931109 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.198727886 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.197454564 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.271463614 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.16406657 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155870849 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.126112838 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.651593057 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.203271898 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135620964 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415486942 seconds)
done (took 6.113656066 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.441527416 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.059847448 seconds)
    (2/2) benchmarking "String"...
    done (took 0.192601163 seconds)
  done (took 0.966004263 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075925601 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158499207 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.106890464 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093400557 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093349503 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107562724 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092213796 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107173091 seconds)
  done (took 1.467384888 seconds)
done (took 3.661881292 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.49286456 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.923531959 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.550924301 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.188008237 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.366046816 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.305145094 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.264729162 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.229867515 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.088867654 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085378348 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.195646139 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.431298737 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.394484673 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.011645204 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.07039686 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095463983 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.164680685 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.82103273 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078396176 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108926455 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.533329133 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.227418931 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.117011747 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105556757 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184731564 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131685172 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.148449272 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104436495 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.695478267 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.136415758 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.211432583 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082936918 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.147091418 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.167446904 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.221969964 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108915521 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.70455635 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198787878 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096608937 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100878766 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.723919565 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.126198184 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.208894893 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105476102 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.066731822 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.163682591 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114598294 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077456465 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092295035 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.101688094 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.169294907 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.489956833 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104468478 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.198084435 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091830582 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.734224332 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095113055 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276308768 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125632836 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094511632 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089053336 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086689969 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.159862945 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093415606 seconds)
  done (took 20.618701534 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.19044359 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.208377983 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09786134 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142854062 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140814864 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080279937 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.088380307 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095482664 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.112448237 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.194889182 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.123916958 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.215725315 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075759505 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.107011176 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.167650674 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.252700916 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10759387 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121198088 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089569324 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.09576076 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.144080632 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095133629 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093357576 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110077078 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170612852 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204864385 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112788211 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12582494 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091830062 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099793934 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146718156 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150217423 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092159707 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090998894 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175439534 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124027454 seconds)
  done (took 5.465747877 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.241067588 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102416294 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.255091736 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.196766562 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152575856 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.18373957 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.180576223 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.31005764 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.285754046 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.222401825 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162201611 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130063753 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095344055 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082908472 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078761897 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096983188 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.808731028 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.170416168 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.163859401 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.170562989 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114094002 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.095871581 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.72100669 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101136703 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085479737 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093274265 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081247686 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.22723863 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097146177 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.487072361 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.08208977 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.115515114 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111775649 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.211993552 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121086376 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120282789 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111684269 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.085800047 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.21320302 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099887695 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095603018 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.078146829 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130454483 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113817318 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.106631794 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.107350659 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.132195806 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08665988 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110194516 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.095474356 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194861091 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.170007207 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.103041746 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.28622361 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.108697525 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099729576 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.110143684 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.805870477 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135698337 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085191545 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097017879 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097696879 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079576895 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.830594434 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106052522 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.796494896 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081490993 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157310924 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095817219 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11707538 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084174178 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083874438 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.099852779 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.108685184 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.10329738 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079538767 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085226558 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095183367 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.090039721 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111794573 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101363005 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079463866 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146647313 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.110611132 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11134948 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124473266 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.089333857 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085658338 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128355575 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081955102 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104109528 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.204055392 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0972976 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084121584 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.101306203 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112455691 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115335203 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140237111 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.091162309 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.292436485 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083949897 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125246136 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.107714181 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129047532 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096761417 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079288783 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100937468 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078564208 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080320644 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159222676 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085655312 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08033963 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104133072 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092856342 seconds)
  done (took 28.6760943 seconds)
done (took 55.462903573 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.42470262 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080009895 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101611338 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081055118 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080459555 seconds)
  done (took 1.548457286 seconds)
done (took 2.303334945 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.298174595 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.197974877 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086477129 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186709144 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08673064 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.19348578 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162997902 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.119556176 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205263649 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084979053 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.187696996 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084909333 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085781066 seconds)
  done (took 2.762665164 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105062723 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098287227 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101726763 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121185902 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085848196 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101418365 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119219012 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107145175 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100295197 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113179573 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085313829 seconds)
  done (took 1.898576433 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.0997932 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097653217 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092801291 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11758958 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085518242 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098059389 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11673398 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107347555 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099376151 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113114323 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086568791 seconds)
  done (took 1.874834627 seconds)
done (took 7.292350029 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.203875931 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.91541641 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.182235404 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.249029195 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.330913552 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.300622371 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.610881123 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.20311704 seconds)
  done (took 15.883320776 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.221325692 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090729824 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094102497 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090920126 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.116078186 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090528395 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094914766 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.114982669 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097443455 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090289094 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.108330811 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09667098 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094172308 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091475442 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.108905604 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095566112 seconds)
  done (took 2.524116774 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.135556346 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115240383 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.116499518 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098211191 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094552408 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.117868474 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101106929 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.096054564 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.113335687 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094747947 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101656668 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.115761767 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098293056 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094289716 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.115766025 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117005562 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093221004 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.116912523 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116073206 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098564382 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.116066261 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095917474 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.097886364 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.116681663 seconds)
  done (took 3.428756779 seconds)
done (took 22.597338354 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.139523127 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084071026 seconds)
  done (took 0.994518172 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.167563374 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.185251434 seconds)
  done (took 1.131037626 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111602311 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09073118 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137138899 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102535421 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091357568 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108228094 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115420358 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.090445746 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091925014 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092074847 seconds)
  done (took 1.827596556 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094835517 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095407706 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121812981 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.161105223 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117343313 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094465214 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094542212 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.110891001 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097340504 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090672614 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.113217691 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.10812391 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09599909 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.1273105 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095527172 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095128348 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116637539 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095177975 seconds)
  done (took 2.704661874 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091621087 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092455496 seconds)
  done (took 0.963673079 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093088018 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089516171 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093030821 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109276294 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09149209 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089434391 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10762763 seconds)
  done (took 1.452822719 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.522893631 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.238015398 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.375526685 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072492754 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121878795 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.32148727 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.103631933 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072400615 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091944111 seconds)
  done (took 2.735174328 seconds)
done (took 12.587681148 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092183466 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.207936127 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.619187235 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.130672778 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091347068 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.146275154 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.347639267 seconds)
done (took 2.416944292 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341283869 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.179715744 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08429006 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09150765 seconds)
  done (took 1.477123184 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081768805 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09929561 seconds)
  done (took 0.971608315 seconds)
done (took 3.235503883 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090253733 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08923514 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.110850806 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.108389081 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.09072082 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.088227485 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.108724072 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089935666 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.093334088 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087893115 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.108432038 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.090366133 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088533016 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106490477 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088796468 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088689226 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088558163 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.107286936 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089623904 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088466852 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.106568123 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089331645 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089218443 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087961693 seconds)
  done (took 3.095915462 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111791413 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092231827 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.233951203 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094870669 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093559428 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110140173 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094634856 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091832271 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.093159624 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.109893101 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093546942 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.092334696 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10932812 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093675774 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091029511 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.11195846 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094107262 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090887479 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109012426 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096218136 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.09315574 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108514827 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09385934 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093455106 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110945239 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09410409 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091533561 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108678167 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093671465 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094839938 seconds)
  done (took 3.88098127 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096523557 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086319417 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090385232 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116317236 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087231727 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090070974 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104254642 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090834295 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091522332 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088469516 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110728015 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.08981281 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090475729 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108288256 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091122171 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093506452 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097097322 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.108326795 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089935404 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09102665 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110352504 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090041789 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089584279 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088817753 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.109659764 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087366391 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089984561 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107604368 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091068104 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090007611 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.092320588 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110662729 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090326538 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.099806644 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.110393932 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091610004 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095024308 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104275449 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091560652 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088098931 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086352725 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.108781389 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090747995 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.096632067 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.108056529 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091025061 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090267298 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.091244887 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.109081475 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093783049 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087528962 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.107962077 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093382136 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.092975313 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.092340786 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.104944791 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090928733 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087530831 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.108138456 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090256229 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087678101 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.086158134 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.113679062 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09232347 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.103578202 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.113862715 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090239925 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.091558333 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.108507837 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095729458 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091648317 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.11647412 seconds)
  done (took 7.748001315 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.113803326 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09887446 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109686087 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091901896 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091414143 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092134699 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113549708 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091297236 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092472546 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115419583 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090954328 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090896481 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109816421 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092193534 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090584369 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091529586 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114131421 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090847583 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090669227 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110287695 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092192454 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093893621 seconds)
  done (took 2.963704115 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.215623589 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115452426 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140254342 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121646947 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108060949 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121497209 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095364139 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096734454 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112774226 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100099958 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1011907 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113846641 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108236458 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099931406 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118424547 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10114446 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094612935 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.120165168 seconds)
  done (took 2.884235165 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103907277 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092693435 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.154032901 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093405835 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092531241 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.111197601 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097765033 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11113977 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110461175 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09272875 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100025567 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109980203 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093019968 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093329278 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093213547 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111381572 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094086753 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093244158 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11792387 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097710942 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099359913 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117195213 seconds)
  done (took 3.081214833 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105960917 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093414567 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128178 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095863833 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093123959 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.092102619 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.114895339 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092792547 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.097142381 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.110943658 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092786964 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091743945 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124801967 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092895147 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098283915 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111980492 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093284556 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093227696 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110374762 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092523154 seconds)
  done (took 2.824911817 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.187119647 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12683854 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109486005 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115840919 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127390625 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109043956 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13405145 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108678468 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108995378 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136549352 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109231066 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10955874 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133868662 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113458208 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12585311 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116271427 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116179518 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136140773 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110247959 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108424734 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136366182 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109042626 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135191041 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109365403 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108220071 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126714154 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109945285 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112424257 seconds)
  done (took 4.194390231 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092559161 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091697163 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091356453 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109772875 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092413864 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091426492 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091427669 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109487951 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091861174 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091797855 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108974254 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09180087 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09152574 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091571355 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109967814 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092842403 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092955507 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.091795374 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111778241 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091501767 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091032335 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108414854 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092302077 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092070767 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091604916 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.110423158 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092790995 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091299414 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110091253 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091745283 seconds)
  done (took 3.706480501 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103838173 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101604872 seconds)
  done (took 1.012049634 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099602839 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105666176 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.09163392 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110365064 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097975751 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092804114 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117474628 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097814736 seconds)
  done (took 1.620244061 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.184879717 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.210124132 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.116166181 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104038899 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.209625913 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.188420686 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130030146 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096556477 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.111574589 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085093793 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.202446323 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084269131 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090904185 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109165151 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092122856 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096834338 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.113342372 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102044363 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098538105 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.113653753 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097926568 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096542511 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112679629 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10346461 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086560261 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113954304 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095359896 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10393161 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107912988 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094083096 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090649514 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.11192609 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097035789 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.097414331 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.093677271 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.208843738 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119724289 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089530532 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092642559 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118044051 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125476793 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09358866 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114564057 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092415456 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095895658 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.115730881 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.097918912 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092832856 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102204331 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088642214 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093268204 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086950554 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.111179923 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093104562 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091725193 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117380453 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095194573 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088569724 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.10750102 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088996199 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091218609 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106359634 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094865072 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095872089 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112794805 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093153069 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091986373 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.11262545 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094263512 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094485566 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091576381 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126296025 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093043659 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.097216683 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117633171 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09519408 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089357706 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117866764 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091382118 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092772571 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.116137686 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119858474 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094518707 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106823187 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08863556 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099942791 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113404537 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.09577501 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085168589 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118570997 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096458238 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094413958 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085652656 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10998775 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088827946 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.096395175 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.105074764 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093388951 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092527286 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.116695642 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099107387 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091692895 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112719048 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098443843 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099067297 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091346462 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.163025368 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088940949 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109672752 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094861085 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09928834 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.107090466 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093107548 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092433448 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089414316 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.108666463 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.098214253 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091900226 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.114812711 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.097594263 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094668409 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114027451 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09639206 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094010322 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108682989 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.097660049 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101720303 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.11403887 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096320294 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094898207 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093984106 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.112404576 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098184647 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089665817 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118517071 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090796557 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09421201 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.113248909 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098803379 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093238406 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.1073645 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091249832 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094226029 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.111347619 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096101158 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093781008 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088602587 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.105013257 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.094122461 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088825699 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.113696332 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102434826 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088833721 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.115908078 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090646622 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.1013014 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.109393071 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099362161 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096738255 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.118322697 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099047743 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085242212 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090388296 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.115450104 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094481115 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089552138 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.115059543 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09407733 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099573558 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.105881613 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097313379 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086267401 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089897589 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.118095804 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095622686 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097189048 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.108432923 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131451374 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110427884 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.123854248 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.096911365 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09703848 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.117315436 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092973017 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097759789 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119806662 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098593428 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09031605 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.11131782 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099092855 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090643337 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09498348 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11157702 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094796356 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086194291 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.115470369 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.088729359 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098462985 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.11404833 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099277898 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097911832 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09530957 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111896843 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103044041 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089417637 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.118041877 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086156978 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098547028 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.124290992 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10025725 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098760239 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.114591393 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091600348 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095342412 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121187127 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096072695 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092571109 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094139683 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106685441 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08835398 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.098398143 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.116705772 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089660049 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09435071 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114108989 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095587198 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091028687 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.106180369 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098725437 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096661021 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088754183 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113210291 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.093855929 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092011687 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120260661 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086400483 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089731437 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115519576 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.098644188 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094304139 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112455286 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096592953 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099244339 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.116137554 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097323483 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091171198 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100573444 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112111744 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093416052 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089445863 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.117616601 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087927819 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095774984 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112755005 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092030469 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090238177 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115914274 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100348472 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098983798 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091821594 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.118163632 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100234926 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099555227 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11143451 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099873399 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088842663 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106985919 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.09096306 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086962634 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.116095394 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090887183 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099152834 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091279808 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112698532 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098100642 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094237256 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110970641 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.099752171 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103328764 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.107286384 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087956963 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090681959 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113214248 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.09030926 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089418513 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.115461096 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095312516 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097515452 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115920259 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091435985 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094104654 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.098832042 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109873509 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.099800164 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098406679 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.119205973 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090642445 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.097668167 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.111431498 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107816866 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08671888 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113875074 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093238611 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093754376 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.1102514 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091558718 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090093209 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085459695 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.110632932 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100572861 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091355649 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.11805505 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093084197 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090151132 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.11083035 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090160993 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.099302245 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.111698847 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.099557599 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094118945 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085933921 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106806183 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.099016025 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093497726 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.119981408 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088691315 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096366552 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120501805 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097315452 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09438514 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101268198 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122540873 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.099953983 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097085481 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.107449909 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091721552 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096482604 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.125946377 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097374027 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095345238 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.108119153 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095619088 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.098835715 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.114904995 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09211405 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087667324 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094590464 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.121126415 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097442467 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095908068 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.118705077 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094998401 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089258261 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117567985 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.099704843 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094695576 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098593763 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113935713 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.097627118 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089402646 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.1199943 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095502273 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087996657 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.107481033 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091409672 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.099628168 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.108932612 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098554846 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.0984057 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089463345 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112363889 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.09926181 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089314851 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117297939 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09908167 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090588171 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124842046 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096804323 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091243281 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.118660462 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099225133 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087814881 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.096579768 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118177342 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107006912 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.098037065 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.127460478 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100079518 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104797642 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.124840727 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104605732 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102517331 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103937212 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.111487339 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103917996 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098628496 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.120544434 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.095068542 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097505372 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.115187645 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.098875626 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101870323 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.111053986 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103358162 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.097813854 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.11202404 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092056684 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.099502765 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091486029 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121343039 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091098518 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094005983 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.109878535 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096508013 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091666226 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.122772937 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090519906 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088345718 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120066218 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099261412 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098453286 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095523189 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.121337127 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088623155 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087188283 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.119409803 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092104499 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102887894 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117925515 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092341344 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091926943 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.117053445 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09595783 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101940748 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088126068 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.112261426 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095109809 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094688989 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.113171433 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.09010205 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098089031 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114091624 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095139738 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.0944874 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.114061855 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094968475 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102349702 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.112965059 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090341893 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091411037 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101319081 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.114060299 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090921268 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088224143 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122894797 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096132382 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10025715 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.111926159 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094745208 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.09054582 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.118111647 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.100519503 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091609704 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114996692 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092720358 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099220356 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119424876 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088392976 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091482221 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10356716 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120908214 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095379411 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096559546 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.11450856 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101122474 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100222126 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.117564894 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088687731 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089123018 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.113036301 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089440797 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09724001 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098052181 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114159898 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092301099 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097863508 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120292552 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097959509 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096936096 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.109914982 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102374285 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091611355 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096912883 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10991786 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088591312 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096117094 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120590449 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093443336 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094578277 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.117402323 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097538318 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089286005 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091571375 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119386389 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099870333 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099387453 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116066717 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092883747 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.097190579 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125083457 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097222416 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094828425 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122688608 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.101279054 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094202812 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.117195696 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098358097 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101046055 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097331757 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.123401205 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092153222 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094245419 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.122453107 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102887597 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103096054 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114984305 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089054827 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.098853815 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114810649 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089386866 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.0971645 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123157546 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102037523 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094474571 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112625465 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104190837 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099729577 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115792475 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09257125 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092247038 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099105906 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114025002 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100120233 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090872555 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.124206333 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101292474 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100497057 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124758047 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090393831 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099828177 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117924821 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102856684 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097051441 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088366466 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.110738954 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098125092 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101678234 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.121577042 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098889633 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098948942 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.098525287 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.11670211 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094894631 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091281258 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.123974239 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100167402 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096097464 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118352141 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093560695 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094725883 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.118585778 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101562903 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102713316 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094789237 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1271214 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099241051 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093043883 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.11389653 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095217689 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097828595 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.116985803 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099902761 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.0920554 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110148519 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101410823 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102723941 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093732268 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123747799 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102704156 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.093465236 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119594281 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10317377 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.09979097 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.119474845 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097535379 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098833529 seconds)
  done (took 62.019562115 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145054127 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104493346 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120270146 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09865501 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115061 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12169191 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098498091 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099471397 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120863372 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106810654 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097296179 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118714088 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112270496 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117555497 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137138649 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107122821 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118503906 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099733346 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098022426 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098609947 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13309373 seconds)
  done (took 3.233892494 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113063406 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110893076 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12978041 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111277056 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104310742 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.13011211 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108169928 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1296602 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111170915 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10512851 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132788598 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107877826 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104534402 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.126185559 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105930732 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127002445 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111565096 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103883437 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.129686461 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108046178 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105079131 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.130061024 seconds)
  done (took 3.409142912 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.126565548 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100716679 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09555575 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119264725 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100438184 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097806499 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122221716 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098764659 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106752776 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093796069 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.111323275 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093455229 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095847587 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119153081 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092599195 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098081912 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127190313 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101908408 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102927033 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097468733 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111479985 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099222135 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099110533 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109121862 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103716767 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103006851 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.097498964 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122986218 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090300212 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101186991 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118735703 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093107015 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088896227 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088109163 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.11178618 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101367137 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100678738 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.118842024 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099794734 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089178749 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.098473898 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.123168958 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090675227 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098111446 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.119646128 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092715797 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100953326 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.0979569 seconds)
  done (took 5.83655794 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126161955 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.156627636 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102739238 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125909947 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134583242 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107924454 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10078811 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.151422409 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099718019 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.100452694 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.136304202 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110737794 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126625141 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105060899 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100438582 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126407006 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104261243 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10028701 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127675078 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102185498 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105671052 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.125250528 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111262869 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.110455862 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126609737 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10146507 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101771983 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.126751545 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110129042 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.106436808 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.127574393 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106416257 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132920401 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101257463 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101619271 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123319679 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113452631 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103430202 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124628763 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100665613 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.102968313 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125094046 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10555089 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.113086848 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124603789 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104207443 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102606538 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.12150683 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111443629 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103363756 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.129493022 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.366560248 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103639808 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.124591516 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105376242 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.111718449 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.124113426 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102184103 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.103484421 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.133519258 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10038705 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10341582 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.134237152 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102756943 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.129257053 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.112256537 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10421384 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12710431 seconds)
  done (took 9.019614057 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132174368 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105999189 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134522406 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113535502 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105686766 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127788566 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105626168 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104473751 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128477496 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111137014 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126492861 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.217759452 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126162552 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110970169 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105080822 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129938763 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106899831 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105240247 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.129905112 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106002362 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104692486 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.135334237 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105484165 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134815767 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116752198 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102979784 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.128384984 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106311615 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112026548 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128367771 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116139627 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128462434 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106431486 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112210966 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139299014 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106937858 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100905111 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127619072 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106470225 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105517096 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.12564548 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114096335 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107208425 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.12643043 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106692552 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.105476405 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.136886243 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.117088041 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132453893 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110963782 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.105947119 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.133859695 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107499369 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.128042239 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114454786 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.119125066 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135868751 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114351619 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127330616 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113750765 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112835503 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.14206123 seconds)
  done (took 8.271444567 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099966485 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099270237 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098526822 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121544058 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099491922 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099588942 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099128612 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121175232 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101681524 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098951487 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121634461 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10090725 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100864734 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098161066 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120420038 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09947143 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099051448 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120413736 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099636968 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099519258 seconds)
  done (took 2.974481988 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.10863385 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115884569 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.12236864 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106782288 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101314128 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129243926 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102902672 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102840142 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100949918 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124321883 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10988454 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108809626 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123146073 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107044167 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10848679 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.129488879 seconds)
  done (took 2.681900132 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118173023 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11604904 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.203431174 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103544956 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125151818 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108555778 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100905488 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127359683 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100651432 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106932766 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104527037 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.128397903 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102829954 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102063643 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124388566 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105809574 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100867217 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127117041 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10203417 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.206911125 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105396007 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10274267 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126434701 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10536686 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10329898 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128451668 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107425099 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100904335 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124873465 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.102753327 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103968256 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.12890237 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102034226 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106207759 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10300596 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.12521515 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10202443 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102907529 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125729934 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10279173 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104160185 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123770226 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10262555 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104312566 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100782544 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.124981065 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101026758 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106493292 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125307195 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104544458 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101806859 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128639351 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108139072 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109213293 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130835238 seconds)
  done (took 7.185769721 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112373737 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104479451 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134767665 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100724491 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103151364 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102896904 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126743227 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105149252 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102470397 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123060115 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104136026 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104168053 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124322567 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103663108 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103435771 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103341661 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.122737802 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103821969 seconds)
  done (took 2.870378639 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106835209 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102319784 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105487207 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124921874 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102559554 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101867697 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123199308 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101589431 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100774782 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100800399 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123614754 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10283528 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10042662 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124520485 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102810841 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101993367 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123934421 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101455915 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102727455 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100347406 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.1247885 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102782865 seconds)
  done (took 3.270490065 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112511661 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.230984409 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107703037 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.238212792 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097620587 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.122601435 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.10841324 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.122402364 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115738454 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.097573778 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.12159986 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.098471254 seconds)
  done (took 2.464125732 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129793429 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138929713 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125899548 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104074428 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110559571 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130318152 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107209594 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108045942 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137869173 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116662953 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129481773 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115062564 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114148994 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137268811 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112019058 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110092655 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129900284 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107043642 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102835632 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143339294 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107610578 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136618079 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108314019 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106000766 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128523423 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114228132 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136000957 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117813307 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106649372 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137060467 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111643256 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106604074 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135961878 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117696844 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125251917 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115932718 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105888927 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143337054 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112002113 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13625951 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103772895 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11091673 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137005818 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112099557 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11406646 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129991946 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112193847 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106722601 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129099932 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126699343 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13395109 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114840722 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110646339 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137197142 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115082445 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149334511 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117921078 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137321467 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111525934 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11743571 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13758292 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112257269 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136742646 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118291061 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110752068 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13737883 seconds)
  done (took 8.896637805 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141463757 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103827039 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130296949 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119452475 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113990809 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131930528 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106896533 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12971565 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107091274 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104334344 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172643644 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108276951 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114156634 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137395964 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108979538 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129353248 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107910316 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114579213 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126657641 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127451783 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107090349 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137611426 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115051935 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137150293 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11839251 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111676876 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13089734 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107839772 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107562236 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130000212 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113387976 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130587428 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116708667 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104345121 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137076535 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108360897 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107655813 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134944256 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107668538 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112042854 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138161985 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12175415 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131052056 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108715731 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117493695 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130708459 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108142435 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104596452 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130481133 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106204903 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139634946 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119746176 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11855107 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137720985 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112320615 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106984891 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131132014 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108056174 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130067297 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11280495 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115428153 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131719621 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127691139 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106946739 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130752707 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115327888 seconds)
  done (took 8.852275585 seconds)
done (took 168.784166384 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.17631672 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.216979252 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.199501642 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.19105169 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092826382 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.170757843 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138795711 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.20112195 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093849414 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092527704 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116154186 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096419869 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.205486057 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.092590258 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.117932725 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.0958211 seconds)
  done (took 3.190974849 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195426372 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.343499013 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.134144814 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.098088766 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100886593 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09819052 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121705917 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100613834 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097838243 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128467743 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099780309 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094135354 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127535598 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095633227 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098187824 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121592797 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10575338 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098515444 seconds)
  done (took 3.167430438 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117600676 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150673387 seconds)
  done (took 1.179256275 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128530288 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.21357166 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293721676 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170348751 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119267703 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139038602 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147891087 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133496581 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.189120883 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134167925 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111216291 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096494953 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148765213 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104949629 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114465093 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120293031 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127166467 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113044134 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.135874029 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100505221 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.12242514 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.123898395 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104446894 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136817935 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180105605 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131958853 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102368434 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102196836 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123404959 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113430255 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105727858 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137305462 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110974983 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177725557 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101891701 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17469223 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105081635 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.12190355 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113704027 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098899685 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124493531 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103189029 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111193717 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119920025 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102481875 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.105217156 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125843247 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102183653 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.105922459 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.129390128 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107272919 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127761372 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.150424378 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128995339 seconds)
  done (took 7.88658194 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.9062917 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.146947014 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098557744 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.062251289 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141768266 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112524737 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.873314797 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148003664 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249031792 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.923237223 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116191853 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105426033 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.262325605 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255739241 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.276738086 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35837573 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.763412056 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111145166 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129440686 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.166007757 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103192186 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139462537 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114331294 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.443980007 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101399838 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098009459 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127123961 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106933724 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176880985 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100295596 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.101856734 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19764066 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293483969 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213049532 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099980797 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121611712 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098821442 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.190599228 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271353348 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223947266 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.166961277 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119875183 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099197816 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103002221 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135632133 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096997835 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181966101 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192883329 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167215792 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127167787 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107494591 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.105992727 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126054123 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180322135 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098390357 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362816385 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360883971 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123426896 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105058226 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110329592 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263633351 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124314969 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238194692 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12048725 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214567369 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122825892 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806899229 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16345628 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122070069 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103249783 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.103662478 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128260071 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102406581 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180503659 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.398769038 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128222305 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104602058 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098951678 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23204925 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122377781 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099960687 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179793777 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101001135 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104919014 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128943134 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105879458 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188291626 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.249773092 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128868426 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105225492 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125903624 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110028975 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100341733 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.229271054 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.234535486 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17815735 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.22678296 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10474332 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181064221 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186364052 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105556758 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190051378 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104656076 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109897471 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126617196 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229540281 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133800471 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123591608 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103942942 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.104528814 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160737764 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102816498 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128010388 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165494591 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.481339111 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187905911 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096184518 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127408272 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106482618 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179479014 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105748673 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265977279 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12875286 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163355472 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128322961 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097887271 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105732959 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180449886 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106572161 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129271485 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10468294 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107853123 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.277953129 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219627071 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130853279 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.251129594 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.172249301 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128956446 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169148632 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129268357 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185082891 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109580742 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103053957 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122892087 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793158019 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110318588 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104875869 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128582744 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181268058 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121655798 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103834964 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100224218 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097628922 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.82470588 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127542116 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097879644 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102187744 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127043617 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10569682 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104313652 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129226652 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156009323 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.270907239 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108061832 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10427668 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12261876 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.15508257 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125260196 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.09991242 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100361414 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123604433 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107005154 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104044528 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126336192 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163940694 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.179790264 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229983316 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.578781219 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125202819 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100529369 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243573751 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099944428 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.352963226 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1059426 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.235681937 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183722571 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097640105 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358122466 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18566608 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20337538 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104613696 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1930395 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099494147 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105559152 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.182126117 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100420944 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131246979 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178986774 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109469657 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107599133 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.279731064 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101341279 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248618691 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098614419 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190060421 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101708692 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105126369 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.349934965 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101583962 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111410258 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181060404 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104494597 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123648065 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.864379271 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124885722 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109014201 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126364421 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234906012 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159077252 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130842973 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106386202 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130827398 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.157682075 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.229095937 seconds)
  done (took 46.458179933 seconds)
done (took 62.784608784 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259074368 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178356408 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.375692383 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.151595556 seconds)
  done (took 1.962020978 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.259183106 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.170396622 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.243325215 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098591841 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.250681739 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097620357 seconds)
  done (took 2.058644586 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.176747193 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168864541 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147975959 seconds)
  done (took 1.430328089 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208526014 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.206820757 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.346749306 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.234304227 seconds)
  done (took 2.015801944 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.275307914 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.1164957 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126803732 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.227483962 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.243700088 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.206991683 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123498486 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175234725 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129747141 seconds)
  done (took 2.603736332 seconds)
done (took 11.000152459 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.419254597 seconds)
    (2/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.29571984 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.257754724 seconds)
    (4/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.258534112 seconds)
    (5/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.26414736 seconds)
    (6/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.140633518 seconds)
    (7/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.193373781 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.259108799 seconds)
    (9/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.338457437 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.13957952 seconds)
    (11/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.262543991 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.264034928 seconds)
    (13/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.194122268 seconds)
    (14/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.311739896 seconds)
    (15/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.269170109 seconds)
    (16/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.340164238 seconds)
    (17/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116769476 seconds)
    (18/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.155491078 seconds)
    (19/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.323624422 seconds)
    (20/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.195519471 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.153239983 seconds)
    (22/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.216939657 seconds)
    (23/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.353195172 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.251173869 seconds)
    (25/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.230295351 seconds)
    (26/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110286549 seconds)
    (27/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109336072 seconds)
    (28/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.153995395 seconds)
    (29/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.266281995 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.148319914 seconds)
    (31/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.181067273 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.151321244 seconds)
    (33/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.084045536 seconds)
    (34/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.171623183 seconds)
    (35/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077914083 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.136867594 seconds)
    (37/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.07838331 seconds)
    (38/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.142258243 seconds)
    (39/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.083998238 seconds)
    (40/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.126726055 seconds)
    (41/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.147348869 seconds)
    (42/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105192583 seconds)
    (43/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.19652565 seconds)
    (44/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.132108149 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.121121346 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.127247575 seconds)
    (47/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.079024666 seconds)
    (48/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.081400837 seconds)
    (49/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11069576 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.144500154 seconds)
    (51/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.140766401 seconds)
    (52/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.393414424 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.10216164 seconds)
    (54/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.11149303 seconds)
    (55/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.136004309 seconds)
    (56/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.189019793 seconds)
    (57/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.133252858 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.102733017 seconds)
    (59/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.200747991 seconds)
    (60/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.085155021 seconds)
    (61/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.085847549 seconds)
    (62/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.194146612 seconds)
    (63/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.218419047 seconds)
    (64/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.081106269 seconds)
    (65/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.2182648 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.103514291 seconds)
    (67/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.169481917 seconds)
    (68/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.125304567 seconds)
    (69/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.143291994 seconds)
    (70/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.242557748 seconds)
    (71/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.215570349 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.15058794 seconds)
    (73/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.150317184 seconds)
    (74/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078797424 seconds)
    (75/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.322196608 seconds)
    (76/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.135255733 seconds)
    (77/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.085256286 seconds)
    (78/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.106773268 seconds)
    (79/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.087732259 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.147866568 seconds)
    (81/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.130283004 seconds)
    (82/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.134119895 seconds)
    (83/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160470251 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.101693921 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105011664 seconds)
    (86/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.160128935 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124972838 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106019368 seconds)
    (89/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.102199219 seconds)
    (90/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.089079175 seconds)
    (91/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.134592622 seconds)
    (92/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.13189664 seconds)
    (93/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.133147567 seconds)
    (94/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111322175 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.120492282 seconds)
    (96/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.145636951 seconds)
    (97/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079000799 seconds)
    (98/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085522311 seconds)
    (99/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.218052352 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105747492 seconds)
    (101/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.082768986 seconds)
    (102/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.081388958 seconds)
    (103/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.085264891 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.145426174 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100319786 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109923184 seconds)
    (107/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.136807821 seconds)
    (108/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.117597741 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.101695825 seconds)
    (110/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.103610246 seconds)
    (111/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127421301 seconds)
    (112/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.081950964 seconds)
    (113/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084957021 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.132461619 seconds)
    (115/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.086696951 seconds)
    (116/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113225787 seconds)
    (117/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.078416979 seconds)
    (118/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.135889765 seconds)
    (119/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.07964486 seconds)
    (120/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.196345123 seconds)
    (121/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.111772932 seconds)
    (122/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087440568 seconds)
    (123/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112002701 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11019933 seconds)
    (125/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.106633701 seconds)
    (126/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.166395676 seconds)
    (127/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.14547373 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.128841043 seconds)
    (129/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.139306778 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.102999469 seconds)
    (131/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.099515317 seconds)
    (132/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.107325946 seconds)
    (133/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.094740858 seconds)
    (134/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.085642016 seconds)
    (135/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081002648 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.147626251 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123902432 seconds)
    (138/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085241693 seconds)
    (139/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.08450002 seconds)
    (140/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.085904785 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.129428662 seconds)
    (142/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111541138 seconds)
    (143/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.081049033 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.13470049 seconds)
    (145/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.147029231 seconds)
    (146/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.099887225 seconds)
    (147/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.086706682 seconds)
    (148/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.109065163 seconds)
    (149/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.104123859 seconds)
    (150/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.086263607 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.102632532 seconds)
    (152/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.112879391 seconds)
    (153/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.104853254 seconds)
    (154/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.13894237 seconds)
    (155/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.081800705 seconds)
    (156/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.113704236 seconds)
    (157/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.086996448 seconds)
    (158/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085945066 seconds)
    (159/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.084638459 seconds)
    (160/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.13711627 seconds)
    (161/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.081333667 seconds)
    (162/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.113201613 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102756896 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.126139973 seconds)
    (165/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082310415 seconds)
    (166/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103912803 seconds)
    (167/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.078876032 seconds)
    (168/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.08962471 seconds)
    (169/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.108122753 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112986485 seconds)
    (171/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.081992934 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.149896615 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102336271 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.103366359 seconds)
    (175/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109950101 seconds)
    (176/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.135830147 seconds)
    (177/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.083931644 seconds)
    (178/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079933454 seconds)
    (179/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.086266533 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.13044222 seconds)
    (181/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.086794027 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123033319 seconds)
    (183/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109106808 seconds)
    (184/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.135417619 seconds)
    (185/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.086386244 seconds)
    (186/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100328283 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.128371025 seconds)
    (188/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.085426905 seconds)
    (189/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.101830614 seconds)
    (190/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.079802585 seconds)
    (191/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082148378 seconds)
    (192/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.111477191 seconds)
  done (took 27.567319973 seconds)
done (took 28.508047013 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.225893678 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131603051 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.1121692 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109858832 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.234398879 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117248097 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.154252368 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112385564 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119788176 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137215614 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102234233 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123812367 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136845779 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.246226897 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.115418226 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103004787 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101458945 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148131767 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.125893815 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127330356 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.235574421 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129042739 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.121962735 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101487897 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235804958 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103470661 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.135942844 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.113079358 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124069606 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.136910442 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.112896521 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101738574 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.151281372 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.127829128 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102165598 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111710545 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12748477 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087519122 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112754428 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.136188837 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126169207 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11152655 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.134707454 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104461819 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112378633 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110232161 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126249078 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.114767036 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100665676 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.137460884 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105638402 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.125928225 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.135223273 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.101640143 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.099886428 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.126905108 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.122644548 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101113873 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.147945216 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102906407 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102973485 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101165745 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.138068247 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102471065 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.1108756 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.126841325 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112645752 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11298365 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.135139777 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105008825 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10164228 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110504855 seconds)
done (took 10.082932794 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106566968 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144954743 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.248193988 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.25218131 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.154445113 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.118348531 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115590148 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.153002716 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115857963 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.119326203 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.164419528 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133676617 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.2559219 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.117535682 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.144225563 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.115009039 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112622522 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136712816 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.251059426 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127454978 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.123540627 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.144515282 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12741687 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117125509 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.131586399 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.128213742 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.136950356 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115246121 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105451204 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.147093935 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127329565 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.106141358 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.132580263 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125600734 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122750483 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.140870165 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119143043 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113829572 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.130521251 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107436451 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111333397 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.146096225 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107226958 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117466708 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.140716385 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121807105 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.11337568 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142575546 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.10784455 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11436376 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130006497 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13057209 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.117538426 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.148478451 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118512597 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119193321 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.143749315 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.11972954 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.108173803 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.143881971 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107110488 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.105551223 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130478234 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126405217 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.109087078 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.143826843 seconds)
  done (took 9.795783645 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125052422 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134929211 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141770247 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117187569 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110877245 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12595876 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101215741 seconds)
  done (took 1.845048866 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102491088 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.268831687 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.259042329 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.259768093 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.248982922 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.269262073 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125907621 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101848158 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164440021 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113401178 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.268843715 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.323730716 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.140273654 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118439237 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.263120141 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.10084909 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.262381083 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.128821556 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118804219 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.263801511 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119973495 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.158888029 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.11649767 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10352539 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.263478305 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102908318 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.32940949 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121194628 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112635274 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.142118558 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11835115 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.176372737 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.261697251 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.145014808 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112194123 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.258293631 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.252289508 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116146527 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.33175694 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10733703 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.249297201 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117113773 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117044833 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.145140419 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118479788 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.247523373 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121257179 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.145436532 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116900021 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.274301484 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.112485353 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.264025608 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.141895572 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118716346 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113033041 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.144715768 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124605611 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117624256 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.272297437 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147990399 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.258673682 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.232370163 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.256457408 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.260633435 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.156287471 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.266502342 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.209817067 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.14617468 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11278304 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118714392 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.261826588 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.14479626 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115389337 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.250867568 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119750721 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.26343166 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.263157879 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142806422 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117242058 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107066023 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114763207 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.132425032 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.252917838 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117463889 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114756883 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14961846 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116743646 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11642589 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.135576207 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125738906 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11596726 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.141545005 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.12206864 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.142836606 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120655179 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.265931105 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112691629 seconds)
  done (took 17.764501788 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.105669039 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.10527327 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10741258 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131063354 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105330112 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104032459 seconds)
  done (took 1.681731338 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14146627 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118662099 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152519584 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119345845 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165378188 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.2515883 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.260202235 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138913964 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.137627629 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128984821 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.253432747 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.256952297 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.255346891 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12224838 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.258545411 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119601883 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.261984953 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.143390632 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127980533 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115217596 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.144366695 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122486366 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116497042 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.2456922 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117738826 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.147499252 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111393953 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125588682 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.15418892 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111777343 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.148054282 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120103554 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.109556753 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.13662051 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.232448184 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.139471543 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114923576 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.11971968 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.148602274 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11879804 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.258327226 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115636852 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.151702222 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121346161 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11110691 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.137921452 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121622143 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110474614 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.258693691 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.148150803 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120988808 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.118642055 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.148139742 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121151921 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.109311313 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13815854 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122413035 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.262931502 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121862637 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.109035195 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.146566048 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119376105 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.139232748 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123961968 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.118474295 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.146946318 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111395744 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119370082 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.14129435 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.121108106 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121537565 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.14368435 seconds)
  done (took 11.800864331 seconds)
done (took 43.876159303 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.769168455 seconds)
  done (took 2.789985726 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.107659236 seconds)
  done (took 2.132326888 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.299036855 seconds)
  done (took 19.353571042 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.444112108 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.473420737 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.050481053 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173521851 seconds)
  done (took 3.165110859 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.1048871 seconds)
  done (took 2.138322895 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.343030138 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.248565141 seconds)
  done (took 1.618842371 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.733424048 seconds)
  done (took 1.772035313 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.773950195 seconds)
  done (took 2.806077788 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.311558763 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.251369859 seconds)
  done (took 1.603376585 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.666511638 seconds)
  done (took 1.703281983 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.033164533 seconds)
  done (took 20.076475808 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.257721034 seconds)
  done (took 1.303652552 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.288186943 seconds)
  done (took 1.332842518 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.789245385 seconds)
  done (took 4.837149229 seconds)
done (took 67.662856559 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.11902536 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.122106826 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.120698366 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.144371296 seconds)
  done (took 1.542383205 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12530774 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119771547 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.12115233 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.145033166 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124163469 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117154627 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144653397 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122255723 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117306982 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147485971 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120146619 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.1171842 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147135269 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.11813655 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116029276 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147841456 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122616194 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.139231503 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.14543979 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120663776 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118931026 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.146145993 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122818598 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120725504 seconds)
  done (took 4.134713363 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115292227 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108579648 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110203628 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134157261 seconds)
  done (took 1.52119149 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126904475 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129335504 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154341366 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125937955 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129710369 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153789933 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118390705 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11464907 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143628335 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126756096 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132402292 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156339949 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13072932 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119396512 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154748751 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113243111 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118452166 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155413473 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126207063 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126158571 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144518416 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124902474 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122151506 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.154134642 seconds)
  done (took 4.250778786 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.19396286 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129849621 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.179908872 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162988506 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.179418862 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117046934 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145595566 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.15151192 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125551517 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.119292598 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.147930519 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.164015271 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.151827258 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121652534 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11808207 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148989035 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130335986 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123208016 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.192186082 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123092071 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.15152354 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130384035 seconds)
  done (took 4.25875479 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120692882 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108326897 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.106385292 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.132074398 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120189099 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109868658 seconds)
  done (took 1.755441251 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10906508 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104172941 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102947869 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128454439 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.10715318 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10311797 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102945491 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130535264 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103457774 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102786441 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128993401 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103725063 seconds)
  done (took 2.385485899 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205199345 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147171491 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254369445 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.402819548 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19102654 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160480942 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.314679744 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190903419 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204435798 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137148674 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214281129 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162463249 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182086873 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187360716 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166646846 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158539382 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199796716 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208439602 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170127694 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241171612 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156787815 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202263853 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189248251 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176773452 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139091676 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190336881 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120213489 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127033879 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194726816 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192819794 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175124966 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177986663 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140659321 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219667626 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266148325 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176612014 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299593145 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133299907 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199444428 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.190161834 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26458868 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139682536 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219712278 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178963934 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12904947 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217707326 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152881852 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.212619398 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133257554 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171182316 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184375117 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208071731 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196725106 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137997055 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.331082955 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133585958 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.1717721 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175797972 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21787734 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23094569 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178099805 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.150202986 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201837924 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189835726 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241445744 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14018564 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.19284708 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123467854 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192194419 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231866453 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181807516 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187548784 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.236705651 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131072532 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200057845 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167274982 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183850121 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232846119 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170860811 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.117530165 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178513266 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13292902 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15412146 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189610586 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11976219 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24223794 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159232457 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.182483182 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206868723 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153771678 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190098041 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159199898 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191358122 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146739557 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.129950916 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142648499 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.159491608 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186753773 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126984336 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182098434 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137710793 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.152579655 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151970451 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120914557 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198133057 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13352824 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190492387 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167376164 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159451673 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178969907 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17470174 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15966237 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19646995 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220982016 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12950972 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130115163 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246036432 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198877329 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135222291 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200695034 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224395427 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.152241866 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133276659 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193612903 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222144587 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142715326 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225133048 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136395373 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161602362 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.140499423 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200088219 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159495323 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.187714841 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126628793 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.191187024 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190339174 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.153263312 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138681679 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20917292 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132346685 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123719259 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163903372 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133981678 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.170716375 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14781921 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137312658 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181469448 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191740573 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164975141 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184877133 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133331038 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200405529 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131151409 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.194798747 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148455281 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117235309 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201313138 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225179635 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129685774 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206894216 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161223782 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209684542 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199015824 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129260073 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18150268 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15571181 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119432355 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190676907 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16747276 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191743788 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184814627 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20776701 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.192121698 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160912193 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178380948 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195497786 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.181103503 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184146531 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140323642 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20270434 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167449915 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.147654298 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12257171 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.12466242 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165261496 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130017824 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135507554 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20683879 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19272111 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20321986 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167214002 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13576999 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218153492 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122946779 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188973183 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.201983516 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138339772 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214710511 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188802418 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20765249 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139218245 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190389455 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119055629 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152947838 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133516359 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158668239 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16625847 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13345314 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169620189 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190445075 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200979819 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146061035 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219741625 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192534334 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229392706 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120907417 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.15932256 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197887608 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165791113 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.213051934 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132665084 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.187411436 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190170517 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171370237 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190215161 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196075555 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206955462 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194298429 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.193525427 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129551754 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174874632 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159441504 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16561449 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160918964 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142766338 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158798587 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149239114 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.167535387 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138317733 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215552673 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141651624 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206666478 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.184797461 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170349283 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154280116 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140827465 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200697731 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143824964 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104603262 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198277363 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221574162 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148498777 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182086428 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17161167 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156503121 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.316456685 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214800671 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175662874 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165736674 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137332453 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19974865 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158377595 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190110283 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182656522 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170909095 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234998088 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16893964 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139919308 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16009778 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145897451 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1800341 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.141807475 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.180319337 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.159880959 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.172126597 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216221641 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136839554 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168616173 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204801414 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144246132 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.179484512 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136880368 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252257729 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19634012 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172030076 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.192904353 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.163381849 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212323579 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123528337 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124631878 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.160673367 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183528524 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16006877 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176084211 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.19550955 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210418231 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202569803 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162011648 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139051011 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.156513659 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166303096 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177977734 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212331594 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135974925 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136120524 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218845412 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126949514 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159992081 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158016483 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320181957 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147430487 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200008597 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106051811 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.313507349 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128380158 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161102386 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159372702 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198321898 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.131719779 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185114817 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201230317 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13775142 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190412801 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133036405 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208223603 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211414754 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165090132 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204943576 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.143329136 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190355715 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189085181 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173123278 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173060523 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.147059899 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156701254 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222050877 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205078188 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130444177 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196156319 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169026961 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198955304 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173602246 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168132053 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182316533 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156138043 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164507399 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165931712 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124201442 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158994454 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.194873669 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157155744 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174736212 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199764098 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130565373 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126214327 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175105489 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165170369 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169219085 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129709123 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215460333 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127484999 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211039893 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240030125 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128985115 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167224334 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173442956 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128840234 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168535321 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142344852 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129282313 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.202097511 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179759649 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.158812342 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175055757 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194150801 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192061998 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15701797 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140416173 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.291791043 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126240145 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221035412 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148391395 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225635131 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178548543 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174824338 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196703138 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14894072 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193362434 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146740686 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.248478392 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165490462 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.195574639 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130552311 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170384396 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138415565 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.13206479 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180841608 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166024017 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171467075 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135243367 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.194538008 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145072698 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.144904267 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169726377 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227037564 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150848746 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217599462 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18542608 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167272662 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173442706 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204311183 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126514092 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.193285444 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169702782 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175049657 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150155501 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.163724199 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136273299 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244637738 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124902794 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189012913 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174287311 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19793128 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170005827 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.163822705 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177516116 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168977163 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175219243 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155885134 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15202358 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196482321 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134058442 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125343264 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199516868 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158787826 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.193459585 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139641964 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.204314628 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195375659 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.150319221 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134657525 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313436111 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161065699 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224449659 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135332499 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166661412 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146739265 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186569567 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.168383748 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19985676 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13018611 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128005078 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.173221866 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.161630122 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.169303563 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168384994 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210679948 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159234843 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215104906 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132826796 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284139797 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141942887 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200051234 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116919131 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127749122 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17217675 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134577157 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169112023 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181591034 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244115137 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.191508583 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.147092338 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133539495 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.156993226 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130224672 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191175972 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151411441 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196674774 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147586577 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103343805 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170037637 seconds)
  done (took 85.158567835 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17393814 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.27715015 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.224317588 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.244762335 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247608987 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.312950366 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.297180914 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292378149 seconds)
  done (took 3.211024418 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119878581 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161491042 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142725057 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145300482 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109890977 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.508753415 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.161736823 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120924784 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159584685 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154072914 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138275022 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.581647202 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.12055945 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.146163088 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122774514 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136970158 seconds)
  done (took 4.169731521 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.29544274 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.571058957 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.241187167 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.309184837 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.266341059 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.216377191 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 1.316524232 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.198559543 seconds)
  done (took 13.555234738 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.169713048 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.167937284 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.465834012 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.325468402 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.213554316 seconds)
  done (took 2.491310571 seconds)
done (took 129.475599627 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.126788733 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123771211 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123860291 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156180662 seconds)
  done (took 1.663474979 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.196303387 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092082562 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.124947712 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.091493825 seconds)
  done (took 1.650277017 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.445737353 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092171949 seconds)
  done (took 1.716483418 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.145229696 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135278741 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164286231 seconds)
  done (took 1.607429687 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.133906744 seconds)
  done (took 1.283674264 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.117299946 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.115767561 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.279503947 seconds)
  done (took 1.666702345 seconds)
done (took 10.735544176 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121357975 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.931771465 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434444875 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13384493 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.715429479 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428398129 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.422894802 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176586065 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171687451 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109602955 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162039905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.692475408 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.43468032 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.881596178 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.393423406 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.906808779 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695614467 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111918605 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145475522 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114986245 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.402165403 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137834578 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113349403 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112403317 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.692401522 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.449623455 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110384148 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.918900802 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110868239 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114604097 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.398385937 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140750828 seconds)
  done (took 21.026347488 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114195441 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.168113413 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148054132 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113378357 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114473001 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141550796 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122195262 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122698322 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203730621 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111202865 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162195688 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111192134 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115814481 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110792618 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165931401 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110410119 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112749194 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143385951 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120300891 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112313045 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163083219 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110165974 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112993089 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14322007 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11121205 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132409835 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141054804 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122999937 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110675869 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.145853051 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115724951 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110794311 seconds)
  done (took 5.300153572 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160392851 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177858801 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149767755 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149075385 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.189750793 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113893567 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198450094 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179562651 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204765851 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112650569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132891223 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138659509 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153674308 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111640096 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166653205 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112563815 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113948496 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141758022 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119372261 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112930688 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162065007 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111827629 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113231342 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141630546 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112639175 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13437952 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140232217 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123407995 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110492589 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.145278491 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117351113 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112432685 seconds)
  done (took 5.62454641 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126946744 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127125008 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134836246 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166043119 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122184013 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125098167 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15801763 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122553064 seconds)
  done (took 2.244600662 seconds)
done (took 35.348399953 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136535153 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128108034 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132810824 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.158708389 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.276416363 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.119258461 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.12907074 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.149827569 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.128002716 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132908918 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110036162 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.152896404 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.131915495 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122123578 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.275510661 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.160157142 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.248599974 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.277853672 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.154455541 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.128691556 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120262434 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.281425906 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.154443684 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121052023 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.27815009 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115157471 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.266728033 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123625252 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122771348 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.143896944 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.281068564 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123129255 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119829885 seconds)
  done (took 6.654887695 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.226043216 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.15511691 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121796108 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120323482 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121271449 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.152361995 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.231702316 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.153786683 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120220069 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118868853 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.151109303 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.213509731 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.159034618 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.11639017 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121487311 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111867298 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.264588311 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122160691 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.148263835 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095375425 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116782453 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.120677334 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.275712455 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115275051 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.154211726 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120681119 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122121994 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.158110112 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.125769972 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121671106 seconds)
  done (took 5.628931151 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125606316 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133411095 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138223595 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.218888862 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.149070383 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164472632 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139010801 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131981733 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.173659617 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114632381 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128228233 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.182476038 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130213161 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124012481 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143994658 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131356131 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130962939 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145683292 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123969474 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131584398 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.132941813 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.163237265 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137938719 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.121857523 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.143232519 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121182793 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122630164 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.155795239 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122406892 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.12829273 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.145627561 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117668386 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.115130104 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.177721248 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115126933 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126440069 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.167191094 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126539338 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126212802 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.176750504 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117200272 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.114511502 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.171887816 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169446827 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.114370531 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.159028722 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.11612207 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.128973282 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.140880937 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132405587 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156182991 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.147447812 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135760044 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112269232 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.14186691 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122998417 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.113103155 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116398377 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.159823999 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116823872 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.133784787 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.152194762 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12530889 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.114422252 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.154930721 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112986075 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112266113 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.147889476 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141480291 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120893804 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150260005 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.145485137 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125330982 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126209013 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.15776601 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126540187 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.111571574 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.155540262 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125645433 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.118936936 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.156573994 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.118319102 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116593542 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129212358 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.165027651 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128157675 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.155659229 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127425899 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117148248 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115024708 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.162895325 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116032434 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.117889263 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.158596289 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115300273 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.1169957 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.156908072 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125228623 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111464543 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138960991 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.149854542 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113040515 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138560813 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.148897624 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.11953744 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12126941 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.187900191 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117631309 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124682105 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.15784415 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114628103 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121002346 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.147064452 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114575829 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.128432716 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.160178823 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122814302 seconds)
  done (took 17.070966448 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.374320516 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.362742439 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.211592141 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.410097809 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126881908 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.283838301 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.394907068 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.370554445 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114269525 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.146305088 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.2067669 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.329152725 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.147300207 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.142906863 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.368221375 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.447132286 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.142849021 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.185796327 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.15026645 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.160399147 seconds)
  done (took 6.265210093 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.134444311 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148169395 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167744021 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142275858 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123514017 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162346338 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115156532 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13482525 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157141603 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123951683 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116283191 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160618152 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128312193 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.13096992 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158932986 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148186556 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12312992 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149060343 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136753793 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118238543 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133348374 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140225349 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121562869 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167222581 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133253116 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124130646 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143586185 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120050649 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12093907 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.122005883 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.149136231 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132649567 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.120980796 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.135291535 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126415272 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129595185 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.151667425 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118024677 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119690467 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.117529793 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.159840619 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127692719 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121689289 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.129319244 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134104484 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111031526 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.127735532 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.158443867 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107265207 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134024548 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.15761663 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129309615 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.121011458 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.165539951 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123315174 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130410675 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.123228963 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.161593028 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118302501 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.111710027 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.14405436 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118787874 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122242092 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.159019207 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127822632 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134072921 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.161921499 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115485903 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.11717716 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.147271472 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118709042 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127388417 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.165455716 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124953687 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.120762039 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.12597551 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.155972674 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.095479418 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.122467602 seconds)
  done (took 11.759750579 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139149616 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125324597 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131378357 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180239177 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127391869 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.11921948 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.155339201 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13445012 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128595802 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.165721824 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129893692 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127507538 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167712778 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.124820997 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123846415 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161097326 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129222194 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151774701 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.159384049 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141245484 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.128388299 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.151730049 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127747126 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125233326 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173710791 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126286812 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139372236 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.16022517 seconds)
  done (took 5.160883882 seconds)
done (took 53.702055412 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.354746687 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.531526588 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.300071668 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.296065046 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.327402238 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.328110767 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.29736321 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.29624249 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.895978952 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.26799896 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.296686312 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.293500391 seconds)
done (took 29.685777477 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.682096464 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.43532653 seconds)
    (2/2) benchmarking "String"...
    done (took 1.613061862 seconds)
  done (took 4.255622121 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.285387907 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.28648175 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.533378989 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.287201607 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.290228825 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.309256241 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.302225913 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.291474322 seconds)
  done (took 16.489373065 seconds)
done (took 26.90718406 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.323074319 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.817402494 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.582670494 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.266116638 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.292367678 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.287959286 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.291099963 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.354823821 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.293725887 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.284222011 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.748422722 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.573368181 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.307804258 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.689905472 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.264291208 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.304433201 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.304209522 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.67065598 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.288663736 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.328575981 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.268604438 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.266407562 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.297656216 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.295836401 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.300369232 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.288956481 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.302682273 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.290022783 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.600466682 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.319978469 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.324437773 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.293676164 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.301786705 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.295861765 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.3051621 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.299594886 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.625497511 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.300109953 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.282654706 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.290768412 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.615939408 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.291008131 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.292707207 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.293102025 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.286653897 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.281866931 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.27424126 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.40817205 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.33059542 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.301770455 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.347859638 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.704120862 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.29446186 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.295857271 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.305030324 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.657736828 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.320973609 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.393564319 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.319716346 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.297097966 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.290599236 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.289459138 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.322622777 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.292551225 seconds)
  done (took 150.523777061 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.288576293 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.293955482 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.294045453 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.30790349 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.295584966 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.294517632 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.288867185 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.290242777 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.295411732 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.324236329 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.290151952 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.292911469 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.294896122 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.23511138 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.29950298 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.323057986 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.29169039 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.306153635 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.302473439 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.293094618 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.314014376 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.294345696 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.290621209 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.29169984 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.301617249 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.391085602 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.320659757 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.308902461 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.300064874 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.29027537 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.315131385 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.308333671 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.980404446 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.163693139 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.310894064 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.334196766 seconds)
  done (took 83.611023973 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.292521662 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.290377736 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.291080881 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.330544438 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.29155237 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.936445377 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.938332689 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.357549841 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.48598343 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.29426655 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.854297474 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.6038743 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.294000696 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.386012004 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.30292843 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.298293469 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.39129924 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.318303154 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.298423109 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.294327842 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.939406407 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.310861179 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.368817695 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.48153891 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.307935525 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33151335 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.690822941 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.293493165 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.332038862 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.641468247 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.346305726 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.296095241 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.747991061 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.155744262 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.409573685 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.298192894 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.333936201 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.294129084 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.584393702 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.294666316 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.294648491 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.299440127 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.002812222 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.296960267 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.940563864 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.298058602 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.341390037 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.296361817 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.293077254 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.495220302 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.125493583 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.293974166 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.299227335 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.2991724 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.295934736 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.29377225 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.331868124 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.331244099 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.231672209 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.294702794 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.302914575 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331793307 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.298624023 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.372671926 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.300090975 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.662819127 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.362184221 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.472793883 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.947353964 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.301145666 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.394690658 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.419591054 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.298470569 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.297608638 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.2999932 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.298418251 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.296253561 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.411036913 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.29777258 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.029603157 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.485922847 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.31295685 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.969581739 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.399056634 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.298379073 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.743483717 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.300132433 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.299447877 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.097155183 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.393969621 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.297029604 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.29704921 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.295764132 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.298496655 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.298980229 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.024052279 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.947581716 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.6666627 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.298544152 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.965919009 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.301006011 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.208696277 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.917904967 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.982210739 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.298699468 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.412630988 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.487851217 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.317664107 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.300498344 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.971207337 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.304990032 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.359166108 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.299498937 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.701882732 seconds)
  done (took 390.513196554 seconds)
done (took 625.844655338 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.277381098 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.276551051 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.27573569 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.274559791 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.299290797 seconds)
  done (took 12.599448915 seconds)
done (took 13.804101123 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.50961616 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.512600793 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.369387519 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.516080217 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.338493097 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.532562416 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.493989214 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.31614891 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.417028335 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.393439936 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418024387 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.357527939 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.336520903 seconds)
  done (took 19.707092072 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.610860776 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.309321554 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.365021417 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.580867957 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.344689657 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.60702969 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.653020101 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.31139742 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.487787198 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.320669578 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.318864809 seconds)
  done (took 19.107331481 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.601448531 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.308994297 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.385711823 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.604688409 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.345154431 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.600680582 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.635993422 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.309028922 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.482532948 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.321654034 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.320246096 seconds)
  done (took 19.113162463 seconds)
done (took 59.130699779 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.341063515 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.408573933 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.338461067 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.31779112 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.318216121 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.318143011 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.322047686 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.31804281 seconds)
  done (took 11.880516852 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.317182593 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.317083175 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.31833865 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.316418341 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.316460994 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.316548133 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.316233062 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.316544823 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.316104415 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.31524082 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.317459708 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.316627496 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.317592861 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.318658453 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.316927797 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.316827968 seconds)
  done (took 22.270248336 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.319751211 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.31687904 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.316908427 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.316835166 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.317056948 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.317858521 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.317132025 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.315896558 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.317493926 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.319083209 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.318277123 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.31851982 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.319756624 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.318338681 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.319463659 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.321393488 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.318440726 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.319619653 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.324530194 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.317640489 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.318576633 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.319124688 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.320159262 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.319482471 seconds)
  done (took 32.848189835 seconds)
done (took 68.202361097 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.304501249 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.308208918 seconds)
  done (took 5.8120221 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.38045515 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.376919423 seconds)
  done (took 3.959594046 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.323167898 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.319866998 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.320785873 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.320187814 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.321682416 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.320652377 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.320903917 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.320148151 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.32047853 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.3210463 seconds)
  done (took 14.410296444 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.320656792 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.320978159 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.32098713 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.320770317 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.320543249 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.320998282 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.322276388 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.322615129 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.320753684 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.320689494 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.322726764 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.322536917 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.321882059 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.322498976 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.320273878 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.323465174 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.321253702 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.321878966 seconds)
  done (took 24.990570624 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.336549478 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.340071874 seconds)
  done (took 3.878357279 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.448260059 seconds)
    (2/7) benchmarking "second"...
    done (took 1.364287582 seconds)
    (3/7) benchmarking "month"...
    done (took 1.42765084 seconds)
    (4/7) benchmarking "year"...
    done (took 1.418629792 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.363617377 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.342294507 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.363287826 seconds)
  done (took 10.930359658 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.305849528 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.613456686 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.806725036 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.463926027 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.298955153 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.324411727 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.301843183 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.327311117 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.327895204 seconds)
  done (took 14.973761043 seconds)
done (took 80.160397033 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.306588948 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.334649427 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.329740429 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.326264347 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.617421996 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.354969555 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.308590429 seconds)
done (took 16.787891033 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.283589336 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.288612514 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.293803172 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.337758965 seconds)
  done (took 10.407583568 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.321487326 seconds)
    (2/2) benchmarking "read"...
    done (took 1.6338202 seconds)
  done (took 5.159174335 seconds)
done (took 16.777389226 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.326019251 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.323162004 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.322835489 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.325218194 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.323263459 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.325063025 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.324611815 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.321934224 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.325189795 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.325228636 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.324131222 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.323719736 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.32489991 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.324450086 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325904441 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.325654005 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.324373709 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.325109648 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326137043 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.333296355 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.326713858 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.325510886 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.326777496 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.324941525 seconds)
  done (took 33.010362788 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.325890182 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.32570881 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.324231779 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.327303451 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.326607356 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.326704264 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.325531995 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.3245366 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.32706257 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.328092901 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.325634791 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.327007294 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.326931744 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.326739024 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326281467 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.327062375 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.325798042 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327648342 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326471707 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.326236533 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.326959302 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.327325797 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.327130102 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.326552686 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.327168704 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.327030826 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.326944979 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.325875159 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.326837725 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.326399117 seconds)
  done (took 41.002930262 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.332298797 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.335384025 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.326841113 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.327305216 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.327492424 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.327335271 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.328696847 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.328151146 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.327020749 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.32797032 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.326899203 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.328585914 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.327126871 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.328050885 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.329932066 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.327906856 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.326991309 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.329484946 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.32811306 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.327923205 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.327811502 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.329290678 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.32891188 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.329670874 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.328848214 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.328435655 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.326831638 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.32819185 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.33014266 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.328338301 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.329929545 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.330286391 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.329130931 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.329450875 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.330497628 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.331615253 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.334012558 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.335854355 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.330873694 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.329930933 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.330358791 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.331398438 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.329549619 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.330650979 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.329832776 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.330413649 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.331244036 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.329606174 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.330862051 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.33167345 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.331042578 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.329495864 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.331980174 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.331410489 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.331586446 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.330605137 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.330302136 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.330759152 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.331294997 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.330595952 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.330091405 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.330662458 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.329688254 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.331266177 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.331050465 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.329679909 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.330653958 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.331542212 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.331478615 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.333631492 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.331916646 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.330867269 seconds)
  done (took 96.965524404 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.331183506 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.332529674 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.330595568 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.332088656 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332248964 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.334841312 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.334366455 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331968349 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330526829 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.332363932 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.331939957 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.332029504 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331770203 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.332111179 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.330350573 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.332250311 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.332323141 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.333459522 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.332013886 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.334222561 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.333283874 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.331920399 seconds)
  done (took 30.522635611 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.333135123 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.333986241 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.333674157 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.334700048 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.335427533 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.335551169 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.333404186 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.335850552 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334525554 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.33226808 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333717028 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33348827 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.33692478 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.332937426 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.334741924 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.335133256 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.335256655 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.336215628 seconds)
  done (took 25.233740636 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.334626477 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.333234432 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.334825471 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.333854964 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.335122326 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.333396522 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.334656213 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.334538946 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.33381685 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.336308875 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.333899324 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337243236 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.334654313 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335165517 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33522955 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.336125865 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.336742458 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336012187 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336100641 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.337271535 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.336205685 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.335972039 seconds)
  done (took 30.590452276 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.334458396 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.334108128 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.335966774 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.335770744 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.335846218 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.337274981 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.334766144 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.335454491 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.336149734 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.335639431 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335145744 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.337116237 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.337821757 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.337663392 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.33629461 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.337430057 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.337805872 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.337055712 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.338045176 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.334411552 seconds)
  done (took 27.941319832 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.337791874 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337856498 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.336870351 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.338033809 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.338077144 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.337728759 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.338114543 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.33836052 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.33769805 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.33865292 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.337531176 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.338903987 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.337872077 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.339110842 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.338628098 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.337665323 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.337489045 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.339523882 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.339203536 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.340022353 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.340657052 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.340062557 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.340020038 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.339375285 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.339395301 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.339093261 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.340689484 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.341389226 seconds)
  done (took 38.703388283 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.340797735 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.339074879 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.339594747 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.339057337 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.340198263 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.338975376 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.339376114 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.340336293 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.33915308 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.341420684 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.339088638 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.340123363 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.34220286 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.340137093 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.339663888 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.34122394 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341076798 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.339284755 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.341710482 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340180442 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.340270299 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.341835264 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.34042736 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.340248853 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340623859 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.340623469 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.339729753 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.34201294 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.340394335 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.340210297 seconds)
  done (took 41.427750145 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.360154986 seconds)
    (2/2) benchmarking "in"...
    done (took 1.35928988 seconds)
  done (took 3.938423081 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.342197395 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.343226027 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.341560152 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.341394779 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.343349657 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.342318384 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.342292559 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341235011 seconds)
  done (took 11.958065019 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.332923172 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.343847758 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.343065381 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.343103198 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.342538638 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.33354004 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.342935838 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.34776507 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.335938039 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.336674222 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.341381192 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.342124422 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.338359304 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.336223783 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.335718869 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.338848384 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.345072097 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.344305479 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.344746404 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.345720719 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.344158856 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.339640884 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.341242324 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.34724361 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.335767686 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.346024864 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.343803698 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.348276238 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.337224871 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.343029977 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.339451529 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.346773794 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.343961832 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.346060919 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.344894297 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.34494137 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.346361748 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.346069959 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.346778111 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.348699393 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.346018127 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.347636267 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.339109534 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.342587382 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.34319779 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.348969762 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.347090862 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.345605604 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.337072312 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.345346816 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.355465775 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.33998055 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.34885453 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.345603876 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.344306591 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.351681068 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.354985168 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.343138876 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.346125369 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.351547034 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.360297259 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.357569948 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.347885787 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.353280199 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.350967575 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.365659834 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.351350157 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.355435775 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.349240621 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.350170721 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.348496018 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.359705065 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.360038231 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.354329464 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.349668042 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.350303448 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.34265211 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.35122902 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.349972337 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.352145932 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.354566877 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.350459127 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.35065439 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.362699178 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.343434452 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.354218059 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.348261138 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.350288565 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.342485705 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.354122728 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.3593225 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.351230186 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.33988854 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.345988644 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.347557788 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.351059568 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.341246571 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.344547857 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.353979024 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.350807385 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.35140975 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.345797925 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.353228023 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.356057133 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.351992953 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.351202686 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.356831508 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.344493458 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.353276659 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.359858779 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.349138039 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.342860161 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.349892185 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.354532524 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.344913595 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.353381766 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.356846912 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.348560581 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.358085081 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.351436075 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.353565192 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.371070879 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.358104682 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.351922691 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.349227688 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.36512918 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.353430431 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.349709912 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.358698625 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.353416618 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.353128558 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.348113181 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.358148806 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.346363564 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.356848452 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.346059913 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.356578583 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.354084254 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.350846552 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.349087025 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.353437115 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.349683641 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.353795857 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.357317303 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.360048761 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.350031009 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.360475133 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.352643955 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.352526384 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.35492686 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.359455006 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.355401067 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.347780732 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.358279339 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.346400513 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.356142581 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.347196967 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.357612843 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.354971299 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.355138502 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.354477321 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.34658353 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.35138883 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.359429177 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.353161689 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.354630502 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.358769053 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.354498883 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.354395318 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.34728251 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.358015994 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.346715342 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.352639833 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.363607922 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.355204793 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.352540676 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.352141047 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.362357866 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.354913909 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.355073507 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.34997956 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.360134923 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.362858601 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.357807627 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.366009053 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.356255657 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.35667948 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.349970226 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.352481456 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.35751591 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.350749058 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.364952386 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.363435218 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.37060847 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.351584423 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.361962583 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.348274132 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.361713618 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.356439906 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.363631169 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.358460692 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.357074376 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.350229313 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.361669667 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.351809701 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.36138266 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.348261678 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.359580063 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.357517973 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.357278078 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.357421508 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.350186842 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.356313736 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.361316302 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.358375944 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.35903803 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.35033077 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.362917048 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.347462401 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.354558669 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.361572861 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.357486149 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.359886517 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.366266294 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.355580881 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.363067407 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.36042762 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.353915476 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.362510553 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.356990055 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.360285579 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.364568989 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.361951518 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.356876737 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.365705947 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.363271072 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.35283998 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.359877844 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.368428603 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.359899868 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.354830158 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.368766688 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.362135117 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.359186878 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.360227538 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.353404946 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.364316025 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.362457565 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.370284048 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.352260356 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.366382275 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.353997376 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.364936165 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.357616905 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.362576123 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.360557151 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.364600095 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.369274254 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.360224583 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.355564564 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.363204031 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.361114667 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.360302681 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.355781117 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.368660101 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.363031675 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.362845217 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.359668682 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.360174444 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.364882016 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.353024384 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.364327656 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.355445704 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.372900618 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.383723121 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.365372716 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.368113338 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.3686895 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.365574296 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.366976709 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.358364748 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.360223054 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.360130047 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.359148149 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.357154487 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.368740115 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.355316051 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.367863504 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.362169275 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.364890549 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.368668738 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.364983638 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.356641867 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.367061703 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.364491747 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.364459781 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.354822317 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.365014595 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.359744519 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.365823523 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.36547706 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.359043838 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.371485169 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.369618307 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.36153567 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.361469654 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.359386785 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.358292045 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.361106537 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.371040322 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.358206713 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.373786666 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.357005195 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.36646246 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.361551587 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.370930047 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.375462798 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.360317449 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.37143943 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.364952347 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.355678082 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.360646423 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.367104295 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.369845617 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.378479212 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.358079703 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.369983019 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.367002799 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.364563741 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.367287445 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.367453934 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.366779972 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.367366888 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.371252452 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.370168792 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.363035713 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.369744813 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.377640719 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.367988318 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.367278756 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.3576309 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.370074099 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.3786361 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.363229383 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.365127227 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.362817129 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.369565228 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.368467375 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.367329713 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.368549922 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.369128354 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.371703697 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.373147167 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.372173399 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.368782824 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.371352239 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.378275204 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.371637195 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.38156378 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.362910489 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.37334604 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.368028879 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.361991 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.362836178 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.363392781 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.371501671 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.36078195 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.373727152 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.368861348 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.364678261 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.370565296 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.375655113 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.359142545 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.372844845 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.391808404 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.361512686 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.373673891 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.367650449 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.361275533 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.370016254 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.368024671 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.360212034 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.36618204 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.370108221 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.377020054 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.362702437 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.373204836 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.361614354 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.374194828 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.369681484 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.368053837 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.368309215 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.370470467 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.362739829 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.371359835 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.369857839 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.381139973 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.365048232 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.370402311 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.366259652 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.377127689 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.382713767 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.368462953 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.374441568 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.373111112 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.364839773 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.369598933 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.376917388 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.36469747 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.374820913 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.36245734 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.368281138 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.369658843 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.371692654 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.374312856 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.37326182 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.36272032 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.365601419 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.373717863 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.371486304 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.372443401 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.367540752 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.379552155 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.364273941 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.364554409 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.373361265 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.367775033 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.377225829 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.365371919 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.372064043 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.370370806 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.374980161 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.374422778 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.374662127 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.363822706 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.367624104 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.37884486 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.378765622 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.37395752 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.371045753 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.377523495 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.365427012 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.370580793 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.372413482 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.368945312 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.367694146 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.377925998 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.366191379 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.371210262 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.369729652 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.377134392 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.377197552 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.378165681 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.368812941 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.381973401 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.385026631 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.382096488 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.367166237 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.372366255 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.370772994 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.377755668 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.375951646 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.368835604 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.383514754 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.381340988 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.378475849 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.374988737 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.37674956 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.368308502 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.379055101 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.376223355 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.371910601 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.384346993 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.37040896 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.383742478 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.376541005 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.376140988 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.368598468 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.369314509 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.371265608 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.374441919 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.376025434 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.376268592 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.379019885 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.376007397 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.382745671 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.376366039 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.375565189 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.376792618 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.367994599 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.378396987 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.368768265 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.377542909 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.380120813 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.371307735 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.380192645 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.377447043 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.370508976 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.379655919 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.385640257 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.37938506 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.368800029 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.375686737 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.383126383 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.390604436 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.377955052 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.371705125 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.376389569 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.382178191 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.378480383 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.379350968 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.372734917 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.39083693 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.392209779 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.370764673 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.37363072 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.382539032 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.390089856 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.379293152 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.378210557 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.375170421 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.378754973 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.385265311 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.378472313 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.382295179 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.383812749 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.374936013 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.383143667 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.373868609 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.37853363 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.381696871 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.390361606 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.379656715 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.375348307 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.392054609 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.391352303 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.38159375 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.407568008 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.387331747 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.382403932 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.386220341 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.372377857 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.382430747 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.37467476 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.385521444 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.380882563 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.381460367 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.380680661 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.372597721 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.384935446 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.390096234 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.392014405 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.380403902 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.372980987 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.375089453 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.382848931 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.381056818 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.382755204 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.381300431 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.380935486 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.380997604 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.375442711 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.395203388 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.40077757 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.388521204 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.38280197 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.382720371 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.38296057 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.387643508 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.382923817 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.389558577 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.381886523 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.381555144 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.379235416 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.391186247 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.382089781 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.374638744 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.377725748 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.376033732 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.384992279 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.391770976 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.407482719 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.384399041 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.386507483 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.387393358 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.382924844 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.376010345 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.386913477 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.383906478 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.377660334 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.37902483 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.386334863 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.384433047 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.383956975 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.378702863 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.391284449 seconds)
  done (took 814.344497884 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.385721319 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.383619532 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.384744663 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.383386189 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.383712534 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.384358292 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.383237596 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.38434038 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.384431463 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.384363182 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.384656881 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.384418787 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.384411644 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.384001451 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.386090876 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.384331328 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.38479831 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.384014141 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.384382268 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.384302674 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.385350426 seconds)
  done (took 30.329258826 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.385342452 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.385295724 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.385606711 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.384854899 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.383874638 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.384435455 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.385485652 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.386811876 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.386480644 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.386097978 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.386340153 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.386942825 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.385373126 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.386341141 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.385580719 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.386623158 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.385851901 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.384694821 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.386975186 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.387621903 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.388106848 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.386965494 seconds)
  done (took 31.749202882 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.387311117 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.385892628 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.380177649 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.391143223 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.386318554 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.385882142 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.387859284 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.386454265 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.387038699 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.379888093 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.379856587 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.379894875 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.382977463 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.394254638 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.384144625 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.393529809 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.388963874 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.387687077 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.3875445 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.388915639 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.391909629 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.401359486 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.387268218 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.377846145 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.389980535 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.387828353 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.389731906 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.388512723 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.379918619 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.392705915 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.387678084 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.385664979 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.392448252 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.392283562 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.381004716 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.39377873 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.389144589 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.388743417 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.389146016 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.392469132 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.412824124 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.389231575 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.393216076 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.402521906 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.389112935 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.383991471 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.397751517 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.389545059 seconds)
  done (took 67.923116701 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.389163855 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.391129604 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.390679625 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.390117155 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.389662491 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.389886847 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.391000079 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.391371762 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.391029748 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.389646615 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.392366031 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.390389108 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.391178129 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.390412322 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.392726465 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.388803073 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.390932216 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.391271469 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.390215882 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.391855114 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.391939625 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.391394203 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.391844651 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.393666833 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.392966993 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.393960499 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.393680607 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.392200517 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.392168192 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.391206514 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.392031572 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.392677121 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.392460261 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.391774635 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.391786141 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.392205174 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.392522779 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.391936271 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.392365846 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.391268284 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.392734084 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.393714818 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.393926178 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.394253308 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.393891326 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.394212985 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.392341295 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.392300622 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.393331276 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.392299005 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.394185151 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.394015739 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.394857519 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.392613222 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.39401859 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.393945369 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.394028393 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.395028603 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.394126381 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.394177695 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.393723804 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.394978312 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.394745916 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.394665405 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.39405861 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.394480024 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.394592609 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.394452083 seconds)
  done (took 95.953579075 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.39364554 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.394695805 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.395369411 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.395442003 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.394993395 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.394921303 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.39490371 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.395756557 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.396559703 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.395663888 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.395789845 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.395810296 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.396121158 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.394479582 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.393771958 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.394483435 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.39544146 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.395818564 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.395365841 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.395950276 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.395822302 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.395949866 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.395917604 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.396353209 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.396374347 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.397806715 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.396153098 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.396357462 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.396789745 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.397030186 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.397587009 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.396035573 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.396730979 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.39664705 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.397542317 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.396903645 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.397114692 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.396823353 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.396515889 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.396673589 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.396492801 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.396799525 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.397198411 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.397790911 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.397326081 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.396991335 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.39672723 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.397818062 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.397995594 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.398161227 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.397609971 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.398546501 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.398267476 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.399008741 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.397630664 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.398710236 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.399150441 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.398147544 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.398169553 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.399634649 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.398626577 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.397567678 seconds)
  done (took 87.859967395 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.3985796 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.399844972 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.40006777 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.399111576 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.398143967 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.398055455 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.399870314 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.399027826 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.400332727 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.399618553 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.400253185 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.398632674 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.400981831 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.399874902 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.399135491 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.400986327 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.400415675 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.400113724 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.399672463 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.399168625 seconds)
  done (took 29.260645835 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.398193842 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.401153271 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.400770147 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.401829396 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.399585291 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.400115718 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.400810901 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.399727184 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.401296422 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.400716028 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.401916682 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.4023835 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.400255602 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.403379127 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.401743785 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.402091715 seconds)
  done (took 23.688597313 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.402154034 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.401629358 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.402045139 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.401986949 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.400424324 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.401706084 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.401139113 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.401673315 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.401897394 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.402549468 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.401491352 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.401337554 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.402527549 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.402204754 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.401548512 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.404049509 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.401851578 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.400789672 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.404295895 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.401512044 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.403304342 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.403193828 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.403041096 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.401588645 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.402399273 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.40455128 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.402631163 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.400682397 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.403742673 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.404662431 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.403534936 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.402572899 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.403221019 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.404325985 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.40363161 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.40320865 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.403768625 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.404626317 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.404489848 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.404221151 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.402004171 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.404246567 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.403258068 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.404100595 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.404899074 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.404807417 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.404912154 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.405067101 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.406075356 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.404153815 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.405604373 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.405054263 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.405989391 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.404226048 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.40544988 seconds)
  done (took 78.449452062 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.406536478 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.404949663 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.406978579 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.405662276 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.406265064 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.40464323 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.405409327 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.407067402 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.405288964 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.40496425 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.405923786 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.406661208 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.40557471 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.408702574 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.406031712 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.405279632 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.406398442 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.405011452 seconds)
  done (took 26.58265621 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.405458809 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.406822712 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.406495985 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.406319864 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.406535401 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.407060828 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.407509714 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.407479411 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.406344436 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.406852807 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.40726001 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.406195552 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.407979971 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.407029988 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.407248891 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.407477359 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.408447801 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.408502293 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.407336416 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.408165957 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.407903881 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.409328948 seconds)
  done (took 32.234681791 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.397190374 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.39626817 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.396921899 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.414260966 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.415956037 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.397260135 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.397443316 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.398594314 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.423180176 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.450971528 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.443381133 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.41535909 seconds)
  done (took 18.223371324 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408209295 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409408065 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.4086708 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408492473 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409168624 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408390948 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408158261 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409194043 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409456484 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408956671 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409637263 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409624569 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40825806 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408884546 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409776776 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408336336 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409748725 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409965868 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410864533 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410038276 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409693007 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410523276 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408346824 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410125677 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411000044 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409445787 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409693537 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411287712 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.410519487 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410452547 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412182567 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411205704 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410239707 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411471399 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411788279 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411068344 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411199165 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410776832 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411532022 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410153862 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.412206692 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411560933 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413001555 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410584691 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411923393 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.413114165 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411516413 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411928228 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410625504 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41082993 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413014987 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411194001 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414371541 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410560163 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.412938498 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.412360178 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413766096 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413270144 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414861629 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.413111654 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412842066 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412190394 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412289985 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413247531 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413734283 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412006312 seconds)
  done (took 94.399174419 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412774945 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.41164608 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.412561338 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412487411 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.413967545 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413863429 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413670874 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414679311 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414631191 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414126431 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413825842 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412839012 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414637283 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415020004 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414719288 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414291848 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414223195 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414095463 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415651702 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415329367 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412970197 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414766075 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41571216 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415244713 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416807985 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416450593 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416549862 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415484152 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416940738 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415203569 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414018697 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414936495 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415449488 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.414357942 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413843238 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416526039 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415873125 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415364084 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416164229 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41470624 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415195841 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416677772 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416077984 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415340165 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416190897 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415516857 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41448218 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41596429 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416478889 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41620188 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415919648 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41732474 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416732516 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416135557 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415794016 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416756897 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416706101 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417803183 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415465276 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416979626 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417642371 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416729076 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417688008 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41766466 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416321633 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418587963 seconds)
  done (took 94.699669045 seconds)
done (took 1908.202098268 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.574345388 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.550967269 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.407861578 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.432442844 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.407319586 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.407738907 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.404216595 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.407008785 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.408751816 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.407128732 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.407060037 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.598712674 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.471852742 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.408861824 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.40774565 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.506547865 seconds)
  done (took 28.493585053 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.44082922 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.416502791 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.550970628 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.416562957 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.441361667 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.633410508 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.478729789 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.415211133 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.614135663 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.433846536 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.420529971 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.437824428 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.413449193 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.415554077 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.434174133 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.635080647 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.712790764 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.422335549 seconds)
  done (took 31.019788273 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.964920394 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.449215971 seconds)
  done (took 5.702434146 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.435608349 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.416674764 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.415328267 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.412650862 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.406288842 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.406708557 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.414981786 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.410723333 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.420795822 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.562217121 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.418212482 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.429444189 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.434944801 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.41525955 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.422947617 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.46230171 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.562171205 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.425293097 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.422487065 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.419361726 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.413659414 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.510368627 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.463759025 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.424118971 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.563894868 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.423200065 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.422819285 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.421672401 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.540850549 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.426360218 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.415147345 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.415324175 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.417860276 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.410065497 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.984315315 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.423432819 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.442096262 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.422502684 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.425170047 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.566508547 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.416896203 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.423245102 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.408605123 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.01437693 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.543422765 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.551640607 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.440456801 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.42317539 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.419176987 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.485630461 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.418470031 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.420457464 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.482790999 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.297254649 seconds)
  done (took 90.294933809 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.447545656 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.411071513 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.597266322 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.433374376 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.410401422 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.434618746 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.436106008 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.766592072 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.448647874 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.411536153 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.773936778 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.096781666 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.412213211 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.458083443 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.434397359 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.463028327 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.412096833 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.411023295 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.41455605 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.412993829 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.015146162 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.420872836 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.412756898 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.570569861 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.455166461 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.042363064 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.415296324 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.418561446 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.4338873 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.412607969 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.077623105 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.427787864 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.452129649 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.415828814 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.740656373 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.901885416 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.86177644 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.427990228 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.414269073 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.414584587 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.414046587 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.048274523 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.882992653 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.416655343 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.415827395 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.049867366 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.419018519 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.413958128 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.414738847 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.684115296 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.412898155 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.415092683 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.42514611 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.412314406 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.41453506 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.478092513 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.469898259 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.05058127 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.420316108 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.413394599 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.437189761 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.413869817 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.424202226 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.414915 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.415978957 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.881807584 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.605444927 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.421017315 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.882423574 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.075422482 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.420402793 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.161589278 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.419850135 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.422624035 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.492050346 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.41490088 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.422311103 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051092079 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.447662625 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.415760142 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.859934532 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.419263911 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.745790978 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.436360869 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.422456935 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.042398841 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.417309353 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.474893321 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.416077288 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.421788753 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.417190626 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.418190331 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.744123713 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.442665452 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.417862655 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.416076362 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.448797171 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.418584179 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.416947944 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.416754321 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.142860627 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.426519382 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.416699379 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.42012635 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.418834814 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.420847483 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.42114775 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.420225087 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.702580822 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.418401815 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.437394211 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.419378113 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.419991111 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.426183824 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.574074044 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.428557872 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.815764602 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.427449589 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.41761356 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.448551293 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.417663043 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.465474936 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.43375755 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.426795831 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.395351888 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.77960476 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.439450841 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.438620974 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.419506138 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.420950122 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.419610272 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.420992834 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.45218497 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.425375129 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.295643255 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.434675331 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.433817693 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.419563898 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.430524907 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.419993153 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.432610457 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.420869416 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.729482188 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.746821865 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.599731769 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.423722561 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.420154859 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.298473369 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.427171298 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.607776902 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.441588255 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.420733192 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.725371016 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.63823266 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.419577301 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.422025712 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.423582805 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.705498345 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.423226467 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.755397996 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.107177493 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.427946264 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.423659272 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.301635116 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.196386195 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.424460319 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.423442364 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.748509009 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.443052896 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.420454478 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.42038329 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.423566712 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.421391269 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.425932576 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.42344589 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.422263134 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.422401526 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.535489501 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.621492127 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.441430503 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.42869885 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.026882175 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.430219107 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.423318754 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.428993241 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.425612979 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.422119148 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.45493671 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.424066417 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.466240701 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.426198981 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.43148064 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.122134313 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.427504005 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.427031884 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.622188176 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.247359715 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.428092428 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.424086903 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.423412135 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.465323345 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.082779089 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.488346483 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.820289797 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.436720067 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.468987677 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.437442638 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.431410569 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.084184756 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.429538948 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.42691726 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.232356477 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.427692849 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.114066432 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.42570816 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.426011851 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.165126188 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.430687874 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.425537513 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.425194945 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.427629671 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.74907071 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.428184258 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.469130011 seconds)
  done (took 520.448804871 seconds)
done (took 677.248799184 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.42522425 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.424391069 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.429108993 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.425778418 seconds)
  done (took 11.006371915 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.442328641 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.430986044 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.441339117 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.430718288 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.441841078 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.43186941 seconds)
  done (took 9.925576203 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.424741781 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.425209242 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.430347675 seconds)
  done (took 8.5860403 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.678019447 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.450919544 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.869570042 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.436538218 seconds)
  done (took 9.741660785 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.44066812 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.441344896 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.443853596 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.445255814 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.443830247 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.447225875 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.442636177 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.444007194 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.444111142 seconds)
  done (took 14.296338903 seconds)
done (took 54.864506596 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.907378965 seconds)
    (2/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.953494262 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.572236899 seconds)
    (4/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.546795525 seconds)
    (5/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.658605413 seconds)
    (6/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.45962456 seconds)
    (7/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.530580178 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.508148184 seconds)
    (9/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.428658088 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.465593043 seconds)
    (11/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.685807262 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.607879954 seconds)
    (13/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.521438372 seconds)
    (14/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.597177398 seconds)
    (15/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.654806006 seconds)
    (16/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.410471196 seconds)
    (17/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.443848927 seconds)
    (18/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.552824457 seconds)
    (19/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.458657251 seconds)
    (20/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.406903218 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.529419897 seconds)
    (22/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.460958384 seconds)
    (23/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.426133869 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.560519468 seconds)
    (25/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.406563319 seconds)
    (26/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.469544268 seconds)
    (27/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.462171156 seconds)
    (28/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.502770518 seconds)
    (29/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.73864449 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.535033745 seconds)
    (31/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.423058904 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.513713182 seconds)
    (33/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.716814745 seconds)
    (34/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.618986179 seconds)
    (35/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.412010746 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.500560161 seconds)
    (37/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.406018797 seconds)
    (38/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.515472338 seconds)
    (39/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.697425055 seconds)
    (40/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.858067429 seconds)
    (41/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.665687149 seconds)
    (42/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.499885687 seconds)
    (43/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.616828557 seconds)
    (44/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.870928545 seconds)
    (45/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.434786804 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.546270288 seconds)
    (47/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.408392687 seconds)
    (48/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.625574277 seconds)
    (49/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.465642626 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.536459501 seconds)
    (51/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.537311932 seconds)
    (52/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.519008476 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.59645853 seconds)
    (54/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.422060172 seconds)
    (55/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.415721633 seconds)
    (56/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.837646452 seconds)
    (57/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.553506914 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.56142801 seconds)
    (59/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.411574032 seconds)
    (60/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.966990781 seconds)
    (61/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.961909344 seconds)
    (62/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.413212462 seconds)
    (63/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.600593467 seconds)
    (64/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.86642494 seconds)
    (65/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.51193595 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.432435681 seconds)
    (67/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.754158137 seconds)
    (68/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.5649048 seconds)
    (69/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.5949334 seconds)
    (70/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.902625138 seconds)
    (71/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.885210397 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.549058889 seconds)
    (73/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.571770275 seconds)
    (74/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.410397116 seconds)
    (75/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.409865277 seconds)
    (76/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.500848211 seconds)
    (77/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.721957221 seconds)
    (78/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.652584228 seconds)
    (79/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.411899058 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.520233874 seconds)
    (81/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.609878453 seconds)
    (82/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.565206097 seconds)
    (83/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.788450813 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.612142109 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.566933528 seconds)
    (86/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.414763355 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.529115479 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.560090949 seconds)
    (89/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.410697968 seconds)
    (90/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.410761936 seconds)
    (91/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.633627177 seconds)
    (92/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.518959586 seconds)
    (93/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.561248514 seconds)
    (94/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.472888718 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.709141951 seconds)
    (96/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.459155452 seconds)
    (97/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.414509508 seconds)
    (98/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.434679588 seconds)
    (99/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.825040994 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.71507611 seconds)
    (101/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.415286846 seconds)
    (102/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.440095036 seconds)
    (103/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.669333136 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.608621786 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.572096065 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.472268194 seconds)
    (107/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.520677669 seconds)
    (108/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.477183897 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.611928573 seconds)
    (110/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.414058438 seconds)
    (111/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.539230558 seconds)
    (112/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.680444176 seconds)
    (113/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.955886947 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.534112073 seconds)
    (115/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.841849783 seconds)
    (116/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.599509411 seconds)
    (117/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.41155156 seconds)
    (118/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.479338493 seconds)
    (119/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.46171296 seconds)
    (120/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.412399485 seconds)
    (121/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.173141367 seconds)
    (122/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.417309838 seconds)
    (123/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.538729203 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.499713789 seconds)
    (125/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.863233154 seconds)
    (126/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.416694109 seconds)
    (127/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.51758369 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.543791384 seconds)
    (129/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.463738304 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.600494945 seconds)
    (131/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.652572687 seconds)
    (132/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.545083856 seconds)
    (133/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.788729384 seconds)
    (134/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.735882975 seconds)
    (135/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.418323267 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.587449738 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.526987464 seconds)
    (138/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.769805967 seconds)
    (139/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.608065636 seconds)
    (140/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.886610281 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.747071006 seconds)
    (142/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.473824459 seconds)
    (143/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.537684364 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.508609802 seconds)
    (145/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.728344293 seconds)
    (146/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.562784857 seconds)
    (147/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.420707502 seconds)
    (148/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.911019406 seconds)
    (149/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.459172757 seconds)
    (150/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.63846763 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.468203108 seconds)
    (152/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.792294184 seconds)
    (153/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.46874976 seconds)
    (154/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.504579023 seconds)
    (155/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.559368117 seconds)
    (156/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.414756026 seconds)
    (157/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.418077803 seconds)
    (158/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.615260482 seconds)
    (159/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.610004357 seconds)
    (160/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.480115113 seconds)
    (161/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.452829655 seconds)
    (162/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.52599143 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.558704804 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.507523221 seconds)
    (165/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.443721985 seconds)
    (166/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.459987864 seconds)
    (167/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.505934669 seconds)
    (168/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.41804416 seconds)
    (169/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.604552742 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.478003387 seconds)
    (171/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.748383516 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.552415414 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.535890559 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.540784919 seconds)
    (175/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.476911745 seconds)
    (176/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.48320459 seconds)
    (177/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.064647063 seconds)
    (178/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.421638901 seconds)
    (179/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.590509336 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.475582548 seconds)
    (181/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.171138717 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.647285297 seconds)
    (183/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.472072435 seconds)
    (184/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.473245351 seconds)
    (185/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.675537643 seconds)
    (186/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.517841738 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.536150202 seconds)
    (188/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.679921184 seconds)
    (189/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.58093388 seconds)
    (190/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.527999674 seconds)
    (191/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.906068058 seconds)
    (192/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.786274857 seconds)
  done (took 352.198216835 seconds)
done (took 353.511999034 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.467822017 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.532279981 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.449205584 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.447089247 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.450060293 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.446267453 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.477906521 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.449422111 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.464484137 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.464771214 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.445737984 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.461358801 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.464011087 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.459653383 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.483883965 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.450106461 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.44917864 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.461250653 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.464999451 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.46783564 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.451396125 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.451040621 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.477888296 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.449088368 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.458749239 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.459117638 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.455756182 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.444723149 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.459454633 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.465866768 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.447876896 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.458742824 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.466687544 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.460935255 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.452347104 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.46071303 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.453295518 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.534216571 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.473089799 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.462682551 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.460735222 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.467637705 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.455585376 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.456626684 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.463652729 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.47951343 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.461239211 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.466627493 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.455931613 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.455658628 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.477582732 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.464615934 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.463060299 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.459574265 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.45437573 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.467434848 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.465467801 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.472739528 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.459542939 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.453933959 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.485610252 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.470932952 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.464775186 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.461022671 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.461951395 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.469847589 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.464346727 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.470205741 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.460661237 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.455350908 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.455449296 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.460963984 seconds)
done (took 114.671083253 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.576318475 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.449948516 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.608918837 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.461968222 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.622613927 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.574744481 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.463969957 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.464263389 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.461370347 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.258816402 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.462830766 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.462193155 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.450579523 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.461494195 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.57413131 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.463432838 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.463287707 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.15662519 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.465304433 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.588499429 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.452828554 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.463484629 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.464581888 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.264618912 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.453168622 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.4488662 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.589741914 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.465080076 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.164982189 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.448375096 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.450243687 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.16362411 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.590683491 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.484524173 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.47476026 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.474399277 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.625540653 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.468338063 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.581211891 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.580780731 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.611148124 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.503152592 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.449617825 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.454066779 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.468431799 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.46438354 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.465979356 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.493791335 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.453341817 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.465273391 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.157317821 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.474832142 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.466169575 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.465590869 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.465705416 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.494723496 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.466125189 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.465292189 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.59100524 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.467168466 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.580797682 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.266295949 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.261203481 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.467325344 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.451979288 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.46739468 seconds)
  done (took 116.762801771 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.524120199 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.53522169 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.583165927 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.460405917 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.50708908 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.585395274 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.458550041 seconds)
  done (took 11.977002767 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.463581526 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.4677918 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.50550804 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.505934355 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.467430328 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.631756824 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.466386961 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.470001672 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.466690901 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.508737367 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.467087912 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.468647658 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.475637553 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.456473312 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.504488995 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.470515324 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.57939354 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.459243572 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.46944954 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.609510883 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.470217692 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.478448254 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.509266342 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.468083467 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.469295785 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.465492701 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.217404802 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.469485748 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.467960926 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.470623634 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.468568128 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.523769596 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.469735274 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.458398111 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.469472109 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.572465208 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.469805508 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.468080061 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.468460711 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.460639124 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.469206405 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.469456557 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.470460636 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.469056598 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.468554491 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.483186004 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.469221009 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.470159278 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.470933402 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.469983321 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.507808787 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.469931533 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.469074458 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.470671414 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.515139423 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.478328151 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.469883385 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.469789411 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.471347161 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.46943059 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.647519659 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.509019269 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.469829493 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.508297512 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.47232873 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.471122712 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.472255104 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.471457111 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.550033425 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.472133839 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.509724317 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.470788927 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.641081544 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.486533557 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.472526524 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.465868765 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.466968854 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.473037683 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.458891811 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.468300022 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.471676863 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.463138092 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.468423022 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.473557903 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.472569818 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.622613008 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.570574674 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.472444859 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.477457015 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.46986309 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.472913151 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.513689269 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.473116421 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.472032858 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.512054366 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.582332229 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.513861132 seconds)
  done (took 150.521912731 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.475299619 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.475545586 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.468305587 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.492246037 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.463104375 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.462317113 seconds)
  done (took 10.167808821 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.466459323 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.477520494 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.472471966 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.473940805 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.474167519 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.474023849 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.473205839 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.466413447 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.476638839 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.475986206 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.473850007 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.474723726 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.474367003 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.475729961 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.475575455 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.473864372 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.475500228 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.473762545 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.475534831 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.475450727 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.461102403 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.474771292 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.475735405 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.466192941 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.47979841 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.475176477 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.489306054 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.476827595 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.474445823 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.473005711 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.478636897 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.477532434 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.468642193 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.473305426 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.48087383 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.469020067 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.480028241 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.476347195 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.475815252 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.475603195 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.477833045 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.47599805 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.476596672 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.477546785 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.46904865 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.471551489 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.479735587 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.490139244 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.476397652 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.477210174 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.478636535 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.47740131 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.476824493 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.479571523 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.468952949 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.471827541 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.480841065 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.480043214 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.478615886 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.468857611 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.482698028 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.479954884 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.470000587 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.481268625 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.477498339 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.47894982 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.471308378 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.482120818 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.479516141 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.477836083 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.478430559 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.479026357 seconds)
  done (took 108.588417274 seconds)
done (took 399.343208706 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.97906038 seconds)
  done (took 4.314698027 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.711410332 seconds)
  done (took 4.049395866 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.43433979 seconds)
  done (took 27.778094196 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.528079749 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.568328291 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.484452516 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.470641068 seconds)
  done (took 11.386262113 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.033716502 seconds)
  done (took 4.370531783 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.49159367 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.480732241 seconds)
  done (took 6.311410737 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.881630604 seconds)
  done (took 4.219116766 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.317681268 seconds)
  done (took 4.662771795 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.475959233 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.475121542 seconds)
  done (took 6.296639015 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.441156883 seconds)
  done (took 3.779217656 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.041656009 seconds)
  done (took 22.379045192 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.493658094 seconds)
  done (took 3.832547407 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.496394523 seconds)
  done (took 3.83273269 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.679560648 seconds)
  done (took 7.016141563 seconds)
done (took 115.570585047 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.462758297 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.471111508 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.470644369 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.46943181 seconds)
  done (took 11.211047127 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.546979857 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.546742025 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.55389269 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.537809499 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.538098849 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.547992815 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.508743238 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.506617513 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.536134898 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.533592275 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.549199924 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.534917983 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.550380045 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.508417786 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.534099648 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.551042993 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.537042205 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.550930066 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.524873718 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.536375199 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.484259545 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.54220676 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.534165829 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.484205814 seconds)
  done (took 38.118813286 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.967686732 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.541487187 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.626490391 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.523580151 seconds)
  done (took 7.998460578 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.588491061 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.591578127 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.606673629 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.641869531 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.686866323 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.602202155 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.509394792 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.506072504 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.493166253 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.59073577 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.667063928 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.588125684 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.802453115 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.486022545 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.80133466 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.484128017 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.483141304 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.587244377 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.636889944 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.669359796 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.485705423 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.588868832 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.593891169 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.588469716 seconds)
  done (took 39.619217696 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.492998366 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.503373565 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.487062853 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.499418981 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.487143102 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.487028266 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.489340741 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.491672588 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.488127783 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.48742066 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.487681843 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.500116901 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.486018706 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.487452388 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.493629141 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.488616317 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.488198302 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.493745785 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.496371867 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.487721988 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.48806759 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.494706243 seconds)
  done (took 34.146527091 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.471794873 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.470240506 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.820838952 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.750087408 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.471622281 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.472343011 seconds)
  done (took 14.799895658 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.563144566 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.736635581 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.482849402 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.938534499 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.004441184 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.479321389 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.479390417 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.762987412 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.142281398 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.170309646 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.549929427 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.56027018 seconds)
  done (took 22.216078567 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564125648 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.482160501 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.483233619 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54937138 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485377927 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.484357073 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.51569355 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.248305677 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.488812849 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757353954 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492849336 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569298772 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.729657392 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500840624 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487379914 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.456777005 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.712732275 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049943774 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485663004 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484369888 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515299218 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.500809141 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.489401176 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.734130829 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.486354786 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485438988 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.74594071 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483813056 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827528608 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804012667 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812675386 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491279344 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.760451778 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203062318 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591726508 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.740238834 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483032467 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487414597 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.454526639 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.496292209 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489076386 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491750384 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802258557 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487456922 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48637457 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495513987 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264935254 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.493009339 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.485447028 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.487081748 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806770898 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571570444 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.490406698 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.484283149 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48988746 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488887022 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.491494083 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.647500784 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127165479 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485106325 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493537503 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.490140053 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.494754366 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500343903 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244608894 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.493711233 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.491954425 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.492464268 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485737315 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.487169608 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511761452 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48619438 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.505149631 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4874253 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395658472 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.511351015 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492225285 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106204229 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503722091 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.491825964 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.713495762 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487767588 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485889915 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.485662515 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.487727729 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.340484495 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495460068 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.45410827 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54995122 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.255844569 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.741744703 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511661119 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517018924 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.709750209 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.456092557 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488371683 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.488560643 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51606976 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50922163 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.263369466 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488944401 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.494537446 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.737249851 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.701317368 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493333289 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.474075256 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024571611 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505436298 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.520157135 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.496127045 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.740435406 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.21605005 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827312456 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515127989 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530909496 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.490034208 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400185603 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505886729 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.499483779 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.491641629 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.83681925 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.426387869 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491913315 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565427309 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500189577 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.490609925 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488970702 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497015295 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.492316969 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.72173333 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504892695 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.823094835 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.498256928 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49233463 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.498542582 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496739111 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.497774085 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.712660524 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506896904 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770128951 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491142418 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489765074 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491671232 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.709655131 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.494775479 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.498874323 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.833369715 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499285046 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497502815 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.829428005 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531347572 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604554835 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526002059 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.495531439 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.746305536 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.498210022 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.499028578 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49390553 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.502347235 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495971188 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.500427106 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514298408 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258544198 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484789537 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.498265714 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.494783004 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.509104366 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56774701 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.499644198 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.749739521 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.498590569 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50377582 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.504868848 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.511654515 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721178615 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826883371 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.506065602 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674172305 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.028849178 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.253428838 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513288107 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.494197737 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.492862182 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.494141289 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49478646 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49449921 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.494872411 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753021051 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836919865 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.494703782 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.263311099 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50097599 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.506948461 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.506500595 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827886727 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.508356737 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496542375 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.501118929 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501162936 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502871054 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.830786048 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721423189 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.510815257 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.496343378 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.016091472 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.503765905 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.49661036 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.495910414 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521927253 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.506174093 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417400873 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.835966607 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514995166 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828790654 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.506446399 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.519619033 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.495935912 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496196887 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50291345 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.504385111 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506770051 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.755828319 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.511543562 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505883835 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137964567 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470902406 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205494669 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521181538 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.498733133 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.50471136 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.28021546 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498549163 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497827246 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.790535144 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.278001622 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496674074 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03637152 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.508094041 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.447875308 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827345041 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730021087 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513176119 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.511418615 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.824531444 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.711990556 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525057589 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.506615377 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503505336 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.466715776 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113184439 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.519451769 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678510308 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278232555 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500118697 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.506137812 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.570002472 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.503918748 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990126292 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.499858827 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501467944 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.521887166 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.512687638 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417522294 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.505800008 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501443096 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253868298 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.519000685 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.045166122 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500394944 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.759086041 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.839627305 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.814688444 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.505913287 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.510452469 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.749365879 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826700041 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502682759 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.516718549 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182418911 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.357911989 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.507912148 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502556373 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.4129979 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523104583 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858577884 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.514701632 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.506753741 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514353761 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.50467197 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501877141 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.502683702 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.508630098 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484460176 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07225051 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.498847932 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532730297 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508704233 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507637181 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.750307792 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.51941453 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.253841578 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.738523612 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49657735 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537840203 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.507704628 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505466434 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.477250592 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.5055352 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.503035323 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497981133 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.730146072 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.505572764 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.470388319 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.587620007 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.720112609 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.503992558 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.50405713 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.768246144 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.504938838 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.51391077 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425297175 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537475136 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.522541501 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5074912 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.516223926 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564623798 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577995487 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.761009449 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.843684304 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.840008281 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979982634 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5169284 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507059288 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.519629007 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586131182 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505902994 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.52390197 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.510314008 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239579311 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449983143 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.276604147 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.847263601 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511998555 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519140466 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506790279 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.748015203 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505829684 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.783534985 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50696933 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.504043551 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530668473 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515453341 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516317355 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721245763 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78112863 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50714479 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52535685 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513601581 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.50837141 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846801081 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.726689923 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084352985 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135883206 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512634255 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.506904704 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.296256503 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.785306123 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509099116 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.509097737 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509485435 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.528330504 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.510760834 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.541686815 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511560145 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.737509119 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834998142 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237116162 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.83313698 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.536234146 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.38649418 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509101728 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.756443919 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350420696 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.763594982 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255798511 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399819366 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766495632 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584008191 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760557875 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.514883619 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.74648614 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.527231444 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.515308192 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50959808 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511624392 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.510423437 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.835133851 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250927343 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764039204 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.516565594 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.528277876 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544879737 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.766914481 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.739437318 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.370272531 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.732439352 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839711323 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.520065504 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.511156776 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257223862 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840909312 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513222175 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.516692149 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.773876554 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.517706329 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550109586 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.388612193 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.511727734 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139558847 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.724545117 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534205343 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510696003 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383017191 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25438629 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.53403084 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092916398 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516526315 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534788482 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.794345679 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.520177228 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.520818309 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.806386509 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.518152109 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.526013293 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769643825 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.249533941 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.465520816 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.540511939 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522939329 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.516782849 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514017093 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590473223 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514519502 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523625931 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.998648397 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.519086581 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515871988 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.527917041 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.532146218 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52537821 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.51922149 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514882162 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.524327106 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.490513413 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.487718711 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.52789305 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.681389517 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135371384 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516566805 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.13132405 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.853635033 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.763990273 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.519687447 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.486774418 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.52229557 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516725157 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516708995 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517447069 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.510347912 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147251388 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.520158036 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.850141956 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.527114409 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.727503831 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.728029581 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.515656693 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.780774638 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528152643 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544088693 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.48260284 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517771099 seconds)
  done (took 1051.489587252 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.60565811 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.543333034 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.523641215 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.542621843 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.605751404 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.605449271 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.575000035 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.620586455 seconds)
  done (took 21.99710551 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.516163114 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.520842587 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.513941884 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.521073882 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.514902861 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.098804697 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.522428075 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.516794405 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.539725358 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.516784664 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.525776944 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.265416952 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.522486019 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.516691007 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.534031946 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.519144623 seconds)
  done (took 35.051119907 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.926464524 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.775157168 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.420918499 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.528933378 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.578151424 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.512166127 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.938449125 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.541958547 seconds)
  done (took 29.599025895 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.524677701 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.523010946 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.523510056 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.524292207 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.525059325 seconds)
  done (took 8.996587082 seconds)
done (took 1316.58773204 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.52654487 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.524884039 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.524585701 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.525294663 seconds)
  done (took 7.478643216 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.488043288 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.487937816 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.488355442 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.499299152 seconds)
  done (took 10.340164793 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.402219731 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.176237707 seconds)
  done (took 5.955966262 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.522259421 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.291346908 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.26015926 seconds)
  done (took 8.45237219 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.815784156 seconds)
  done (took 3.191539163 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.96039061 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.029159149 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.520937533 seconds)
  done (took 7.888686888 seconds)
done (took 44.689967987 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.530145603 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.282375856 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.669450997 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.522310913 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.696318107 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.669368067 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.781501313 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.512442276 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.520512414 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.516601707 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.523163543 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.696254214 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.769728749 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.282710284 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.769121386 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.279103556 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.673607327 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.515281673 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.52812288 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.512087934 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.786319343 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.521796379 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.525859417 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.525002088 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.675547926 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.660039794 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.522806745 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.280499479 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.521787973 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.52484872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.66109575 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.528974087 seconds)
  done (took 87.363309913 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.512649624 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.514302465 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.536143341 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.514220741 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.525604065 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.512918198 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.514802999 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.514901767 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.527389064 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.52071025 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.513364297 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.519637589 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.512888506 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.515361513 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.515043647 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.513418122 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.515447497 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.514612349 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.515310021 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.53306293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.515270052 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.514982185 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.516028742 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.534940358 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.512484967 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.514463778 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.515015509 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.534970166 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.514637143 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.5142517 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.535647936 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.515791113 seconds)
  done (took 81.981124505 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.515335287 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.516387895 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.517527819 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.519909677 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.516166909 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.523156736 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.537739145 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.515706071 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.523704306 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.522659811 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.5171832 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.536219682 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.517955218 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.516801891 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.51685291 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.515609749 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.522529083 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.532937353 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.539747784 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.518013027 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.520268693 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.52756881 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.527596015 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.525889472 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.538070869 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.517021821 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.537687783 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.531355416 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.516273835 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.517297774 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.522182054 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.535929924 seconds)
  done (took 82.142016325 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.760236038 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.531890862 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.534892896 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.526824619 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.535514166 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.531678143 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.528654571 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.764942999 seconds)
  done (took 16.098193417 seconds)
done (took 268.970582815 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.528538345 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.533110924 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.552398915 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.528750254 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.545779998 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.555850868 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.775925799 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.559072257 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.76085227 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.536283803 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.545695038 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.531540145 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.532250176 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.691051116 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.528034822 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.531406887 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.53861476 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.519991344 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.55305755 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.790843067 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.561077583 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.525368923 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.534655998 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.540090825 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.515382248 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.607942546 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.612945657 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.69997152 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.662683365 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.606949607 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.524433444 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.557798289 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.555229375 seconds)
  done (took 71.527350855 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.526234943 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.536260156 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.536912792 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.537840696 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.535914609 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.537947712 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.52824905 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.53721078 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.537054364 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.537519738 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.536334346 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.535732014 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.539583384 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.536371231 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.536965033 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.508208862 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.528679969 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.537698206 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.527035153 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.512085955 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.536305133 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.538148928 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.540167047 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.540268267 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.538273752 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.538162815 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.538942345 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.538588013 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.539229008 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.537482628 seconds)
  done (took 47.422898525 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.538969922 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.540117524 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.540722102 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.53972854 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.530400474 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.534489064 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.911827205 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.544425114 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.53416595 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.533611848 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.525415654 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.545506674 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.588817955 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.52714328 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.539057195 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.540716809 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.540237627 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.532206688 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.525413454 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.548112825 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.917569849 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.545183047 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.910767174 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.551825693 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.534243334 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.533003883 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.53704607 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.524143221 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.53450173 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.525873469 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.553959904 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.903470153 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.531071784 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.542756351 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.538794281 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.548641051 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.540849437 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.52649327 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.534905526 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.533020431 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.892246396 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.53243907 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.524888267 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.548474492 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.53951672 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.542751388 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.525758345 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.528303276 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.840328792 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.538581201 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.543845631 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.534562384 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.545139536 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.535486276 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.838555967 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.535749081 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.534479089 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.546102715 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.538118597 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.893866951 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.544161863 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.534435739 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.52871953 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.535126764 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.527280626 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.536269965 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.549712776 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.535635375 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.528660749 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.563615866 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.529165253 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.54025251 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.544822008 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.529344399 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.528740312 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.529329154 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.536837853 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.534106595 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.54607725 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.900662253 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.542584836 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.528642257 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.928331664 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.54079426 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.548362023 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.547287918 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.545118737 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.606847913 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.894998331 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.518719816 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.557707313 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.535756098 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.903146732 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.544618754 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.537468877 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.546691891 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.544988004 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.545332306 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.530903239 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.558899971 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.540623438 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.551348504 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.532218937 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.543713224 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.89997733 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.542937227 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.546506637 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.543166227 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.610291459 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.547258462 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.553418521 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.543438133 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.909011161 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.542889037 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.549396281 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.532337282 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.534422441 seconds)
  done (took 224.615579744 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.533238265 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.534156148 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.53210973 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.533610609 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.532916928 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.53786442 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.534236487 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.535964173 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.537815667 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.531554509 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.533285874 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.543454544 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.540565505 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.533730164 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.556123115 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.535423059 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.532681158 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.560640319 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.535358706 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.534240877 seconds)
  done (took 48.145212126 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.549054226 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.233472968 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.235373287 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.555928261 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.548149152 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.541064085 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.612590224 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.555280207 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.549425623 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.938194644 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.769767621 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.557578343 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.549757254 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.550253527 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.23664461 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.525698543 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.936145182 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.238022004 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.551257208 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.23399662 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.521480476 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.552276912 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.540992173 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.263768385 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.926433276 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.901450822 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.615619803 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.24531872 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.553814663 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.551110967 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.235801629 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.551741813 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.541481904 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.218807146 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.551021456 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.56468603 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.550891175 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.617402137 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.623127453 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.920844329 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.286256024 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.915779027 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.562635048 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.726302585 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.553116703 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.521173305 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.247755323 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.554479908 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.521507357 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.552944838 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.558227318 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.248780809 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.548751426 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.251651414 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.559151697 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.552436941 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.237155464 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.249227119 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.245505949 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.772664249 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.548044401 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.918589363 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.55811596 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.247295757 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.553350318 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.555333601 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.552904756 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.770544041 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.243557991 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.904849053 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.916213117 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.917193632 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.555052713 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.630242019 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.559543524 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.916919126 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.628999645 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.98397265 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.919231302 seconds)
  done (took 142.461427188 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.875206651 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.681795528 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.997648983 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.197596406 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.117690366 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.699433626 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.683324186 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.83642459 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.562415879 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.656822704 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.326156411 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.654132336 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.40447164 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.642245708 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.669610779 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.69290547 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.016104234 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.561775639 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.280740909 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.30768551 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.570537989 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.661223911 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.380194285 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.977304941 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.548627948 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.331781801 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.547557951 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.137560273 seconds)
  done (took 59.421026192 seconds)
done (took 594.983562809 seconds)
SAVING RESULT...
DONE!
