cset: moving following pidspec: 18035
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.23654649 seconds)
loading group "string"... done (took 0.46041656 seconds)
loading group "linalg"... done (took 7.545521958 seconds)
loading group "parallel"... done (took 0.169693161 seconds)
loading group "find"... done (took 1.166089867 seconds)
loading group "tuple"... done (took 2.077279257 seconds)
loading group "dates"... done (took 1.319239993 seconds)
loading group "micro"... done (took 0.244315819 seconds)
loading group "io"... done (took 0.701252888 seconds)
loading group "scalar"... done (took 40.614776686 seconds)
loading group "sparse"... done (took 12.455510383 seconds)
loading group "broadcast"... done (took 1.106402673 seconds)
loading group "union"... done (took 13.757891697 seconds)
loading group "simd"... done (took 4.766126229 seconds)
loading group "random"... done (took 9.611529829 seconds)
loading group "problem"... done (took 1.967783167 seconds)
loading group "array"... done (took 22.424011265 seconds)
loading group "misc"... done (took 1.423766919 seconds)
loading group "sort"... done (took 3.568366172 seconds)
loading group "collection"... done (took 19.376299303 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.538192094 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140666063 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131872795 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147255322 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202570575 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14229391 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156604418 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.112938068 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.968627031 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179573021 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153444605 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.518932769 seconds)
done (took 5.119590621 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.255088788 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094713084 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103421492 seconds)
  done (took 0.86809689 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076367934 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14556938 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094119969 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077827908 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094244522 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077060329 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093667871 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076904481 seconds)
  done (took 1.334945153 seconds)
done (took 3.214643348 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.734812181 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.270665769 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203996818 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462968424 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195395759 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215800952 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684972503 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.365182388 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.258258164 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099785964 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143051996 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.385797479 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137556666 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686931704 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088947665 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122565845 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176880805 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.454492896 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082387001 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109414321 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116472556 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141793833 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128444718 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089955964 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184635832 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082367938 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192272497 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107920981 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08017905 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288574953 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.2001055 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687585039 seconds)
  done (took 10.891193277 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110452662 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132946122 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097262461 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137663572 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132987492 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099073406 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083691249 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095930614 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120956468 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174026937 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113716916 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13568608 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094332699 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082094552 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116035431 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245098142 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12151605 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104030481 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100455549 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103818217 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121372294 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111539407 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108226498 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092792996 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165726808 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.22091408 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113226606 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127350462 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098655467 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110854202 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142976419 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143730007 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093989386 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080244186 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171935401 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123589977 seconds)
  done (took 5.118547793 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189000814 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121059886 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.1695404 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165148306 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141516391 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162798353 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113500281 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.2556417 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.103278806 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175001403 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140796859 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099503113 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096222973 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081526081 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096485574 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.618349511 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161740813 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115904319 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115271835 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102893143 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098830412 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.348210171 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.1032129 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095962321 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08132655 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08194375 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16120378 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081770683 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.262863204 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.103749963 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099916081 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098998951 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.154967024 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132441027 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127409611 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134506429 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079245474 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.094791018 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173900861 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086626538 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09455919 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07888776 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119232384 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133377523 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132781359 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095468351 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080213936 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204149763 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095923952 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11239361 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.938417084 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180279869 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090662617 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09751329 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.322508149 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098709078 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096976929 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077319311 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.272909319 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.183368037 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098121027 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079096688 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096037264 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079973508 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400814185 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082094911 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.691505688 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08373809 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106636648 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082084697 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095601456 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102435219 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086861544 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115206904 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.076642288 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096479533 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081033108 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096490063 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077874793 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099199582 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106318185 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085345131 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097187883 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147065336 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.093576238 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098701934 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126735825 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099050421 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078794529 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131334701 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097919219 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080065414 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13226311 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098117909 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090908145 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099553963 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14246537 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096000708 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.167263105 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09592375 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126490749 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09850445 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113059482 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111464408 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098187366 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084227542 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094365441 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076916607 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095251232 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147913812 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096607956 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082826479 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099982587 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108007049 seconds)
  done (took 22.474135263 seconds)
done (took 39.158281246 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.316647423 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102166383 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102262003 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102556363 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099818844 seconds)
  done (took 1.46979063 seconds)
done (took 2.190096463 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286718489 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.211474189 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076987025 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166514761 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093789951 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172053056 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161252071 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111042274 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.219965021 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076648781 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.178524462 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077200283 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092840153 seconds)
  done (took 2.673287867 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094780674 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114126638 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08187995 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11030587 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076009085 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110750248 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091322266 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115485003 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108430824 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084954819 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092710559 seconds)
  done (took 1.798830023 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094420984 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112028596 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082478101 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109854678 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076775678 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109668933 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09274653 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116290091 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1090776 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085390624 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092966502 seconds)
  done (took 1.801235818 seconds)
done (took 6.985586345 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090942622 seconds)
  done (took 0.805788449 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.925097709 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.874344602 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111844767 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150796006 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.298345442 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192004604 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.483283601 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127267601 seconds)
  done (took 11.082260596 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.11516481 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099149065 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099911455 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.095241667 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100678701 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083323153 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.10045961 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099282205 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086008133 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101488617 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085822854 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099766843 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101520887 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085160562 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102166837 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083163229 seconds)
  done (took 2.321127548 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118731691 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118077073 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105436715 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108753555 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086400685 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104510317 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105526695 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087821899 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100591844 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102765169 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089906472 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103905423 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103085995 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079417292 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10670849 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107095797 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084929928 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105869416 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106745278 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089308449 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106334817 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094570492 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086210657 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105929836 seconds)
  done (took 3.23517276 seconds)
done (took 18.163364161 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158035037 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107559785 seconds)
  done (took 0.988828216 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094630222 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112237316 seconds)
  done (took 0.935736104 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.09618937 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096087187 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121934685 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108337422 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080332033 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095705362 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119211434 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079287429 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095902945 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.07981914 seconds)
  done (took 1.704669815 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081793396 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108845418 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101326201 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093872578 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104518667 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094327139 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08712769 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098747068 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108483773 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076904958 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102368923 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113639795 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084644529 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116074186 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10337459 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083254851 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101815027 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098400635 seconds)
  done (took 2.491986633 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078952351 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096648143 seconds)
  done (took 0.906882164 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081229636 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093469468 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081330234 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096916044 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093840171 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076905643 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094463001 seconds)
  done (took 1.349147015 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.51124858 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13487285 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.252526967 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084061926 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118526712 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300203971 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098110642 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085084149 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101700491 seconds)
  done (took 2.47343028 seconds)
done (took 11.578700806 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092234182 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116568876 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111849793 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.464277025 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107223304 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096641986 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158936085 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.252670556 seconds)
done (took 2.135283981 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.142978998 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323875946 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113663143 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066622586 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094965862 seconds)
  done (took 1.33817957 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078891198 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099283897 seconds)
  done (took 0.915398204 seconds)
done (took 3.136423776 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079659928 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.131634794 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079480682 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095858237 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081419018 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.094914502 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077264612 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097482364 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079511458 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.09575728 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.095993997 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079463746 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093879428 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077460811 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096030192 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077175216 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093153951 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.076786792 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093913033 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079873268 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096111455 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077468373 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09399133 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077340342 seconds)
  done (took 2.894133945 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098991698 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098070373 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101701104 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084946072 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101961422 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085129029 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101148266 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096933822 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085462773 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098609845 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083694692 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.100367814 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099576066 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083881457 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098736836 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100687002 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085681528 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096731017 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082042342 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100658863 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101753052 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0810039 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10032868 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085034681 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100477266 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100391552 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081643314 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097851888 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102081844 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083770467 seconds)
  done (took 3.561792396 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084615779 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093294745 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07867467 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101460464 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076957899 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096316989 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076498135 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095156574 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079219545 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094581434 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078322639 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094177474 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077248798 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095825188 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07814234 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098664635 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106900888 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077667257 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094756401 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077910199 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097316282 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077719875 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094666353 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07669696 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094517675 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.0768452 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094951857 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077238137 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09531856 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077157452 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097172354 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081215966 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094298639 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083717386 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097664933 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077803241 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097375965 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077375249 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094432505 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093332322 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077574702 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094064796 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077842659 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101561384 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077928805 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09600529 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077220742 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.0961603 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078580618 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098442132 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078989814 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09505099 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080506595 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095101845 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08170025 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094179972 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096103116 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077685064 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096065883 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07702981 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094936829 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077044174 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096888054 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078091968 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110161887 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084622977 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094932112 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079990048 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095577697 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080656711 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096058005 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108629479 seconds)
  done (took 7.104523049 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082329235 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105934699 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079865198 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097283219 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076263883 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095100669 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098459662 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078561468 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096716714 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084928243 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09526341 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079457322 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096500364 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107058244 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078954928 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096624938 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08443756 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093476734 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078119063 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098804058 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078123961 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098332238 seconds)
  done (took 2.727285353 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207952199 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104175756 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141292444 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105854974 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082219446 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105691243 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101656092 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086948349 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101946208 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083391963 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100111564 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101427131 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083049352 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10023682 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100239305 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084076426 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101967957 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085076392 seconds)
  done (took 2.627268811 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092776112 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099110553 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.1019488 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097864601 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098108785 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083267376 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103222621 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10656633 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083160809 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097645032 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09033659 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100097447 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099743324 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080165713 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100236887 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081221712 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100366786 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080908668 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107195034 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103425923 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103322008 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090718746 seconds)
  done (took 2.853411664 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097070423 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100270594 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116391492 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083676209 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094044889 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08056614 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105048815 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081152322 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105911724 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098758599 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08084707 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09644468 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086961687 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097116806 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103430705 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080927077 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099218099 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080531982 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100615779 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07648017 seconds)
  done (took 2.619065153 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101948556 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100043753 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099320166 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091299127 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099613048 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082433802 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108609031 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100421862 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082385716 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124382784 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099716051 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082734199 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108793155 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105436181 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099574708 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091604154 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109199356 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108678126 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082596118 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099452799 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124426966 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0826644 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108069173 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.209883884 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082682194 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099430139 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09926426 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089030013 seconds)
  done (took 3.629580079 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080551576 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097821193 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077882497 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096059178 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078481398 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095967879 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07882312 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095930359 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080701525 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095202604 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080868244 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100285103 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081045921 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097907264 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080196655 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098071717 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081229868 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095905131 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078219911 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09516284 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080740174 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098028435 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081379629 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095978961 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0776341 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098057027 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077929406 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095579086 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081438896 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09595385 seconds)
  done (took 3.407675278 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090547174 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105010515 seconds)
  done (took 0.952735923 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079078645 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113862529 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077869757 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102395141 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085726007 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10009521 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107353248 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086460931 seconds)
  done (took 1.510011356 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096077749 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109345225 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082851984 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111654716 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.10935661 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09575522 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164674203 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100327817 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086846631 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097558512 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112345829 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080169039 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104518771 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081227039 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104465189 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087482473 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096733636 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088440268 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101657475 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09719383 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082676389 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10953418 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083826686 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096020878 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082349038 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109761956 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.107875664 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082984093 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102962699 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10806745 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087666722 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093210124 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08171767 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100169744 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079343775 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108045933 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111889831 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085215417 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108315033 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083133353 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11042499 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094969949 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087106046 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10451142 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092026486 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099036929 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083054364 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094355134 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096089591 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084080824 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094400128 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081821978 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092879255 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088071442 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103218323 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111692494 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080756628 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10088496 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084771851 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102376896 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08714568 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101201297 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084061905 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098549149 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106057905 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08661605 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106628213 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078224925 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093281009 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.07952985 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10739929 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122647293 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089992404 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100163131 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082661774 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097141065 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1026685 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083610969 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106616476 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090063558 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098936785 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105782465 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088961323 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09947849 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08442403 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107063068 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097507798 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084734957 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09644263 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096339338 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098328561 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079852561 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.09725737 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109090632 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085139996 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098865055 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078957679 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106124221 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076295798 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100633943 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083804935 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09980979 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.107860515 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091322361 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10609243 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107452854 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089219835 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099793438 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08443569 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096344331 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085237138 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101972574 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.08920608 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094019575 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102672173 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083219654 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100271943 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088524724 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09750395 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082603635 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107732424 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105739195 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080434462 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095988472 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084266765 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099628128 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086164407 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105531945 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09819352 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077388063 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094719835 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.08634475 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100701493 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08698883 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105360918 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102149337 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077376243 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097526462 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086373317 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107135427 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08207959 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.099380174 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103832656 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082856477 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098471536 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087108481 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102033261 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080983857 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104471527 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083186676 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095580044 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103523233 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084345065 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098002121 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085806151 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104021293 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085673027 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100333908 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098001738 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087530229 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10142222 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081297483 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100039925 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08194967 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109971923 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10164645 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078117221 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097224043 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090269639 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097348285 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081864278 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099097812 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.085546619 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101304953 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099020744 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081506439 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100774575 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095085548 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105490761 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101170616 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088236169 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110422162 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08182912 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101208473 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081867328 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101598274 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100833501 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089590754 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105497962 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088019259 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102837188 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078489249 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106278976 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107695154 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081445428 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098276668 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081090326 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104236715 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107052848 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085792066 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100609226 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080218809 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101201386 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085399193 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103753808 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099690345 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081059602 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104325884 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081483444 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106493364 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101160137 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091173229 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104237245 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077811489 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104923587 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080639597 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106832919 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07783138 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098111405 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098688319 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083937876 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099516817 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085087612 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094944055 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089340558 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108850772 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082787297 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.09930176 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101129895 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091273576 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101956821 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08583678 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103331892 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087907007 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113459514 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099962368 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.08536474 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11019979 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.082961687 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094464368 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088122255 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098673617 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099625823 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081334432 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098042798 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085856223 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109801261 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105150381 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076840611 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103334431 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081100264 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098218525 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077827262 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107344681 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086445291 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102512224 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109376032 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084029998 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100902761 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087346579 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100529201 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083268749 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102167658 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103675731 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083410851 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102688749 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081650616 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102574622 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08439607 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098873657 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.084496046 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101461228 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100307811 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089315216 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099732097 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082684328 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102900055 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.083340577 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101167676 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082886192 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100259673 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103741107 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083855181 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100144438 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08548936 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095456878 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089814586 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100745265 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090183991 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100984933 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096825197 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087854884 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103017872 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088749442 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101386908 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101941054 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084049859 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099873351 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086362636 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109654365 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080506119 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.1098409 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106506688 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083370609 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102647007 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082706977 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.10210148 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082169965 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103823944 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084030931 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101615537 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100244525 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087380005 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10362599 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.08241052 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10309692 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084276468 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100849397 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083495655 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095819932 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081940661 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10083027 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101008241 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090224789 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10234849 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085165424 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099731374 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084698889 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100183704 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079726862 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108541173 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109980736 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084249334 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109281648 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099956188 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084115998 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111288843 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077631427 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100139511 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080423506 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099728108 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109361163 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083627238 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109240249 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08341259 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100657059 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.07998104 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102330649 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081735891 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095406609 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080923118 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104924992 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103557905 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081799766 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101138612 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086229026 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102457175 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089673158 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100666241 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102408112 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08374174 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097220737 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081331121 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.1001187 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085541243 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102415531 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080833129 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098306628 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.090665456 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102834928 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083123638 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101110057 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102349253 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090109633 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101310286 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086641065 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105141209 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078223228 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103961445 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100391639 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082884779 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100381079 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086794376 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104725493 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084256982 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108508303 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100527768 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083552769 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1014553 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080844449 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100956987 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083356131 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102160192 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082404932 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103030576 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109022803 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080800205 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103590561 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082372853 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102128903 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.087588231 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102965192 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084255795 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10946779 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104430847 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084277627 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.107917708 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086673015 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105339066 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102526085 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084933881 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10732121 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08251814 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109474074 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082818877 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102526634 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103245854 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081370879 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101170782 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083262075 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099904016 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.087542808 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102594606 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081645179 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101341676 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081015396 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102923686 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105545733 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091172547 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104236682 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086875198 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09705988 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080173771 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103184405 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099671103 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084304439 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103450264 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089131867 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.10475949 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083282135 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100319443 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108095811 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089344608 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106729866 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081470688 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106292348 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084516399 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103963031 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102142955 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083920499 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103323058 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088133329 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103210761 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082777463 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109918854 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105724241 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084754164 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103412349 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084101937 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102925116 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078829886 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103277655 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085742781 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10859545 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104445051 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083595675 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111622442 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083593989 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101570204 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08749151 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102172529 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107807961 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.07832352 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102736988 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084625157 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103659677 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078857676 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100810911 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08070314 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10526042 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082944693 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098155389 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109801216 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090622746 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.103586842 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082969545 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10086826 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078573448 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098066947 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081928395 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103628265 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103031797 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092817501 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101973064 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082245834 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097641319 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083163581 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104781793 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104773295 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081501971 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096932544 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081763564 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.103808624 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089803074 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100172161 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083160887 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10601696 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104009489 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081162153 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106205881 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079949035 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105738515 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093175278 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103368766 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101714994 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088850363 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110350563 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085273067 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098033887 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084149916 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104499681 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101841886 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085085109 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103135467 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096575577 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105723408 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082765885 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101326186 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104022184 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083300804 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109845168 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084542426 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102594883 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.087819602 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.104332719 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110920362 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086125659 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108007443 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085507268 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104212571 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100456199 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083877405 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100239498 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082354584 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103315943 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084194113 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106990696 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109891306 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082565034 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112228052 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091069671 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106655047 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079950952 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.10121502 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082440901 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098119777 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102623581 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082245789 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100548448 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081733373 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100518465 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.083519979 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107632558 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084786409 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103633335 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102753831 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079571478 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103435628 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085756989 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102235422 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.08159512 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102923254 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084019541 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.1086395 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107204557 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084118395 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103360425 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085861919 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103380777 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079209081 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109067003 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082405094 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.104909084 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082762289 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103587965 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103720884 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087705273 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108933418 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085101026 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105376743 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114006942 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086305654 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099610822 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081195919 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108283875 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082395042 seconds)
  done (took 57.397109917 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146725578 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081047348 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098353097 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078883059 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112883927 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098129616 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080000295 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098952178 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080925686 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101186888 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0794715 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098457758 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108420526 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123419249 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092702171 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104077328 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078559177 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099770436 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0980931 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080944376 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108445549 seconds)
  done (took 2.859609156 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104636705 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117663231 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114214612 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119176038 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090319605 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115427801 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113608174 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115450667 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098465656 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109967465 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117478232 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116490671 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092256627 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.11041543 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109883629 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093962394 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11836069 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109160202 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115948106 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095051222 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112867685 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114057174 seconds)
  done (took 3.212520372 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08374507 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102544245 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084683942 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098263652 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083308776 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097047154 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088298052 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101266597 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086517773 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101504087 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081518104 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10154739 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103295772 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07851319 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101394067 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081323275 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150276585 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106481045 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082589237 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104547252 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.079172585 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.104364277 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098181623 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080060981 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101152066 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088004655 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103549576 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081980655 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102931279 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082461515 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102854992 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081119133 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104462804 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103227029 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082698169 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101099552 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084164502 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102484867 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079460275 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100812576 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084013309 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098517727 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084247278 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104164202 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082586333 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101016447 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084667788 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103258771 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097570077 seconds)
  done (took 5.433558608 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104164859 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160495625 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085915063 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142859583 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.1208717 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11244315 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087149734 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141888941 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101201682 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082454493 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121490255 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119704166 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103839328 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089150305 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110649128 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.1031767 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085938566 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10187369 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107538945 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084250901 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108703048 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090895411 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120314346 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117567104 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107442419 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082691791 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102520051 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10795647 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098141105 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108948602 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108269842 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09074822 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120137149 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108949086 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082826447 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106077047 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121604007 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104017234 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086780214 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100589201 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086474226 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108877 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109320689 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102021237 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104593617 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108573726 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084022888 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100945241 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117080425 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088049573 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113599363 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120315139 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108126993 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084904636 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109281406 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119561933 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084190766 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101553503 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088051785 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117335139 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100498248 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088749972 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119151817 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106444104 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111544603 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099206473 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108861826 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107863128 seconds)
  done (took 8.091893625 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092683686 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111458983 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120292528 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120779578 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090235553 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.1113417 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110344394 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090729784 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111357871 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116174933 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111436656 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13328089 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086097409 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114868456 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110774913 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092134075 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11163082 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110202547 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091188242 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11089426 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111027725 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119910263 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091279355 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120546227 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142164145 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105579317 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091259796 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.1116675 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12056064 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110368444 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123053349 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091251984 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11058862 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119966274 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124495081 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090971382 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102796549 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10965344 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091990866 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111423213 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105712488 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101405294 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111961683 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105632532 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091010193 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111534923 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12087838 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124863328 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113934963 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097189289 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111302749 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120151238 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109649124 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092279983 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120723705 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146980469 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119966283 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120361037 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110691894 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101015783 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120161909 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127898117 seconds)
  done (took 7.653858224 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107732284 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11525619 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116791839 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.09989167 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082710702 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108769101 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082561672 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102415632 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114291339 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095272453 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116529612 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108875621 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091248724 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116725626 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109104855 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112118991 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08873369 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108790459 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114312784 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109248331 seconds)
  done (took 2.924671798 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093996678 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124055915 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084720308 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111850392 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107967045 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091126184 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10740054 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107079229 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085812393 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108801878 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095461367 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11644126 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105630382 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091603371 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11589479 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111711511 seconds)
  done (took 2.48266494 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096149402 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117842889 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120071997 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08415478 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103469396 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08053462 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105166721 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100683806 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080618925 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120408177 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086491922 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108871209 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105188201 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082867482 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100791332 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087910215 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100577701 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082081326 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105366399 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119453403 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095389156 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10376921 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104704249 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087000674 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104815083 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090436251 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105646312 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102145696 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08369164 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10534396 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085472013 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113051871 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101197274 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083308884 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101655672 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081953646 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.1045894 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.0850123 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108521611 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104243937 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083610621 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105022584 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085405744 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105548522 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080745713 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105627207 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100032549 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091528141 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102848398 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085221499 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.1046559 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086848948 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106163921 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115599388 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089014261 seconds)
  done (took 6.215326621 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099296644 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109250495 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080299782 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103830205 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087465683 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107164733 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107987348 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088249991 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106349852 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082795827 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107379101 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089538624 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107418952 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108829559 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08800646 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10865061 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080124888 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106937634 seconds)
  done (took 2.602849281 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090999798 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104710626 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092110896 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105536425 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085283596 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108786677 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080304804 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104311598 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103625349 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085528215 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104657823 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087303371 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103597309 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087389917 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104791351 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084299294 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108227254 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103193646 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085367243 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100546604 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087690953 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103505274 seconds)
  done (took 2.953826223 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117917845 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124547938 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092384118 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230782154 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.102924653 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132255627 seconds)
  done (took 1.633494507 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10991253 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121122125 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105856542 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106472075 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115195732 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086827661 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107574654 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107722902 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117553612 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101536526 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10807401 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118317488 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117166964 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09717483 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114996209 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11463041 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107540485 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087029715 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105643904 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127427507 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088096351 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118587111 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107640996 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086140172 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107845981 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11683878 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1185644 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122569712 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087098807 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118282999 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113966375 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08862592 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117906374 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121233414 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108730378 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098060401 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107841316 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128939196 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113708811 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096349325 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108886669 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114074384 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097553702 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113156182 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118292214 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107597673 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092486737 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108540942 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107099595 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134548649 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093976915 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116999711 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115784559 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11797011 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098070776 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154653672 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101039458 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117197473 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115121483 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123126953 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116985118 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094164786 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117561277 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122892575 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114433377 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117481548 seconds)
  done (took 8.123516241 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102426275 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125407398 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10746932 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122122637 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096680818 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108165557 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107704877 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087927725 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107907247 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106350678 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152537468 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088314709 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118774661 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117411259 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088063432 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108498139 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107853739 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117338839 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087296957 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135843853 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107818164 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117228689 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117609201 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0980238 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122116313 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114132691 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108183186 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087519771 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10730036 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107621592 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093551562 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108419508 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117409197 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086328947 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117556343 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108615893 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087484699 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114240938 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107773404 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114468919 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098208599 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128670435 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108305921 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107518504 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101909355 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108323686 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108168181 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087763585 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10912963 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106313092 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102892447 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12290316 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12190007 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118268763 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107419337 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088737554 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108157828 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107423779 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088592026 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114969652 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116846856 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088007103 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156199783 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087969139 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108158966 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117991618 seconds)
  done (took 7.998002863 seconds)
done (took 154.206596157 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097957031 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135952114 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095602275 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168166245 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106698346 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119193404 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137072041 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097349022 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106345866 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085117663 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106554087 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087408989 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171360573 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084842431 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106103996 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108117837 seconds)
  done (took 2.652842979 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199123584 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254620098 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102050616 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105732085 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.08923717 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110216964 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.10433549 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090938077 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.10857265 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085227688 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108963122 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086675438 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105478533 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086168204 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110940517 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087774551 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106007543 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087242779 seconds)
  done (took 2.87360147 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112464555 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.160133641 seconds)
  done (took 1.122898614 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118428665 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179967267 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319306663 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155610437 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.1068838 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127050562 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15625703 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130767962 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196961834 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122666701 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121992255 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097687695 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14051149 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115292454 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094042265 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118399208 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141450239 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092702527 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115861703 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114857621 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11649606 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105727073 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115473716 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093672664 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18035415 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119105345 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084535305 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10614965 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115654788 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094005154 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112714647 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124394725 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097885751 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174305066 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105704916 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175543131 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097107246 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11184074 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113830477 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091231886 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118863186 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118496388 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104504854 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118531952 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08415566 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118704017 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105603299 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084993973 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114748085 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097393345 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11418765 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113086746 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155986255 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11821435 seconds)
  done (took 7.514520417 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795166864 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156223606 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090137916 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.887000928 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138149166 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104258836 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.783099968 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134878743 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232937319 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.76035501 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134227377 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121386055 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227809446 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.239307317 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.955925798 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313302738 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.674229075 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102184156 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152321165 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152918373 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119238262 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138152231 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131288332 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.460172904 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096005992 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111531043 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096646949 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122065747 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159728405 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127152597 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114076276 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179752297 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250125841 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20625341 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1163348 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090108622 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111506748 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171744969 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267599883 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214803486 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180528424 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087397229 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.1105219 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099913139 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132819423 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108346148 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165040232 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174547521 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.194188572 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092259662 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121232234 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120134423 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099696649 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.186569974 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099661605 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.323009148 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312394023 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111690515 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098555439 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127734889 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26364096 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123225594 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223866968 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117600919 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212742539 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110286549 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769450226 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.190612696 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090451943 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117550176 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097798151 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116147072 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12143127 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171701157 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392336771 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124636959 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09394017 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112000044 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206716306 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125878324 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109990596 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162786385 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094352094 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120889856 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125235941 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122529618 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170939429 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.233668108 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123477148 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118660369 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09469737 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126074842 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115824134 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214191454 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218405595 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163408779 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209253682 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123000615 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164167243 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188496627 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098567847 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194091866 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098678016 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126196905 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122930036 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216511717 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145279872 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102348363 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115277938 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118388739 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148305101 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105228792 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119512477 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169642545 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.51213498 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169487737 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108391013 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106785451 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120492536 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161358464 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118439913 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26124234 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100399308 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.19097618 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098836603 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109257447 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120549212 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164996015 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123080452 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099799218 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123084087 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118272216 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.23746917 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218376509 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101839843 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244120677 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184598766 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11791019 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173154468 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121946082 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168836818 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119059691 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101104012 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117815007 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.799839667 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100903499 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121481601 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115263725 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198876095 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089332489 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123686234 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12445697 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087049012 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775274873 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127427589 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099104482 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125005703 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119150136 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119973382 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096885653 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115874451 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16391803 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231532514 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120529108 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098347128 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.1251537 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160283665 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117424213 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.1254741 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124802039 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102957476 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12298232 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115579293 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10337276 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191905256 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164496799 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22284453 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569866179 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11225206 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123959878 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227700971 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091025966 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289463783 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119911961 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.205679207 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18659173 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099788985 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309361605 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187104801 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20227802 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106869376 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195467836 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088183795 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118116433 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166569134 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111862591 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096332001 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.183969699 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104621825 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123938723 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.981655592 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090070604 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247678483 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088520245 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.193010738 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096166762 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121235881 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298023651 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091310462 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129497022 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164921413 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116147331 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12498247 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.708849866 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126073176 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121887392 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097611373 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222279949 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163632024 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120595042 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119880995 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098611169 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185854326 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208218241 seconds)
  done (took 44.188332143 seconds)
done (took 59.194096277 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279597736 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214630753 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260622358 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169431583 seconds)
  done (took 1.868917251 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170563205 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149033068 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119737424 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107134068 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15062706 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084986238 seconds)
  done (took 1.654749829 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.359292668 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275360862 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242868484 seconds)
  done (took 1.756082137 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.286397956 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248004796 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354190848 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.396476987 seconds)
  done (took 2.282933922 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208448756 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131696745 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110772173 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104229228 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196196285 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250571862 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140255564 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20294719 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122770596 seconds)
  done (took 2.389777139 seconds)
done (took 10.825477648 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.137324345 seconds)
    (2/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.254346025 seconds)
    (3/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.131205745 seconds)
    (4/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.17374758 seconds)
    (5/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.276443758 seconds)
    (6/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.122373227 seconds)
    (7/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.211409753 seconds)
    (8/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.234336007 seconds)
    (9/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.14018781 seconds)
    (10/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.21258981 seconds)
    (11/286) benchmarking ("sort", Float32, false)...
    done (took 0.149466061 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.130989977 seconds)
    (13/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138914173 seconds)
    (14/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.227764497 seconds)
    (15/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.192523408 seconds)
    (16/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137848738 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121452236 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094199649 seconds)
    (19/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.219485137 seconds)
    (20/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.13771259 seconds)
    (21/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.201304415 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.180740957 seconds)
    (23/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.222786641 seconds)
    (24/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.123222978 seconds)
    (25/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102501582 seconds)
    (26/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.190472953 seconds)
    (27/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.18495068 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.144278921 seconds)
    (29/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.150115489 seconds)
    (30/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122024056 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.222487628 seconds)
    (32/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.137737043 seconds)
    (33/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.15887503 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117890763 seconds)
    (35/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092571576 seconds)
    (36/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.211943577 seconds)
    (37/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116091416 seconds)
    (38/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117207912 seconds)
    (39/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086669268 seconds)
    (40/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116897776 seconds)
    (41/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094002824 seconds)
    (42/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.143177041 seconds)
    (43/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.169571723 seconds)
    (44/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119990048 seconds)
    (45/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.171953297 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.134777942 seconds)
    (47/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.119600757 seconds)
    (48/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.194447347 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093245595 seconds)
    (50/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.122880666 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117135679 seconds)
    (52/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083909851 seconds)
    (53/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.117492971 seconds)
    (54/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.099607638 seconds)
    (55/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.199603998 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088281269 seconds)
    (57/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.119515021 seconds)
    (58/286) benchmarking ("sort", Float64, false)...
    done (took 0.171184435 seconds)
    (59/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.094193668 seconds)
    (60/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.089634245 seconds)
    (61/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.166831541 seconds)
    (62/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.189987593 seconds)
    (63/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.088835842 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087038491 seconds)
    (65/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.138590292 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.08575494 seconds)
    (67/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.116205855 seconds)
    (68/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.114847575 seconds)
    (69/286) benchmarking ("sort", Int64, false)...
    done (took 0.086280772 seconds)
    (70/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.117284713 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.112175385 seconds)
    (72/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.115827239 seconds)
    (73/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.184235334 seconds)
    (74/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.128965053 seconds)
    (75/286) benchmarking ("sort", Int8, true)...
    done (took 0.217741112 seconds)
    (76/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.121023711 seconds)
    (77/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077691957 seconds)
    (78/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.149490627 seconds)
    (79/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.187710042 seconds)
    (80/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.165178615 seconds)
    (81/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.119786467 seconds)
    (82/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.221399261 seconds)
    (83/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.203737641 seconds)
    (84/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.115135436 seconds)
    (85/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.175068286 seconds)
    (86/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.112740267 seconds)
    (87/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091785756 seconds)
    (88/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.112896674 seconds)
    (89/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.08227442 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108658944 seconds)
    (91/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.08741475 seconds)
    (92/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066409828 seconds)
    (93/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.11989915 seconds)
    (94/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.116469786 seconds)
    (95/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088812511 seconds)
    (96/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.120461938 seconds)
    (97/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.149618527 seconds)
    (98/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.176443614 seconds)
    (99/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.180986885 seconds)
    (100/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093385655 seconds)
    (101/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133505799 seconds)
    (102/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.186355178 seconds)
    (103/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.185395544 seconds)
    (104/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.133521192 seconds)
    (105/286) benchmarking ("sort", Int8, false)...
    done (took 0.188332768 seconds)
    (106/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.090302165 seconds)
    (107/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067090245 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.134638713 seconds)
    (109/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096282874 seconds)
    (110/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.135838636 seconds)
    (111/286) benchmarking ("sort", Bool, false)...
    done (took 0.181237179 seconds)
    (112/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117760431 seconds)
    (113/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094425019 seconds)
    (114/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147658273 seconds)
    (115/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092212787 seconds)
    (116/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.229183504 seconds)
    (117/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.106781622 seconds)
    (118/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093889384 seconds)
    (119/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.101268923 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086331793 seconds)
    (121/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110280001 seconds)
    (122/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068008056 seconds)
    (123/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.171456598 seconds)
    (124/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117548495 seconds)
    (125/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.149453382 seconds)
    (126/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.141116698 seconds)
    (127/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.070254836 seconds)
    (128/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135206477 seconds)
    (129/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094459105 seconds)
    (130/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109047742 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.138470024 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086931775 seconds)
    (133/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116611177 seconds)
    (134/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101168631 seconds)
    (135/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.08894684 seconds)
    (136/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090907178 seconds)
    (137/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.164412064 seconds)
    (138/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066708971 seconds)
    (139/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.171171132 seconds)
    (140/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.066870056 seconds)
    (141/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136654118 seconds)
    (142/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118421865 seconds)
    (143/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.152032711 seconds)
    (144/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.143709232 seconds)
    (145/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086307872 seconds)
    (146/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121365268 seconds)
    (147/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066710146 seconds)
    (148/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.167175848 seconds)
    (149/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172324046 seconds)
    (150/286) benchmarking ("sort", Float32, true)...
    done (took 0.230555585 seconds)
    (151/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.160079184 seconds)
    (152/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.078249269 seconds)
    (153/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086581189 seconds)
    (154/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.143457191 seconds)
    (155/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085699913 seconds)
    (156/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.091157358 seconds)
    (157/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.184850498 seconds)
    (158/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099024234 seconds)
    (159/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137220356 seconds)
    (160/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.092370135 seconds)
    (161/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.09062036 seconds)
    (162/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.148683462 seconds)
    (163/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.092422314 seconds)
    (164/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067877745 seconds)
    (165/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.090376216 seconds)
    (166/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067885326 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092702608 seconds)
    (168/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117578109 seconds)
    (169/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067864707 seconds)
    (170/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.108239417 seconds)
    (171/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06737916 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.11780218 seconds)
    (173/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.131321857 seconds)
    (174/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.18057921 seconds)
    (175/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089879479 seconds)
    (176/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124751921 seconds)
    (177/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.168842627 seconds)
    (178/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086100264 seconds)
    (179/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.090147501 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086826746 seconds)
    (181/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.106431514 seconds)
    (182/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067619428 seconds)
    (183/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067680795 seconds)
    (184/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.088965517 seconds)
    (185/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089285677 seconds)
    (186/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066756766 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 0.220568436 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109664914 seconds)
    (189/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.13678566 seconds)
    (190/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067147993 seconds)
    (191/286) benchmarking ("sort", BigInt, true)...
    done (took 0.23192456 seconds)
    (192/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093033251 seconds)
    (193/286) benchmarking ("sort", BigInt, false)...
    done (took 0.245280144 seconds)
    (194/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100931342 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110784774 seconds)
    (196/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095009651 seconds)
    (197/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136189007 seconds)
    (198/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076068131 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118562584 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096398202 seconds)
    (201/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115080485 seconds)
    (202/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.0759471 seconds)
    (203/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.117803648 seconds)
    (204/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091698734 seconds)
    (205/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.089614825 seconds)
    (206/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088604442 seconds)
    (207/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.088868052 seconds)
    (208/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067279471 seconds)
    (209/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.067165958 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114511318 seconds)
    (211/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067045712 seconds)
    (212/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110079714 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.308666539 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110573812 seconds)
    (215/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082394594 seconds)
    (216/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123022429 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086013358 seconds)
    (218/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.089645827 seconds)
    (219/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066273222 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.08594915 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109957911 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.181334086 seconds)
    (223/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.09538394 seconds)
    (224/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113732773 seconds)
    (225/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089508482 seconds)
    (226/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116749441 seconds)
    (227/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093039678 seconds)
    (228/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.089270649 seconds)
    (229/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085525787 seconds)
    (230/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126323219 seconds)
    (231/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.086729175 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109007468 seconds)
    (233/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066826268 seconds)
    (234/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.089902893 seconds)
    (235/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088171349 seconds)
    (236/286) benchmarking ("sort", Float64, true)...
    done (took 0.228896562 seconds)
    (237/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.076719536 seconds)
    (238/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090940362 seconds)
    (239/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088029612 seconds)
    (240/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135432562 seconds)
    (241/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129084214 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087105695 seconds)
    (243/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067671883 seconds)
    (244/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.092376943 seconds)
    (245/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085578175 seconds)
    (246/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109714031 seconds)
    (247/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.093949877 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116035398 seconds)
    (249/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093350017 seconds)
    (250/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.090286453 seconds)
    (251/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.108978313 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118567776 seconds)
    (253/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068435967 seconds)
    (254/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.091498139 seconds)
    (255/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068801133 seconds)
    (256/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066946921 seconds)
    (257/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090804225 seconds)
    (258/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066575358 seconds)
    (259/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.067218749 seconds)
    (260/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.181149508 seconds)
    (261/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06684987 seconds)
    (262/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.091670739 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087571432 seconds)
    (264/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.112014964 seconds)
    (265/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091295955 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118586457 seconds)
    (267/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093410496 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108773034 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085663574 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108024489 seconds)
    (271/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110047438 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095069409 seconds)
    (273/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.075445867 seconds)
    (274/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11084991 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092014991 seconds)
    (276/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.111754043 seconds)
    (277/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.076234526 seconds)
    (278/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.099588679 seconds)
    (279/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.087983262 seconds)
    (280/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115743487 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092801236 seconds)
    (282/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162978556 seconds)
    (283/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090802088 seconds)
    (284/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090115185 seconds)
    (285/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.066998447 seconds)
    (286/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124540793 seconds)
  done (took 35.927147236 seconds)
done (took 36.808778732 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099844517 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147933074 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095938493 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136708446 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123080617 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091617032 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.11855584 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098124462 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122963541 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125172381 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098028814 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092504083 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096775052 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120686177 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096624108 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138975007 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125772826 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09404174 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118569814 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085267048 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118806007 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085942795 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110818125 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069437861 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121398216 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094233862 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115990469 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120054089 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086081223 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109551425 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089937418 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116919718 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085940609 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123478156 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092846305 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118897087 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097180353 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119506407 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087327684 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109898459 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117346497 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086653059 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116745537 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093743807 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115154591 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091966077 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118205357 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099250494 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138212927 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114992015 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094468763 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12068349 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09587899 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117775714 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091170789 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118500589 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091360535 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138442539 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118636903 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091837276 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11779486 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095160289 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115525474 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094855309 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119244765 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120919176 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097536971 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115282847 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096829827 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11554301 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086407596 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117989216 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089660509 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110153643 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095746578 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121260455 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085452204 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115713789 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093663083 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.114764753 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110117557 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088817492 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111687929 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09281045 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112823841 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069613928 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090119523 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.116328698 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.085329244 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.11930279 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116535892 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.092900085 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112153965 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098100898 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110388356 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09200908 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111103851 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086725742 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112944719 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090341812 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110277864 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08920687 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119356922 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088464855 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117109955 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.099951512 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110425061 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116916026 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086149669 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11061506 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101077484 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121512614 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086549034 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115534737 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086261449 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118408981 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086287979 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110582144 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086293354 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11053627 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092727609 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110877728 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088991163 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117601125 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125989124 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086032644 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114485792 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090470285 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110762285 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092885497 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110652958 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086716838 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112706685 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077656725 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113144534 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087070134 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117787154 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089224126 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119334513 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.087814852 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119812881 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091830756 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116599234 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092660926 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110339123 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074621287 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116761626 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089945606 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113432624 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087014941 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113619525 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08641068 seconds)
done (took 16.860649762 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086934501 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184145312 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15174115 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14303405 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107460286 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112150582 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121481424 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118007519 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113026081 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142337416 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110127833 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131702524 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148670037 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086946958 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11191322 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091563005 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112429963 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102119128 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145141013 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133213295 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164821698 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086343932 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146085751 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13487831 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120663792 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.11365497 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111975055 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091696139 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114960736 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103767035 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132675316 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091589591 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112363351 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133958378 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104294794 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120078109 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08723031 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119064819 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087241823 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11131671 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140953759 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13299441 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092565149 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116986011 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091741907 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113609408 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088911593 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121051572 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097915737 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115559035 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125811611 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155756657 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090514376 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121593776 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086645124 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122956294 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12123611 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089926486 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112633096 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089758608 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112376813 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090940358 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126716209 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141208456 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091060012 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121093463 seconds)
  done (took 8.58590051 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103950842 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139562847 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105190812 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130808148 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111829871 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088443108 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113116455 seconds)
  done (took 1.734917212 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087679411 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135096165 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111411017 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136001986 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131696822 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112486196 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122779273 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088480842 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131350381 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089206843 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134403056 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149506466 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090050714 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120412524 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138117023 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088338428 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137347912 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088136169 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116851826 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111434476 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116730872 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134798765 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090406397 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112857837 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102989025 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114180343 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162567878 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093633168 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114996204 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092848353 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111773508 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151287242 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103197167 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12468869 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08813823 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128475959 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128353629 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086767162 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126059084 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094571166 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128298563 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089942755 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114396919 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08738566 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118499126 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098706954 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117686738 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.08962231 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117444927 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.15127201 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.08943259 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127473205 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089210594 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117177474 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089992887 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119182447 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.09860158 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114451817 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13300871 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090950864 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130894234 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105116138 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127386817 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130508707 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091770292 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127374396 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102895007 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117115006 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090697359 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117081782 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105311457 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111923135 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.090258762 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.124139999 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115959454 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113111886 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137438063 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090673001 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12475726 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088578852 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114585354 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.089071624 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.136686661 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117867879 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089587807 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11720276 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092033931 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114053419 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087903077 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117168606 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087563766 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115827983 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092394971 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113912088 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091626325 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130732261 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115434464 seconds)
  done (took 11.795246522 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089159199 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115145775 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091385899 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114281349 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090535313 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115011522 seconds)
  done (took 1.567515891 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114176772 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117624385 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103994184 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120533694 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155837313 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104156295 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129390297 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123482861 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108282374 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127197811 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129269338 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105254308 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135132489 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121527121 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104351399 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120115813 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103717694 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125024846 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128841629 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096705114 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136505681 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121442776 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09718351 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131498794 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11754486 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096240592 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12588065 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102250936 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126662494 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124018676 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095774024 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.11876978 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096528317 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123202099 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130177981 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096558583 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122077873 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120791097 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100045423 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12120267 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104930754 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121243856 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127608068 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.0943752 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123829833 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120846301 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094378394 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125045512 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.128372411 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093330911 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118979178 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095394023 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117988418 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094355702 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121336987 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124482745 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094573011 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129538356 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121793531 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096350523 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117873416 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093195072 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124664202 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118093403 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104999826 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120005365 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096632355 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120872723 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1214825 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096229063 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119196385 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092415529 seconds)
  done (took 9.209557301 seconds)
done (took 33.832378461 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.684951743 seconds)
  done (took 1.63768719 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.83906962 seconds)
  done (took 1.794044106 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.947996961 seconds)
  done (took 17.929402334 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.499937938 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.586689555 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.994805403 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178847391 seconds)
  done (took 3.215455611 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.953354023 seconds)
  done (took 1.927158286 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.282154958 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.2356345 seconds)
  done (took 1.479281389 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.771529141 seconds)
  done (took 1.742812357 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.360878352 seconds)
  done (took 2.321580761 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327974597 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183430714 seconds)
  done (took 1.476946423 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.548558336 seconds)
  done (took 1.513601916 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.308726762 seconds)
  done (took 11.279929574 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26920801 seconds)
  done (took 1.244436117 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301274065 seconds)
  done (took 1.266970217 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.48258114 seconds)
  done (took 4.451230154 seconds)
done (took 54.244205958 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098387271 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126733916 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10122964 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124461383 seconds)
  done (took 1.414995266 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10051826 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12011474 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100171636 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119962964 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126072481 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09555272 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12290661 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100176835 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120317871 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096599801 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121044907 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119693527 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097859871 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12223065 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093344795 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123669765 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099513079 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120024049 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123265517 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095698778 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117677871 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097131183 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12425414 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093745592 seconds)
  done (took 3.621302013 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100326049 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118279437 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095626982 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117290046 seconds)
  done (took 1.409563145 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.098900842 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130629375 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105040477 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125042851 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130648738 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.104876273 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117029472 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.091979152 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119373695 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099062004 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115826302 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.113095733 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130689845 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.12356984 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10155663 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11324483 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091018491 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130154242 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123453741 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101371437 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117857257 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.098825078 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115481467 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108766169 seconds)
  done (took 3.679563237 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169802624 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126670803 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137814801 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095108765 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160275532 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139888606 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08717886 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139918255 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086763803 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13015679 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117043963 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.131690248 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129603306 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087629588 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112898193 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087390508 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128616067 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127543134 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090313388 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126124959 seconds)
  done (took 3.392562737 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097156908 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117031931 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087465533 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115973421 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098740157 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120320558 seconds)
  done (took 1.612060585 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090339224 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113729146 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089335519 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.1136492 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094366078 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114779627 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088602769 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114402611 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089538474 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114050549 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088918855 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112399307 seconds)
  done (took 2.200217352 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.503737879 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119674846 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119224349 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088432748 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121348837 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089979639 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129069182 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092756182 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139999907 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.0884538 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115887396 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090594899 seconds)
  done (took 2.673482501 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233385699 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124559864 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285807866 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369603282 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153414252 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177973781 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280906085 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160033961 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223556047 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165463894 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203213817 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221252824 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151627439 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190948105 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137704599 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145004133 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204348888 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247237195 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153915008 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207400458 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226056214 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167348099 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180430434 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150980773 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138979058 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172555506 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09467614 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129294797 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232527529 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176072386 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214537881 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161905967 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145282822 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209837826 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252995161 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221286778 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284351324 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133940255 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.149917489 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164651895 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260499587 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138054175 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228775631 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127709856 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131540109 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216702805 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165263629 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176537081 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151961331 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138669985 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194526225 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237382899 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190606813 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137970711 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300928686 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147016549 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.198887315 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193136497 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249845618 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199117346 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211269613 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094490205 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185505221 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216326345 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184610815 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.173085897 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.206425285 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146153366 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197825707 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188141325 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162522378 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219118227 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182680361 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138655765 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168190412 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172257847 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170715368 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254968402 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208824262 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.094706946 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167102318 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148294484 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131683724 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193329966 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09717629 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238177712 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142771321 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.161641461 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212816017 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158401349 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159510213 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201002935 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227467146 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147770971 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08390475 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152970201 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154808027 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191471841 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138966189 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157193065 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161155209 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12962014 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182157776 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124823403 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182868389 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117331561 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173176263 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182366879 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126452671 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159398856 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151384579 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.122876733 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203468422 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196537634 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141220192 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132927726 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207552431 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176827324 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150268778 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177559051 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226254849 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116656398 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149038594 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226014042 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241231174 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113313489 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226799029 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155474823 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106901515 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131894849 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180301061 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153599277 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160293188 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134402341 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182258864 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232003891 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098215782 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137366337 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191100843 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132399685 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131605647 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162857948 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147614396 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.137552987 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.124636352 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152285031 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206743647 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177984592 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153568777 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16414974 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15146036 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25291229 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140376744 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124074791 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147517407 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120279751 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193138421 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223878094 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104087887 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22990377 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171846452 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202820187 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194679786 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108171806 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176619173 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130418246 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.09243657 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220089795 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168149979 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16141701 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195297926 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2252784 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180170969 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.208367683 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173223999 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173161346 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163963484 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155452499 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111576783 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158985356 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196587601 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095492888 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144036237 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133339515 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146733626 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11471065 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13317109 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223074878 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169806293 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189109779 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158224959 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149529389 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180770566 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128208798 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174261292 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176479492 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14718259 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224592885 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193557686 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184130941 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142798402 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225317046 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094416428 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125016112 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140210578 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169573978 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106198446 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134725206 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162849516 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179565496 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206599939 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176016316 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210620798 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198183162 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190219309 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094573157 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167640294 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184614647 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203216548 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.165384137 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137747996 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149754812 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178662354 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157664513 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254527748 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166929845 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173804262 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232709988 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149265097 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104888936 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151025571 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219705364 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152980512 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176633539 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147781434 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113249829 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161984475 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132539907 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159843155 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209433459 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16080918 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188363172 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149037623 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184440253 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127438703 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163790997 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159542552 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165531286 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080272248 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175204599 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231941781 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14775107 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167629288 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187756938 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130994435 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306031167 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240840959 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195127209 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138601844 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155855968 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159760498 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16384277 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170676762 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177865576 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157863006 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186216459 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158990758 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136689834 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140413856 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147214114 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123035899 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131420184 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146694638 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175518527 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138516299 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185535693 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162390413 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158150679 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172074042 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149396732 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144239152 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149862188 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213686712 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210046512 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20975401 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150387181 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179679843 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23407162 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09808888 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131612624 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132237256 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178120506 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108553771 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219635174 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186230468 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230052709 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181634682 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220552617 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111710644 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118940439 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155133222 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173973089 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20715772 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150003704 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158692705 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229216486 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.145683801 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104152868 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176831001 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318338889 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118994993 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222780185 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079178208 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280042464 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124134958 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131016861 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162361415 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206829804 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135345002 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.188367905 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170579531 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169809049 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165356135 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148782056 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190544909 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242506227 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200091926 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206782131 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104671188 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154931237 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175652301 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219304276 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15702541 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112445231 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230660297 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194478016 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.222803685 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.113755167 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167454168 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194363009 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129240267 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214299681 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133958622 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206892118 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133871568 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192707634 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151768241 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144180077 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175051974 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.212640575 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113646692 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21488168 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182960041 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13458996 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131888818 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167343576 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178257351 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159918925 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099651631 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208543744 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.096580472 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221163403 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257616781 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107802453 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154997514 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14771705 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134855563 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154770453 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158391982 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111769839 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16389123 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201045108 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133606423 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218076066 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202904305 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168550703 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200810894 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116326613 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.690673708 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131191129 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193462745 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158742365 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233188755 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149141843 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173577746 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158829827 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167521372 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192667768 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161176171 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229774457 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220192334 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178941722 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130545209 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157931437 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163745272 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143108697 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123428946 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19466076 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158343395 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.12598609 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.204891978 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171371198 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134368432 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11263181 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225488277 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158583888 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184278216 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179747648 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137293863 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172201503 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18712502 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133886199 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178843392 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237040802 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140359613 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150027915 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10564508 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155546372 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262469046 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123831746 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204305781 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183725331 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158777028 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167354494 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145054499 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221464478 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157203617 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184926069 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14758227 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159244915 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157288937 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137119873 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102389175 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155150969 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166507093 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148705227 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157653161 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165004946 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193641231 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121358608 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143257339 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288567604 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193487978 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242347378 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.133843918 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107901753 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161346798 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15125795 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175124906 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177586284 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134584962 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135949477 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13452174 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.12974705 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138517564 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153328836 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195503999 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165280596 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20630337 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135492074 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275883798 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138432699 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127225684 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117028898 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129896176 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122005708 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144061813 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157633332 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216810798 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234408346 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145818385 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132878076 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148496119 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097892303 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135884045 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163364839 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163553421 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177879717 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14454964 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079318201 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155258043 seconds)
  done (took 82.864992291 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179951554 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133633553 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147600059 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202537928 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175844941 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269046977 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210501216 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252257194 seconds)
  done (took 2.644665746 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092669002 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145225035 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156803836 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132795915 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091463869 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118615281 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.342764162 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131683859 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115653492 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120233474 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172686087 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093973337 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.54508083 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09067422 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118205789 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.105928575 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091151293 seconds)
  done (took 3.729593108 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.160258676 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.472824933 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.951235273 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194279875 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.176456901 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.11919422 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.681039515 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.116801565 seconds)
  done (took 11.942517528 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114345554 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13589312 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122750923 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151231279 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139795434 seconds)
  done (took 1.738609073 seconds)
done (took 123.888375408 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097298681 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125868951 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097593078 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128415734 seconds)
  done (took 1.507913814 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09396941 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070303231 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099413299 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074407444 seconds)
  done (took 1.406526628 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.187448874 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.166468344 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.406455977 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070655634 seconds)
  done (took 1.583996656 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113455291 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131738794 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104083613 seconds)
  done (took 1.431713757 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105850601 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127991925 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103127818 seconds)
  done (took 1.415714167 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105081879 seconds)
  done (took 1.183427323 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107210396 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135690871 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108279616 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.13584032 seconds)
  done (took 1.56570916 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097874512 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125765428 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108178294 seconds)
  done (took 1.408859346 seconds)
done (took 12.926374936 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10221216 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.415763708 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384206077 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143818468 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.719892309 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379682297 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029806849 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144721577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164026764 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093264631 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137847233 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670661799 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.020563254 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.371304237 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980055134 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.369239733 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675475311 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119436786 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118135008 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093126845 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.012243031 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091959932 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12066625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092187212 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.700588675 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42391673 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094312725 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.367480118 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092026465 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124421704 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381647841 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121535252 seconds)
  done (took 16.821414492 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09445554 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174519376 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098407096 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136042912 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122497481 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094085322 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123079769 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092541406 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177332383 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121436441 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109693497 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119604642 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123906235 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094654878 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139628352 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092253007 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124068446 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092057442 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119773313 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11970775 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110981426 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11866225 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.092992871 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119532408 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093047068 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134627516 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093425362 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120513989 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119291305 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098519545 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126009906 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093622679 seconds)
  done (took 4.770416387 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138974234 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180607521 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126234458 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125963634 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166306624 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122266246 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196900375 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116827801 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181382452 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12163141 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13799254 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091848459 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154608279 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093794968 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141047824 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11852531 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096048667 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119724019 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091343791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121317372 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138033725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092339963 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120379168 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092334157 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.120619569 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107558029 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122864313 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.11898827 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092536641 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12493155 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098806591 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121908408 seconds)
  done (took 5.080995388 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09618654 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125122412 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108749121 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.136867433 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094402796 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123828167 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09684567 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123482431 seconds)
  done (took 1.989760608 seconds)
done (took 29.739928347 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110221207 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125522619 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106382606 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132717114 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102301158 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130710518 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091687738 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132037903 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132876553 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101173332 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136141697 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091618835 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.120959029 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091552798 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133856739 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096749735 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130800636 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101612227 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13276315 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130951733 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094515808 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131486009 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102905277 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132083649 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10309946 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13216242 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136396802 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099163564 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121329527 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093625811 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.122981832 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103118501 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122740291 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104492882 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125666074 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096968135 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121832519 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093779289 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132458747 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131345854 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099332856 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131260937 seconds)
  done (took 5.942939565 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106823644 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.13823052 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.103985179 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080904179 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115691939 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080270801 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136516576 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078629343 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108744206 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10708962 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073475679 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.104757259 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077851151 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100206474 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076666804 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074563349 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.10750163 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074922655 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075747476 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104342833 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079142675 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071612093 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.106649661 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078058563 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074108162 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.108903998 seconds)
  done (took 3.533239146 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099512854 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13355692 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112624564 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182739807 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159282844 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.09903043 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130581345 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.10991243 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.136749771 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118479351 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096158756 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147226984 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10957493 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128439179 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091226939 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136133912 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134862564 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093764852 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126467958 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111894014 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137202769 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102372775 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139523818 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131819703 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091998031 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121835336 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096078686 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133757601 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097328252 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129740347 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096782997 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123686915 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121538214 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104602759 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124327476 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093487289 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141138663 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102116013 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130700547 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.09255663 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129138185 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.12164473 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113843769 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160806575 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091432719 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12824324 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095160537 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131588022 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120958595 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110451351 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130433992 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091698063 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124397009 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091368941 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121297231 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106925514 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123107032 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09455281 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130653328 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125452243 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104975935 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124116368 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109015155 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121340335 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099531842 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120411048 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092593613 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120406089 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.114361357 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122380769 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159771414 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093245716 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122440296 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100546973 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128734202 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127372223 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09272021 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136581894 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10282902 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124790056 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102286455 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125815042 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095478877 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139947199 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09482085 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123324372 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092835648 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128098824 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.12318135 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094009716 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134460927 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091389934 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12482798 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110216748 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122399562 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.09353454 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127214295 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124759452 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09220228 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132896346 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098194091 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121572586 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.10253558 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121264186 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.094164634 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.131780475 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125173051 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092055141 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125056954 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099150869 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122556269 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093607896 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124921553 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094124683 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131253014 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099031909 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.1261199 seconds)
  done (took 14.705322593 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228124032 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215388123 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.23544801 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.262146838 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134480943 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114191139 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209914114 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154543176 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122331013 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159604495 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173036606 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179529694 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168460407 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180580691 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169077709 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092215877 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141105416 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.133938251 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.243045452 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.257353982 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142738349 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100143746 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.168699404 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157989149 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.135854486 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131099092 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109767459 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132747855 seconds)
  done (took 5.75786932 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107328305 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154489042 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098613191 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144329932 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148620875 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092245635 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127457953 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093865931 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134792536 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134403759 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092540813 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128621023 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.09998411 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13164375 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121634485 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102111575 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130164676 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094650875 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124987293 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097352597 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133454852 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101622904 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12535411 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120411048 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102499857 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120413028 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08534757 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141695748 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092132383 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.144235024 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120058532 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10121258 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135212232 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093171357 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121349446 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094160647 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.123809233 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094087666 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123807354 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091871074 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120770298 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076703338 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120800103 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10606886 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128087626 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079161752 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128938289 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127467781 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.093767518 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119587712 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095411977 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12473009 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095965318 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129293527 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096005008 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122491133 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096793827 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114266339 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099666211 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12435013 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084312494 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119616742 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098012377 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117612478 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101009078 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127791463 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092291211 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12372752 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097094438 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128184308 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095401251 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.12858184 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09050807 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125123675 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095739295 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127701311 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095861541 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121069602 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.09201354 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.122801301 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074617913 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121986248 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073500323 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125132057 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091149717 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120942679 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094538223 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128671076 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136498169 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094611415 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130208688 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093380568 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121487318 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095819626 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111314624 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096191428 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138080772 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139867828 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09467477 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120565347 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107906619 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124941552 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092959126 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.104733682 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102684572 seconds)
  done (took 12.857835873 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126497312 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152608688 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094393894 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140105767 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155602277 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156397961 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100062137 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13098217 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095317489 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140792388 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094293334 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131682226 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094281254 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137452655 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155856422 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103387917 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125426612 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107890856 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127614708 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168437015 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111842096 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.140875511 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110808239 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123058797 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098599043 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.139229357 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160176365 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106709893 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.13596532 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140742597 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108720511 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159967687 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112861256 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127342605 seconds)
  done (took 5.437244945 seconds)
done (took 49.31864621 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.213057306 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.401731485 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.181314994 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.095274018 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.237274247 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.215138822 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.192989943 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.188352014 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.521646944 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.182595353 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.421409426 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.839461173 seconds)
done (took 59.805432325 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.251791653 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.314346031 seconds)
    (2/2) benchmarking "String"...
    done (took 1.449845112 seconds)
  done (took 3.875632074 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.546084796 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.112360232 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.441749368 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.18390335 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.199010706 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.471622179 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.810940488 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.516514882 seconds)
  done (took 27.846727144 seconds)
done (took 41.631062076 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.207333289 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.241154565 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.191054688 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.162859197 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.293619151 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.210486755 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.576358086 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.206856352 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.212029572 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.170544674 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.205273793 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.200436524 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.206680906 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.554442608 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.194464899 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.197706325 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.196046153 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.705875813 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.581672534 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.186901138 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.201543413 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.231708627 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.205984624 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.186654729 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.204739329 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.18634885 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.200626794 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.189141433 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.688688267 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.190207058 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.193191968 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.72678749 seconds)
  done (took 190.218814785 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.185500431 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.202293419 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.286638107 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.208529995 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.803830509 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.384134988 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.332174398 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.84672782 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.202407777 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.209649572 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.409100757 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.1887912 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.472144912 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.159991652 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.224130179 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.286913751 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.379464875 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.47278036 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.232862206 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.341644799 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.209675359 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.517799723 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.450678771 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.372191679 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.195218146 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.243473093 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.216566901 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.192659205 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.375421127 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.319746133 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.220603935 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.215081406 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.779418517 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.040504712 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.209815946 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.197366576 seconds)
  done (took 149.69911381 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.183617683 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.182989282 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.183703668 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.213955133 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.183658371 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.73753234 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.736743011 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.686801288 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.364384447 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.506785573 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.461407153 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.187649814 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.276775857 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.195663587 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.184197874 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.198993513 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.225172238 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.185888914 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.184059681 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.734450029 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.197704923 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.399363395 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.355625739 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.197498775 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.212177878 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.570195496 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.182335771 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.213059015 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.570688584 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.50663359 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.229581959 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.181530316 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.18110296 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.546454017 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29675209 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.183914606 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.212208365 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.182700876 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.457173706 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.18224988 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.181633584 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.182013985 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.185121537 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.827385766 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.183617368 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.718165532 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.185582326 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.124133432 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.185380236 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.181521529 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.963280078 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.818073061 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.20040083 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.181476991 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.184805159 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.181969902 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.182122643 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.212717684 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.917895661 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.276496645 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.198897144 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.185364423 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.212718441 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.1833387 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.36735382 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197835266 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.819676896 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.241223165 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.288022572 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.72133072 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.187245034 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279629318 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302072946 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.183539254 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.182868343 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.183163092 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.18318047 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.182400645 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.293159873 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.182966721 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.580788223 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.352812766 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.199706804 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.443528424 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.283064269 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.184397625 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.540430496 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.187319315 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.183898588 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.951186558 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.282284253 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.184710256 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.184493889 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.184415682 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.578790651 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.719615373 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.419513141 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.187884069 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.206898266 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.187618125 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.601067727 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.700642048 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.846784702 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.188730995 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294441431 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.354319201 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.200047645 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.184948998 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.185090106 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.455049369 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.188128212 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.243322799 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.184809898 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.580336349 seconds)
  done (took 364.891932486 seconds)
done (took 705.921385086 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.774348964 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.766206657 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.873116631 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.759046776 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.726951895 seconds)
  done (took 10.012758139 seconds)
done (took 11.124928307 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.364537775 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.362671683 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.24253102 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.365850341 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.216865089 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.380520387 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.344923687 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.20925211 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.283864704 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.262629775 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.283023229 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.23819916 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220474741 seconds)
  done (took 17.888662274 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.496152165 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.497186181 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.251932007 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.506172194 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.229016942 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.495609978 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.383712818 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.404226551 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.397021858 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.220509446 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.200393201 seconds)
  done (took 16.196977678 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.495268018 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.498320479 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255868649 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.506993114 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.228919891 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.502378679 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.386842584 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.397748152 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.398610844 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221959488 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.200248354 seconds)
  done (took 16.207812496 seconds)
done (took 51.406313861 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.196312116 seconds)
  done (took 2.312097537 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.231950011 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.391046849 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.212531316 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.203831249 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.197948711 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.199369505 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.204153942 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.19770956 seconds)
  done (took 10.954755553 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.195355862 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.194522604 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.195124946 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.197595344 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.194148357 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.19459949 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.196695445 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.194557585 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.197808573 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.196522928 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.197525973 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.195839495 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.197090462 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.198220351 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.198128514 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.194736319 seconds)
  done (took 20.253940931 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.196976554 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.194583923 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.194963778 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.196357081 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.195453024 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.196276159 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.196607104 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.194948806 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.195730758 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.19495499 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.197103028 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.195781023 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.196074206 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.196366269 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.1959393 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.197065993 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.195871423 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.196350785 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.201130316 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.196387128 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.196529575 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.196051606 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.196658667 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.196827377 seconds)
  done (took 29.829887624 seconds)
done (took 64.465784427 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.803473296 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.722494932 seconds)
  done (took 6.643922602 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.199102944 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.199010165 seconds)
  done (took 3.516803707 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.198455 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.198741137 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.198013335 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.197642373 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.199081524 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.198954534 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.199007467 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.199298902 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.199849528 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.200022616 seconds)
  done (took 13.107318984 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.20087659 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.200119136 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.197979075 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.19988727 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.199895593 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.198494155 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.200044131 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.199055183 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.200637788 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.198213856 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.199529028 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.198608055 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.200443229 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.198250751 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.201185159 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.198415701 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.198861824 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.198666404 seconds)
  done (took 22.707939512 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.200979247 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.200124249 seconds)
  done (took 3.521185025 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.198915919 seconds)
    (2/7) benchmarking "second"...
    done (took 1.198571285 seconds)
    (3/7) benchmarking "month"...
    done (took 1.200087869 seconds)
    (4/7) benchmarking "year"...
    done (took 1.199221235 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.199055049 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.199377197 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.199701665 seconds)
  done (took 9.515164226 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.201584723 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.38177547 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.460901848 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.814915468 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.203222071 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.205158696 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.057786676 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.205326692 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.208467934 seconds)
  done (took 13.85990677 seconds)
done (took 73.990264458 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.206614596 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.212342118 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.293377866 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.207894074 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.214546842 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.496421708 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.208358844 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.322148619 seconds)
done (took 37.282928119 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.198612561 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.180864295 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.875089006 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.17933886 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.210938606 seconds)
  done (took 18.568081342 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.192515662 seconds)
    (2/2) benchmarking "read"...
    done (took 1.534009094 seconds)
  done (took 4.84801246 seconds)
done (took 30.735107816 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20507286 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.203046107 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.204340923 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.200620796 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.204543418 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.200977819 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.200871438 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.203277817 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.202705508 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.203899383 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.204153338 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203600364 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200683395 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200510851 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204447408 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.200914143 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200882502 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.201048047 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201597486 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.2040669 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.205033433 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.200900594 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.202102083 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.200945506 seconds)
  done (took 29.982579148 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.204143369 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.202663238 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.204954287 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.204712745 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.201772913 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.205534128 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.203806954 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.202297747 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.206248773 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.205382058 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202249528 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.20270156 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.205122787 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.202415179 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205809135 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.202666645 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.204752832 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202663629 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205472686 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.202587794 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.205384822 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203109724 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.203747556 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206046282 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.203154133 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203646762 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.206152356 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.204971511 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205812793 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.205011298 seconds)
  done (took 37.248537714 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.210750673 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.212925834 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.206066101 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.206546331 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.206353548 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.206493632 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.206321344 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.207086611 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.205959203 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.205664604 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.205966367 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.206920568 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.206354796 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.206143314 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.206655391 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.206700342 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.20650843 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.206688392 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.206602798 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.206941454 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.206841305 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.208307301 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.206699788 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.207378669 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.207212545 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.207476965 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.208326177 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.20774327 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.208005653 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.207993868 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.208089508 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.208598989 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.208409642 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.208194111 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.208030409 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.208756566 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.21346723 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.21593581 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.209659575 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.208911854 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.208217756 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.208693452 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.208805809 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.209169847 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.208240311 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.208962909 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.208623369 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.209901562 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.209038008 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.208447078 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.207999241 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.208132945 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.209446999 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.208789455 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.209515365 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.20965453 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.209176135 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.209738393 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.209548885 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.209653261 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.209192738 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.209500341 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.210104761 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.209411265 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.210309521 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.209504804 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.209825128 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.210395671 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.210372658 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.210414739 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.209748574 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.209613226 seconds)
  done (took 88.139286749 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.210276068 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.208714168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.207053758 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.207553437 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207722041 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.210893887 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.208613833 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210227716 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208354245 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.210832512 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210837436 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.209133858 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208582222 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.211968106 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211519 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.208209975 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.210321818 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207849052 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.210927468 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.211856899 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.211204234 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.21003601 seconds)
  done (took 27.742385881 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211818333 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.213677064 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.210106688 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.212435125 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.209711327 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.212035954 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.212887687 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.21471862 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212801309 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209609172 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209992495 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212147493 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.209882346 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210124177 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20916662 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.212974822 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213633937 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.212466876 seconds)
  done (took 22.940347521 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.209464087 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.210777001 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.213302568 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.210232125 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.210639604 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.212762519 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211201339 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.213830582 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.212977519 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.211475263 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.213519208 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213443864 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.213094805 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211529523 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213594647 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.212510336 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.213542092 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210700109 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213471261 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212423458 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.210494362 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215008938 seconds)
  done (took 27.802019985 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214792005 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.214510252 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.211430596 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.21199072 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.210786464 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.21557192 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.214823115 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.211968446 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.215958416 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.215545058 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212249165 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.215188437 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.214265515 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.213383426 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.212160772 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212940604 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.215393511 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.213844377 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215349563 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.212639074 seconds)
  done (took 25.406758273 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.215306767 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216746071 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.216064486 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216043015 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.215859885 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.216600282 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216807321 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.216087268 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.215867503 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.217182901 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.216660129 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.217382164 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.217459897 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.217425852 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.217060232 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216941627 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.216495926 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.217706606 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.217649579 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.218202206 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.217452257 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217720237 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.218535222 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.217956987 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.218330981 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.21800763 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217804152 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.217834371 seconds)
  done (took 35.211384521 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216936064 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217359169 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.215557812 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.215373569 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.216050518 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.215326141 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.215825974 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.216147181 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.21910269 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.214568502 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.219061278 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.21808874 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218384018 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.218201693 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219200841 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.218137605 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218908668 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.217301063 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216373352 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215707732 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.219183791 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219614555 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.219835761 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.21739175 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216151322 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.219262428 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21682553 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216010901 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219610252 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216040408 seconds)
  done (took 37.658726186 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.238154289 seconds)
    (2/2) benchmarking "in"...
    done (took 1.237165964 seconds)
  done (took 3.612350522 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.217670637 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21969767 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.219311216 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.216295539 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217526531 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.219962752 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.219703349 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217165338 seconds)
  done (took 10.883854895 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.219548875 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.219069876 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.219718219 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.22079179 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.220412832 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.220239736 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226246933 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.238439165 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.220712031 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.221290909 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.227036767 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.227140231 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.22210522 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.220326987 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.220801745 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.223203531 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.221467682 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.221300732 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.221552942 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.222720404 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.220697777 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.223381497 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.223212512 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.219175375 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.222224361 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.232277715 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.244563927 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.221692591 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.220240626 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.224582627 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.220856119 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.219976971 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.22141496 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.222318038 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.222115326 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.222465341 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230831537 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23966884 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.228013701 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241762882 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.222817574 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.220173116 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.224573409 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.223234521 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.223986243 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.222839536 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.224485212 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.221300059 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.223617543 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.227207079 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.227799081 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222393531 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.220199811 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22702417 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.224602284 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.229790375 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.241079877 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.228404839 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.232435196 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.233673941 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.254573072 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.248119344 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.224835302 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.224645771 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234361275 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.247565509 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.231509442 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.24058998 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.222167202 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.224874177 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.230700541 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255524392 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.248588337 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.224792183 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.226419015 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.225449528 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225482186 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227145916 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231060137 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.245808273 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.224743076 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225131463 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.235628404 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248137702 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.225697447 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.224669553 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.226042948 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.226623554 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.227083592 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236601218 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.243897509 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.226429999 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.224927904 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.226119636 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.226392103 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.226087329 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.22528585 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226107445 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.224144448 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.227222224 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.227010458 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.231242814 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.23569791 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227067323 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.226755282 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.232553763 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.246345966 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226528048 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.233015393 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.22815485 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.227296176 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.228502679 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.232676942 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.225859018 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.230666217 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.236672022 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.227642045 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.229216365 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.228262715 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.229132241 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236966816 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.253631222 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.228981774 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.228355371 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.232764098 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.239859413 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228349651 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.230776534 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.22915621 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.227284652 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.229873908 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.229786149 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.229380201 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.228177445 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230553172 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229446496 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.227457892 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.228096356 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.229370745 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.230795274 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.230768196 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.229747023 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.229667256 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.230743579 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.230455619 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.230012284 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.236057 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.248215718 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.229912671 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.231075742 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.227307992 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229432876 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.230415987 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.229457868 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.229041942 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229387603 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.229184123 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.229189195 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.231036289 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.229522557 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231911584 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.231016069 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234226452 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.2301283 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.234377742 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.229862434 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.228573594 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.230758879 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.231204702 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.230078489 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.231582225 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.228565392 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.233850837 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.238565831 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.231681953 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.231037803 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.233586384 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230986631 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.231094571 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.231149638 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.234484069 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.238704583 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.232981279 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.238514925 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.251276373 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.231565128 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.233909525 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.232520838 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.23031568 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232242051 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.235737773 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.240649641 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.244324329 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257228969 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.233444715 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.237079924 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.234156104 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.236145682 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.236249962 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.232551442 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.233046961 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.23235421 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232072521 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.232424837 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.234018239 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.232687848 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.233307876 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.23398675 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.233296857 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.233100408 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234265374 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.233053819 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23363465 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.231530578 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.233763393 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233616747 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.233567627 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.232917953 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.233546302 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.233885913 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.234881282 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.234984442 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.240030294 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.232041571 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235017781 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235260625 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.234085168 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.233431958 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.23466345 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235516104 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.233374323 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242708858 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.252445252 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.23644348 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241514523 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.253340262 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.235055355 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.238682442 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.234778257 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.23237295 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.237222417 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.243643803 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.236504692 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.235279397 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.23521559 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.234998956 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236967118 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.240808428 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.252939495 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.234763733 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.236123357 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.236713459 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.234137899 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.237119799 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.236316372 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.237096976 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237749363 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237388763 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.237339544 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237561119 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.235837783 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.236457997 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.236843274 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241243409 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.244443027 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.241365086 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.236868944 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.238148823 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.238119911 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.241729045 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.236840351 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.237585059 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.236789067 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249427269 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.261244507 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.242981511 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.256979562 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.239007626 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243431429 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.258412952 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.240921452 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237839785 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238886374 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.238132649 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.239105244 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.236574466 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.239046843 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.239620827 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240061346 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.239399101 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.24277782 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.23802673 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.23806852 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.238584324 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.238835999 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.238906562 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.238778731 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.239880196 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.239477624 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241208481 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.238573724 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.238570669 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246286614 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257421783 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.239044721 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.238567415 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.239840408 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.238515964 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.240311939 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.239566263 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.243363477 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.246573393 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.242383952 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.248515083 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.241914271 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249798159 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.241511701 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.242919003 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.247900699 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.238046202 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.239369554 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.240584482 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.240648054 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246989992 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.258458909 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.242760911 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.245753178 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241860389 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.240888083 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.241854353 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.239975572 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242045149 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.241909663 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24807085 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.259109533 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.246073026 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242717796 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.240785202 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.241342323 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.242103961 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.241303228 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243047864 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.240527431 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.24188515 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.241899166 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.241742491 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.242181706 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.242372742 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.24298595 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.239541615 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.242857603 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248865602 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.263175653 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248093305 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.242555479 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.249489335 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263256167 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249133715 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.263013229 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.243482648 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.244174076 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.24353114 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.244638213 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.243677606 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.244886634 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.244628648 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.245749507 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.248050794 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.245126464 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.244828806 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.244953445 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.244394306 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.244331596 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255338761 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268143001 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.24597061 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249117019 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.24201621 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.246069866 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.249160765 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.244511533 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.242939893 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.247735605 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254838876 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253833833 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.244732295 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.245440081 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244865037 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24442587 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.245918974 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.246239305 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.244601386 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.245953533 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.24666399 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.246024964 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247425597 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.245262784 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.245456518 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246807106 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.247140611 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.25597981 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.265998475 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.245866003 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246127784 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.24644897 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.245878808 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.245439015 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.246391294 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246514236 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246383732 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.247870315 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253973578 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.25263348 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.248830427 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.24745157 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.245971403 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.246042445 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.246875171 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248161141 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.246810334 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.246938991 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.247199884 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.247736425 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.247912184 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.24739307 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.247634155 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.247560645 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248104785 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250579906 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.254747759 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247902575 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.245505825 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.248152927 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247193308 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.246465231 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.247814735 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.25507862 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270018546 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.258676828 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.25581616 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.25241058 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.248358058 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251660111 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.254867535 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.247913741 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.248835211 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.248383891 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.249581323 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.249618664 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.252588587 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249882333 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.254622851 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.268981725 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.248643663 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258821634 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.267739562 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24984531 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.250644324 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.25328544 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.249191097 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.248440236 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.248720412 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.249043579 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256018918 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.269984722 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249347307 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25098421 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.249728581 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.251529626 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253522467 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249790349 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.251078851 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.248813037 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.251154627 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251674135 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25111261 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.247910887 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.251181511 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.250419602 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.25467591 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.257217632 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.248955345 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252390864 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.251709541 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.250597547 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252075344 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252417987 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.250146652 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.249886145 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.250871068 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251358067 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.250431508 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.254035118 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.251995074 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.253395418 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.253883642 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251839179 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254451308 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.262541359 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.260058396 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.249914966 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.251473879 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.255105293 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.254794538 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251645215 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.252362634 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252552754 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.25240132 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.252827094 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252295031 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.253116253 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.256043965 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268151965 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.270935129 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252859004 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.253493847 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257677766 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.252428925 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.250570447 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.253770242 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.255878839 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.256012701 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.262164089 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.254024295 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260062539 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.272708203 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.254442077 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.258748055 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.25729441 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.261594066 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.255558205 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253295848 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.254301275 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.259168385 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.269453118 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255452197 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264890792 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.285274199 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.274188074 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.254952893 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.255680278 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253738644 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.254330878 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.25711907 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.254391147 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.255037642 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255266496 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.254537017 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.255290978 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260681154 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.255898161 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.256171865 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.255699875 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.255381962 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.25580958 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.254119685 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.256206387 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.255776001 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.256228645 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.255591036 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.256059114 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.256259569 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268516646 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.282001274 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.255911096 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.256751119 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.254064941 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.258887369 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.259271992 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266790509 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.26451932 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.256438487 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.256475472 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.258364008 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256319206 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.258551103 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.255986992 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.255725722 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257349713 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.255061353 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.269438355 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.282362183 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.261210328 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.256916658 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257557138 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.258413052 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257935636 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258202304 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258250467 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.257729749 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.260711746 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261893486 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.258776746 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.259248576 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.261274781 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.265808692 seconds)
  done (took 741.454209122 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256929181 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256305469 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255590277 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.255313556 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2575159 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257006157 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256981111 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.257261097 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.25745498 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.256968765 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.256334601 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257125881 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.255976222 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.257755123 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256985608 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.256719806 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257625574 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.256828462 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257423332 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256560429 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.257634517 seconds)
  done (took 27.567270317 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.259547086 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.257801864 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.257828364 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.260784827 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258121626 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.25976295 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.257635807 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260003329 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.261123309 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259124227 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.261955922 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261134881 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.258418445 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.257933697 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25845387 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262106855 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.261086474 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.25821621 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.261780553 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.258959078 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261553095 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.260008507 seconds)
  done (took 28.888131781 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.261552515 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.261507706 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.259847767 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.258789251 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.26163019 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.258629127 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.260222577 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.261907874 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.261620529 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.262049476 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.260464591 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.26272771 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.269110626 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.267926477 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.263123725 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.261701406 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.406365154 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.263177022 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.261662656 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.261941801 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.259204458 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.268057308 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.279942803 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.26069601 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.260703465 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.262372742 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.262795779 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.26350799 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.262526005 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.263523394 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.267207078 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.263940576 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.263360688 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.265160791 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.262056445 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.264441965 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.267186923 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.26391874 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.261040474 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.263212039 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.274334036 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.284736156 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.264086165 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.269022713 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.284920994 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.263812597 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.266511362 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.271779287 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.261699311 seconds)
  done (took 63.288022071 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.264714955 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.266244446 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.263474583 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.265594689 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.265092957 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.264394767 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.264757569 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.2656525 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.262549331 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.262805065 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.265366487 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.263039334 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.262915583 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.265439645 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.265589037 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.262663458 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.263794327 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.262268699 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.263216787 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.26239217 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.262674983 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.265009527 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.266117296 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.263662069 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.264957626 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.262877672 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.264922766 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.266399702 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.263581234 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.263525321 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.266433561 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.266486295 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.266698751 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.263702117 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.264602651 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.266799387 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.266796423 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.264428157 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.26732103 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.265162291 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.267186652 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.266538942 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.267539306 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.267718867 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.26482659 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.264647878 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.264008015 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.264017174 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.266159056 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.267399557 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.268136305 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.266186249 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.268120451 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.265997704 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.268439203 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.267743771 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.26534641 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.265730354 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.267669429 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.265837093 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.265070198 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.267793786 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.265563289 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.267696262 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.268642917 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.265568469 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.266223407 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.269515764 seconds)
  done (took 87.229546422 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.267044823 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.26868832 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267249633 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267855812 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268169097 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.267858676 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268031874 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.267490376 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.268908265 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.269097396 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.267644358 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.26957379 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.268723993 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.269561542 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.269397983 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26839445 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.26912125 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268943059 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26876978 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269418497 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.267913057 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.268685513 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.269995761 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.268169092 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269029234 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.268773346 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.268400796 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.268766837 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267573553 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.269077989 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.270697356 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.268622167 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.268860019 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.269446459 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.269730195 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.268535221 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270310791 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269635817 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.270060674 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.269932719 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269572155 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270375197 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.269461353 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.269818124 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.268817351 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.270828064 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.269834501 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.270372417 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.271320096 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.270388414 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.270316052 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270281528 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270662373 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.270833542 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.269250332 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.272308188 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271185705 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.271242932 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271084339 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.270872358 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.271432114 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.271019557 seconds)
  done (took 79.888067034 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272271978 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.272227509 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.270412507 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.270318826 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.274035778 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.270336823 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.27240772 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.273345025 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.272427865 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.272691683 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273321603 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.269890204 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270385761 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273629203 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.271305392 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27067662 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270394068 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.270045607 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.272960263 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.27126264 seconds)
  done (took 26.620643499 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.271482263 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.274876789 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.271670214 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.270841359 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.274005225 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.2712024 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.274485907 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274855371 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272003589 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274921081 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.27553169 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.275575859 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272309492 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.271350777 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.274510382 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.272276783 seconds)
  done (took 21.55875813 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.271884075 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.27566816 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.27413306 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.273839924 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.272633191 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.272862415 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.275716515 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.272806675 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.272203782 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.275361782 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.274468366 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.275500934 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.27569951 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.27383274 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.272843547 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.276758599 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.272775333 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.272998624 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.274643451 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.274482438 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.273908219 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.272052903 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.275767216 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.2759891 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.273657958 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.274080781 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.274339902 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.273698137 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.273430349 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.277039193 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.274101954 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.275231735 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.274377778 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.273627567 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.275887812 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.273281597 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.27709965 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.276500379 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.276386968 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.276279122 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.277242815 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.274417568 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.277014675 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.277273036 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.274611304 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.277471488 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.274431084 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.275388991 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.274201599 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.275417592 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.277616657 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.277040607 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.277666379 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.278293663 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.27793738 seconds)
  done (took 71.313451832 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277095226 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.278207165 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.274590574 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.277502546 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.279731325 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.274916086 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.277659032 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.2782588 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276952179 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.278629263 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277689549 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.280140384 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276096673 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.278296502 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.277802749 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279428934 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.27674405 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.276783293 seconds)
  done (took 24.18836825 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.277494636 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.277526262 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.278644738 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.276680215 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.276555026 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.279065235 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276660729 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.279551684 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279919128 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.277876167 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276787266 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.280108628 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280026406 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.280385605 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.278837661 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27801173 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.280941273 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281330356 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.277913526 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276802365 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280734725 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280469568 seconds)
  done (took 29.323679526 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.279119529 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.278605719 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.279132139 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.296180426 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.298121981 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.302878895 seconds)
  done (took 8.927012225 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287692608 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281055016 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279079124 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28072237 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281019232 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277779498 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278333007 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278192148 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281781959 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279879119 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278557528 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282381499 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282677536 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278821736 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281201139 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281342806 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278594484 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279863794 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279598315 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283373628 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280121718 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281488725 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279377646 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279424538 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279062309 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279482138 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282807128 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280161286 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28026414 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283386353 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282779215 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279935479 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282518541 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280238809 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283787161 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282879457 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281388816 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283629218 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283200857 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280859671 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.283744208 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28448803 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284385894 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282088228 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283489742 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280572584 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282415999 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281146429 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281184555 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28446195 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283741183 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281411088 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284835777 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283338019 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284105345 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283668524 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281585445 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281237913 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284293036 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282075853 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282044115 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284502555 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281790001 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282031865 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284563465 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281759047 seconds)
  done (took 85.811857667 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282590161 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283000801 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282999873 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284208671 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281483388 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282654164 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282553733 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283442293 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282620353 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283696907 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285476827 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282854253 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283396574 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282738207 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283077483 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283271187 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282870817 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28346269 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282501884 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287186758 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283323048 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282464549 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283148297 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282505793 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284216788 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286681077 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284332723 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283420829 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28453188 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283968699 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28352814 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283992789 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284284488 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.284360709 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284522374 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284278797 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284295076 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284887762 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284377217 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287883378 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284723836 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287203384 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285396663 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284837641 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285513275 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286039868 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286294369 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285651131 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285576079 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286161449 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286189233 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286584247 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285953896 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285990588 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285900154 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287060848 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286016442 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286490561 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286240345 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288657337 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285285707 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28614742 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28993991 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286638582 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286020258 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286873551 seconds)
  done (took 85.99357205 seconds)
done (took 1729.802482854 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.449545016 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.404862985 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.287558964 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.284460727 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.287283325 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.303422099 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.304769219 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.288248114 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.287758845 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.287677089 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.286981323 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.505317195 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.341039023 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.288084204 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.287792018 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.381648172 seconds)
  done (took 42.478843403 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.315589623 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.293503476 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.40364276 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.310278604 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.314340764 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.476566429 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.347147148 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.292851363 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.463502144 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.334963225 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.847466835 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.314340572 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.292709763 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.400623414 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.309999091 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.478225984 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.540949568 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.8537317 seconds)
  done (took 29.792835007 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.742957346 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.317673471 seconds)
  done (took 9.264302442 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.311683267 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.293213215 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.294655346 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.293221739 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.285112972 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.285130873 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.290651179 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.285104681 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.968840833 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.421476538 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.294300398 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.299771384 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.312940423 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.293794848 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.290864184 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.329042346 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.45301569 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.292195526 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.290182273 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.299548283 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.293867896 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.389050156 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.333637135 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.291676964 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.417493541 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.981176752 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.297093043 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.300577161 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.435843304 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.292472064 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.292479713 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.293794789 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.294774662 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.89905052 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.811449192 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.303312685 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.317493358 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.303091448 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.291280133 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.450835351 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.295655975 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.300912108 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.287277275 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.807858811 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.423289551 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.411413125 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.487916305 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.313467764 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.29476669 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.356422218 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.294851844 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.296202749 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.322683125 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.054058353 seconds)
  done (took 109.336165297 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.299727256 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.67730636 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.455195946 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.308764718 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.118810172 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.98656687 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.305956272 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.575607142 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.313087221 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.287396932 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.630739466 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.798096768 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.309773581 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.341311643 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.819095242 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.360518005 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.289693741 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.155417189 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.305790534 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.288829817 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.780103759 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.289542375 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.289980652 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.328731339 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.32834113 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.743991782 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.694310629 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.812779379 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.310619273 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.290152797 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.75945396 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.314338636 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.336449864 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.292427071 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.552126062 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.648825087 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.63976792 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.310526184 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.299995177 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.290044462 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.309658157 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.739557309 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.649081869 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.30893334 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.290789304 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.743037578 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.307578995 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.293079227 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.296952087 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.500730954 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.146157452 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.29176673 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.677421542 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.291173339 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.577446674 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.374333694 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.34087151 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.773815032 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307586411 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.463246156 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.316791897 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.293781434 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.300552917 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.294642191 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.293044665 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.637575429 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.662533108 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.297752972 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.635243238 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.772359287 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.307693639 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.82000318 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.189018524 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.300290499 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.346083572 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.302695477 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.973050931 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.784286913 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.319005626 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.293519594 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.624937819 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.311355452 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.616869988 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.309307644 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.292160129 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.794676856 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.299996788 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.31790244 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.291963586 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.306193254 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.060748711 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292102373 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.579233872 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.333002568 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.294308481 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.293603904 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.292974296 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.292961758 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.294672513 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.296627597 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.821684714 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.311204421 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.259388341 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.312115219 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.294041137 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.29942562 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.297081652 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.29551063 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.521775908 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.709110574 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.317234447 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.294779592 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.295617042 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.318337327 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.370294409 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.299503695 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.601424368 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.314483482 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295272697 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.301411403 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.066114379 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.34503204 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.296099996 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.298366334 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.203631492 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.501535988 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.313273629 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.313565224 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.295895293 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.313065453 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.533888828 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.314732108 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.375896897 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.298237488 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.003388493 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.34904966 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.322992908 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.804084035 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.301655779 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.228674339 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.317069646 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.29796854 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.582290163 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.561151297 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.583474945 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.297657014 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.31388233 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.982571256 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.369615903 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.444415135 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.316006247 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.28610022 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.494939552 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.477738306 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.298832285 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.919087254 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.299607488 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.518591613 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.298460135 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.61367685 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.79220703 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.314568779 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.302489706 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.00718597 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.995426574 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.943412955 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.298209534 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.622487439 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.245689082 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.778268003 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.297449796 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.298820859 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.88719962 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.299764204 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.304733016 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.299497842 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.298950497 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.362628279 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.472685518 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.566059937 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.307219875 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.750697546 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.376017698 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298676159 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.299078338 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.303096978 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.646907284 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.375671087 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.303824648 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.301085521 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.300488338 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.301211357 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.771497521 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.241597495 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.300649527 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.451780627 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.933419063 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.31906726 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.301354456 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.852631101 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.564688013 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.810617087 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.332588131 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.609404877 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.326555723 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.337344487 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.018624632 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.318029672 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.773760795 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.318136102 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.29953144 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.900759313 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.318576116 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.357123544 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.301615908 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.302475541 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.837894764 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.319283363 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.303062642 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.547054355 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.320406581 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.557270499 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.301917096 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.339427019 seconds)
  done (took 1102.995030636 seconds)
done (took 1295.068453362 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.301855956 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.306204949 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.286628707 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.305659601 seconds)
  done (took 26.420390427 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.313157572 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.309583895 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.310714494 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.308246399 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.311234536 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.309292132 seconds)
  done (took 9.083747813 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.350935961 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.306595006 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.306339202 seconds)
  done (took 19.185472797 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.516043193 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.618941615 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.656728681 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.498799558 seconds)
  done (took 10.513660383 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.313069966 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.311292709 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.312305058 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.313155558 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.315417071 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.317940585 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.313530065 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.314658861 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.317553961 seconds)
  done (took 13.051373785 seconds)
done (took 79.475333579 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.158704656 seconds)
    (2/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.635751243 seconds)
    (3/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.406712674 seconds)
    (4/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.328536974 seconds)
    (5/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.286523179 seconds)
    (6/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.416060977 seconds)
    (7/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.326045773 seconds)
    (8/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.286639665 seconds)
    (9/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.535726838 seconds)
    (10/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.694637869 seconds)
    (11/286) benchmarking ("sort", Float32, false)...
    done (took 5.311383306 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.577853319 seconds)
    (13/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.835963999 seconds)
    (14/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.287929279 seconds)
    (15/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.790507319 seconds)
    (16/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.741656739 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.349867587 seconds)
    (18/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.333394601 seconds)
    (19/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.605023127 seconds)
    (20/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.863721684 seconds)
    (21/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.493514315 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.735632983 seconds)
    (23/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.32773735 seconds)
    (24/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.432011966 seconds)
    (25/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.035192902 seconds)
    (26/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.091590318 seconds)
    (27/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.146517701 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.720737353 seconds)
    (29/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.559051558 seconds)
    (30/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.410994148 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.30682294 seconds)
    (32/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.337795011 seconds)
    (33/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.540886324 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.412407938 seconds)
    (35/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.418289025 seconds)
    (36/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.289522118 seconds)
    (37/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.353248525 seconds)
    (38/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.309732051 seconds)
    (39/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.317120522 seconds)
    (40/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.05997316 seconds)
    (41/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.337402588 seconds)
    (42/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.936696515 seconds)
    (43/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.687509273 seconds)
    (44/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.413758435 seconds)
    (45/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.292464952 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.247263743 seconds)
    (47/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.129250631 seconds)
    (48/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.689363829 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.423573219 seconds)
    (50/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.319145532 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.571950526 seconds)
    (52/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.289787453 seconds)
    (53/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.336303771 seconds)
    (54/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.416960368 seconds)
    (55/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.127972298 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.383274759 seconds)
    (57/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.320037134 seconds)
    (58/286) benchmarking ("sort", Float64, false)...
    done (took 5.631222022 seconds)
    (59/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.393075958 seconds)
    (60/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.120456189 seconds)
    (61/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.894225213 seconds)
    (62/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.78058557 seconds)
    (63/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.935816804 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.670163085 seconds)
    (65/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.326887566 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.723427346 seconds)
    (67/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.40983318 seconds)
    (68/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.080315054 seconds)
    (69/286) benchmarking ("sort", Int64, false)...
    done (took 5.519124051 seconds)
    (70/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.321042794 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.950461822 seconds)
    (72/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.732993069 seconds)
    (73/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.290336164 seconds)
    (74/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.665350059 seconds)
    (75/286) benchmarking ("sort", Int8, true)...
    done (took 6.311147823 seconds)
    (76/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.377723807 seconds)
    (77/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.501036439 seconds)
    (78/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.681426858 seconds)
    (79/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.804042917 seconds)
    (80/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.313924684 seconds)
    (81/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.330435362 seconds)
    (82/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.407166911 seconds)
    (83/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.310689952 seconds)
    (84/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.745199518 seconds)
    (85/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.293491982 seconds)
    (86/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.331883969 seconds)
    (87/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.542404921 seconds)
    (88/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.33772025 seconds)
    (89/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.82169092 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.089205154 seconds)
    (91/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.312491143 seconds)
    (92/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.293589721 seconds)
    (93/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.321429319 seconds)
    (94/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.526672349 seconds)
    (95/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.396682164 seconds)
    (96/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.337906296 seconds)
    (97/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.293544833 seconds)
    (98/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.309432673 seconds)
    (99/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.415345535 seconds)
    (100/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.452019903 seconds)
    (101/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.329036452 seconds)
    (102/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.4104611 seconds)
    (103/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.904947838 seconds)
    (104/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.132907368 seconds)
    (105/286) benchmarking ("sort", Int8, false)...
    done (took 4.322429511 seconds)
    (106/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.143510928 seconds)
    (107/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.79125816 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.249165437 seconds)
    (109/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.328335899 seconds)
    (110/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.171813496 seconds)
    (111/286) benchmarking ("sort", Bool, false)...
    done (took 1.85481377 seconds)
    (112/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.356213642 seconds)
    (113/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.591510796 seconds)
    (114/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.134874336 seconds)
    (115/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.08144084 seconds)
    (116/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.314316883 seconds)
    (117/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.892706626 seconds)
    (118/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.593792625 seconds)
    (119/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.306356084 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.244379539 seconds)
    (121/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.313788179 seconds)
    (122/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.323139903 seconds)
    (123/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.307076909 seconds)
    (124/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.41849228 seconds)
    (125/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.545241813 seconds)
    (126/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.151929147 seconds)
    (127/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.294112706 seconds)
    (128/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.348338561 seconds)
    (129/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.340006579 seconds)
    (130/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.743588851 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.996529944 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.103762815 seconds)
    (133/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.340899716 seconds)
    (134/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.488340778 seconds)
    (135/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.294793396 seconds)
    (136/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.397064935 seconds)
    (137/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.301258652 seconds)
    (138/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.545186742 seconds)
    (139/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.295553726 seconds)
    (140/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.998238012 seconds)
    (141/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.40204238 seconds)
    (142/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.338215705 seconds)
    (143/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.295756111 seconds)
    (144/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.707529532 seconds)
    (145/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.104421446 seconds)
    (146/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.325939028 seconds)
    (147/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.443685963 seconds)
    (148/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.368071681 seconds)
    (149/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.544747142 seconds)
    (150/286) benchmarking ("sort", Float32, true)...
    done (took 6.318673556 seconds)
    (151/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.413943516 seconds)
    (152/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.295743033 seconds)
    (153/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.345149264 seconds)
    (154/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.966247221 seconds)
    (155/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.177172642 seconds)
    (156/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.880144349 seconds)
    (157/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.315138475 seconds)
    (158/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.419130218 seconds)
    (159/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.317542294 seconds)
    (160/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.776039989 seconds)
    (161/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.57517994 seconds)
    (162/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.288378378 seconds)
    (163/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.296766759 seconds)
    (164/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.318698982 seconds)
    (165/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.297299893 seconds)
    (166/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.828472289 seconds)
    (167/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.344193124 seconds)
    (168/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.344327211 seconds)
    (169/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.927021559 seconds)
    (170/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.577266053 seconds)
    (171/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.314728332 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.376299072 seconds)
    (173/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.297527674 seconds)
    (174/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.149099823 seconds)
    (175/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.40341762 seconds)
    (176/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.603690193 seconds)
    (177/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.29795556 seconds)
    (178/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.817376692 seconds)
    (179/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.308976847 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.252981038 seconds)
    (181/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.355161611 seconds)
    (182/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.298534906 seconds)
    (183/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.317217701 seconds)
    (184/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.116597842 seconds)
    (185/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.460555077 seconds)
    (186/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.30010238 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 5.423028418 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.391908566 seconds)
    (189/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.180206131 seconds)
    (190/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.322431895 seconds)
    (191/286) benchmarking ("sort", BigInt, true)...
    done (took 6.318184887 seconds)
    (192/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.349637562 seconds)
    (193/286) benchmarking ("sort", BigInt, false)...
    done (took 6.318711848 seconds)
    (194/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.726011373 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.317608022 seconds)
    (196/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.346694284 seconds)
    (197/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.347190966 seconds)
    (198/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.833975751 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.542869825 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.946892828 seconds)
    (201/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.335541671 seconds)
    (202/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.799411815 seconds)
    (203/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.349364788 seconds)
    (204/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.339212365 seconds)
    (205/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.578146557 seconds)
    (206/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.405509918 seconds)
    (207/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.298432112 seconds)
    (208/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.298963203 seconds)
    (209/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.502289907 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.360469702 seconds)
    (211/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.299734739 seconds)
    (212/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.318951173 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.932827425 seconds)
    (214/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.940927962 seconds)
    (215/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.301326301 seconds)
    (216/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.611506962 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.362277259 seconds)
    (218/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.141590123 seconds)
    (219/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.160152005 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.22386394 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.976625468 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.423024265 seconds)
    (223/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.406480931 seconds)
    (224/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.385442866 seconds)
    (225/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.384807559 seconds)
    (226/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.348270893 seconds)
    (227/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.348509484 seconds)
    (228/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.269844075 seconds)
    (229/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.436701672 seconds)
    (230/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.828240333 seconds)
    (231/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.322460107 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.019234112 seconds)
    (233/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.092027725 seconds)
    (234/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.302940188 seconds)
    (235/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.382014132 seconds)
    (236/286) benchmarking ("sort", Float64, true)...
    done (took 6.3202977 seconds)
    (237/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.719167823 seconds)
    (238/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.354750732 seconds)
    (239/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.407937436 seconds)
    (240/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.35479841 seconds)
    (241/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.788966556 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.74045001 seconds)
    (243/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.336293277 seconds)
    (244/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.310289513 seconds)
    (245/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.455190687 seconds)
    (246/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.53775782 seconds)
    (247/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.365274824 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.349342914 seconds)
    (249/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.332742648 seconds)
    (250/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.699835829 seconds)
    (251/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.879290629 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.708506969 seconds)
    (253/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.305958687 seconds)
    (254/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.323404869 seconds)
    (255/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.340645301 seconds)
    (256/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.907886764 seconds)
    (257/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.536692884 seconds)
    (258/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.303474873 seconds)
    (259/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.551152917 seconds)
    (260/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.340878549 seconds)
    (261/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.30293137 seconds)
    (262/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.390741551 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.704244205 seconds)
    (264/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.361111402 seconds)
    (265/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.353824099 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.406173916 seconds)
    (267/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.349395617 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.200409366 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.406839978 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.432796078 seconds)
    (271/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.327283986 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.166201969 seconds)
    (273/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.718485642 seconds)
    (274/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.407465125 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.366209673 seconds)
    (276/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.435112806 seconds)
    (277/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.639083543 seconds)
    (278/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.090845862 seconds)
    (279/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.347733949 seconds)
    (280/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.458344716 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.346783785 seconds)
    (282/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.323465557 seconds)
    (283/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.451411201 seconds)
    (284/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.749477441 seconds)
    (285/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.509147717 seconds)
    (286/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.065659874 seconds)
  done (took 935.904815446 seconds)
done (took 937.129526375 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.359344455 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355921979 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.337024663 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.359763896 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.448611878 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.361407942 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.34705733 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.339919398 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.385682526 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.386230088 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.33733089 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.359833508 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.339676988 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.338396378 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.337538255 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.354285404 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.437118495 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.344558934 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.355999031 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.349022926 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.354918888 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.337986934 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.388094131 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.361275417 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.342140015 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.341388862 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.343034711 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.359412831 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.451427809 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.343868951 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.343435921 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.350743784 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.440126908 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.341155766 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.33502157 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.359056964 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.350690345 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.349242806 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.343246719 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.372548864 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.867554994 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.35911025 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.341486351 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.341514739 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.340137791 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.344694583 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.341985585 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.347380607 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.354679045 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.356457447 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.877229788 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.376034884 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.34545779 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.34250692 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.351063356 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.341676682 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.345350846 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358596579 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.361118624 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359864617 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.433707684 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.353383412 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.344310859 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.359361758 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.349663999 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.917564541 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.356184253 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.348173617 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.869972846 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.366075012 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.918813371 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.372713167 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.343395471 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.357164779 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.375516235 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.446007587 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.342652839 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.342281311 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.35089227 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.341524078 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.35387756 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358203009 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.349382049 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.344326733 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.357634655 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.366677741 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.353424576 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.345901355 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.352942023 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.364006976 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.35240503 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.356478044 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.347619284 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.338830071 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.354174904 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.34583249 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.347030216 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.347334785 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.348004621 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.354747616 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.862730269 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384062558 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.340685057 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.340798216 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.344903127 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.359440048 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.869990285 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.366644716 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.367663443 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.392606126 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.346750565 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.434438586 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.353841746 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363666707 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.353577203 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.349591831 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.340619979 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.435579649 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.882690874 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.381380232 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.349046493 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.345462059 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364110508 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.348411329 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.342346696 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.450216606 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.349744874 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362902011 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.466564753 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.357703596 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.379696899 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.34502474 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.350287214 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.369834749 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364311897 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.378937251 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.350360937 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364207862 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.361896874 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.343619743 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.358884718 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.358297832 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.348134411 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.353152857 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.341263418 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.37036244 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361892344 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36129512 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.368910172 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.468824274 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.344137829 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.440793647 seconds)
done (took 228.366505362 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.404698472 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.340541155 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.434325395 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.341840472 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.44306456 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.444107467 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.340551461 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.33966509 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.339419957 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.72003346 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.341161476 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.340077015 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.342085133 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.341673938 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.42572407 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.343318762 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.340700955 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.683761859 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.342727598 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.413020588 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.341582735 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.342839862 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.343666555 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.727474528 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.338995017 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.334860015 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.414154251 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.343529544 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.690509542 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.345387029 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.341000212 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.69055288 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.435101981 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.3622715 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.353724391 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.351571011 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.445293585 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.363949437 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.424788384 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.425381065 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.436984796 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.383621033 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.337415165 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.344977715 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.345738368 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.346166024 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.341730542 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.370925032 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.339558872 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.342739729 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.686366744 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.355927409 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.344058043 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.345239753 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.343317047 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.374860152 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.343809267 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.345407576 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.434180784 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.346653116 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.407800628 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.729539667 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.725215696 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.345145413 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.345229034 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.345201446 seconds)
  done (took 149.139855754 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.412803581 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.420453227 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.460381809 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.364620347 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.398529424 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.463251845 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.363752837 seconds)
  done (took 11.137738297 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.351788945 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.348213156 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.395980404 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396860515 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.34775344 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.525034805 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.34728775 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.357974657 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.345030411 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.42496873 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.347952037 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.347423457 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.353654881 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.345611348 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.394784927 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.358378929 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.462104474 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.347546934 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.348253082 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.496906414 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.346164801 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.356116753 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.399184604 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.358805079 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.349739083 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.352773577 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.164029763 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.34807043 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345410123 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.348992782 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.346165408 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.424502254 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.350448369 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.348727587 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347144853 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.464446704 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.349977683 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347846111 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.349930795 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.344432153 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.349473633 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.350732027 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.349001494 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.347031662 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.349481061 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.371389483 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.349615644 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.349950236 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.349798974 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.350327847 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.430676561 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.350296906 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.34890319 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.347029436 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.405052112 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.359138071 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.351235756 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.34822545 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.351988455 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347716551 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.501638984 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.398052699 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.350759266 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.398418611 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.351217856 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.352010077 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.352923551 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.351865052 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.40469511 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.350406144 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.39886301 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.348724318 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.536390926 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.373867027 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.352787328 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.356306044 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.354445 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.35132425 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.346832937 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.35704929 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.34869825 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.352230405 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.356789127 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351050557 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350758635 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.517700183 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459302587 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.350140236 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.364058338 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.359492826 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.350228011 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.405393444 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.353023586 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.351299965 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404111558 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.467852422 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.405633387 seconds)
  done (took 155.237924489 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.357123644 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.361768797 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.354227705 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.368857256 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.353420065 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.352175159 seconds)
  done (took 9.408478095 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.355230014 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.355843096 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.354413038 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.353486464 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.353402985 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.353220892 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.353948748 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355860379 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.356649906 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.353570648 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.355088863 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.355454956 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.354037274 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.353834408 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.354377687 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.356049875 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.356286917 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.35247235 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.354959467 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355074148 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.449157889 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.356408804 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35485227 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.356395579 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.360171767 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.35600644 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.363904613 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.357449303 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.355450784 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.36483608 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.376745255 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.356428108 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.357642308 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.362614739 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.359680468 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.356128293 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36055946 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.357146103 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.356226263 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.355467421 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.357245658 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356866453 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.356653016 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.358111069 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.357761798 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.360864864 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.36226438 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.364257708 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.356549274 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.35771984 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.358740513 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.356984196 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.35801319 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.357496368 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.360857167 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380510684 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.363036404 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.355501626 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.357545501 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.3586279 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.361589854 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.357842831 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.359762363 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.363205421 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.365602653 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.360300691 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.358306615 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.360543249 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358203265 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.359167404 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.360328155 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.35690147 seconds)
  done (took 100.147351938 seconds)
done (took 426.321205072 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.778022961 seconds)
  done (took 8.044072565 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.479999749 seconds)
  done (took 7.748365884 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.119258781 seconds)
  done (took 23.391933422 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.419272587 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.452260701 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.382796188 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.353352662 seconds)
  done (took 26.876738028 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.793408472 seconds)
  done (took 8.060250278 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.357122134 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.367268231 seconds)
  done (took 13.993256869 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.398940152 seconds)
  done (took 7.667250832 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.033883558 seconds)
  done (took 8.306715283 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.377524135 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.393017742 seconds)
  done (took 14.304738248 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.332608108 seconds)
  done (took 7.600842603 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.917161336 seconds)
  done (took 12.18488115 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.370131838 seconds)
  done (took 7.640382571 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.350875936 seconds)
  done (took 7.619278814 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.745319825 seconds)
  done (took 10.013703635 seconds)
done (took 164.717806417 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.352537694 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.360603177 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.359840082 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.361170156 seconds)
  done (took 26.702977872 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.395611148 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.393731092 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.396504868 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.406120884 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.39692393 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.394312995 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.388637761 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.387345327 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.404668842 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.399449925 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.397548684 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.397410317 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.395470245 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.386712113 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.396860558 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.3978371 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.40761418 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.39629168 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.387373116 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.399861355 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.36358986 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.406472848 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.39918082 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.363977051 seconds)
  done (took 34.728863085 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.881566734 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.431965917 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.515320076 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.413914388 seconds)
  done (took 7.513725043 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.413941823 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.416635787 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.427342385 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.467751152 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.494201782 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.425653608 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.391199606 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.3837968 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.371967286 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.416966768 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.492222844 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.432765821 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.50661018 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.363687179 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.550586235 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.363670349 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.363559961 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.416563569 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.469760398 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.485104191 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.365464531 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.414863581 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.423123401 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.433305249 seconds)
  done (took 35.562530441 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.36459393 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.382229153 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.365103731 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.362053365 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.371640022 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.362972072 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.364333882 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.364945882 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.363556865 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.369980789 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.363543983 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.377976572 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.364188292 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.36566525 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.370456715 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.365866879 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.372618268 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.364290933 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.364314901 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.369926327 seconds)
  done (took 28.623061964 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.359092436 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.285526634 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.710427135 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.616289596 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.359881472 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.365197007 seconds)
  done (took 28.969819146 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.438313895 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.593158565 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.366237075 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.736326476 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.830336427 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.382267325 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.368605044 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.622495327 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.952040805 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.949111218 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.431828781 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.435113367 seconds)
  done (took 20.381621582 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.368853569 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.362209811 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.373496885 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.379750898 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.423458587 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.387221345 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.372462559 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.360064539 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.430392376 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.445279014 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.387625589 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.423586378 seconds)
  done (took 37.989254714 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448437196 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404910458 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.330848031 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386045749 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.08102177 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.574045344 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.418876078 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.794568642 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.362484277 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634017888 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362069582 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454257928 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.614716457 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359285696 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38109892 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.381771349 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604727479 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861154664 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362343748 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.594716764 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388043786 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370502522 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.601650866 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.39470568 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572267968 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.503777687 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.621736458 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.1400563 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667504421 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373102773 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371414932 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361871443 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636422155 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039446523 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478348862 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372099407 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363076866 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.992192506 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.34361347 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.49876555 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373303613 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367448409 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373505027 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363022626 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.296639771 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373311431 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803784317 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.370208688 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.074881326 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.36280522 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374544867 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457244114 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.366975801 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.933531968 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368885763 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.387908713 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.360240658 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459594065 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950738065 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.029803004 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370406353 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.302306842 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367143644 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.611908661 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021574706 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.484428948 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.366380413 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.36819495 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299008965 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.555424387 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384425299 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510919646 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.387064778 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.014277656 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125137997 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.394642557 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.298774644 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919313182 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372267573 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.30218162 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592956596 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.139938153 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300551711 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.310706201 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.298909928 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102563095 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377168298 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.782790329 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386989358 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.82435561 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.379412075 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385489905 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388977 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.58814787 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.242877539 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365229248 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.367051041 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492472328 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38739511 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.802090616 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303913401 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.370476408 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622139026 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.578293961 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378585142 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.389589094 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595065276 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369251972 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.385017971 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.371629452 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.382811882 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.977454193 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40018564 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.036229398 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386733948 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.142430826 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138474505 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374533915 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.471188752 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.367718108 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626073584 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.148569065 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.253825841 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435304324 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373480312 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368150107 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.639624042 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.962384518 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.25099382 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.363373918 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381291834 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.385490294 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.367027206 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31336206 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.376330013 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375533676 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.154045579 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.592437312 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36960101 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664814463 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302717913 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516086937 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.377590413 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.592389284 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.601327015 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.386060752 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629467152 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369589331 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376524647 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383157997 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388883332 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473119056 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391702638 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.376556369 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.631429953 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.374167688 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.373928506 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.616993577 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.156918948 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37867155 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.377428368 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37546807 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995413667 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368563835 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373283421 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.261113406 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.385067814 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438751778 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376963174 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.381264159 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.287450812 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401004366 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.37719839 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.37061488 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597564252 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38009785 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.611948227 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455588372 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.575889959 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.997768675 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407882532 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.306263276 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.083649138 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.065671497 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372524799 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.57196927 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373580777 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384223263 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384123574 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389543986 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.988966118 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39578794 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.539748094 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.383955659 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.383660059 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.37719458 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373991926 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.292068552 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.084659156 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381184666 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.407301753 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515692352 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.387438285 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.307621139 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.890138515 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378479365 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373853223 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.148482751 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407063979 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.521871278 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857616568 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634620543 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377856417 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385170681 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.722552379 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.413739373 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.374929459 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384048328 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381595661 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.394329007 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383527886 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.385100302 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.603190408 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.740772673 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939930534 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116977795 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963518825 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344319635 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.37803097 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.277039125 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.81202284 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30900302 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.031672258 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572562364 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.828068013 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319361032 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584148558 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.616350468 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200531524 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390152033 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602394334 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325578613 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.385816934 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394823469 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586981425 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410211267 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.384290081 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.310092933 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.893140128 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614853829 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380219364 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457325247 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81378752 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393566472 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.159564867 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.44103425 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.733283069 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.576520714 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.924977245 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.763397014 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385520194 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393112543 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859711552 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38185612 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.903487314 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019880115 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396527544 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.607662326 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31706096 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.387020382 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.38920373 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.373953828 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.811225188 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.389803563 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.636814335 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390213401 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311535256 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.379849509 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936371852 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.254231941 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.383449621 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379240076 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148314186 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398787795 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688989609 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.379264228 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.290293179 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403534367 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.313138265 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312455695 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.07197987 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387112519 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355378448 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894980073 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.392021055 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84753303 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3957464 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228642349 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.635875252 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.393596089 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.997076488 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622069669 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378314983 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403343675 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.480832696 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380583684 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.36132033 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.274641079 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.615270428 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.471914183 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.62382592 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.383220169 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.279385053 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.453185298 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59159214 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.281686817 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384941829 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642154484 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.110715242 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.394832323 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096748537 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425070177 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386159487 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390781512 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382118197 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401017117 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472690584 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391903174 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.392921932 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.393224749 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.55743878 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390601031 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38207687 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.395999858 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476100469 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.97218919 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.289990673 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.159528333 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000731854 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153849512 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.011913175 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411472816 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381987891 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382650446 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31697095 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533995802 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.906873458 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655877171 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512225534 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.385331061 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405255717 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398192695 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38758647 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597867632 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657878377 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.353269543 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390673389 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.172346509 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.266238791 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394597571 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.593982196 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898393497 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961630695 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500441841 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.384172911 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.840985045 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660618206 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.474107248 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383200914 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972632318 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.384437362 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.753428673 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.410642969 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390241232 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53134552 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393223618 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068412901 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.414981324 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.544275623 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.158070721 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.606790959 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638684135 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.874986789 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.397141046 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00711115 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.143283074 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648315274 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455609995 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396233726 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.490710111 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533379424 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.397752214 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.267580504 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38551151 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229475109 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.096545528 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.395746102 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009309706 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670470191 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.384436909 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.396843466 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409562356 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.397260262 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.609226197 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132427034 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614982654 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398087364 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395915688 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.955785885 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010743188 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420293917 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321853285 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.389983167 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646739908 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.642120518 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410398945 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.840727595 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.098937497 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952165272 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.359932772 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410116169 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390181782 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.124246917 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011920104 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.292220305 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914301204 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.04639964 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40155641 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665905012 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.393090971 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397840096 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670604238 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.392190467 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.392083125 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403101934 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.024666089 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217103236 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.395445706 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.689184317 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.329342886 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.615163314 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433878019 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325316896 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390638531 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.575225896 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391663467 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522866168 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400597365 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.388083564 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401034059 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.149699974 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672066628 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.396612609 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.392893947 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.374492149 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404318428 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488196472 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632168453 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394634739 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.064460343 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.739661578 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.645228821 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.390413994 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.372482797 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.394245442 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3906067 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.109088607 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.401469189 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.391091607 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972368394 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.394830946 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.406103214 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39554503 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.608033784 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602715332 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39152831 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.42381707 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397812766 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40966817 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.292392403 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.159728311 seconds)
  done (took 1667.304980417 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.394547787 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.404744633 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.416239134 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.398427624 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.41948486 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.532490472 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.418481377 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.433857137 seconds)
  done (took 52.721802462 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.391802968 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.55530269 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.42308199 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.402913337 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.399850004 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.395115352 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.869454021 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.424575907 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.400285115 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.402684191 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.393401868 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.3932658 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.077026169 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.402030443 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.406206386 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.387481272 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.400414612 seconds)
  done (took 66.43471375 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.728789576 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.589384109 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.616633533 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.40668391 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.392006449 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.409523108 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.616861499 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.410173889 seconds)
  done (took 54.476033446 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.410495576 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.410735556 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.410879329 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.410212159 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.411695985 seconds)
  done (took 8.358781386 seconds)
done (took 2071.037569092 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.398458263 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.401534943 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.397785991 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.40221772 seconds)
  done (took 6.904148029 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.374337003 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.089062948 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.375360014 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.389660165 seconds)
  done (took 18.533272716 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.4217953 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.400166493 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.13517435 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.066213797 seconds)
  done (took 5.508139003 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.145150563 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.156392416 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.142459862 seconds)
  done (took 7.749025439 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.39196484 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.396992484 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.398606343 seconds)
  done (took 20.493361065 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.694073045 seconds)
  done (took 2.999364418 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.541883913 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.590219779 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.712362674 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.717859105 seconds)
  done (took 7.868044925 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.676297128 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.784832974 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.58668777 seconds)
  done (took 6.352899625 seconds)
done (took 90.535750919 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.383253365 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.396077076 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.602180151 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.350844974 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.626200885 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.598861258 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.606200889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.318503955 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.861133306 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.851093626 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.355947171 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.624243112 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.556290318 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.641542316 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.556259958 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.397168984 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.624631432 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.420077266 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.032424223 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.233388836 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.614344987 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.989129152 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.182620538 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.008873999 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.626604143 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.547927743 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.5688581 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.397794164 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.208937535 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.591656793 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.547361776 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.40183304 seconds)
  done (took 195.029547333 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.3956464 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.408999502 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.396081298 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.396143953 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.396919307 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.397748806 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.399998949 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.396525635 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.414355766 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.415926656 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.396871761 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.403257834 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.396663197 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.417329812 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.400052217 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.403160936 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.397663138 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.411892191 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.396786676 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.398358586 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.415705196 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.404335881 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.397725897 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.396661086 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.415272742 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.426248264 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.398687127 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.41461055 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.397689251 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.41440132 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.412487554 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.397466554 seconds)
  done (took 206.240642128 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.39738136 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.425496413 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.39953996 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.419529373 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.410675397 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.398426779 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.418103941 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.398687933 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.408690719 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.40084667 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.40589493 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.405606463 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.415554987 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.398265494 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.398101514 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.421956752 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.399179708 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.405584722 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.403999118 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.399815772 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.423031285 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.400160794 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.421223893 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.399123621 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.399774535 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.417895945 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.415699589 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.400878649 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.398288299 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.402355752 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.404821772 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.424172638 seconds)
  done (took 206.349278026 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.595974017 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.407764797 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.409107307 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.341139053 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.408729807 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.408719554 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.400352694 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.606054928 seconds)
  done (took 14.889564914 seconds)
done (took 623.81487277 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.745668844 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.463530527 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.61123692 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.428993401 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.215260059 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.447801258 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.42917424 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.605698431 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.337767936 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.613235314 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.665109108 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.444088141 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.813113351 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.427974064 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.689752652 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.531635649 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.340514562 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.470379355 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.749996223 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.98333421 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.694358814 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.897126199 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.624881166 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.334045457 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.826890492 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.895886529 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.160182816 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.330483578 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.446042721 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.758311597 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.060391096 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.419078126 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.4941066 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.492026415 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.549304203 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.529252783 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.389185263 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.489647108 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.636016079 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.660566805 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.986263407 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.157529525 seconds)
  done (took 95.15926638 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.392659138 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.393098577 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.392844374 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.393081275 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.394530046 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.392345207 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.39332832 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.392903623 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.39364015 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.392311768 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.391996867 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.393685263 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.392960942 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.393389271 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.392664343 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.392465368 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.394459147 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.395020851 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.392876253 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.392851516 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.392555521 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.393005553 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.394695003 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.393140949 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.393439493 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.393978508 seconds)
  done (took 37.540171349 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.414006991 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.664734169 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.834721967 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.419186218 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.412963243 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.417783132 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.496335748 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.41566235 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.415895894 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.416912029 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.569251209 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.417225126 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.450030026 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.865075751 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.4165307 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.415653898 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.4146334 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.414500416 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.674213494 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.423405976 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.516332963 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.415197243 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.496842529 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.422691679 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.436097839 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.415243761 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.419077332 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.987426751 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.435032911 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.571425488 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.252727227 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.496239593 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.961960606 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.867858881 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.260764083 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.419766605 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.416312593 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.575273952 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.416674852 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.416245846 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.496464154 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.416703006 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.846423281 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.091182071 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.435975782 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.417187252 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.007498918 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.596537361 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.675076958 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.425395103 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.87445819 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.419654789 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.419435127 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.418819935 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.675384846 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.423155846 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.416951512 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.031509199 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.440918527 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.500635159 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.419307416 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.417369287 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.681740113 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.417179607 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.670646383 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.41869375 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.424534815 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.437807305 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.850929057 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.421028484 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.119715683 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.436119814 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.419131708 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.573935012 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.670747387 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.042213016 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.443194599 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.6882998 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.978298576 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.515576704 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.421705458 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.978206092 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.520274038 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.420884706 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.421362774 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.421312992 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.419740223 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.46775022 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.497692945 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.053863543 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.123379229 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.057773146 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.521917412 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.432659635 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.420093445 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.035159364 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.440501259 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.419596252 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.845160964 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.118106692 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.437835735 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.428546318 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.120499096 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.440610827 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.503808373 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.42547226 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.855682434 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.421196532 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.471557281 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.420476926 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.427168493 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.443863714 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.503970113 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.424783218 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.422761325 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.088200336 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.599558607 seconds)
  done (took 187.037694477 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.422074182 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.412997802 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.419410563 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.413684366 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.414412816 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.421394727 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.414041339 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.415481063 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.419982039 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.413360093 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.414052012 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.413743968 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.416525441 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.419039079 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.425519193 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.422129271 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.025695858 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.417093021 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.426910607 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.415111273 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.22500186 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.416761389 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.44002113 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.416090193 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.415952619 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.415207258 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.43281395 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.418585589 seconds)
  done (took 154.467553935 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.424332386 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.012141556 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.441408367 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.560807188 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.445524444 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.420704083 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.558209676 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.482869221 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.441965266 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.421414714 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.420740213 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.739059793 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.424934435 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.962444621 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.626449384 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.579316934 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.96231593 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.442629204 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.42099954 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.421683448 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.562885999 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.429051768 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.740032973 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.015461222 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.444542937 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.014502074 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.408913973 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.425329576 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.423872202 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.017956019 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.441733117 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.742683621 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.50608964 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.48614409 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.036587629 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.981851655 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.982546002 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.580552531 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.424122278 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.423277363 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.423178753 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.408534372 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.01785009 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.444154017 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.425379808 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.008771698 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.445700157 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.427719801 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.431754846 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.422703277 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.48788019 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.505780143 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.762729775 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.025180003 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.523960312 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.438349618 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.563665477 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.813618166 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.427852747 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.965741267 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.408029613 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.025938271 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.446568156 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.409446206 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.426074492 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.431755172 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.583853354 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.56365335 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.968917855 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.444567499 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.968294195 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.602142056 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.425875561 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.424802504 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.42873426 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.026173552 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.988220326 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.602428927 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.568507412 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.634355148 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.415562844 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.425680738 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.41367577 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.507999791 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.427475175 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.02864495 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.007247972 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.450412878 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.428492912 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.429843614 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.429851492 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.613608208 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.045629069 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.527259082 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.958641114 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.766171712 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.748950273 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.430185695 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.489583863 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.445482367 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.750343592 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.430860783 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.488577557 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.882528159 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.750776581 seconds)
  done (took 170.270003015 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.681342833 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.654410544 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.519389373 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.589203597 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.036346459 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.994300003 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.770636207 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.568464992 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.542694292 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.699114039 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.612842113 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.519550667 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.654551341 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.506293708 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.172839431 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.51830646 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.542881261 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.577294889 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.591515484 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.466327991 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.134978322 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.712851657 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.626269628 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.332879888 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.523510528 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.214729328 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.007311945 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.009080734 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.613670134 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.768019276 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.992906188 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.577671671 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.413455132 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.148348946 seconds)
  done (took 68.62691097 seconds)
done (took 714.413652184 seconds)
SAVING RESULT...
DONE!
