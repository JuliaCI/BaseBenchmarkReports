cset: moving following pidspec: 2195
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.369784472 seconds)
loading group "string"... done (took 0.582907453 seconds)
loading group "linalg"... done (took 7.655547927 seconds)
loading group "parallel"... done (took 0.155647756 seconds)
loading group "find"... done (took 1.219208189 seconds)
loading group "tuple"... done (took 1.807825545 seconds)
loading group "dates"... done (took 1.274104825 seconds)
loading group "micro"... done (took 0.221253904 seconds)
loading group "io"... done (took 0.928790877 seconds)
loading group "scalar"... done (took 38.217513965 seconds)
loading group "sparse"... done (took 11.85992968 seconds)
loading group "broadcast"... done (took 0.962313228 seconds)
loading group "union"... done (took 12.629168029 seconds)
loading group "simd"... done (took 4.535579975 seconds)
loading group "random"... done (took 8.826017123 seconds)
loading group "problem"... done (took 1.680901197 seconds)
loading group "array"... done (took 20.08547927 seconds)
loading group "misc"... done (took 1.638715177 seconds)
loading group "sort"... done (took 3.118705308 seconds)
loading group "collection"... done (took 17.179101429 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533231079 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.132617937 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138317151 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124504434 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153880288 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123861647 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130640806 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090672386 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.887029224 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154355219 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119702467 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415108418 seconds)
done (took 5.382351803 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177527496 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087727337 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087752842 seconds)
  done (took 1.235329196 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.072710689 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131352686 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.07313894 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074501676 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.075134109 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07465632 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.077670495 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.074614574 seconds)
  done (took 1.644248523 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078202814 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073632438 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.07218121 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.074164874 seconds)
  done (took 1.360332012 seconds)
done (took 5.562416783 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.775013332 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.21302932 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192222742 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397019425 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133608868 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.176832932 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.658519716 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325880281 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.191023939 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080474506 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112488461 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.348702109 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125803667 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.652598674 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.082944312 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095412258 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.14540124 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.419746455 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.073237804 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088171705 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09453116 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133943025 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089881141 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079229313 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149835987 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072949129 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.139586471 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08556367 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071448449 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.218600071 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177857988 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.667375728 seconds)
  done (took 10.360866069 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.106499815 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102996039 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074747327 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.131358083 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.106117468 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075582316 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081286707 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073500254 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094886588 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134373843 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096571587 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.11150772 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071526257 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074579789 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088968862 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214253824 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08713842 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086712176 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075712579 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084242723 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113718804 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083521547 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085266997 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085660222 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.135220369 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.189038188 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105685805 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.104992866 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.07416491 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09040396 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122431299 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.136196282 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073964686 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073386079 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.134022558 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105379716 seconds)
  done (took 4.783211065 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.982851123 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.146093221 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094307267 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137239898 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070796548 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112232013 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.071485647 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085855332 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.212354082 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.430644751 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.586131418 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.13526385 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118035287 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108888702 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074043948 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076514511 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075038461 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.502391374 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108479775 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116143991 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088507607 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077880507 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.077190075 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.072786185 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074667213 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07167087 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076624046 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.122562628 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.082004638 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.309672032 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129673867 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07749061 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.939288785 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.169566375 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070852837 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.243955175 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.176197696 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096616025 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145280221 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074968536 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072093586 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165472523 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070940053 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075762361 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097022428 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.072686254 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089923518 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109657099 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.128086177 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071428824 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072088943 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173581311 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.071057064 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.071832009 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084488863 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.133213959 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.162131829 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075241345 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.299472649 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098243179 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078192187 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073285945 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.178355529 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125059588 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073362189 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.0729928 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074067607 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074357106 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365112792 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071131364 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.88738947 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076184538 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.086362961 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075343226 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074504525 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077839704 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077598941 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093642311 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071033701 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07879746 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070976003 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.071594413 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.073415599 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.090223799 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.361686811 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.174876645 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.076180873 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.073567792 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098966651 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103610041 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.075821032 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07304379 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107367654 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073516499 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.072655654 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07231896 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.070438583 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.088688373 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07478581 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.119242838 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.074776565 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.093410159 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104684995 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075559227 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104203808 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084563162 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073742677 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.409392597 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071313076 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.077203577 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.071001229 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.074394512 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.072177943 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069857422 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083097344 seconds)
  done (took 22.197321816 seconds)
done (took 39.385190684 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245134851 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074841002 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075134215 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075428387 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076090263 seconds)
  done (took 1.691363114 seconds)
done (took 2.824171574 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124683048 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103611082 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070613313 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101745367 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070128497 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10483032 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107255438 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082157938 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103959068 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07004521 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101071924 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070542016 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070040582 seconds)
  done (took 2.328446118 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.0887742 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089187167 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075934585 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08823649 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068964568 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087984283 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087223431 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093999785 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089185932 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078220014 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069060128 seconds)
  done (took 2.047980844 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088001664 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088992503 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075243719 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08795178 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068994032 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087310587 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086971959 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090456777 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087179308 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079654626 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07071671 seconds)
  done (took 2.035628634 seconds)
done (took 7.534987221 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081394616 seconds)
  done (took 1.197468075 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.536023278 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.671114322 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085163059 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109601102 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192670731 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.114397796 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.240715582 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086935213 seconds)
  done (took 8.305703991 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.107191407 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.074561712 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076134543 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074003453 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.077984209 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074667918 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.074154344 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075509874 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076439653 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076432079 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078243391 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079237279 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076400046 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079811394 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07710779 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076824737 seconds)
  done (took 2.447554152 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097048024 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095808193 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078805796 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.081097821 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077900764 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079135319 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.080921885 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080853794 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.078157716 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079343767 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082717916 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.080664884 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.079037634 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.071094163 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081099109 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.083535111 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.077861577 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.080062128 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.080290622 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.08096265 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.080189978 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.069006174 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076813896 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078986256 seconds)
  done (took 3.142000027 seconds)
done (took 16.218463213 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111254535 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073091799 seconds)
  done (took 1.3040163 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084879112 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086093303 seconds)
  done (took 1.299082452 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085194166 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.070117243 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09473342 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.083809406 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.072668039 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07256313 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.093265068 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07238788 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.072735852 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.072822153 seconds)
  done (took 1.919731887 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072328603 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080094975 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074682347 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.086927014 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.079560503 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.070911262 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078365394 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.074142317 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082942111 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.069303296 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07766466 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.090289179 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.077587545 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091885548 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.078130964 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.074309736 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.075329074 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.072372766 seconds)
  done (took 2.537177591 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070903795 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070644992 seconds)
  done (took 1.277768982 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.072263422 seconds)
    (2/7) benchmarking "second"...
    done (took 0.069127395 seconds)
    (3/7) benchmarking "month"...
    done (took 0.072217893 seconds)
    (4/7) benchmarking "year"...
    done (took 0.072794152 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.069561445 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06938648 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07041198 seconds)
  done (took 1.626387513 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.390019239 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120678178 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.305962077 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079958409 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.088661867 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260978947 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071982809 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076817759 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.077048444 seconds)
  done (took 2.642522267 seconds)
done (took 13.741878629 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086236741 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.092614203 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100876951 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.382636805 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097913737 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.073891221 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121316038 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189187386 seconds)
done (took 2.286419386 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214960895 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.661678447 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.405204586 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206988758 seconds)
  done (took 2.408822679 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342776795 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093136988 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06580125 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073231746 seconds)
  done (took 1.716815048 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072518689 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075606774 seconds)
  done (took 1.289655931 seconds)
done (took 6.777109567 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072341179 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.202607462 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07213669 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.070240872 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074228297 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.072048126 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07196923 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073799031 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074071791 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071414861 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.073678267 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.07374764 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073253197 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071299644 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071201813 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073269231 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071385363 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073136231 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070952242 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.073244127 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071397423 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073601893 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071800054 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071083157 seconds)
  done (took 3.03613861 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088861163 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.072418399 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076337812 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.077135628 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07660474 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.077487435 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.077793689 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.073449105 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.078497451 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.076119605 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075679383 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.076052174 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.075782171 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.076048514 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076052794 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07565673 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.077965665 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073495167 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076251733 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07597542 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.078097151 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073425627 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.075939384 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076618529 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073336963 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073464329 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.074796717 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.072989518 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077850034 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.074316502 seconds)
  done (took 3.432331463 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075798364 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06847162 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06923825 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.076992787 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.069061504 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06904028 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067894226 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068974723 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069595447 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068518997 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069344431 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.069598545 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.070629431 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.071082742 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.070864979 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074436898 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087321931 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.070397879 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.070640999 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.071074705 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074419208 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07147721 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068861079 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.070468941 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.070174472 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.069866229 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.070548885 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.069998944 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.071488611 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.069795607 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.073859305 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074301542 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.069754305 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07832944 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.074836567 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.070288415 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.075171289 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.069952174 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.071239471 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.070055431 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.070216986 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.069953153 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07054156 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.079020484 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.070808583 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.07157265 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.070515113 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.071409294 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.070957355 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.072658639 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070050725 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.070031998 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.072838841 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.071296115 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.074878408 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.070193478 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.071187503 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.069946612 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.070994643 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.070368316 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.070040317 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.070149229 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.07356532 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.071075959 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.087439336 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078723294 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.070639942 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.071910206 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.071147838 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.073970551 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.071897038 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.086454301 seconds)
  done (took 6.338241771 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092353805 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092880885 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071239492 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071531436 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067340802 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069377732 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074720806 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069467416 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071491823 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088437753 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0696276 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070811828 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072657176 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075219007 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071070036 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073052405 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07996148 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068981623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.071056238 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07530754 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071025458 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076931998 seconds)
  done (took 2.806023408 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154561984 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075422781 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110475931 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080336117 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075511257 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079754448 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076939456 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077434378 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078076264 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075099317 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075511111 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077408581 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077339418 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075164497 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0749405 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075214124 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077473162 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075300581 seconds)
  done (took 2.648006624 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082613392 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.072067308 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09290177 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071350168 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.071565292 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074246783 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075823845 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079512115 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073765584 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.073078219 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.081748613 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075823111 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.075793746 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073415101 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075656834 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073574685 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.075925743 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073405257 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08107574 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077850152 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077859384 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080820764 seconds)
  done (took 2.846515327 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085637089 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074995317 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088863318 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07500534 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068250946 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071082561 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077213834 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.073388561 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.077331592 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.075445568 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073251889 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071134565 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.075837797 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073708591 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075609039 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07356701 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075329979 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073202681 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075706128 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068241882 seconds)
  done (took 2.661522654 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089594992 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072938212 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073401147 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081364002 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075160011 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07443316 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081327778 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074601977 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074514887 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095696011 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074470318 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074656693 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081102332 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081206873 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07469196 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081188937 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081248346 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081981704 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074674516 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07497323 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095967305 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074677354 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081494442 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074685279 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074668225 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075092853 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074966072 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078448191 seconds)
  done (took 3.362756918 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073070998 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071664687 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069997561 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.071499335 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071336098 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.071449587 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072042035 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071833168 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074159039 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071655041 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.07416515 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.073540488 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073489366 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074097114 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073493821 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073742871 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073742523 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.072049596 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072102982 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07195936 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.073973532 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073419465 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073424405 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071583729 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07109111 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.073798468 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07161202 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071541715 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073987665 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071415257 seconds)
  done (took 3.34078077 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080523645 seconds)
    (2/2) benchmarking "in"...
    done (took 0.078497896 seconds)
  done (took 1.323865709 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067650969 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085956221 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.068331917 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077321116 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074393202 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072244579 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078231642 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075243676 seconds)
  done (took 1.758342005 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087133883 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080383243 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.073072975 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.084399373 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.082806088 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089865219 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131729143 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.073232906 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080376777 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.072316816 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086598292 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073312371 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080530829 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074796769 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.080172929 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081621013 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.070902771 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07809069 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.074877505 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.071561639 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07404768 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.083260987 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077451515 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068494203 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.076045441 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097064812 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08495896 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072779709 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077594695 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081730566 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.080257271 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.067694147 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.073220537 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.073113303 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.071574092 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.081895754 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088587032 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077557919 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08293634 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074326324 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082409401 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.068576732 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.078915658 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.081309771 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08546074 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.073594503 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.073447629 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.068370939 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.071915249 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.076855362 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.068810387 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074395922 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.068498605 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082053879 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.077843438 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084695645 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.072289074 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075346946 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07728392 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.077108879 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.081231038 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.075868044 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077449263 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.072972592 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08533433 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079698698 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082113455 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.068168159 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.067900272 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.070985855 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.084134174 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098004926 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.079406285 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.073414624 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073263751 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.071027166 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077166791 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073462632 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079473794 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.080311199 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.072566468 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077389636 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081427268 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074658534 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.076308315 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.079406373 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.070935099 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.074746773 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.071713688 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088875349 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.073582124 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069867797 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.0712056 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083225248 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.076776767 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.071775884 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.071498543 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08078817 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.066427969 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.072358813 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072522158 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074186166 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.082410558 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076090879 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075927797 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.081462771 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078669785 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073402175 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075406555 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.069131566 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.201965815 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.075842596 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.084248841 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06953394 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079356895 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.07662094 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.073588838 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.08198095 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.070983624 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071465492 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.081073283 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.078245603 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070250326 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068323613 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07485179 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070730475 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073341439 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080054968 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.070554634 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066474028 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066625008 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075683367 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070747175 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.075357433 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075517789 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074810076 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.066366425 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.069350733 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075940806 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080051374 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.073277737 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072883351 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07830553 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.073537343 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069772492 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078407488 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07400666 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071389147 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.077986561 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.075122699 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.068780667 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075712873 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.076257835 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.071586599 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.078415815 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075483927 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.076075736 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.072959495 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071392822 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.079112371 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073119297 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.073425453 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074261297 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.07180643 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084539136 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.076004558 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.068553157 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.070550745 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.080489895 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.072969571 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.072941396 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.073280473 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.076136133 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.073603715 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.071179233 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072544893 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07654896 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081461763 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07676852 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073710635 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.079426545 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086912426 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072504968 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076287404 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.07254402 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073552699 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.073045965 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083178152 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.079704354 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076632746 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076137072 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.069825098 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078576798 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08195292 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073075948 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.070893239 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.072771694 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07623882 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.079426971 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.076290742 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.072959493 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0704574 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07441368 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074399831 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07587355 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.071383948 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.073397109 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076811283 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.070250809 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077469262 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072644153 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083311273 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076225992 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.067486902 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074200895 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070809363 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.079842461 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.067457466 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.070925303 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.073009151 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.07253752 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.070998169 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.075629237 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.066300784 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.211541667 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081442998 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.074201897 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.073387922 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071837733 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080114374 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.074936879 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076095523 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.076701754 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.079561134 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082730494 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071740573 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.076200442 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.0846801 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071018669 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065980066 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077796325 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069939537 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070389943 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.071145113 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069420663 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077681077 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08132649 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.080553337 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.068173879 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.076345303 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.07103072 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.073734816 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.068921833 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.077837165 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07680967 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07567796 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080845599 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073570207 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.073246842 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077889333 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.072485051 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.073489275 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.073715523 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077210696 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.073346191 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.075553299 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.073383035 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.077038225 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.072681421 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.070946337 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.076074973 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.07253757 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.074729712 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078936925 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.07256175 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074037908 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.076464219 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.073673239 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074876985 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.074903598 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.073074866 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076968788 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075411912 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.074919413 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.076292229 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.068239957 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081851778 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.072429506 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081991406 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07454046 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.070607844 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.078720386 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.076764737 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.077705715 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.073420502 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.073470901 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07543623 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.071339545 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074485589 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079123169 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.07018048 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081945278 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077987859 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072342244 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07432617 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072311708 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073011808 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071094624 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.074470159 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.073177341 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.075016194 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.072393021 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.077863871 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.076331601 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074576392 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0761372 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.073460881 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07435655 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.073620393 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.067642125 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.072577028 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.072994769 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072017108 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082162215 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.072562479 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.073553396 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.070925154 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0728154 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.070962331 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.069099784 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.078455856 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078583565 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071915761 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079679239 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.072366508 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07453482 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083139563 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066606376 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.070435161 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.069910981 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.070996869 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080189095 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072088298 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.082354658 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.074165942 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072651179 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.069291125 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071970891 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.071141935 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066828561 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069646954 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076189533 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.072230872 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071139381 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.072089085 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07577621 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073115891 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081603427 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.071709638 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07397733 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.072333985 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.070079682 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.072916932 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.072492943 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.076152408 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.072278787 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.071313825 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.070059654 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.071863685 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.073505923 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072026576 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06864414 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071560213 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076342682 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068820455 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073371952 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070659971 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063713725 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072902176 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068507123 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068609902 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069988177 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073894592 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07559551 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069098671 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077925624 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068643103 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070936005 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069137069 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067136208 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068022032 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067721683 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068273987 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06935515 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068835141 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076725546 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067041368 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07222055 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070144092 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070000006 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075011956 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068937736 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07219898 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07290952 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070434845 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071903629 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077009293 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07121677 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072690451 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069611681 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070862612 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075138514 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068644757 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076128893 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070352382 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068583355 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070792189 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068699518 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068703939 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068413665 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067450719 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07492356 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07022863 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069790348 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069424728 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066932435 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070541587 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070590015 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077021791 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071682651 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072880558 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064754066 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066314275 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068745524 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068028279 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071669346 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071977055 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074551505 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071104132 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.07005219 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067966728 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078362389 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074756506 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073186005 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068663898 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072684638 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068805834 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071887275 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071204991 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070524623 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070530794 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073515008 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071596737 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069810806 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075563988 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073053797 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.308519255 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.076880165 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07743263 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.078046904 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.071668596 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.076687862 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.080361961 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.083850316 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.080563799 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07724606 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089836727 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.076398465 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.078865843 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.079335883 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.076690178 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.083168194 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.072370738 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.080745874 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.078446711 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078049312 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.071274402 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.077138188 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.075665145 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.079254069 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.076438445 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.070532826 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086190395 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.083443886 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.077230293 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072123011 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072331067 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.068616267 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.068540098 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.073634497 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073378566 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.076128004 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.083937611 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.074067893 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.072867954 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.068187798 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072591246 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077131606 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077801479 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.070634311 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.070479456 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.076252585 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.079221819 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.081905969 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.073573565 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.074336807 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078730771 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07763885 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.072393741 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077698593 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.071280944 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.079458556 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.087904254 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.074358065 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07579333 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.081028059 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082884351 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.073919743 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.069495638 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.074293544 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.078158725 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.076020509 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.07443944 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.074621067 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089568084 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078310573 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.074553621 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.07275307 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.077609307 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.076119952 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.081194121 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072827556 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071881637 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.077156864 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.074928175 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078598387 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076516157 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078366767 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074920498 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.075073911 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070624954 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072405323 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069385905 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071682541 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071760746 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071345661 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075601908 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078134999 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.071725456 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083234035 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080343179 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073262242 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06804888 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.071342761 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071672537 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066545963 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.072972619 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.070179377 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.070866073 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.071317407 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.072039504 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.075578287 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079217136 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.074806246 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.073067807 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.07257424 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06758461 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07658619 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.075783929 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074722613 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.070182877 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.072584715 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.211193903 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.078876464 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077585005 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.074177409 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07761632 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.077327629 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076830393 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06911073 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.082228445 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07316733 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.077016011 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.073849493 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073600643 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.073449191 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078061835 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.077811602 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.075084364 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.076917401 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078506354 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.075528403 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.071680891 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.070528912 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07975401 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.07176245 seconds)
  done (took 46.386402145 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105430591 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068451636 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06872546 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069466784 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079295937 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070107227 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069472242 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070309032 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070131258 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072138749 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069400463 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068945696 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077037949 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08461328 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080477449 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0736417 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069675143 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070268842 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069185978 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07057596 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077474888 seconds)
  done (took 2.85403375 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077792957 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.083553026 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080371899 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088647508 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077070742 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075330606 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082875335 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077341215 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085657789 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080642342 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086054637 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077584161 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.080220376 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.080402483 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080903008 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077869117 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085643245 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079082879 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.077204689 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083330844 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078260112 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083001391 seconds)
  done (took 3.058866797 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.072082201 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.072594545 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.074257135 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06820177 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.073051398 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.068233298 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.076297993 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.070946474 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.076076939 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.073354947 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082321564 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.072865748 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07582895 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068926939 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.074155762 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.071670049 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.115956328 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.076450452 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.073407352 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.074104201 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068671383 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.075967022 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.068997753 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06950603 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.07341058 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.076218603 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.073932638 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.07210954 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.072922707 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.073961049 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.073793498 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.07199169 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.076490052 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07457101 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.073541836 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.073262051 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072955423 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.07613341 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.068646925 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.071459388 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.075124053 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.069366586 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.073972258 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.075965296 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.071413076 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.072749988 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.076867804 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.073347406 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.069037652 seconds)
  done (took 4.909757119 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083297354 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113394813 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.07560114 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09585043 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.087530468 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.079721289 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.077665791 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097824077 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.070832976 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.071446127 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08839883 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.085877388 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072717453 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.077289262 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.077667478 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072448194 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.073952157 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071770862 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07578302 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072096566 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.075865403 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.08011764 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.087062135 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.084987834 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076298677 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071705854 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072083174 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.076550841 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.084335307 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.077464828 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.077729626 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.078147409 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087661998 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.078252248 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072333507 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.075490302 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08872563 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.07361474 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.075179641 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.070916227 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.075146745 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.077254716 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.079861368 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088725876 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072794638 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.077748848 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072651979 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.070506902 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.085509681 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.074981136 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.080196042 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.086095724 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.077305989 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.073115116 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.077250704 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.087503162 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.090582088 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.070976728 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.075690136 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.084582025 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.070558112 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07569397 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085037844 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.074475691 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.079123366 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085709385 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.077804767 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07592214 seconds)
  done (took 6.791278582 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080042382 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101767018 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087734655 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088019619 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081797658 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.082276536 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082740702 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.083842492 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083293627 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087688407 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082966502 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123423325 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087292536 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.083220573 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080464202 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081107181 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.080772386 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080882521 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080823969 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081385002 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.083178826 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08983258 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083070713 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089953996 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086186157 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078880212 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083300579 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08319434 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089423311 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082954909 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08610773 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.083086293 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082884084 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089716565 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08598061 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.082437522 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072238472 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082699631 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.083087555 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082905476 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079144661 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089578544 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082695923 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078839226 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083110736 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082671827 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089618615 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085022403 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082778531 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085573557 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.082074686 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08829658 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080924154 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081014476 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087129549 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08965885 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087079249 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087154256 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08056126 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086844488 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087468614 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089849508 seconds)
  done (took 6.590994689 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086374344 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078036476 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.086861238 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066760519 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071697639 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077230736 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06968605 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06950869 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077793822 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077734781 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079855265 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077480495 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079622807 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07979465 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077001663 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079740046 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07725499 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077001612 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077766584 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07720051 seconds)
  done (took 2.863249111 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080729029 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088335132 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.072804057 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0770306 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.074919348 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.077116512 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073931062 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074662213 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072307252 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074700009 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08090004 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08060718 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072098817 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07660862 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080201921 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076634097 seconds)
  done (took 2.539137051 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.088627115 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076654718 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083553206 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.071617269 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.072113932 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067149014 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.072107848 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06849447 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.069185415 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085398102 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.072698127 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.084203836 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.07263499 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.071312306 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.069418877 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.078667005 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06976787 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.070091226 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.073123314 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.084666424 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077399638 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.071874131 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.076973317 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.073376564 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075857532 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07801775 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.072393875 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.074240455 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.070257536 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.07352071 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.076838172 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077244083 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.069923105 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070898803 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.071781714 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.070470179 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072672898 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.073592047 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.079034003 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.073308792 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.071639956 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075981704 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.073092747 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.074297953 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.069754311 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.073768901 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.069397552 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.076280593 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.071156367 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.07608308 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.072982476 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.075491877 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073554078 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.080577709 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073541607 seconds)
  done (took 5.39522315 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086392186 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074770295 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06714173 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068946529 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074431802 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072752118 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075333915 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072000146 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072857485 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069080408 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074070733 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076473217 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074840756 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077404595 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075000123 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077012816 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06892566 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074741646 seconds)
  done (took 2.653895614 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077699847 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073434184 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.081383255 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07385906 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.073451377 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0759068 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06915288 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.071666669 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071741268 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.074425563 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074139551 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.076429843 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072290701 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.076732157 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074230999 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074007511 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.076014254 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07194806 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073722375 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069427911 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076316048 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07179035 seconds)
  done (took 2.944671907 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098668014 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.089715802 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143716667 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.086109262 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.093433368 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.079982743 seconds)
  done (took 1.906599329 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097471614 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106854637 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07360676 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076772441 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084230872 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077914043 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077812193 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078544629 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085254672 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082844001 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078132426 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088189778 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085123828 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08481364 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082942256 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082990002 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077784053 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07848422 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074420149 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090304486 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078090591 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085389192 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077923257 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077824171 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078158824 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084877117 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085047131 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082827663 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077678112 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085208791 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082952635 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07769426 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085511932 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08268593 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077794642 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085174637 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077971594 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090226887 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082692276 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084519032 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.077123114 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083461485 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085356211 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081949871 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085580073 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078575013 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081912016 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078103583 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078221263 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092309937 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083355918 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084693616 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083201691 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085662141 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0856348 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092087962 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082149876 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08265663 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081963937 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082524048 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084740614 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083308982 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083146416 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080571393 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081169687 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082315597 seconds)
  done (took 6.789723375 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109891376 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074576104 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078549087 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083364562 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084953041 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078027515 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078343607 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078264362 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078013237 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075525742 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116284725 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078147461 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085152903 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084684534 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078398723 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077784631 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078058644 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085187481 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075897408 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091745558 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076740297 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084258317 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084490733 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085018126 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080854165 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080576126 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07624349 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07756972 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078099065 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078063287 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081919555 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07804413 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084716105 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074761453 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084601607 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07812825 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07785495 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08201707 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077829398 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082720886 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084635287 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089903993 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078023452 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077504142 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08309738 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076832742 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076741326 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074837489 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077806611 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075015483 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082667227 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082779254 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083054747 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084692532 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078457768 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078144917 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078015637 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078109432 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078115957 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082861291 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085045334 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07790685 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091653294 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077212313 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077544113 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082852481 seconds)
  done (took 6.71162504 seconds)
done (took 137.091124857 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198864952 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175150945 seconds)
  done (took 1.684579253 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074887028 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101725593 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08248834 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136454649 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072621488 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105863471 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10476195 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082542434 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.072055974 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.074507009 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.07425042 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076241682 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139870025 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072111309 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071714008 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074043014 seconds)
  done (took 2.744471279 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.1028367 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161977505 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10678727 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.07091625 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102763562 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077526221 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070796818 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082345843 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076556249 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072959099 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079290048 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077766897 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07340208 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.078674474 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078697605 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080338666 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073123514 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080191574 seconds)
  done (took 2.876670172 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101814617 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094977948 seconds)
  done (took 1.533522874 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.166310497 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.140742095 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.210600619 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34301994 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158603046 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149651232 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.150534209 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.147454714 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121322366 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142543167 seconds)
  done (took 3.060201191 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104726225 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.157981997 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280886558 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123014393 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07825896 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095443898 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123595843 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084268953 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084435507 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.086152894 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.087789853 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.084190052 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.107894457 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.081182886 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.082540252 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.084623804 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.110960989 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.082009757 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.082464869 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.083382838 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.109420905 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.073957279 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.081119515 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.08165208 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.084900325 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084472525 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.074055798 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.074243973 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.083453602 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.082559011 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.083223383 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097500371 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084192132 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.11059958 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.079393044 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111088793 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.084719033 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.080834534 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.0828278 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.081144484 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.084678835 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082220405 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079275048 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081098726 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07182543 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.082968867 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.07445293 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.074333362 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.085640002 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.075515923 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08517036 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.084628665 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.11050606 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073979709 seconds)
  done (took 6.332896025 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.113201459 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111471321 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077211676 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.120874727 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112556626 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077257317 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.114025168 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106451915 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.116115349 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.078191993 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076505311 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078470678 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086638125 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085515529 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120714091 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.11254359 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077798443 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075289705 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111999151 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112230327 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074739291 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109070093 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10482174 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.115228608 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075584086 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.077475324 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.076060599 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07748206 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083431141 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084689896 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07389748 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084060225 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087729599 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081592587 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073345277 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074045959 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075571006 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08511885 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08694171 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.084821479 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.0812315 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074266475 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076005915 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.077817992 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077263976 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075485282 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.085111527 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.086462141 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.084508345 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076455536 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077705232 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.076049559 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077467807 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085791413 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.084220845 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084286606 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.0850646 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0761629 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076332119 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.079149665 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087286146 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085702136 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083095177 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074905052 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083299332 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076500619 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084355085 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087483886 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074383178 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074904766 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075235743 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075485769 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076868045 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083184434 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.083536957 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07732614 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075511359 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074470115 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082137526 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080854967 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07397357 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080145087 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072705065 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073518556 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076268994 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076461621 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.082858594 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.085165032 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074845541 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074285276 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073633469 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073302651 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.072537189 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080382019 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081942468 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081553311 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081136694 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075179639 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.083226148 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081311847 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.208940672 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.084351034 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076177661 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076679298 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076327847 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083266092 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.082239569 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083585049 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074145445 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074799829 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081501323 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084834004 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074726082 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082038409 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084208825 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081969515 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.073714172 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084761461 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074536139 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083462551 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07494531 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083736338 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07410568 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083397727 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076245062 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.075419957 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076360404 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.085662573 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077729793 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076680057 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077329647 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076602404 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.085306417 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08652995 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075979052 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08221107 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081693394 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075009899 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082039488 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073820934 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082836421 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074949044 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077434227 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075736692 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087830193 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076396998 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075954915 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076194996 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086481865 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075414578 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085778861 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082899081 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075285047 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.089106318 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084591197 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08396652 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086577402 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07775078 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075810699 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076028836 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076267589 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083694542 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085471265 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07774687 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076401151 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083688911 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.086430446 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.074298334 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081859236 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081834866 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082235897 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.074046386 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073773529 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084317805 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083998792 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081223621 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.08323462 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084682233 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074579838 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080411814 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080935561 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073510348 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087040881 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073426987 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.087718264 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.084127031 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082174067 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084097885 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.085544651 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.085466438 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086231004 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.087868611 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073421645 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074551724 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083686128 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075896057 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075561248 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.0827311 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076440076 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076205116 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08724062 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073366618 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.219901591 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.075122754 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.083224065 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075217102 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075737802 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087041757 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074221918 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075904529 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082357211 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076692107 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081804071 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084625108 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.082052417 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07430668 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075265838 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083391288 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083279713 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074212698 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074351312 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076264427 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082288675 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081345855 seconds)
  done (took 19.935599681 seconds)
done (took 39.51244745 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.199170213 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150100499 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.162268603 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117360945 seconds)
  done (took 2.040832877 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.114403108 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103150516 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095259113 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.07083419 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100305129 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070835639 seconds)
  done (took 1.917242925 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278467703 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.194302208 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177929874 seconds)
  done (took 2.010554458 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201605963 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188244184 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.431324356 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.26669976 seconds)
  done (took 2.546500129 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14137396 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090365712 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.072004566 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088287743 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.130779055 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159474129 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10046025 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125781637 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083813669 seconds)
  done (took 2.400915717 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148516574 seconds)
done (took 12.424926141 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.138985248 seconds)
    (2/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.266092711 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.109065612 seconds)
    (4/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.11402488 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.077603701 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073701293 seconds)
    (7/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.082130804 seconds)
    (8/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.081724819 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.078365035 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.23259009 seconds)
    (11/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06226968 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.084205983 seconds)
    (13/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.082585851 seconds)
    (14/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.081125793 seconds)
    (15/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.137610107 seconds)
    (16/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.084895272 seconds)
    (17/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.084542334 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.128972184 seconds)
    (19/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.213384488 seconds)
    (20/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.177146055 seconds)
    (21/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.085951965 seconds)
    (22/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.214124503 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.080229566 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.399536625 seconds)
    (25/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.076048344 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07927532 seconds)
    (27/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079020918 seconds)
    (28/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.239008692 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.106724989 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.21527718 seconds)
    (31/309) benchmarking ("sort", BigInt, false)...
    done (took 0.195996592 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088190081 seconds)
    (33/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.213515773 seconds)
    (34/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.057580408 seconds)
    (35/309) benchmarking ("sort", Float32, false)...
    done (took 0.137978903 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.174381685 seconds)
    (37/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117726042 seconds)
    (38/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.059186753 seconds)
    (39/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.080250753 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.116932685 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.079890138 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139014318 seconds)
    (43/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.079475358 seconds)
    (44/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.228437644 seconds)
    (45/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.076553652 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07013856 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.095639385 seconds)
    (48/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.212467706 seconds)
    (49/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.110170908 seconds)
    (50/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08833826 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.150828322 seconds)
    (52/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105837459 seconds)
    (53/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.155042458 seconds)
    (54/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.177379313 seconds)
    (55/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.115475723 seconds)
    (56/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.080902162 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 0.074292854 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.095666452 seconds)
    (59/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.157928201 seconds)
    (60/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.090863666 seconds)
    (61/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.154227501 seconds)
    (62/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083877084 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087111916 seconds)
    (64/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.083162669 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097773295 seconds)
    (66/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.106155462 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.07007577 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078630052 seconds)
    (69/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.212654497 seconds)
    (70/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.110405344 seconds)
    (71/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082357963 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123298496 seconds)
    (73/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.068630785 seconds)
    (74/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.085422542 seconds)
    (75/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.077228358 seconds)
    (76/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082682822 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069364994 seconds)
    (78/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.202301619 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.081355628 seconds)
    (80/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.184957445 seconds)
    (81/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07355157 seconds)
    (82/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.343800239 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.087702499 seconds)
    (84/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.080990493 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.083364354 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.097922449 seconds)
    (87/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.090083417 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.060658748 seconds)
    (89/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.160611253 seconds)
    (90/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.082288525 seconds)
    (91/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.084983234 seconds)
    (92/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.060007258 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.132699674 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.096673787 seconds)
    (95/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.125383533 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.112948515 seconds)
    (97/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.082492049 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094635675 seconds)
    (99/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.092178973 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.098914472 seconds)
    (101/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.081945343 seconds)
    (102/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.080706463 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.097315323 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.095086011 seconds)
    (105/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.16195535 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.080371197 seconds)
    (107/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.084115649 seconds)
    (108/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.166635985 seconds)
    (109/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.069658257 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.071353077 seconds)
    (111/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074899703 seconds)
    (112/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078953608 seconds)
    (113/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.058915506 seconds)
    (114/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.180632772 seconds)
    (115/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.11326604 seconds)
    (116/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.078250581 seconds)
    (117/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.181977915 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09442327 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.153119719 seconds)
    (120/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.069996522 seconds)
    (121/309) benchmarking ("sort", Int8, false)...
    done (took 0.150461629 seconds)
    (122/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.161968543 seconds)
    (123/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.16626588 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111423196 seconds)
    (125/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095418822 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078492785 seconds)
    (127/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.164734996 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.079425613 seconds)
    (129/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182124859 seconds)
    (130/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.070140507 seconds)
    (131/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076816761 seconds)
    (132/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.057552218 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095657344 seconds)
    (134/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.059053969 seconds)
    (135/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.204845621 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079992596 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070736353 seconds)
    (138/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.163709953 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.158884106 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.078038673 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092640339 seconds)
    (142/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.162984402 seconds)
    (143/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070803047 seconds)
    (144/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075922381 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.087753428 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130567622 seconds)
    (147/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.079485813 seconds)
    (148/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073357439 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078842844 seconds)
    (150/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.08090176 seconds)
    (151/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.109207257 seconds)
    (152/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05932356 seconds)
    (153/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071404937 seconds)
    (154/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.057103177 seconds)
    (155/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.083844758 seconds)
    (156/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076333334 seconds)
    (157/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.204394522 seconds)
    (158/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.120739724 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134512008 seconds)
    (160/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082976462 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092762709 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.093702217 seconds)
    (163/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.058426395 seconds)
    (164/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069955424 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.098137437 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078879524 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182160793 seconds)
    (168/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.156247001 seconds)
    (169/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.108760199 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174669355 seconds)
    (171/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.17462579 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.096177108 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.056794526 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.070212707 seconds)
    (175/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.059680079 seconds)
    (176/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.082572852 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.073570118 seconds)
    (178/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073733928 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.151351596 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.060495698 seconds)
    (181/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073770082 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096868646 seconds)
    (183/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.234197533 seconds)
    (184/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079889401 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.085420158 seconds)
    (186/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080122135 seconds)
    (187/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.058880831 seconds)
    (188/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079632329 seconds)
    (189/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.085579711 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11854505 seconds)
    (191/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077499611 seconds)
    (192/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073185962 seconds)
    (193/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.057647175 seconds)
    (194/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.057582056 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.057710288 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148392111 seconds)
    (197/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071643792 seconds)
    (198/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184675125 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.098659095 seconds)
    (200/309) benchmarking ("sort", Float64, false)...
    done (took 0.136777373 seconds)
    (201/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12609833 seconds)
    (202/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.058093613 seconds)
    (203/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.155525259 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175185774 seconds)
    (205/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.070865697 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.11420236 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.071334745 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.137084716 seconds)
    (209/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.070325029 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.079035016 seconds)
    (211/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082477556 seconds)
    (212/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.058020342 seconds)
    (213/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.057897145 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.073713379 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.081155864 seconds)
    (216/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.059963445 seconds)
    (217/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.081691771 seconds)
    (218/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079499854 seconds)
    (219/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.071768062 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.083107822 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.080960301 seconds)
    (222/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.059801022 seconds)
    (223/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.059791231 seconds)
    (224/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.1083851 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146006961 seconds)
    (226/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079984694 seconds)
    (227/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.060292469 seconds)
    (228/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.079063822 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.071842848 seconds)
    (230/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.058690614 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.079496264 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084738276 seconds)
    (233/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.072456731 seconds)
    (234/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.120145143 seconds)
    (235/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.069442785 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.094064319 seconds)
    (237/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.19522835 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.078675708 seconds)
    (239/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.085630353 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071091259 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05920331 seconds)
    (242/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07169331 seconds)
    (243/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.060103151 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.072728263 seconds)
    (245/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071976795 seconds)
    (246/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.068468972 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.072368817 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.070973294 seconds)
    (249/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.058130266 seconds)
    (250/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.0576786 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.109122503 seconds)
    (252/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.058343935 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.074357094 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070174859 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172810813 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095769622 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.071926424 seconds)
    (258/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.059892764 seconds)
    (259/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.05959847 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.073384756 seconds)
    (261/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088652021 seconds)
    (262/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072933916 seconds)
    (263/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.096673702 seconds)
    (264/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.059622254 seconds)
    (265/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.070724517 seconds)
    (266/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07375534 seconds)
    (267/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.069546239 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.072862302 seconds)
    (269/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.10108475 seconds)
    (270/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.060836774 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.072905801 seconds)
    (272/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.060205049 seconds)
    (273/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075460128 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.122241696 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.071938646 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096668238 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.142058967 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078971117 seconds)
    (279/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.058027673 seconds)
    (280/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076557702 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.07089166 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090894251 seconds)
    (283/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05945148 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099780407 seconds)
    (285/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.071000941 seconds)
    (286/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070853957 seconds)
    (287/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.058386791 seconds)
    (288/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073701526 seconds)
    (289/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072877674 seconds)
    (290/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.058292501 seconds)
    (291/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.057751128 seconds)
    (292/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.07046099 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.079946484 seconds)
    (294/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.08111617 seconds)
    (295/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.080024876 seconds)
    (296/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093394558 seconds)
    (297/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069542172 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076794653 seconds)
    (299/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.056978883 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.141227976 seconds)
    (301/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.058280529 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.071673544 seconds)
    (303/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.079166225 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.057221316 seconds)
    (305/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.057206412 seconds)
    (306/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.056890689 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.239574885 seconds)
    (308/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.077151123 seconds)
    (309/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.075247759 seconds)
  done (took 32.901994752 seconds)
done (took 34.27488224 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088764646 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098766747 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.081762881 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098719435 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086889165 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.083738226 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.079170133 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.084663972 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086734056 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.088531707 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084667325 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.061903687 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080773931 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080623614 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.081420314 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095964074 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085413781 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079570886 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.079705474 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070728724 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.079809927 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071932909 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073029852 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061472573 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.084483447 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078137654 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080959206 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080069356 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.071594204 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071906806 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075430932 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080055571 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071223564 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085601118 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079752034 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079698414 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.081221718 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.083195908 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.073225314 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.07142481 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.08137848 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071961223 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.081173052 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.082343793 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.080058729 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.079240209 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.08143377 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08577598 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099102225 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074385313 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081007055 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.08195746 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082855804 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.080262154 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.076384203 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.081963571 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.079099494 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099820595 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.082312035 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076283219 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.083179824 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.082651074 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.079224345 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.082075812 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.081860009 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.084466366 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.085678951 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.079467144 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.084314123 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.080815327 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.073586317 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.081731501 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.077643867 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.073825765 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.084969601 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.089180871 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.07222042 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.079705729 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.081595416 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.082858364 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.07306729 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07661421 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.075298364 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.080401854 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076168728 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.064166054 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.077882034 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.080922472 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.072970667 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.08220347 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.080692318 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.081231391 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.074901646 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.085909203 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.072949613 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.079755578 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.073517311 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.073594594 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.075288997 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.077963443 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.072763747 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.076439094 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.084337433 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.074752107 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.079881849 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086247924 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.07299008 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.080496336 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.072486538 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.072500697 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086443911 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.083334971 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.073255998 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076402707 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.072290596 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.080420953 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.072517896 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.072779207 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.072833828 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.073419047 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.079322982 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.072612523 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075606675 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.08005296 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.087092137 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.072337279 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.077152668 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075564335 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.072322516 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.076974233 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.070199612 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070372895 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071321516 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.067406078 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072226902 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070234378 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077446488 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072194559 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.078228603 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07194173 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078246178 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075439586 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076386496 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075905961 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068947676 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.064913248 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072233397 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072276029 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071746334 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.070100178 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071206918 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069849278 seconds)
done (took 13.353357108 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.077576505 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140980877 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.10023034 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.101525134 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.091897099 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.074387263 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.081909142 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101475236 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.074929389 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104030913 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.093967117 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091556035 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115058641 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.071193403 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.072341833 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.075975109 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.073199557 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085481549 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100904973 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092645815 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116834625 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.071045958 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095981822 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093246261 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091553852 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106758717 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.0727213 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.076388539 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075891541 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.095377595 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093908279 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.076313557 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072528578 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100096172 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097752065 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08788729 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072363391 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087020046 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072162209 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071991081 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.074237985 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100481622 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084608693 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084227575 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07598187 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.082399703 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.075122228 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.09045974 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095874695 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.084246476 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088721921 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102686608 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073907154 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087864391 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070214445 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088825399 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080936776 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073991673 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.072743076 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.079362594 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.072280993 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.076866649 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085909723 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084766796 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07558122 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08789696 seconds)
  done (took 7.130385181 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089483544 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.099103039 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.090106817 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.094521941 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.073445467 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.074203279 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.073804569 seconds)
  done (took 2.068462691 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072369646 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092070247 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092198557 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092959595 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085584207 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09589514 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081222789 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.074258003 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098821531 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073470093 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092671907 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102180905 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074923645 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.085061418 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094588721 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071915703 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094112232 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.07240089 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.076642469 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.096021678 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080225395 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.104422538 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081969419 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.074767462 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088354997 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.074599231 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121033942 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07858794 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.076370755 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.077394203 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076046579 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.114777386 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.087696836 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080979545 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074718612 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089481266 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.088349741 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.078087474 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085634688 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.083970134 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.087880574 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.075368674 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.076298596 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.076265746 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.079194845 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.084547408 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.075647648 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.076842963 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075162888 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.093313372 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.07317946 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087711127 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.077980085 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.080639877 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.077290286 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.081669285 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08593855 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.075844019 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.094354974 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076764157 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089446744 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086921526 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085219973 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089638463 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07683438 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087860823 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.087958415 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.077205859 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076776636 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.078011628 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087779273 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072464538 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.076103314 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.084265129 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076670212 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.096401805 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093702283 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0740907 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085779321 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072914936 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072523156 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07225439 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094189903 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0772874 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072406654 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07651179 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075632989 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.075348928 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071309625 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.078080926 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.072819591 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.080425803 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.077684384 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.077771309 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077329229 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.089785526 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.076655153 seconds)
  done (took 9.48605695 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.076016738 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073967228 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.075020826 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073837672 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.074312915 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.074520644 seconds)
  done (took 1.951804746 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09519588 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.074004162 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085072005 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07652431 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108060776 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090529682 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091385539 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.084353447 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.089496092 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.086521581 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.093818895 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.09480883 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.098640357 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.080516921 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.09403643 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.079082652 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.094668143 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082297735 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.086425085 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080688194 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093638911 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.079133486 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080009724 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.088765949 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.083991924 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.079821093 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.086456395 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.086861778 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08632915 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085504807 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.080226888 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.083662003 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078716498 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085287029 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.094354239 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078606091 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079041572 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.0847441 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080442613 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.086285132 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.0951497 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080494209 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081731386 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.085119984 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.085661798 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078797361 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.084851908 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.087432174 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.094215127 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.084738345 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.084886404 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.078982069 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.08303567 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.084742741 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076605477 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.083363259 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.082329101 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091156918 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077043385 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075928265 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.075799644 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.083313112 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084478892 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.083934837 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085399172 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.085066915 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.0788691 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080209807 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080779322 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.079072124 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.084696127 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.076379779 seconds)
  done (took 7.57280652 seconds)
done (took 29.71692221 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543209955 seconds)
  done (took 1.994695145 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.609734127 seconds)
  done (took 2.091440548 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.637468614 seconds)
  done (took 8.115092278 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.372438313 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.477565092 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.718838229 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139163838 seconds)
  done (took 3.225924391 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.723212616 seconds)
  done (took 2.21757465 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239526974 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231796273 seconds)
  done (took 1.967442276 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380169777 seconds)
  done (took 1.860143267 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.127382442 seconds)
  done (took 2.61197061 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.241727981 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181491614 seconds)
  done (took 1.90647668 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.444937963 seconds)
  done (took 1.927281629 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.851098206 seconds)
  done (took 6.336450103 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.222091749 seconds)
  done (took 1.749187528 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241173512 seconds)
  done (took 1.726612881 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.714201536 seconds)
  done (took 3.201088847 seconds)
done (took 42.425189175 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08789273 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090060846 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090795483 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086109094 seconds)
  done (took 1.823136384 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082548382 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077970874 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.082188236 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078243374 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081132357 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078373054 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079337995 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080868488 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078150584 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078452574 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078376339 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077853043 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080152361 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079531101 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.077101967 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080503093 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081546845 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07827203 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.08092891 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078083761 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076525965 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080540629 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080740744 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077343754 seconds)
  done (took 3.393633573 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084122411 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078306152 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080539719 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077106525 seconds)
  done (took 1.815158166 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08394462 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095271335 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093077192 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083768379 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095878774 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091181952 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.076022575 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.076315506 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07618176 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.085400261 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.076403764 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101821056 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092882998 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083612209 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085409825 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.07053411 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072830548 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092028612 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084535543 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084483334 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075855196 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08400316 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073958237 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093717124 seconds)
  done (took 3.520969079 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086118419 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105620978 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085223118 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.096109842 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097260134 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070797583 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.085110586 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097158596 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.13122793 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.071197682 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076746087 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071038961 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.079524634 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.071329731 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085946638 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.115881792 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116114654 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07487476 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102645241 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070943996 seconds)
  done (took 3.291305866 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077813753 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075214706 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075652608 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070839755 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082930554 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078028658 seconds)
  done (took 1.966387982 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073769412 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073115202 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.073262762 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.073977942 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.080560916 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.075083154 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.074018615 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.075732902 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.076036476 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.075578435 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.074444087 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.073882188 seconds)
  done (took 2.399498185 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.18691879 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.074014642 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073986779 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.072627358 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07643315 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.072407733 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.089603073 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.076174956 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.10070811 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.074529415 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.074711395 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.077219753 seconds)
  done (took 2.55713305 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199908732 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08122542 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234479746 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157826928 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115123073 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117186296 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115956489 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114618279 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140603928 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104446229 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165523184 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165865502 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110101151 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141513637 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094706472 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.107717337 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152755574 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165298596 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109669078 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163882151 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148652626 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131264109 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146357511 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104673317 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108284781 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121032181 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076393756 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084205975 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167075183 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132956869 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142866644 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114033063 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093908894 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177522892 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163460081 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138998411 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14913216 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087583893 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106274747 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133483319 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192136404 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091830318 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.303492254 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114847016 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085193455 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134915885 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121007853 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.123034616 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107398886 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09428617 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144705588 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178599697 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.134723057 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090290431 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12620107 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113925088 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113655279 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116279942 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173712852 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158290473 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129447964 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076853545 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114766035 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150191163 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133825479 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109713696 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124936466 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097551783 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133838336 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152864124 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123640566 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14246116 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117881529 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092136041 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12275969 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138151746 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128127957 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159852391 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125359894 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077705422 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122437988 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101538642 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084672068 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148549545 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080097304 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172994036 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103154758 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108898457 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125741868 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110546183 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111969967 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156527525 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290510257 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107837381 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073929415 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108730595 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122181472 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144047964 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091645156 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110618486 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118645717 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082102507 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134693224 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.081009985 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125568651 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.083251834 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12484145 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13186295 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.086017191 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127961124 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111219209 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.108814066 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135569274 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16164426 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095135681 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088842594 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167341167 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1278651 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108816802 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144865028 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159541005 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.108940535 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104667033 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146265704 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168768209 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093883521 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160975237 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107568927 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087975665 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092793818 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125423951 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112940461 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124872591 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08557013 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118949142 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164849618 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.080285671 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099608391 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134739885 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082817445 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084666872 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107693924 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105852533 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100201834 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101758468 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104525619 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136389903 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272738876 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112922383 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126994333 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102516078 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163290892 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09305687 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106514047 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107367157 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075378554 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.133527124 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153628769 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083985765 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157889431 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12321994 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118524927 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122270127 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088200941 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137311368 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083436723 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075630752 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140586438 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113595372 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111673362 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148095142 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12063087 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128951865 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.123797667 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13565709 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131938886 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130108709 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110934353 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092354556 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116773223 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130889627 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.080693804 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097191835 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087497336 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111325813 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10044534 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088430622 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144245385 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125249012 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117387885 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11800107 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102681205 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14883119 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.083780381 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130065191 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.12240327 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098829583 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150281125 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149374089 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133190183 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102251537 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283558271 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.077589714 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080850864 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.095046566 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129102625 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091391354 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091185612 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119573158 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149215619 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132384632 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136619095 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12486716 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122579509 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155267177 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07782665 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.12578016 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147260813 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12666087 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.111738014 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098646947 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.106318343 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145074397 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111481508 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179346901 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120079065 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131039924 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159245507 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.108436603 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085350309 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106020154 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133065332 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10588501 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141268043 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101991276 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092223959 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110899981 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.084813081 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101715072 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127974751 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119255217 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13454567 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114760816 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133131197 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082503918 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115289122 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123649616 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121767294 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.070296383 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119014733 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155511705 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098909899 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118992843 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298699596 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085207357 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.143094907 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172558174 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146546087 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089087095 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10930529 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122861402 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126074039 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121711398 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138337435 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108344727 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139847573 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114564792 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089278446 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091287269 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099964455 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107411825 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.100512013 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106768083 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.117851538 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.102013602 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135732632 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109410877 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116903945 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124045624 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.106817307 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.098699221 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100553511 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171853965 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120462683 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167457628 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.105322952 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141570706 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159421615 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080319588 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084061327 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083259399 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138467278 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089537434 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131414489 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.113184372 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118059047 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124102535 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138181247 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098961754 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.074208903 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110775974 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132924235 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124345353 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100873245 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105222999 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158124265 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101917525 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083231469 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263601348 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119240601 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107800636 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167014175 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068353899 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111195284 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082548831 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084371347 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127957569 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149199118 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085850634 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103711223 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122331367 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113951403 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127000472 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101591328 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114877635 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12610269 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146969564 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128781241 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093567541 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112634958 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127813507 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152450754 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105540521 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102057801 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17071304 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150277516 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156598039 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089939014 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116890095 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116982121 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112352738 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138269553 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08833177 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160022255 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086678333 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135640055 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104895218 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091103477 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128852903 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112820206 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091966438 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143277029 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118661371 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086934291 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08237232 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120604141 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123422541 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110147062 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.08235523 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290965791 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.080617419 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134826621 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159048402 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085949273 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10801787 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099142713 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08556566 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107995697 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106635931 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091354775 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.104159382 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167665881 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089992905 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146254128 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135508677 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115759036 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134386966 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108989944 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.648187863 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.084825531 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152521491 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120768523 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173434374 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107218493 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12357786 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116538578 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12646193 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144306794 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107835329 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.183958825 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131913078 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118361569 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085260247 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108791824 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11145188 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095399338 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11435666 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119361071 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117788958 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096860436 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117022105 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126540485 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087955509 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099167001 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153128272 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116111331 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142859123 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140042484 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09173887 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123158954 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140395136 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235357343 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119905787 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150357455 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109070463 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104661694 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085536764 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101970527 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157389848 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078684671 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156232925 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124991767 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112844283 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116344905 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111625725 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133663129 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124418158 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123495923 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095332093 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.11072109 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116487331 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089305879 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.084936988 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111569613 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116584342 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.105947819 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103480218 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.107392046 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154497974 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.08049505 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105344444 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122404704 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147149883 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174154919 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.096877331 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091008272 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126036119 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122170167 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.118812015 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127537269 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08721208 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088788953 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.085913173 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.08920467 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113694661 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119258577 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119958546 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115147567 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162191512 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.09063911 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232490587 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102503792 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1115989 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.078517135 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.084671978 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102162719 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101293695 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258652814 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117163659 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158821285 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100794637 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094500094 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095528085 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.081214238 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088700379 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12772499 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111809728 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121074783 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104501575 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.07005935 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108492588 seconds)
  done (took 60.316541541 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112648627 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087635227 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.102611796 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148171634 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125875973 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204109112 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160719334 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194761794 seconds)
  done (took 2.735083403 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073614288 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099861909 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108547617 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.090458195 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072297422 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073766683 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227768694 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.087076298 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072104689 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095093694 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.08272848 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07412502 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.41342592 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072769914 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.073908741 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067855119 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072878245 seconds)
  done (took 3.446321818 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.391226596 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.618697503 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.347695564 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.082816197 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.961280858 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.096489662 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.184298956 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139434796 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084030971 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533573503 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.411850379 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133785602 seconds)
  done (took 18.582673228 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086834081 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.080891043 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.096275249 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.096273461 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.086056343 seconds)
  done (took 2.042680406 seconds)
done (took 109.407214118 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087702609 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.42162816 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060325648 seconds)
  done (took 2.104783762 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091972615 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089770622 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090072908 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090558583 seconds)
  done (took 1.968445632 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.080342661 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.083043424 seconds)
  done (took 1.763300528 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.231907356 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171122746 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.104986757 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087347842 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.085302846 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084574437 seconds)
  done (took 1.859986262 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077104363 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.081401488 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077561697 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081295299 seconds)
  done (took 1.915930432 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081470661 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058779077 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.062030446 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.065976029 seconds)
  done (took 1.867869115 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092475133 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087200443 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084983454 seconds)
  done (took 1.867545531 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104350445 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092288167 seconds)
  done (took 1.797475446 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085513631 seconds)
  done (took 1.687122255 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092811054 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102878404 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136642879 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.118726138 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14213041 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118214373 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089864557 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090759274 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.084271349 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091503395 seconds)
  done (took 2.668514759 seconds)
done (took 21.695987412 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083645022 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.376531502 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365953234 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09430076 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673109715 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.362542817 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994064916 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098191228 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145341721 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073430456 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09014014 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653529353 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.985723661 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.336021647 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97648739 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332870275 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674335491 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074985602 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073773344 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074660887 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.981109707 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074522399 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074115162 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074701035 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673893042 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378610494 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075303611 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.335668453 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0745013 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078510909 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381786109 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07673197 seconds)
  done (took 16.39972568 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076387597 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123969341 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078744996 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089706035 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.076153428 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076509289 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.077555288 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.078842208 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130624946 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.078091085 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094850648 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.077435817 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.081675757 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.077947077 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.097629 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.077896024 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.078479933 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.078973571 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.080350628 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.078589223 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.096427617 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074653335 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074525503 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075301388 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073909906 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086804679 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07473126 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074957444 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074528264 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076670364 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077272259 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.077291668 seconds)
  done (took 4.264066622 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12149304 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128484405 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079781758 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110218283 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117584334 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07678148 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149373338 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101603991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133116014 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074111917 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090701951 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074430235 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10762812 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0752336 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094410912 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074819015 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076006659 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075089899 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074466025 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075545112 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093405992 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073998267 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074776545 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074911005 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07498395 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088220816 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075027682 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074353633 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074999842 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076274004 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07840443 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075473495 seconds)
  done (took 4.466332836 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078371231 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080332361 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088244798 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088971508 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074595496 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07736611 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.079746955 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.075562041 seconds)
  done (took 2.265716676 seconds)
done (took 29.001700901 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084494681 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075567208 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07925336 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.093669739 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.079879784 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083178479 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072998567 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.082592792 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079460441 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07923634 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080906094 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.07349703 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077108952 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072643693 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079810016 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.07381937 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.085108015 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.078275016 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084266881 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084303303 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076034958 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079064931 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.081027021 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083989129 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084777019 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083870436 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08221363 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078063622 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07400215 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076168725 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081934574 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089564364 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073840096 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083507053 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07317619 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.074970483 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.079700299 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.076100573 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086751274 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.084637209 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.078834763 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.084906876 seconds)
  done (took 4.962934251 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093902082 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.098155958 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.090823156 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.069000294 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073537778 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.071688722 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.095535037 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066252526 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066134073 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094289927 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.064383504 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.067074901 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06947806 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060696572 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066628166 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064130698 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.067888624 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061731579 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066560542 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.066132292 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.095241179 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061068426 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083343531 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069166298 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.06537677 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.070034267 seconds)
  done (took 3.548991445 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080220666 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088459361 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.099712163 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.151895042 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.119921776 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.086241174 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.087520842 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.10118628 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.102106265 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.075212883 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.079269756 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.10209364 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096940924 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.08237574 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.075681145 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.093434777 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.093726734 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.077171055 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.081372843 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100388435 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.093593912 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.091778141 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098455866 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.090083937 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072590417 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.0754623 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077181887 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085806716 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075625419 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082192438 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.077045291 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.077677934 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.077331854 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.086488395 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075991654 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074918097 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.099469012 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083429004 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.0839033 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.074220109 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081162839 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.074856643 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096573026 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13013554 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.075349993 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.082303038 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07958874 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.084801435 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.075478098 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.102517607 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087762691 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.075811766 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.078908265 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.075584472 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.075439785 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078636505 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.077323497 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.078266252 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.084906127 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.081336694 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10031721 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.08137316 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.092244506 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.075473473 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.084220636 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.075298183 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.077030976 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.074793489 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101009039 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078154291 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11700483 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.076651522 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.07674353 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.085527346 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.084238666 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.083322268 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.07616312 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.092671989 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.086789287 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.081246248 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.084494253 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.079849908 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.078948668 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.104784367 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.079069476 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.077615205 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.076848523 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.081748767 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.078873452 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.077075457 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088946252 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.075640905 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.078487046 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.092426346 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.075927966 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.076991106 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.081390353 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.079798474 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.075001122 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087613227 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.079604702 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.076392803 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.085291568 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.075791046 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.078254877 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.087472268 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.08234631 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.074238874 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.079875724 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.080693987 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.076336671 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.076823927 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.077993757 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.077168314 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.08402957 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.083073834 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.080108705 seconds)
  done (took 11.522716613 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167584515 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156658631 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.076009252 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.152227624 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.085865103 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.086574328 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155456128 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.101800166 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.076085509 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.077212089 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.076494084 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.116253456 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.111989913 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.124514877 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.086635724 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.076231835 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.098669397 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.121530587 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.156709745 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152239407 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.099364093 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.084492532 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.078783038 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.078228964 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.078418161 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08572667 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.095436458 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.084644485 seconds)
  done (took 4.609169626 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084586426 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.108123963 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079655187 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.096243762 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095585914 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.074610116 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075774306 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075074966 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.090393605 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083172293 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073753018 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077894361 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.08008838 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.077093516 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.076613166 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.083545212 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.082886456 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.077266756 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.079889783 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.081221697 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.086900429 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.099168482 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.079640534 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.078198188 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.080670211 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.07508652 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.071033354 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.091376645 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.076743864 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.101055336 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.073684907 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.081084762 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.090828547 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.076896447 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.076085155 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075811413 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.076108204 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07596994 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.078157801 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.074645436 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.074851061 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.065899429 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.075010994 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.086567659 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.088800349 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.06460124 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.080526913 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.081162026 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.081423334 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.073699657 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.079083446 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.079093056 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.079245627 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.083915176 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.080194776 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.081826048 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07757403 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.085599045 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.084360812 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.075997801 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.072575069 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.074761125 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.080975945 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072888669 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.091544511 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.081139773 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.074944782 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.076240035 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.0778475 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.089448262 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07564587 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.08169019 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.073564053 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.078084128 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.080710383 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.078234855 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.077623627 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.075129327 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.076114677 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.076769107 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.063650872 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.076682734 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.062005686 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.078844736 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.074300057 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.07447856 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.076072088 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.080678792 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08687993 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.077658124 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.082131217 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.077036237 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.075526191 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.079056539 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068846986 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.078796947 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086567404 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.089564981 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.074208405 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071637358 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086468804 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.079089538 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072548061 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063022718 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077905179 seconds)
  done (took 9.980143921 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.097312917 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.077067593 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.090560937 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09851727 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095465242 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.082893908 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.086135694 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.078028589 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.092658497 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.082948464 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.085667483 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07625538 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.087344272 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08625182 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.078403158 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.087007771 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.079660252 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08847721 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088121752 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073855535 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082219673 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085938409 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094690093 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086138137 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08515289 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086181012 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095850236 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082821454 seconds)
  done (took 4.081309866 seconds)
done (took 40.322308497 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.719827415 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.949767556 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.700562391 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.028432481 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.773152421 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.911311042 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.791799293 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.694970378 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.877544817 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.732282102 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.93438467 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.787558023 seconds)
done (took 64.659022009 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.766787516 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.829001882 seconds)
    (2/2) benchmarking "String"...
    done (took 1.931664294 seconds)
  done (took 5.382891773 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.970090896 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.277059351 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.94404384 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.694936629 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.701434016 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.018719034 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.494309781 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.203988904 seconds)
  done (took 29.959564703 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.835843919 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.920333254 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.38974087 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.420065894 seconds)
  done (took 15.237247799 seconds)
done (took 62.026998818 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.713485457 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.695098925 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.702743116 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.68211199 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.75421033 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.708510073 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.852596997 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.696486294 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.695664154 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.685978111 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.698261576 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.130152309 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.706331596 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.77268158 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.699766882 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.70427893 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.724787751 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.115887589 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.852641445 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.714531526 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.708673089 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.738908314 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.702237031 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.702959486 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.712704802 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.69716818 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.094971803 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.708648538 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.520042265 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.697315615 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.739492026 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.017896426 seconds)
  done (took 200.97131513 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.697078512 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.741524686 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.81980997 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.711179849 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.15199944 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.878107301 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.780435154 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.186623574 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.702916885 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.717919361 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.911917808 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.702798468 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.935730665 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.647597886 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.72646402 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.703578795 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.92401807 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.944242865 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.737223168 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.818837763 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.70125581 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.775719299 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.710906113 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.893712971 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.712451047 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.721188437 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.726871972 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.714818899 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.894588438 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.891188668 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.746126253 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.729533877 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.909805692 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.573730571 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.720985193 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.704306051 seconds)
  done (took 167.195614562 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.889101385 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.699378908 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.697101699 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.697404225 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.703710145 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.698108488 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.829219072 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.833876772 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.332910545 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.306227205 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.753183227 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.699302043 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.506910101 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.697631429 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.764718085 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.709273781 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.698730851 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.713318549 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.724663301 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.702641242 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.698065885 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.828270047 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.710889044 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.698295523 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.706308423 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.699049367 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.704202151 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.069164343 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.698966396 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.722345491 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.702713239 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.70505043 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.943017464 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.700238281 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.699061367 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.549953618 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.712953898 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.785652027 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.700234107 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.705052914 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.700025084 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.916842327 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.700220695 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.699297357 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.699621156 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.69948383 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.701285175 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.832691226 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.702947943 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.825339205 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.704295077 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.17590916 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.698678056 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.698810936 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.699736644 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.369788312 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.285880205 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.702596442 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.70335974 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.699546758 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.699753733 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.706775655 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.299853635 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.774749298 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.703137579 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.70236506 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.70667565 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.701706615 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.923888625 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.701276497 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.303517618 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.764057306 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.930668194 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.825137171 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.708055371 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.766101103 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.794638092 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.701355259 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.698998482 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.700689923 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.699790916 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.781776453 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.700131372 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.828957332 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.708139359 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.702884797 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.751604311 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.771074271 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.701383619 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.54229232 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.706033294 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.70082422 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.971142511 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.766138665 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.701578726 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.700159722 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.702474966 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.830153452 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.834656773 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.402908411 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.708066934 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.286829723 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.844772047 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.702413785 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.847577113 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.706512927 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.783151673 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.70652142 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.702922996 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.734325461 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.703214974 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.756136072 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.705938114 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.701976892 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.07477245 seconds)
  done (took 393.952552945 seconds)
done (took 765.688874917 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.30955656 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.447115679 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.399580944 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.300093631 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.273437137 seconds)
  done (took 13.361630941 seconds)
done (took 14.99353523 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.798451535 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.803371835 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.7291407 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.795965877 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.726795304 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.794446206 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.780216698 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.730779289 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.76094331 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.728052126 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.762928343 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.727802177 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.718661054 seconds)
  done (took 24.490858086 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.940256448 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.937925154 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.776872026 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.948642828 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.754611826 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.937767914 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.879889194 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.87222358 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.857622925 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.720781122 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.716632652 seconds)
  done (took 21.977646187 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.949016185 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.953211131 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.789176828 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.945674442 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.757662724 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.953418456 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.875875274 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.863580773 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.859482123 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.720733058 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.716589561 seconds)
  done (took 22.018092987 seconds)
done (took 70.119161008 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.713593394 seconds)
  done (took 3.347835824 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.740674557 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.912642502 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.71956046 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.716007728 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.714915346 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.71464665 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.716975135 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.712847378 seconds)
  done (took 15.58454085 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.71297092 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.709618279 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.712570704 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.710561491 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.71279394 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.709639731 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.70929787 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.70992065 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.71251472 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.712573778 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.713287727 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.711776754 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.709797645 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.713426559 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.708308439 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.708155135 seconds)
  done (took 29.011577413 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.71079221 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.709155515 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.708242546 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.709369041 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.708244964 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.708861084 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.710920793 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.709782085 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.709328708 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.710161569 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.710573952 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.710061882 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.709247285 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.710944109 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.711004762 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.712664679 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.708915813 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.711316383 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.71349204 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.709178171 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.710379481 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.710234685 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.709015087 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.710970741 seconds)
  done (took 42.678783344 seconds)
done (took 92.257835303 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.473986149 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.473611456 seconds)
  done (took 9.580550059 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.713912022 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.712199535 seconds)
  done (took 5.065501586 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.713135988 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.712798682 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.713194376 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.712609482 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.712551366 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.712484179 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.712296991 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.712451362 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.712438685 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.712162509 seconds)
  done (took 18.760619356 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.713571949 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.713564801 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.711496421 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.714771111 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.713554842 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.711242703 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.714038206 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.713493516 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.71352187 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.710374774 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.713148045 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.709939393 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.714487886 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.713733952 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.713266886 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.710922376 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.710732811 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.711895076 seconds)
  done (took 32.46333252 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.713710755 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.713896316 seconds)
  done (took 5.062937914 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.710141103 seconds)
    (2/7) benchmarking "second"...
    done (took 1.709924178 seconds)
    (3/7) benchmarking "month"...
    done (took 1.711891049 seconds)
    (4/7) benchmarking "year"...
    done (took 1.711392294 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.711779623 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.710904532 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.711545217 seconds)
  done (took 13.615011882 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.714952399 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.858248577 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.919089864 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.381099075 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.715657425 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.717496971 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.615016697 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.720724583 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.720100887 seconds)
  done (took 18.998289034 seconds)
done (took 105.180413015 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.583800273 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.710457234 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.947198569 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.766899987 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.773743844 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.054300084 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.723759683 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.998386665 seconds)
done (took 42.195791776 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.718279397 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.352746526 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.398874192 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.738784538 seconds)
  done (took 15.127053394 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.693757534 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.031386884 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.712343348 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.583563382 seconds)
  done (took 21.663986245 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.077203838 seconds)
    (2/2) benchmarking "read"...
    done (took 2.056021032 seconds)
  done (took 5.778219149 seconds)
done (took 50.926363177 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.714784458 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.713909254 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.715710024 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.714078142 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.71602781 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.712989555 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.714161514 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.716206363 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.716797407 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.713407672 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.716743414 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.716053364 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.716291287 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.712957244 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713718749 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715963046 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.713949154 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.716493956 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714971115 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.716655229 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.714709679 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.717865616 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.715764356 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.714814911 seconds)
  done (took 42.804264782 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.719723626 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.715610383 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.718375503 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.717155388 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.713948956 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.718316236 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.717061435 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.714456724 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.717861976 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.717554347 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.715457831 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.713967855 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.718016107 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.714433699 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718667701 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.714569303 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.718118978 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.714841759 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.716545919 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.714785639 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.717143089 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714815194 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.715039172 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.717563433 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.715226435 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.715629184 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.718385079 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.715528474 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.718287125 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.715373005 seconds)
  done (took 53.132530873 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.72247377 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.726518917 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.718121188 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.718716019 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.718427764 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.718085228 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.71839205 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.72107266 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.719411626 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.719062123 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.719159937 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.718046413 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.719842293 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.719619485 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.71994084 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.720327992 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.720579407 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.719374679 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.718941258 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.717958748 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.719177383 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.718890434 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.719133653 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.720534317 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.720603167 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.719706325 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.720160141 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.719816253 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.72011894 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.719434457 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.719248058 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.719760075 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.719169549 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.720925414 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.720409279 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.719249938 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.724192307 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.727521278 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.720046028 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.719287761 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.720194109 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.719001002 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.720101347 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.719709272 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.722211847 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.720114918 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.719678817 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.720119334 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.720590582 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.720550123 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.719878887 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.720934778 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.720118854 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.720557763 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.720607404 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.72019903 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.720788967 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.721686322 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.72298743 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.720853023 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.721844752 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.722513833 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.721363417 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.721170424 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.721985943 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.721165301 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.721623762 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.721496578 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.721419806 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.722300536 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.721876318 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.720913247 seconds)
  done (took 125.513891947 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.722474968 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.720213689 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.718517959 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.71925042 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.718426765 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.721389811 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.719818549 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72192409 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.719977525 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.72192674 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.722062779 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.719914311 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.718517065 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.722468484 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.722596149 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.71910103 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.721918629 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.719808523 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.721145901 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.722840222 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.722054171 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.720710156 seconds)
  done (took 39.501700434 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.722838196 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.722630941 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.721090718 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.723024889 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.720334417 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.722631089 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.722296748 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.722703716 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.722553242 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.720885908 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.719845386 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.722445111 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.720706866 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.720010882 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.720177092 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.720879801 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.722556719 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.720852444 seconds)
  done (took 32.633153267 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.721822863 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.72061861 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.723681746 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.720755591 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.721011185 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.723976013 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.720670618 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.7230546 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.722766676 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.722023761 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.722674862 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72430767 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.725315844 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721434126 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.72492517 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.721992009 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.726572379 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.721040599 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.724902335 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.722875039 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.722598481 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.725030187 seconds)
  done (took 39.551024525 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.724694801 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.726302506 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.725936223 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.725809066 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.72488906 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.728499411 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.727998497 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.725692322 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.727402903 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.728141003 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.725805589 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.729565392 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.725480859 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.725927913 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.726023233 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.726509557 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.727989888 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.725582477 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.728543249 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.726246123 seconds)
  done (took 36.179837939 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.72877636 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.729294072 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.729056468 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.729285044 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.729324454 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.729910439 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.729916402 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.731271456 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.730615146 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.730037701 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.730196087 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.730009275 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.730404731 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.730057745 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.730012825 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.730882642 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.730411181 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.7297597 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.730407515 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.730543467 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.731739333 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.731525131 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.731010701 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.731171217 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.734636188 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.730900373 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.731609858 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.731783434 seconds)
  done (took 50.105112914 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.729367221 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.731721516 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.726997337 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.727882375 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.727788758 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.727879999 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.728119988 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.728139736 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.729622894 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.727710171 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.730828887 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.730455051 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.729296774 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.735955678 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.730594431 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.730401032 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730062694 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.728559939 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.728545618 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727888915 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.729253715 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73063164 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.730530134 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.728046677 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728495863 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.732273504 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.727645624 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.728210706 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.730190234 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.728232774 seconds)
  done (took 53.533801764 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.750579099 seconds)
    (2/2) benchmarking "in"...
    done (took 1.748687419 seconds)
  done (took 5.152626611 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.728791196 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.731567509 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.730647791 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.728408095 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.728453005 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.730969125 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.73066323 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.728312331 seconds)
  done (took 15.49038154 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.73075961 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.732033908 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.732048567 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.731709753 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.732745782 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.73425148 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.737572844 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.731882959 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.732199663 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.732786365 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.738744942 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.73989796 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.732599513 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.731068469 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.731408936 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.732071432 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.731961327 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.733517315 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.733633745 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.732587016 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.733975004 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.733041321 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.735664258 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.730516773 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.734868817 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.743132459 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.735495558 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.733884855 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.73134958 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.735530098 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.731518704 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.73024967 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.73485407 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.734063366 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.73256674 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.734298151 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.741566922 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.732647358 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.738011281 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.7347674 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.73423406 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.730575839 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.73420939 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.734033102 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.733643543 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.734239965 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.734024418 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.730539298 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.732291949 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.736653038 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.739019832 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.731866391 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.730828658 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.737092179 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.73398333 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.740564284 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.735324281 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.738639154 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.742331298 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.743597906 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.746235202 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.74096883 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.736019284 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.735576355 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.743215482 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.759277205 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.741666759 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.731699018 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.73184097 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.735414301 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.741874667 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.747525849 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.744533357 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.736422602 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.736916189 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.735917732 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.73678843 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.735818667 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.742013452 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.737903911 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.736626263 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.7359426 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.744684463 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.758770079 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.734313924 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.737073696 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.736674763 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.737487355 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.736050613 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.745978466 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.737141891 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.735253512 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.734892063 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.735171928 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.737199208 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.736976925 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.734659654 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.736844218 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.733247392 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.736366024 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.736614886 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.739969263 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.745379257 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.737279008 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.737198006 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.741443158 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.736638455 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.73562031 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.742095272 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.738747048 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.738780953 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.73750683 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.742329999 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.733813438 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.738770237 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.744884806 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.738089218 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.737676442 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.737624578 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.736661844 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.746711986 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.762491828 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.737714603 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.737976171 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.743266602 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.751397285 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.739836667 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.740932919 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.73835126 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.735658637 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.735099846 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.738372152 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.738411908 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.738187682 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.739456936 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.737654314 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.737659595 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.738585614 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.739345802 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.737912156 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.738376865 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.738341823 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.73819596 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.740687584 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.740014913 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.738883254 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.743579664 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.738062336 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.738095713 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.738051718 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.736189735 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.738947252 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.739455985 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.740229094 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.738092591 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.740317652 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.73873519 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.740545827 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.741468806 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.73924095 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.741375663 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.739258519 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.743543915 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.740506144 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.741623921 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.738053104 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.736042547 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.739295246 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.740524765 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.738650722 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.74054116 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.737966628 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.742715133 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.749496464 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.739336358 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.740575973 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.741675588 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.741453501 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.741898078 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.740470541 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.742836621 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.747606951 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.742032658 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.745625025 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.741636608 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.74219112 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.74149907 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.740593345 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.740520311 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.742806363 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.743848571 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.749494764 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.754396825 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.74950475 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.741957712 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.746800148 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.742254896 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.747654641 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.74466971 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.742009403 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.741694274 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.742069167 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.740693853 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.74259829 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.742250304 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.742343533 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.740131742 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.742017034 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.741471809 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.74228688 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.741790905 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.741665889 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.745240857 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.739614712 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.741677968 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.743114268 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.740050985 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.738617454 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.740138227 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.740137114 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.742798405 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.743560032 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.746643982 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.739077206 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.741646356 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.741856059 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.742546326 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.740919621 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.742546279 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.743835843 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.741737576 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.749231534 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.74295773 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.742517868 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.748574292 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.742206503 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.741663703 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.743775266 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.742991538 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.7402622 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.746315171 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.751559674 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.743688384 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.744734271 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.743815837 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.74235817 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.743908496 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.750241825 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.740600398 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.742026839 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.744528339 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.7451041 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.740691958 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.744413173 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.745658215 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.742790181 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.746004221 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.743455911 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.744642903 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.743811771 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.745086069 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.743613699 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.744413004 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.746919898 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.754546025 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.748001682 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.743464814 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.745585451 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.744300561 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.747352245 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.743492852 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.745124169 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.744202559 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.756267799 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.754743938 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.75004461 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.744988674 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.744627438 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.749474342 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.744672518 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.747629585 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.744501607 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.744829632 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.744525659 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.743862942 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.742271757 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.745307423 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.746630173 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.746020754 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.746292513 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.749331693 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.745702813 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.74437568 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.746882135 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.74606119 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.745333232 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.74519623 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.745758236 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.74805106 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.74628155 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.744520521 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.744941975 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.751045946 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.74664536 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.747408785 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.744927505 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.745584301 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.743860173 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.746388265 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.748407483 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.749230925 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.755316455 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.750536363 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.756069666 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.74688041 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.755076015 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.749593275 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.748438212 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.756758169 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.743294797 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.7448132 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.746468694 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.747991124 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.752952372 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.748509606 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.746867178 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.752735022 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.74735311 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.75012442 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.746528582 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.748296378 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.747892382 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.748647577 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.754456376 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.747469841 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.750898659 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.748879799 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.744129064 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.749021582 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.748052498 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.74618559 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.751252461 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.748961801 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.747810865 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.747054143 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.747372618 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.748589658 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.749409306 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.748410574 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.746171269 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.749369453 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.75406502 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.748427701 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.754165186 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.748872299 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.755508069 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.749830965 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.755666286 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.750846365 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.749338375 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.751086765 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.749775465 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.750213487 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.748409948 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.750100795 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.750770692 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.750791932 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.755093525 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.749487949 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.751625331 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.750184566 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.751346628 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.749458029 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.758945097 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.776067848 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.750224054 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.75402685 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.747155397 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.750559633 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.755386096 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.751174241 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.748812634 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.752039625 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.76017551 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.759134413 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.749194457 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.750467697 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.750507781 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.750989926 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.750334313 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.750563686 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.75170141 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.749327819 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.75150709 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.751621977 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.753597258 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.75110226 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.749928975 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.751198249 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.750692322 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.760861263 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.751365487 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.752015403 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.752104826 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.750839474 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.749905643 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.750379978 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.752429285 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.750497994 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.750900946 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.751552321 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.757228778 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.757556456 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.754243709 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.751528177 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.752360126 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.751036537 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.752311905 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.752833731 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.754080204 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.752890921 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.751687406 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.75270899 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.751590762 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.74983274 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.751930087 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.752364528 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.752554464 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754589898 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.759284898 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.751412975 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.750164914 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.752054179 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.752587768 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.750856729 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.752821655 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.760160449 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.755699072 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.762267743 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.761435167 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.75854807 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.751448866 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.755334415 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.761475061 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.750237314 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.752313364 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.754788474 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.753077328 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.753824929 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.756636571 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.755015326 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.759548696 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.752007151 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.752801216 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.761255867 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.753045354 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.754884517 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.754323723 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.756825191 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.752753739 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.751053801 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.753224568 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.752733267 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.760174488 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.754754956 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.756124619 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.754437531 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.751272662 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.754399415 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.75850664 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.75545767 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.755087876 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.751038508 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.753845076 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.755767426 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.754394156 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.752508253 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.753253279 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.754080652 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.757992667 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.761128274 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.75200084 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.756495487 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.75591963 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.755517481 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.757247738 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.755315904 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.757393067 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.75299383 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.754677374 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.756314737 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.754640164 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.757087112 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.754043386 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.754554288 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.756158668 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.756577825 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.75785416 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.766495667 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.763094393 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.752708776 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.754399008 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.755489972 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.756499115 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.757549289 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.758836066 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.75573362 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.756558573 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.755431495 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.756935077 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.755874197 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.758524794 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.772399174 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.757208154 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.75692535 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.755039598 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.759392475 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.756522619 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.754053611 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.75649899 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.75791272 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.759737085 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.765516946 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.757998767 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.76224833 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.755684201 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.756678162 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.760600116 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.760573965 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.765165707 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.758239862 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.758623742 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.758818994 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.762343934 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.772672914 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.757572262 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.767453452 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.787748182 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.758164238 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.759422115 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.759944291 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.756284697 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.758984411 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.759105431 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.759112839 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.758248228 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.758275271 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.758534093 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.758108387 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.763246453 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.75939042 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.757524315 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.757488424 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.756357531 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.758049178 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.75532339 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.763054715 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.758065159 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.759364756 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.758602633 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.759279316 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.757792154 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.770603823 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.768873231 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.757911105 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.759646917 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.754298587 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.760920326 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.761087261 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.76950899 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.767318817 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.759774111 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.759969897 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.76179585 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.759664813 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.756375174 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.758210157 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.75733064 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.758353501 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.756560536 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.771702508 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.76902237 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.763388062 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.759229645 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.761205331 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.75987798 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.759689846 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.761051399 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.761049334 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.760144122 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.762390011 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.764919259 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.76025182 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.75947629 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.761824342 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.769311439 seconds)
  done (took 1043.286022674 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.75743474 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.757742516 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.757277636 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.757601591 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.757534859 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.75774196 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.7580441 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.757368981 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.757963514 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.757729623 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.760926157 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.757956974 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.757322067 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.757954089 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75767528 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.756707966 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.757383489 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.757284092 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.757891127 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.75724274 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.759548271 seconds)
  done (took 38.595641314 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.76166655 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.758993396 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.758719292 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.761664796 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757792806 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.761652392 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.7587039 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760982412 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.761646037 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759031929 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.760839132 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761314756 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.758643735 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.758964275 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7592698 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.76145961 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.76174115 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.759046788 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.761764937 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.7590252 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.761720477 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.758484069 seconds)
  done (took 40.403850867 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.763240073 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.762971536 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.761064893 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.759727233 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.762363156 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.760122699 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.763552668 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.761571799 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.761630161 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.762029066 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.761274072 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.762523303 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.768840209 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.767288351 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.763641841 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.762627107 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.907057318 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.763827871 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.764080412 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.764173294 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.760440089 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.766782423 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.759632675 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.760002836 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.761458392 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.763330311 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.763643421 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.762065407 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.763600741 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.763025636 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.768922013 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.762970013 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.761651511 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.765336574 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.762313276 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.762851235 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.767749315 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.764146901 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.760272059 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.762619025 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.772467252 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.784524582 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.765477766 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.76913403 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.76346411 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.764271676 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.765845561 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.773021499 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.762606343 seconds)
  done (took 88.270864601 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.762410712 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.76210352 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.760329941 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.762428184 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.763026907 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.762016336 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.761957982 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.762276369 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.759747947 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.760440044 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.762927671 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.76118665 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.75998209 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.762289944 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.762321334 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.760360131 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.759701123 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.759756887 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.759936432 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.759222023 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.759461228 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.762169654 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.761904284 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.759056875 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.761255884 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.758605191 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.75817485 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.762585465 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.759823864 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.758606215 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.761681023 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.761472963 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.761499001 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.758588093 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.75912432 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.76089049 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.761478349 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.758297064 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.761148972 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.757801256 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.76046864 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.76085501 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.761167064 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.761440254 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.757830287 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.754170199 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.754414907 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.754536839 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.754225299 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.756855068 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.75657841 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.752117301 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.754377178 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.753529569 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.754752243 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.756198876 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.750839495 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.750455985 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.753169213 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.751390187 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.751050739 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.753703948 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.750114378 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.752732006 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.753429862 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.75021098 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.751613484 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.752992457 seconds)
  done (took 121.237521837 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.756156853 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.755082935 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.753735035 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.754349007 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.75503189 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.75538746 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.754739532 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.754100497 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.75545044 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.755487604 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.75431567 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.753789211 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.755002473 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.754499589 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.755826095 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.754981113 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.754949303 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.756688681 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.754935753 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.754991748 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.754587 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.756540963 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.754813029 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.755129582 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.756241415 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.755231476 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.756460574 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.755258245 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.75536716 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.756526058 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.755170038 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.754883042 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.755297029 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.754732158 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.756294868 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.754122469 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.754810563 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754176903 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.75606659 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.753897135 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.754631178 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.755262305 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.75514829 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.755853036 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.754343387 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.754584962 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.755795525 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.754742699 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.753740315 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.755643663 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.753958948 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.755123862 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.754789525 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.754667873 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.755852592 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.755481641 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754944367 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.755999932 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.75577421 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.754492348 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.756698173 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.754733985 seconds)
  done (took 110.493122143 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.753474945 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.755104553 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.753164031 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.753215803 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.753980879 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.752351742 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.753959262 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.755135277 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.754891351 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.753766561 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753356224 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.75101375 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753598932 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.754520963 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.75126861 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752708416 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751712699 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.752380328 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.755069897 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.752179297 seconds)
  done (took 36.742654289 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.757812407 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.757399577 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.754477621 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.753073315 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.755482545 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.754882894 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.754806256 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.754330774 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.752477789 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753406821 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.753737109 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.754686781 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.752258248 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.754279276 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.75876481 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.753189207 seconds)
  done (took 29.75188114 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.750842837 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.756938039 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.758240114 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.756110947 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.752153217 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.753404771 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.75467726 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.751969694 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.753556466 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.755245273 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.753729074 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.754558383 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.753404505 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.754202729 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.752023503 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.756824174 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.753116305 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.750664699 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.754438508 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.75704199 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.753661329 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.753733227 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.755639531 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.754245478 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.751053002 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.752710759 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.750591938 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.750623699 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.755165043 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.754777755 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.75075589 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.751744668 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.750865561 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.752786652 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.757564036 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.749404025 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.755321416 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.756073548 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.753345099 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.755351497 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.753143722 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.751016084 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.756621132 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.755383034 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.752066992 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.755545459 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.752757029 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.754479712 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.749593039 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.752721071 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.757093883 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.76074174 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.754796238 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.756994878 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.754978954 seconds)
  done (took 98.146283102 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.754433883 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.754508783 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.748816008 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.750497664 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.75425356 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.750622846 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.758171233 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.748205454 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747043997 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.750756548 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.75095287 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.751969404 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751572881 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.750159331 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.752846262 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.753158561 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.747982365 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.747418698 seconds)
  done (took 33.198601286 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.749012457 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.746498964 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.750550789 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.745117882 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.749948982 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.74897395 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745743929 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.748549596 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750277225 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.747536955 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746900063 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.748641136 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749270701 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.746790116 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.746932875 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744390096 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.751470413 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.747428425 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.743616445 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.74485883 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.747838609 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.747861447 seconds)
  done (took 40.119475058 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.745585475 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.74589236 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.76198454 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.770012791 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.767972348 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.780701335 seconds)
  done (took 12.239109956 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.745340408 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744042197 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.743130528 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.747791104 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741928642 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.742613147 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740988408 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742131134 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.744296082 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.741313096 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741729026 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744889287 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743670904 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741339309 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745800355 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.744656236 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74205881 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.744862167 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741765336 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.747008785 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742771766 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74468407 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741856922 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.744906493 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.739524074 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.74048764 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74457558 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.740083882 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743219293 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.744922276 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743412385 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740728145 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.745096488 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740100653 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74521234 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745833171 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.738599139 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.745118421 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744490303 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.739151584 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.743295049 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743607102 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743367393 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742685481 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74302461 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.740812572 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.741617143 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741575235 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.739669975 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.745657463 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745195591 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742800143 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.746110354 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.742437808 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743437033 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.745687572 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.742111813 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.738841128 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741280851 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.742582243 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.744194815 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.741991304 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.740966338 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.739422831 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.742393503 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74115678 seconds)
  done (took 116.69599568 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741463471 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.739606803 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741580419 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740923182 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.739740762 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741247264 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.739541971 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.738484444 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.739389163 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.741667543 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.744285769 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742270628 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.738850312 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740110737 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.74139495 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.739105563 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741227179 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737940182 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.737791839 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743625215 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.740098425 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.739949277 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741570303 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.73960601 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741494134 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.741836291 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737629688 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.738376758 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743779761 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.73933555 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.738311497 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737293438 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736960028 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.739253104 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.739128298 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.738101232 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.739609747 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.739907479 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737201426 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744900054 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736755759 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.738435082 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.738123796 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.738309714 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.739716192 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74115924 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.737986985 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.735708544 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.737730464 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.738497848 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737628345 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.739070298 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.737354592 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.737287349 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.739574785 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.738009481 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.737091578 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.741124645 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.738705433 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.740231394 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73730874 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.739041761 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.742231842 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.736105999 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737415465 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.735914953 seconds)
  done (took 116.46705113 seconds)
done (took 2420.889271463 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.761079528 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.735817188 seconds)
  done (took 15.153814709 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.900324458 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.851944622 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.738637732 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.786930921 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.735288724 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.736869092 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.750334653 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.735444065 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.736126697 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.737874067 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.735713669 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.922522169 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.787225603 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.738375415 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.737473659 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.831872735 seconds)
  done (took 50.124797233 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.742463146 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.742997291 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.751056313 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.744619895 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.738662903 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.75162473 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.774963853 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.742141393 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.774029613 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.755752661 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.806402474 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.751464572 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.737716462 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.788292499 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.754987509 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.755469992 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.831443738 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.814699905 seconds)
  done (took 33.415281695 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.815674976 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.739352333 seconds)
  done (took 10.21844626 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.760116193 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.765529082 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.780985573 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.74098166 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.747497763 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.747613036 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.756244594 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.761902461 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.752654067 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.750706947 seconds)
  done (took 69.223467784 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.745218071 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.74067122 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.73890253 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.736517606 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.734687864 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.735324134 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.736600507 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.74016223 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.405293175 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.778024788 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.748481322 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.744051881 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.740614458 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.741229257 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.738039087 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.764958723 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.840257199 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.740417225 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.736663335 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.74482256 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.740069737 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.794923558 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.755941488 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.742989495 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.768768957 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.41171748 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.755932857 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.745368067 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.847928552 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.738092199 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.739342248 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.740307365 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.742803234 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.144250546 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.028762256 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.741989502 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.757053546 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.746655947 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.737805257 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.847489163 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.744597506 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.745144949 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.468843424 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.013836114 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.843031889 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.782569818 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.064126033 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.756813021 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.749291921 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.767208283 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.743442974 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.743438019 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.754892367 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.234048335 seconds)
  done (took 125.233788765 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.736979063 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.089965523 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.908127057 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.736033751 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025841773 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.948017963 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.738724035 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.786577033 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.738828172 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.972498508 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.99533531 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.846706878 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.73760557 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.737992656 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.737955327 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.736207283 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.898904815 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.815803417 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.737265409 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.734298276 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.772086008 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981840314 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.862215899 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.744484249 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.766775659 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.954287845 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.860706482 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.845483379 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.535497707 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.735576281 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.80233007 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.740368683 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.741175046 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.736188374 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.893747639 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.83806722 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.826102162 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.737387499 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.738868293 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.734808137 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.498648993 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.938485738 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.835350547 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.879783484 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.891429719 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.949112363 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.520352749 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.737300004 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.491919476 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.901475978 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.967841186 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.975069953 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.861312276 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.743287971 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.07870627 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.735542829 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.737717891 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.988724204 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.881721575 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.838534965 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.741612092 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.737509748 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.739259964 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.03919374 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.737967202 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.835886378 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.739614289 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.739427282 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.839347531 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.839939559 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.879496879 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.955267234 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.771122649 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.4779685 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.95129168 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.99034949 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.807550559 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.989883339 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.741192906 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.737931065 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.816021531 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.584256998 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.993135792 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.030753469 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.993077998 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.776884283 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.469325161 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.736923811 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.968839416 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.964158004 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.003420974 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.886660873 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.977089587 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.068634238 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.740166119 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.737346179 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.9666199 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.874980235 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.742795139 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.096253461 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975470021 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.291749465 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.758534115 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.048291659 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.872217694 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.74478152 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.384017325 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.738465396 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.973710363 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.781521583 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.740821035 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.744143417 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.960784539 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.734115611 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.737733578 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.588645428 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.805305222 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.742406913 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975422926 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.7389423 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.011654188 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.74335606 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.978326295 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.715698973 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.772508623 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.914842613 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.885799908 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.747893747 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.990235845 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.98762113 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.85921966 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.014433975 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.626781713 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.738646134 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031739686 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.745920253 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.738712315 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.912294897 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.741521448 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.887431403 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.742846174 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.037813318 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.764502029 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.973090204 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.742997467 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.00428606 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.778149322 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.79367661 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.742267264 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.867182269 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.743054906 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.667008222 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.90258603 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.742874645 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.738769927 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.290519236 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.741480177 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.892835082 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.97759378 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.178740988 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.821954546 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.408744024 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.742531822 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.822337954 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.766138795 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.137973366 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.742939833 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.997305492 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.744776425 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.742057216 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.745539373 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.037315027 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.977651199 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.746340973 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.74118029 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.654594292 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.742602574 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.74115905 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.927604048 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.085313081 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.740773278 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.945888813 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.74273011 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.871312538 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.745037957 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.822705348 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.083305374 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.742289699 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.740477797 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.740926194 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.742212798 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.742491777 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.954539075 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.767777664 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.27447479 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.881672926 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.020726128 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.054542437 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.994602744 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.785830976 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.742833377 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.007145115 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.744826269 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.807982634 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.743188804 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.76576962 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.975500474 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.742660855 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.007341884 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.023449905 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.626127086 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.793519291 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.744503706 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.742585723 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.743655633 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.89125542 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.834999602 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.744352255 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.742241588 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.863064409 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.864066203 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.956720121 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.74344368 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.768711436 seconds)
  done (took 874.395952897 seconds)
done (took 1179.423210509 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.745558224 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.746644278 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.730482614 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.753262281 seconds)
  done (took 28.646346643 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.760857048 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.758305049 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.758846385 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.760976524 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.76039352 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.755915223 seconds)
  done (took 12.231331878 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.801616694 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.754744437 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.753334652 seconds)
  done (took 20.987230496 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.826567071 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.142843873 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.86818382 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.1802242 seconds)
  done (took 9.701660921 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.762452098 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.757877966 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.761768493 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.762014637 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.764404592 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.765663169 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.763283885 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.761798922 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.759719716 seconds)
  done (took 17.542940487 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.767063633 seconds)
done (took 94.544753205 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.760931777 seconds)
    (2/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.86140685 seconds)
    (3/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.89333483 seconds)
    (4/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.852600568 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.834592134 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.871669524 seconds)
    (7/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.902485005 seconds)
    (8/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.784239322 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.135221498 seconds)
    (10/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.289041243 seconds)
    (11/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.752003472 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.880067965 seconds)
    (13/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.790365915 seconds)
    (14/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.085897259 seconds)
    (15/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.946126036 seconds)
    (16/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.764863208 seconds)
    (17/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 3.547395758 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.438265619 seconds)
    (19/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.944254058 seconds)
    (20/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.213273314 seconds)
    (21/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.772089259 seconds)
    (22/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.154249181 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.932734099 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.857047015 seconds)
    (25/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.851728241 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.789330109 seconds)
    (27/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.788486265 seconds)
    (28/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.179553357 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.890664593 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.121816466 seconds)
    (31/309) benchmarking ("sort", BigInt, false)...
    done (took 6.769549472 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.866498332 seconds)
    (33/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.083880821 seconds)
    (34/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.071722458 seconds)
    (35/309) benchmarking ("sort", Float32, false)...
    done (took 5.479257057 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.771862469 seconds)
    (37/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.805012844 seconds)
    (38/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.179896559 seconds)
    (39/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.911914824 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.753435686 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.046930189 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.891223514 seconds)
    (43/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.789810392 seconds)
    (44/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.054663844 seconds)
    (45/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.1887501 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.879267202 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.697590057 seconds)
    (48/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.057734412 seconds)
    (49/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.86304191 seconds)
    (50/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.158528178 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 1.994751107 seconds)
    (52/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.616582717 seconds)
    (53/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.839756285 seconds)
    (54/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.007447265 seconds)
    (55/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.701745499 seconds)
    (56/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.007042183 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 5.46017941 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.113803158 seconds)
    (59/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.865758475 seconds)
    (60/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.72481159 seconds)
    (61/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.874359339 seconds)
    (62/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.461258086 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.030276227 seconds)
    (64/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.784590422 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.450070201 seconds)
    (66/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.844778789 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.9332204 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.793255654 seconds)
    (69/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.185257544 seconds)
    (70/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.755298263 seconds)
    (71/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.563661871 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.877782372 seconds)
    (73/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.295365094 seconds)
    (74/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.678627919 seconds)
    (75/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.916983167 seconds)
    (76/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.911278639 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.859359963 seconds)
    (78/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.335759442 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.090700719 seconds)
    (80/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.97487468 seconds)
    (81/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.829510986 seconds)
    (82/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.75424031 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.796139962 seconds)
    (84/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.786142309 seconds)
    (85/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.196046814 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.12728135 seconds)
    (87/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.358331313 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.348168075 seconds)
    (89/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.066405612 seconds)
    (90/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.80052597 seconds)
    (91/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.770389766 seconds)
    (92/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.150662806 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.791836038 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.721399559 seconds)
    (95/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.004417843 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.06242937 seconds)
    (97/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.76362604 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.676937837 seconds)
    (99/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.613231607 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.113804935 seconds)
    (101/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.853581294 seconds)
    (102/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.919865904 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.718732783 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.739137427 seconds)
    (105/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.823843814 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.784505925 seconds)
    (107/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.920917677 seconds)
    (108/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.918131909 seconds)
    (109/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.011169685 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.16919218 seconds)
    (111/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.828327713 seconds)
    (112/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.787088407 seconds)
    (113/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.034052335 seconds)
    (114/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.770953491 seconds)
    (115/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.786307326 seconds)
    (116/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.848275439 seconds)
    (117/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.119027614 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.790283117 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.777025193 seconds)
    (120/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.750580933 seconds)
    (121/309) benchmarking ("sort", Int8, false)...
    done (took 4.671796027 seconds)
    (122/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.946718543 seconds)
    (123/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.950207372 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.876310195 seconds)
    (125/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.762453157 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.095066855 seconds)
    (127/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.745878507 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.506768712 seconds)
    (129/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.7621366 seconds)
    (130/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.751659799 seconds)
    (131/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 3.572598355 seconds)
    (132/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.874742284 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.594208156 seconds)
    (134/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.153866122 seconds)
    (135/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.755685565 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.496657511 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.947353468 seconds)
    (138/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.968000641 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.868009557 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.02059906 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.900065137 seconds)
    (142/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.002676666 seconds)
    (143/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.154256355 seconds)
    (144/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.867601254 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.018136858 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.948030022 seconds)
    (147/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.766404358 seconds)
    (148/309) benchmarking ("perf_sum", Float64, true)...
    done (took 3.585760506 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.815608431 seconds)
    (150/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.850236847 seconds)
    (151/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.859942856 seconds)
    (152/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.750484737 seconds)
    (153/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.954909254 seconds)
    (154/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.949522246 seconds)
    (155/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.775713936 seconds)
    (156/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.242893259 seconds)
    (157/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.755682386 seconds)
    (158/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.01449613 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.902258841 seconds)
    (160/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.484426047 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.919704861 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.401861202 seconds)
    (163/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.264172597 seconds)
    (164/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.787443264 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.792636408 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.76797322 seconds)
    (167/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 8.21389232 seconds)
    (168/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.859866217 seconds)
    (169/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.869150804 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.770387573 seconds)
    (171/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.679290905 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.477693467 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.107688844 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.17787391 seconds)
    (175/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.754043205 seconds)
    (176/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.01316211 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.768377643 seconds)
    (178/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.104641123 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.764659767 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.757405286 seconds)
    (181/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.41717261 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.766955723 seconds)
    (183/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.128699149 seconds)
    (184/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.859991843 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.03067104 seconds)
    (186/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.863995576 seconds)
    (187/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.00023814 seconds)
    (188/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.857492016 seconds)
    (189/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.763881723 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.822421797 seconds)
    (191/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.276440334 seconds)
    (192/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.899991573 seconds)
    (193/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.951861345 seconds)
    (194/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.934705601 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.149854054 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.772507407 seconds)
    (197/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.029356092 seconds)
    (198/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.769103609 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.766068485 seconds)
    (200/309) benchmarking ("sort", Float64, false)...
    done (took 5.588085248 seconds)
    (201/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.771566035 seconds)
    (202/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.870792067 seconds)
    (203/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.092899815 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.771230952 seconds)
    (205/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.852800144 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.754337038 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.872097498 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.862434629 seconds)
    (209/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.992825065 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.843914802 seconds)
    (211/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.774172012 seconds)
    (212/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.899412795 seconds)
    (213/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.911443984 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.451183289 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.008451825 seconds)
    (216/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.082138355 seconds)
    (217/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.801842667 seconds)
    (218/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.244773129 seconds)
    (219/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.020575688 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.421032862 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.973855373 seconds)
    (222/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.00796343 seconds)
    (223/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.050103798 seconds)
    (224/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.841199923 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.775910409 seconds)
    (226/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.78710162 seconds)
    (227/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.753992776 seconds)
    (228/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.87539566 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.030566884 seconds)
    (230/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.759447445 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.884528737 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.282087504 seconds)
    (233/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.783477232 seconds)
    (234/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.026386846 seconds)
    (235/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.917690849 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.712921227 seconds)
    (237/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.764638594 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.199770026 seconds)
    (239/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.774508942 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.106850502 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.739306565 seconds)
    (242/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.770844408 seconds)
    (243/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.864415338 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.449616166 seconds)
    (245/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.769181517 seconds)
    (246/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.579735949 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.778163665 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.409717823 seconds)
    (249/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.839936353 seconds)
    (250/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.958180399 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.900649558 seconds)
    (252/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.757945053 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.040130732 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.87279597 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.904911979 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.61472506 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.106344398 seconds)
    (258/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.857032878 seconds)
    (259/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.853677936 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.102734167 seconds)
    (261/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.916753494 seconds)
    (262/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.865967416 seconds)
    (263/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.797424935 seconds)
    (264/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.847886873 seconds)
    (265/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.905032595 seconds)
    (266/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.779258262 seconds)
    (267/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.693106391 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.076741713 seconds)
    (269/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.825117082 seconds)
    (270/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.298775072 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.098319864 seconds)
    (272/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.803063576 seconds)
    (273/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.777795654 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.173919623 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.159789653 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.900190631 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.777302048 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.113427049 seconds)
    (279/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.891461579 seconds)
    (280/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.802558755 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.180088231 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.729065692 seconds)
    (283/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.764080576 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.029317817 seconds)
    (285/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.776264887 seconds)
    (286/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.137877814 seconds)
    (287/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.858194994 seconds)
    (288/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.005432325 seconds)
    (289/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.947143266 seconds)
    (290/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.15836798 seconds)
    (291/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.124298707 seconds)
    (292/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.934193956 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.54967484 seconds)
    (294/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.7819895 seconds)
    (295/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.800123549 seconds)
    (296/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.79204054 seconds)
    (297/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.913512353 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.805860552 seconds)
    (299/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.956489434 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.782368067 seconds)
    (301/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.185819244 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.781575354 seconds)
    (303/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.877697618 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.691426812 seconds)
    (305/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.910418135 seconds)
    (306/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.883156889 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.998300707 seconds)
    (308/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.843930655 seconds)
    (309/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.776705453 seconds)
  done (took 980.029811287 seconds)
done (took 981.99127229 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.808750112 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.801016939 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.783635183 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.806408085 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.896705502 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.812036974 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.796185782 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.786336563 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.831527773 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.835791338 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.778676449 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.811283395 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.787181482 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.785731209 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.785945679 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.79693351 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.099173183 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.818718934 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.800285469 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.792828772 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.80461576 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.78200447 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.83643609 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.811264426 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.790496855 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.789062468 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.788418361 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.806038236 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.898658846 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.788227889 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.789592115 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.797725879 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.10057386 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.817395599 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.782855426 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.803912948 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.799555686 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.797170196 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.791883179 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.819405077 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.183493851 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.826455092 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.788403323 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.789110162 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.789159235 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.79101412 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.787424333 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.793432226 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.801049681 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.801818076 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.180838608 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.849649909 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.790308591 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.79410804 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.798195986 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.785992564 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.790500353 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.803255273 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.807030443 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.801612123 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.083144192 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.823598609 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.787504563 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.806321743 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.797380862 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.215913359 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.823682998 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.792062517 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.185369945 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.842401507 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.213795145 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.835615112 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.787293638 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.799881437 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.817796131 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.099348163 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.813982424 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.785793476 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.796796125 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.787270925 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.796646897 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.804445166 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.79284199 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.790733284 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.804260547 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.819931178 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.799868291 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.788571359 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.799220232 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.809546046 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.797739706 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.799531771 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.79098152 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.785743668 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.802800769 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.79532036 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.792472066 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.791543377 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.79581326 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.80263591 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.1865512 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.849999143 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.787607239 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.786940936 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.786345968 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.802912163 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.184427375 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.8296861 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.814328861 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.83954773 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.791126329 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.085919125 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.822782606 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.806413473 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.79844281 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.794746145 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.786868818 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.085919988 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.215693047 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.848821725 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.796213382 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.789201507 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.807232539 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.794213917 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.788997114 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.10392674 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.82183791 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.805186786 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.912472502 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.800393793 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.823709753 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.789580653 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.794956961 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.824013177 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.808392419 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.823616351 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.79435908 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.807145365 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.806066593 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.788908924 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.801761693 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.803533098 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.796040728 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.798936499 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.788265294 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.824165811 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.805664875 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.805358405 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.816615633 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.913804432 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.790865394 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.087328458 seconds)
done (took 281.618997457 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.859959139 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.787793833 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.885896897 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.789494275 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.868957214 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.874688862 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.788191706 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.786522559 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.786604143 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.160486015 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.789494549 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.785571122 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.792690984 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.785701978 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.870960444 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.791583852 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.786031304 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.126756219 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.79437882 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.862178738 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.789161453 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.792941806 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.789010677 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.161519789 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.784538779 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.784536977 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.863152908 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.790364078 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.127580466 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.791547394 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.787438236 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.130636549 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.882061417 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.810537199 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.802861981 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.797825399 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.872635492 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.799791474 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.875302994 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.873589205 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.887708463 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.831939058 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.796690032 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.783693322 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.796219656 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.795413721 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.790755952 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.818853735 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.787946879 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.790744913 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.126399656 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.803691916 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.801292205 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.79257818 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.787435468 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.814985441 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.789667405 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.792934722 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.882858207 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.795843151 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.857168318 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.163891949 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.165813843 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.792286455 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.793493546 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.790586241 seconds)
  done (took 179.019018338 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.860165288 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.873659587 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.860140704 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.802313698 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.842321561 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.861087904 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.800963257 seconds)
  done (took 14.610203945 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.799037848 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.795445592 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.842259049 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.846035409 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.796228336 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.951600696 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.795808038 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.804700631 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.789303731 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.845505664 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.796211237 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.793616562 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.801851933 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.788991637 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.844208212 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.803071403 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.909640699 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.794927767 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.800412043 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.946627868 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.792603538 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.799578663 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.827971195 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.804841716 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.797143906 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.801031941 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.357816378 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.799203081 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.793352793 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.794399477 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.792613682 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.836439096 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.795114341 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.791412018 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.793733248 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.907441815 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.800420028 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.794272734 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.793120817 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.791845947 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.796419315 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.79646743 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.795657778 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.792843069 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.794114109 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.816460383 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.797899506 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.795958484 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.796546636 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.796527463 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.827908284 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.795146838 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.794688281 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.793386425 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.852035928 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.801009959 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.802591405 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.795298654 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.796174417 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.795646094 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.945097301 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.848474553 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.796036757 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.848710053 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.795547057 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.796268623 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.794452414 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.795609531 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.892074608 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.795898464 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.845483348 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.796097976 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.954026361 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.82030946 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.79921111 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.799357599 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.797716763 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.800879805 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.792347969 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.806796577 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.795775647 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.798678252 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.805021772 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.793532967 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.793661107 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.909516565 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.902491112 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.795608952 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.810113779 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.805044266 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.795067222 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.830793616 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.797623421 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.7965404 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.854839775 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.911662945 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.85201618 seconds)
  done (took 198.52513058 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.805781749 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.805129031 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.799946189 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.818090919 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.804017726 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.795672618 seconds)
  done (took 12.544947075 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.799977038 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.798831894 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.794491138 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.79583123 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.801761026 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.804730104 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.803242717 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.802535421 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.804487225 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.800080032 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.801874002 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.800413755 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.80134534 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.804362328 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.801397828 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.800570943 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.800907723 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.797107261 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.798156727 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.802928281 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.947472273 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.80048978 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.806775689 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.80137501 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.801689588 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.799050793 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.808810007 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.797709818 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.796098905 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.808591451 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.809544849 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.800821179 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.800243468 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.806580246 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.807715041 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.802358683 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.801890803 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.802534095 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.799279522 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.798539384 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.803444481 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.802495155 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.802678709 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.800108923 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.804104185 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.806240648 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.804921693 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.806517899 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.804501709 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.802657547 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.799689231 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.800735926 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.800070458 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.801317199 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.805534879 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.809001328 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.804950279 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.801263861 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.807424787 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.800809442 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.799994399 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.799174055 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.803116494 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.810772908 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.807839959 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.803950941 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.801906317 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.807507109 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.805793066 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.801593066 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.800511339 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.799964062 seconds)
  done (took 132.641249138 seconds)
done (took 539.06458452 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.945540122 seconds)
  done (took 8.664653947 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.803322235 seconds)
  done (took 8.561315309 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.211326945 seconds)
  done (took 9.92042722 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.830916725 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.798813258 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.791172639 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.780608229 seconds)
  done (took 28.930755701 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.832889789 seconds)
  done (took 8.537477695 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.806373814 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.780680432 seconds)
  done (took 15.324082901 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.864666321 seconds)
  done (took 8.568727207 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.86580358 seconds)
  done (took 8.594830106 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.804925235 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.816119331 seconds)
  done (took 15.341302899 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.765909273 seconds)
  done (took 8.468868874 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.362185099 seconds)
  done (took 11.155704748 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.798164212 seconds)
  done (took 8.603028022 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.849044993 seconds)
  done (took 8.552281448 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.802057279 seconds)
  done (took 8.50620766 seconds)
done (took 159.449446815 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.784313333 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.786462203 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.786751673 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.782372018 seconds)
  done (took 28.84459053 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.818555058 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.819885222 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.820705772 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.830804401 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.823226813 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.822530855 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.812380517 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.812109517 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.829452653 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.82498567 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.824642965 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.822819754 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.820387852 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.811846419 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.825033935 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.820780121 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.830882889 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.820358156 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.811854923 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.824612194 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.788276891 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.83121027 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.822597958 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.78784896 seconds)
  done (took 45.362209795 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.982249761 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.857967923 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.941978005 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.840081897 seconds)
  done (took 9.326645374 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.839939254 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.840899423 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.852769225 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.892751831 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.924807099 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.849363126 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.814301031 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.809326348 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.796069978 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.841136953 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.918078734 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.837071167 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.924960821 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.790253692 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.995924183 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.78862944 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.78739615 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.841716875 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.893530124 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.905109525 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.789234922 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.840480745 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.845561881 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.837426667 seconds)
  done (took 46.162646057 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.787914565 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.795953358 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.793749705 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.78864417 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.789601208 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.788416954 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.793468071 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.789675203 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.810442938 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.791147938 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.788622659 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.788905011 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.788100577 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.78951082 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.791827609 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.801301413 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.803286219 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.789303815 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.793661594 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.795904964 seconds)
  done (took 37.566302642 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.786341568 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.63646902 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.135892046 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.038357565 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.783778518 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.787513837 seconds)
  done (took 30.875843506 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.803917562 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.79683501 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.789679501 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.847761335 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.932209984 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.796690512 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.790523834 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.802450809 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.837155945 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.857103692 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.811028832 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.819313383 seconds)
  done (took 23.595769175 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.787864695 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.796849168 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.793504965 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.815062699 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.805554121 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.804001982 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.802547355 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.789069271 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.809632873 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.817445049 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.806288461 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.806406054 seconds)
  done (took 43.347822812 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878339337 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.677156237 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.442593779 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.516415061 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.32558419 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.999940726 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.317948885 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.971305277 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.793265317 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06564679 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.378851993 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036548061 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.042308165 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790865198 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.868136092 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.26095929 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089285917 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044203892 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820068291 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.524837502 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915123879 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329782183 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.52607203 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.917429115 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.001728381 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.922204858 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.052281838 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.74935875 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930410514 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831948233 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801702347 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.793479739 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064292956 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011054289 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921740325 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801917318 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.444465644 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.511010612 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.78454378 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.500738963 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.510764954 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.927060494 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802340364 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794613383 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.7246285 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322606267 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972337312 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.797897985 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.498154096 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.793672668 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.805273806 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885521657 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.796285943 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.60713302 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743248209 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.071280262 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.793036231 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798263391 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.360211455 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.897828692 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420919723 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.734343738 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.886057531 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.547367262 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277286818 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.952742441 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.796919148 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.799402925 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.727995117 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.494863773 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919750722 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.937664399 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.814853396 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443450506 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097530566 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.480826082 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.87395287 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104567474 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.586204934 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.733829947 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021450555 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.749231405 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728428543 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.635831232 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.727636569 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072138113 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840104072 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.454252054 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840347347 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.963358968 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.804236286 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816474812 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803133462 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.017501436 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.680916081 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796312991 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.356324545 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.081781083 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818093065 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.968584633 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729753271 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.801427152 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049926253 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.005332283 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.045555631 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.283670974 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958376852 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799030297 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.884534085 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.716978633 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.811048972 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.087065166 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864637212 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.905845162 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927107697 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.755808957 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112273416 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82896946 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.968905282 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.418192069 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.060871535 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.130989096 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.055424942 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879547149 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.796617423 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.797143027 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.562982936 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.421973957 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.021908748 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.801909669 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295002486 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.812921265 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.799993647 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731568991 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.462521535 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.428339656 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.90859947 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.017533683 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.77326402 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.076892728 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729240153 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.939020351 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.905650178 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.018354331 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.454890872 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.879404473 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053472549 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301494648 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.039437138 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810852324 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816731535 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90040735 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821767711 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.230105713 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.059149962 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.804025248 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.8059003 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.573226836 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.877953579 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81365056 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.807444837 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.598717725 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094304082 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.835995214 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.804009348 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.735690354 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.817463471 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886202662 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.80619687 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.811817117 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.329016173 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.559804791 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.813170096 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.454601312 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028595023 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811366565 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.55803746 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991308789 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.884992295 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086289127 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875102786 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.735995731 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.505124923 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.508573828 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.80379131 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.739055103 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.805430883 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812770834 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813396182 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.024292154 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.100037579 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862383192 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.543878847 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.923130226 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812521263 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.808249474 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.806438532 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.300617157 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.918238688 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445294846 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.813602834 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93702711 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.817189123 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.735320515 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.806305139 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.806947484 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.804348611 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.758591311 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860071564 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.575875792 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142667657 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061738702 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.452868106 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819949869 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.5541166 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.938893146 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.823697719 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.369673859 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793679873 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.939384587 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878305801 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.813541658 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.568346471 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.586925034 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.373060483 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120256753 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147946302 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262413778 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.198540507 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.145101839 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.975053362 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035612245 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.331336422 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.861214463 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.011886231 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752334676 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889556546 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.46247939 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165163607 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819857421 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02980565 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.202741299 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.445233835 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971566708 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014860511 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840777577 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.628224146 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.835766307 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.328414454 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961911291 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.425103128 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033133509 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974329378 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.381759181 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.91404764 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.80613311 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.285237736 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893883568 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.515557887 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.167882404 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357967542 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.434193393 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18089546 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.811535786 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.25041473 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186790432 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.15876111 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.898521376 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742090598 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.817572587 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.817117748 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.807383032 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.783903101 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.68763204 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.073327818 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.816963808 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042389687 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.085101713 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106641701 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.726139761 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.814901004 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808826692 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119412 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.574902163 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05315516 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.158777713 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.383638689 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820736104 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.745041176 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.744536814 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.516064271 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.822336482 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.787057976 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045135545 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.922885846 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.770315742 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.203827673 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129429047 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.07021514 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.82700661 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.104787111 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100242437 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.547352679 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841390417 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.915538781 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.392171492 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.527479632 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.037702139 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.049507202 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.611020828 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.044107717 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.481549093 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.796328729 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.814241483 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.026946485 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.03831673 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.442708856 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072401674 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.543650292 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.824958571 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203310757 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883560001 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.448313399 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.031372525 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.907385276 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826756503 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899749207 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824281742 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.828034617 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.825090671 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863109825 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.465695433 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.955484592 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.831013669 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910362604 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.951991964 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.401947209 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.826269049 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109358697 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195866193 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.17902003 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888348835 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.814402387 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822408164 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751544063 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958236567 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.263466165 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090950161 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.949352922 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.956222495 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845039595 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.402321763 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.107761427 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129805851 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.091107882 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.711704974 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819406733 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.905962589 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.042999663 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827996341 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.028928141 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056542489 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148960885 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292609678 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.953853561 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.090421391 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09256263 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.189736732 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.822008537 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41280144 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.82904896 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.360547841 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.863029917 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.441209774 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110051124 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.83162302 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045068053 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.836816152 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.014023897 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.273572488 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.546658313 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.1846422 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.821070329 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.880373275 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117977484 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.239882282 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145945465 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899736503 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.831994272 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.515622144 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963330789 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.741089646 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.077244266 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.821730206 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03185348 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.530302961 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.833309942 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11791747 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138731145 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.816274969 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.785674687 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874742315 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.83235013 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.045605382 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106011611 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.07443116 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825870132 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.833401584 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.636977339 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118698494 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890196347 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750504306 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.825442158 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919037586 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.066284323 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840592429 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.333506947 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.524752357 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135913482 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.736062065 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838277399 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.24570286 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.279023452 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179416915 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.350359997 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069122942 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.37894273 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.676178663 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193662172 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.824269138 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.226357123 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193690369 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.821551264 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.324944073 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93012219 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.104311408 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151572391 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.822455405 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.594429948 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.864627406 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037415345 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410065692 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.756676041 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.823807222 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.879666615 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.816284858 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.946640978 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.826318897 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.812620119 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.682845231 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.652994389 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308716044 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.821841059 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.824512477 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.368508214 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391088549 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926525308 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974163504 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826608244 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.524819679 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.106514538 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.070097374 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.324838241 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.88898668 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.824226959 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819074632 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.744215144 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.015088996 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.035783065 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134577233 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.16540755 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.92553059 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824885562 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.033450147 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027749208 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.439412418 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981145301 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.200616459 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929261625 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.747353057 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.536611028 seconds)
  done (took 1649.075285668 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.844318749 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.833777185 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.82455599 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.829561342 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.844105903 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.835789331 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.887730885 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.82015305 seconds)
  done (took 56.459008825 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.819866019 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.004965197 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.821259545 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.816419247 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.839109475 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.816758512 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.011782942 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.824336617 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.830966011 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.826051316 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.817883192 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.827951812 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.114533789 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.844117758 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.823012986 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.225173486 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.844346711 seconds)
  done (took 73.853122388 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.822554424 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.182061533 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.875404825 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.84340808 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.789162439 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.833546006 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.857939206 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.826816057 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.828203899 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.003409901 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.155965262 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.833063383 seconds)
  done (took 89.595475861 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.840640252 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.829890089 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.829330362 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.828595548 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.828822295 seconds)
  done (took 10.908955349 seconds)
done (took 2146.69784846 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.059228362 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.006532985 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.052760677 seconds)
  done (took 5.801552818 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.968487197 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.019839484 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.130429483 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.141602059 seconds)
  done (took 10.005633072 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.106960082 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.222433997 seconds)
  done (took 6.068957742 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.153218118 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.844764471 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.242049303 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.826162144 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.826987467 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.823370208 seconds)
  done (took 22.220313786 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.827658262 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.82846486 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.825513552 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.82712639 seconds)
  done (took 9.046960385 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.807617431 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.526086024 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.80728074 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.826777531 seconds)
  done (took 20.712956423 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.572453582 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.956304761 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.576090781 seconds)
  done (took 8.850971924 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.373155712 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.752143686 seconds)
  done (took 8.875333645 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.990919357 seconds)
  done (took 3.743207067 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.859463932 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.104058747 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.319723261 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.352343747 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.428340896 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.663347981 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.176093268 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.067177702 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.278449676 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.289824486 seconds)
  done (took 24.287594306 seconds)
done (took 134.654794929 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.176617793 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.85933853 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.03488475 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.194288679 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.069434067 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.036513658 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.055106211 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.182138954 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.873510264 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.858863257 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.190710836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.067924066 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.993201392 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.847673531 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.003701109 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.848001785 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.134921822 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.200663302 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.874810015 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.114454885 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.060548032 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.839405425 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.032949304 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.854643437 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.08271099 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.985057083 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.381398448 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.855637592 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.017407308 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.393545601 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.996674962 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.255991287 seconds)
  done (took 167.122986783 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.831062986 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.824550862 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.83210179 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.830630391 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.377454552 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.83638299 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.831161385 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.830885359 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.254519108 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.246438486 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.836915811 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.362061665 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.833858518 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.830921 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.831275686 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.831079422 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.414271034 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.831483438 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.832912835 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.832172831 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.833336389 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.195561052 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.832218002 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.209741786 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.404724589 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.832175097 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.83403615 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.833171203 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.828475797 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.83167497 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.828667088 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.830286837 seconds)
  done (took 208.181578081 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.822737946 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.828243733 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.826698831 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.815177882 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.821750986 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.816930972 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.827081538 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.81722018 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.568313836 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.567101848 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.823270747 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.817226468 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.811346394 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.810257335 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.824953506 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.817121773 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.82404794 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.823638021 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.828733647 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.829296292 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.830421483 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.597495724 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.829473405 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.668827273 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.820986114 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.813153917 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.804822849 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.814477549 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.820788129 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.816078641 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.816383476 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.80336643 seconds)
  done (took 219.10441092 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.059549673 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.804964478 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.808591062 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.735312039 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.813249405 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.807613487 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.803738837 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.06375288 seconds)
  done (took 18.644136638 seconds)
done (took 614.814019442 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.265133959 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.111427103 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.976443856 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.828381917 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.097256343 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.860192802 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.8268271 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.890687348 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.457190288 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.897633131 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.470186003 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.845059208 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.557164184 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.854508417 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.946273155 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.881381462 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.371694527 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.459834708 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.001787457 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.903702596 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.993303094 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.754335621 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.915601183 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.479254865 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.576257253 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.810155701 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.893338687 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.373040826 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.834898372 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.981212035 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.543407462 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.138502617 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.838261687 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.821648717 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.88016225 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.859875576 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.101911307 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.836984509 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.945195235 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.554692053 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.91000278 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.359979004 seconds)
  done (took 99.632836944 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.792138926 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.787546739 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.788366909 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.791759791 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.792153884 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.791722792 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.792504386 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.789389787 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.798357938 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.797691159 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.798757563 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.794411848 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.793961425 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.794509383 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.797877419 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.794939307 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.793892928 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.792218454 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.792662116 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.792077639 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.794942351 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.791568726 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.806537421 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.789831504 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.793636908 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.792455122 seconds)
  done (took 48.368303611 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.806527114 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.955408232 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.047923444 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.827128542 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.806134107 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.806307123 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.823930184 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.812140838 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.808169612 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.807836406 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.901462532 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.812239151 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.829378875 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.044391783 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.824901128 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.805575443 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.804947136 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.809581043 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.963422822 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.826864792 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.825412785 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.811960909 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.828874086 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.81959158 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.809376528 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.806842405 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.810737522 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.306356112 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.815679454 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.897763903 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.853937853 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.828462822 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.244016496 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.055972217 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.865973219 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.816834625 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.808495128 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.906635242 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.814918225 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.808568597 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.828586307 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.815215402 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.044227555 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.298076389 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.822593446 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.811928042 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.310280577 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.913061439 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.851119952 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.817500328 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.049913355 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.828271287 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.810238783 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.809613979 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.843888573 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.811554762 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.808324238 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.151987845 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.820723015 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.82455247 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.815180165 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.809048264 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.967918781 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.816438854 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.959442807 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.820992012 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.815085957 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.810314125 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.049200875 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.828301629 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.294474716 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.821790497 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.808342279 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.902246531 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.968968813 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.344517386 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.82057676 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.966436269 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.261965308 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.831250014 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.813134079 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.292500285 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.840783806 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.814637963 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.812955235 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.807328463 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.808270837 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.855981809 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.828446407 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.231925701 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.304454539 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.175032082 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.837244145 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.8237259 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.808623554 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.15337687 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.820404909 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.809191197 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.038300964 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.310450715 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.826915006 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.816870937 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.284929523 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.82796098 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.831546478 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.818489863 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.047602042 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.828459684 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.855642983 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.809874946 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.816985648 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.811583105 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.831520326 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.812651107 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.813414505 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.277348294 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.92607102 seconds)
  done (took 224.999259635 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.808063001 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.82394847 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.805281778 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.827849686 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.80807376 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.80918639 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.806192189 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.805237837 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.813372556 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.805607656 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.807535153 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.808214445 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.810806433 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.808383982 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.851426267 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.847499692 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.448763242 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.837310878 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.843192545 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.83826157 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.495381808 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.845341391 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.841883641 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.856425145 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.84017576 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.841651329 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.850801127 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.859988308 seconds)
  done (took 166.18079936 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.84526063 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.962596635 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.866580017 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.879350576 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.853062451 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.847257395 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.869274005 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.862471058 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.850522502 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.844585786 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.844821361 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.905923331 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.85760215 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.944945593 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.877289829 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.876927344 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.948135586 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.856673206 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.842880544 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.840837393 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.877961298 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.847100121 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.907711063 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.973764161 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.865558909 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.964146048 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.851506268 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.846261853 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.845730978 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.964848242 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.862619869 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.906158919 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.875355969 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.863672513 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.967693001 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.964237052 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.95272005 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.876123439 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.848032535 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.843255098 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.84598237 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.830822213 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.961706005 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.867353112 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.845608666 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.950344013 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.869116503 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.848085581 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.853280756 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.843220109 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.858188296 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.864191763 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.912325868 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.983246294 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.884905233 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.871460554 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.87200715 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.124831047 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.856862668 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.945495274 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.841022313 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.962209778 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.873746296 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.832354281 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.848235362 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.849524112 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.87701661 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.877931983 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.954590377 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.856634157 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.94561013 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.884164883 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.852259326 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.844141482 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.847022618 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.962252081 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.966102848 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.884827106 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.886468287 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.880361242 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.842554309 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.848364603 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.838784976 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.865811695 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.854814323 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.964450063 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.965504188 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.858228488 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.852046464 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.851131546 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.845715088 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.873512622 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.974759004 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.887519835 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.943608694 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.92278964 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.920009828 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.864859914 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.859195811 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.848884709 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.912655826 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.865855431 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.853987647 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.175766389 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.919856473 seconds)
  done (took 200.174520119 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.337219838 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.906821914 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.90454603 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.161793908 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.206305384 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.766078269 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.89158015 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.897633149 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.922043864 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.095560838 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.963217289 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.9160142 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.881766244 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.871493745 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.894554676 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.920110567 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.908844292 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.23982157 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.998244985 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.038786095 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.882143069 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.179244336 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.172564674 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.29291522 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.93676448 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.249071574 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.572157048 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.045209678 seconds)
  done (took 60.823712136 seconds)
done (took 801.909031763 seconds)
SAVING RESULT...
DONE!
